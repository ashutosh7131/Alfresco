{"version":3,"file":"adf-extensions.js","sources":["../../../extensions/src/lib/config/action.extensions.ts","../../../extensions/src/lib/config/document-list.extensions.ts","../../../extensions/src/lib/config/extension-element.ts","../../../extensions/src/lib/config/extension-utils.ts","../../../extensions/src/lib/config/extension.config.ts","../../../extensions/src/lib/config/icon.extensions.ts","../../../extensions/src/lib/config/navbar.extensions.ts","../../../extensions/src/lib/config/permission.extensions.ts","../../../extensions/src/lib/config/routing.extensions.ts","../../../extensions/src/lib/config/rule.extensions.ts","../../../extensions/src/lib/config/sidebar.extensions.ts","../../../extensions/src/lib/config/viewer.extensions.ts","../../../extensions/src/lib/services/extension-loader.service.ts","../../../extensions/src/lib/evaluators/core.evaluators.ts","../../../extensions/src/lib/services/component-register.service.ts","../../../extensions/src/lib/services/rule.service.ts","../../../extensions/src/lib/services/extension.service.ts","../../../extensions/src/lib/services/app-extension.service.ts","../../../extensions/src/lib/store/states/navigation.state.ts","../../../extensions/src/lib/store/states/profile.state.ts","../../../extensions/src/lib/store/states/selection.state.ts","../../../extensions/src/lib/store/states/repository.state.ts","../../../extensions/src/lib/components/viewer/viewer-extension.interface.ts","../../../extensions/src/lib/components/viewer/preview-extension.component.ts","../../../extensions/src/lib/components/dynamic-column/dynamic-column.component.ts","../../../extensions/src/lib/components/dynamic-component/dynamic.component.ts","../../../extensions/src/lib/components/dynamic-tab/dynamic-tab.component.ts","../../../extensions/src/lib/components/public-api.ts","../../../extensions/src/lib/services/startup-extension-factory.ts","../../../extensions/src/lib/extensions.module.ts","../../../extensions/src/public-api.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport enum ContentActionType {\n    default = 'default',\n    button = 'button',\n    separator = 'separator',\n    menu = 'menu',\n    custom = 'custom'\n}\n\nexport interface ContentActionRef extends ExtensionElement {\n    type: ContentActionType;\n\n    title?: string;\n    description?: string;\n    icon?: string;\n    children?: Array<ContentActionRef>;\n    component?: string;\n    data?: any;\n    color?: string;\n    actions?: {\n        click?: string;\n        [key: string]: string;\n    };\n    rules?: {\n        enabled?: string;\n        visible?: string;\n        [key: string]: string;\n    };\n}\n\nexport interface ActionRef {\n    id: string;\n    type: string;\n    payload?: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport interface DocumentListPresetRef extends ExtensionElement {\n  key: string;\n  type: string; // text|image|date\n  title?: string;\n  format?: string;\n  class?: string;\n  sortable: boolean;\n  template: string;\n  desktopOnly: boolean;\n  sortingKey: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExtensionElement {\n    id: string;\n\n    order?: number;\n    disabled?: boolean;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentActionRef, ContentActionType } from './action.extensions';\n\nexport function getValue(target: any, key: string): any {\n    if (!target) {\n        return undefined;\n    }\n\n    const keys = key.split('.');\n    key = '';\n\n    do {\n        key += keys.shift();\n        const value = target[key];\n        if (\n            value !== undefined &&\n            (typeof value === 'object' || !keys.length)\n        ) {\n            target = value;\n            key = '';\n        } else if (!keys.length) {\n            target = undefined;\n        } else {\n            key += '.';\n        }\n    } while (keys.length);\n\n    return target;\n}\n\nexport function filterEnabled(entry: { disabled?: boolean }): boolean {\n    return !entry.disabled;\n}\n\nexport function sortByOrder(\n    a: { order?: number | undefined },\n    b: { order?: number | undefined }\n) {\n    const left = a.order === undefined ? Number.MAX_SAFE_INTEGER : a.order;\n    const right = b.order === undefined ? Number.MAX_SAFE_INTEGER : b.order;\n    return left - right;\n}\n\nexport function reduceSeparators(\n    acc: ContentActionRef[],\n    el: ContentActionRef,\n    i: number,\n    arr: ContentActionRef[]\n): ContentActionRef[] {\n    // remove leading separator\n    if (i === 0) {\n        if (arr[i].type === ContentActionType.separator) {\n            return acc;\n        }\n    }\n    // remove duplicate separators\n    if (i > 0) {\n        const prev = arr[i - 1];\n        if (\n            prev.type === ContentActionType.separator &&\n            el.type === ContentActionType.separator\n        ) {\n            return acc;\n        }\n\n        // remove trailing separator\n        if (i === arr.length - 1) {\n            if (el.type === ContentActionType.separator) {\n                return acc;\n            }\n        }\n    }\n\n    return acc.concat(el);\n}\n\nexport function reduceEmptyMenus(\n    acc: ContentActionRef[],\n    el: ContentActionRef\n): ContentActionRef[] {\n    if (el.type === ContentActionType.menu) {\n        if ((el.children || []).length === 0) {\n            return acc;\n        }\n    }\n    return acc.concat(el);\n}\n\nexport function mergeObjects(...objects: object[]): any {\n    const result = {};\n\n    objects.forEach((source) => {\n        Object.keys(source).forEach((prop) => {\n            let replace = false;\n\n            if (prop.endsWith('.$replace')) {\n                replace = true;\n                prop = prop.replace('.$replace', '');\n            }\n\n            if (!prop.startsWith('$')) {\n                if (replace) {\n                    result[prop] = source[`${prop}.$replace`];\n                } else if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = mergeArrays(result[prop], source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = mergeObjects(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            }\n        });\n    });\n\n    return result;\n}\n\nexport function mergeArrays(left: any[], right: any[]): any[] {\n    const result = [];\n    const map = {};\n\n    (left || []).forEach((entry) => {\n        const element = entry;\n        if (element && element.hasOwnProperty('id')) {\n            map[element.id] = element;\n        } else {\n            result.push(element);\n        }\n    });\n\n    (right || []).forEach((entry) => {\n        const element = entry;\n        if (element && element.hasOwnProperty('id') && map[element.id]) {\n            const merged = mergeObjects(map[element.id], element);\n            map[element.id] = merged;\n        } else {\n            result.push(element);\n        }\n    });\n\n    return Object.keys(map).map((key) => map[key]).concat(result);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RouteRef } from './routing.extensions';\nimport { RuleRef } from './rule.extensions';\nimport { ActionRef } from './action.extensions';\n\nexport interface ExtensionRef {\n    $id: string;\n    $name: string;\n    $version: string;\n    $vendor: string;\n    $license: string;\n    $runtime?: string;\n    $description?: string;\n    $dependencies?: Array<string>;\n\n    appConfig?: any;\n    rules?: Array<RuleRef>;\n    routes?: Array<RouteRef>;\n    actions?: Array<ActionRef>;\n\n    features?: {\n        [key: string]: any;\n    };\n}\n\nexport interface ExtensionConfig extends ExtensionRef {\n    $references?: Array<string | ExtensionRef>;\n    $ignoreReferenceList?: Array<string>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport interface IconRef extends ExtensionElement {\n  value: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport interface NavBarGroupRef extends ExtensionElement {\n    items: Array<NavBarLinkRef>;\n}\n\nexport interface NavBarLinkRef extends ExtensionElement {\n    icon: string;\n    title: string;\n    route: string;\n\n    provider?: string;\n    component?: string;\n    url?: string; // evaluated at runtime based on route ref\n    description?: string;\n    children?: Array<NavBarLinkRef>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface NodePermissions {\n    check(source: any, permissions: string[], options?: any): boolean;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface RouteRef {\n    id: string;\n    path: string;\n    component: string;\n    parentRoute?: string;\n    layout?: string;\n    auth?: string[];\n    data?: { [key: string]: string };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SelectionState } from '../store/states/selection.state';\nimport { NavigationState } from '../store/states/navigation.state';\nimport { NodePermissions } from './permission.extensions';\nimport { ProfileState } from '../store/states/profile.state';\nimport { RepositoryInfo } from '@alfresco/js-api';\n\nexport type RuleEvaluator = (context: RuleContext, ...args: any[]) => boolean;\n\nexport interface RuleContext {\n    repository: RepositoryInfo;\n    auth: any;\n    selection: SelectionState;\n    navigation: NavigationState;\n    profile: ProfileState;\n    permissions: NodePermissions;\n\n    getEvaluator(key: string): RuleEvaluator;\n}\n\nexport class RuleRef {\n    type: string;\n    id?: string;\n    parameters?: Array<RuleParameter>;\n}\n\nexport interface RuleParameter {\n    type: string;\n    value: any;\n    parameters?: Array<RuleParameter>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport interface SidebarTabRef extends ExtensionElement {\n    title: string;\n    component: string;\n\n    icon?: string;\n    rules?: {\n        visible?: string;\n        [key: string]: string;\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport interface ViewerExtensionRef extends ExtensionElement {\n    fileExtension: string;\n    component: string;\n\n    rules?: {\n        visible?: string;\n        [key: string]: string;\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActionRef, ContentActionRef, ContentActionType } from '../config/action.extensions';\nimport { ExtensionElement } from '../config/extension-element';\nimport { filterEnabled, getValue, mergeObjects, sortByOrder } from '../config/extension-utils';\nimport { ExtensionConfig, ExtensionRef } from '../config/extension.config';\nimport { RouteRef } from '../config/routing.extensions';\nimport { RuleRef } from '../config/rule.extensions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExtensionLoaderService {\n    constructor(private http: HttpClient) {\n    }\n\n    load(configPath: string, pluginsPath: string, extensions?: string[]): Promise<ExtensionConfig> {\n        return new Promise<any>((resolve) => {\n            this.loadConfig(configPath, 0).then((result) => {\n                if (result) {\n                    let config = result.config;\n\n                    const override = sessionStorage.getItem('app.extension.config');\n                    if (override) {\n                        config = JSON.parse(override);\n                    }\n\n                    if (!config.$references || !config.$references.length) {\n                        config.$references = this.filterIgnoredExtensions(extensions || [], config.$ignoreReferenceList);\n                    } else {\n                        config.$references = this.filterIgnoredExtensions(config.$references, config.$ignoreReferenceList);\n                    }\n\n                    if (config.$references && config.$references.length > 0) {\n                        const plugins = config.$references.map((name, idx) =>\n                            this.loadConfig(`${pluginsPath}/${name}`, idx)\n                        );\n\n                        Promise.all(plugins).then((results) => {\n                            const configs = results\n                                .filter((entry) => entry)\n                                .sort(sortByOrder)\n                                .map((entry) => entry.config);\n\n                            if (configs.length > 0) {\n                                config = mergeObjects(config, ...configs);\n                            }\n\n                            config = {\n                                ...config,\n                                ...this.getMetadata(result.config),\n                                $references: configs.map((ext) => this.getMetadata(ext))\n                            };\n\n                            resolve(config);\n                        });\n                    } else {\n                        resolve(config);\n                    }\n                }\n            });\n        });\n    }\n\n    protected getMetadata(config: ExtensionConfig): ExtensionRef {\n        const result: any = {};\n\n        Object\n            .keys(config)\n            .filter((key) => key.startsWith('$'))\n            .forEach((key) => {\n                result[key] = config[key];\n            });\n\n        return result;\n    }\n\n    protected loadConfig(\n        url: string,\n        order: number\n    ): Promise<{ order: number; config: ExtensionConfig }> {\n        return new Promise((resolve) => {\n            this.http.get<ExtensionConfig>(url).subscribe(\n                (config) => {\n                    resolve({\n                        order,\n                        config\n                    });\n                },\n                () => {\n                    resolve(null);\n                }\n            );\n        });\n    }\n\n    /**\n     * Retrieves configuration elements.\n     * Filters element by **enabled** and **order** attributes.\n     * Example:\n     *  `getElements<ViewerExtensionRef>(config, 'features.viewer.content')`\n     */\n    getElements<T extends ExtensionElement>(\n        config: ExtensionConfig,\n        key: string,\n        fallback: Array<T> = []\n    ): Array<T> {\n        const values = getValue(config, key) || fallback || [];\n        return values.filter(filterEnabled).sort(sortByOrder);\n    }\n\n    getContentActions(\n        config: ExtensionConfig,\n        key: string\n    ): Array<ContentActionRef> {\n        return this.getElements(config, key).map(this.setActionDefaults);\n    }\n\n    getRules(config: ExtensionConfig): Array<RuleRef> {\n        if (config && config.rules) {\n            return config.rules;\n        }\n        return [];\n    }\n\n    getRoutes(config: ExtensionConfig): Array<RouteRef> {\n        if (config) {\n            return config.routes || [];\n        }\n        return [];\n    }\n\n    getActions(config: ExtensionConfig): Array<ActionRef> {\n        if (config) {\n            return config.actions || [];\n        }\n        return [];\n    }\n\n    getFeatures(config: ExtensionConfig): any {\n        if (config) {\n            return config.features || [];\n        }\n        return [];\n    }\n\n    protected setActionDefaults(action: ContentActionRef): ContentActionRef {\n        if (action) {\n            action.type = action.type || ContentActionType.default;\n            action.icon = action.icon || 'extension';\n        }\n        return action;\n    }\n\n    private filterIgnoredExtensions(extensions: Array<string | ExtensionRef>, ignoreReferenceList: string[]): Array<string | ExtensionRef> {\n        if (!ignoreReferenceList || !ignoreReferenceList.length) {\n            return extensions;\n        }\n\n        return extensions.map((file: string) => file.match('(?!.*\\/).+')[0]).filter((fileName: string) => !ignoreReferenceList.includes(fileName));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RuleContext, RuleParameter } from '../config/rule.extensions';\n\nexport function not(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .every((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return !evaluator(context, ...(arg.parameters || []));\n        });\n}\n\nexport function every(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .every((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return evaluator(context, ...(arg.parameters || []));\n        });\n}\n\nexport function some(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .some((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return evaluator(context, ...(arg.parameters || []));\n        });\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\n\nexport interface ExtensionComponent {\n    data: any;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ComponentRegisterService {\n    components: { [key: string]: Type<{}> } = {};\n\n    setComponents(values: { [key: string]: Type<{}> }) {\n        if (values) {\n            this.components = Object.assign({}, this.components, values);\n        }\n    }\n\n    getComponentById<T>(id: string): Type<T> {\n        return <Type<T>> this.components[id];\n    }\n\n    hasComponentById(id: string): boolean {\n        return !!this.getComponentById(id);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RuleRef, RuleContext, RuleEvaluator, RuleParameter } from '../config/rule.extensions';\nimport { ExtensionConfig } from '../config/extension.config';\nimport { ExtensionLoaderService } from './extension-loader.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RuleService {\n    context: RuleContext = null;\n    rules: Array<RuleRef> = [];\n    evaluators: { [key: string]: RuleEvaluator } = {};\n\n    constructor(protected loader: ExtensionLoaderService) {}\n\n    setup(config: ExtensionConfig) {\n        this.rules = this.loader.getRules(config);\n    }\n\n    /**\n     * Adds one or more new rule evaluators to the existing set.\n     * @param values The new evaluators to add\n     */\n    setEvaluators(values: { [key: string]: RuleEvaluator }) {\n        if (values) {\n            this.evaluators = Object.assign({}, this.evaluators, values);\n        }\n    }\n\n    /**\n     * Retrieves a rule using its ID value.\n     * @param id The ID value to look for\n     * @returns The rule or null if not found\n     */\n    getRuleById(id: string): RuleRef {\n        return this.rules.find((ref) => ref.id === id);\n    }\n\n    /**\n     * Retrieves a RuleEvaluator function using its key name.\n     * @param key Key name to look for\n     * @returns RuleEvaluator or null if not found\n     */\n    getEvaluator(key: string): RuleEvaluator {\n        if (key && key.startsWith('!')) {\n            const fn = this.evaluators[key.substring(1)];\n            return (context: RuleContext, ...args: RuleParameter[]): boolean => {\n                return !fn(context, ...args);\n            };\n        }\n        return this.evaluators[key];\n    }\n\n    /**\n     * Evaluates a rule.\n     * @param ruleId ID of the rule to evaluate\n     * @param context Custom rule execution context.\n     * @returns True if the rule passed, false otherwise\n     */\n    evaluateRule(ruleId: string, context?: RuleContext): boolean {\n        const ruleRef = this.getRuleById(ruleId);\n        context = context || this.context;\n\n        if (ruleRef) {\n            const evaluator = this.getEvaluator(ruleRef.type);\n            if (evaluator) {\n                return evaluator(context, ...ruleRef.parameters);\n            }\n        } else {\n            const evaluator = this.getEvaluator(ruleId);\n            if (evaluator) {\n                return evaluator(context);\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type, InjectionToken, Inject } from '@angular/core';\nimport { RuleEvaluator, RuleRef, RuleContext } from '../config/rule.extensions';\nimport { ExtensionConfig } from '../config/extension.config';\nimport { ExtensionLoaderService } from './extension-loader.service';\nimport { RouteRef } from '../config/routing.extensions';\nimport { ActionRef } from '../config/action.extensions';\nimport * as core from '../evaluators/core.evaluators';\nimport { ComponentRegisterService } from './component-register.service';\nimport { RuleService } from './rule.service';\nimport { ExtensionElement } from '../config/extension-element';\nimport { BehaviorSubject } from 'rxjs';\n\nexport function extensionJsonsFactory() {\n    return [];\n}\n\nexport const EXTENSION_JSONS = new InjectionToken<string[][]>('extension-jsons', {\n    providedIn: 'root',\n    factory: extensionJsonsFactory\n});\n\nexport function provideExtensionConfig(jsons: string[]) {\n    return {\n        provide: EXTENSION_JSONS,\n        useValue: jsons,\n        multi: true\n    };\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExtensionService {\n\n    protected config: ExtensionConfig = null;\n\n    configPath = 'assets/app.extensions.json';\n    pluginsPath = 'assets/plugins';\n\n    routes: Array<RouteRef> = [];\n    actions: Array<ActionRef> = [];\n    features: Array<any> = [];\n    authGuards: { [key: string]: Type<{}> } = {};\n\n    protected onSetup$ = new BehaviorSubject<ExtensionConfig>(this.config);\n    setup$ = this.onSetup$.asObservable();\n\n    constructor(\n        protected loader: ExtensionLoaderService,\n        protected componentRegister: ComponentRegisterService,\n        protected ruleService: RuleService,\n        @Inject(EXTENSION_JSONS) protected extensionJsons: string[]\n    ) {\n    }\n\n    /**\n     * Loads and registers an extension config file and plugins (specified by path properties).\n     * @returns The loaded config data\n     */\n    async load(): Promise<ExtensionConfig> {\n        const config = await this.loader.load(\n            this.configPath,\n            this.pluginsPath,\n            this.extensionJsons.flat()\n        );\n        this.setup(config);\n        return config;\n    }\n\n    /**\n     * Registers extensions from a config object.\n     * @param config Object with config data\n     */\n    setup(config: ExtensionConfig) {\n        if (!config) {\n            console.warn('Extension configuration not found');\n            return;\n        }\n\n        this.config = config;\n\n        this.setEvaluators({\n            'core.every': core.every,\n            'core.some': core.some,\n            'core.not': core.not\n        });\n\n        this.actions = this.loader.getActions(config);\n        this.routes = this.loader.getRoutes(config);\n        this.features = this.loader.getFeatures(config);\n\n        this.ruleService.setup(config);\n        this.onSetup$.next(config);\n    }\n\n    /**\n     * Gets features by key.\n     * @param key Key string, using dot notation\n     * @returns Features array found by key\n     */\n    getFeature(key: string): any[] {\n        const properties: string[] = Array.isArray(key) ? [key] : key.split('.');\n        return properties.reduce((prev, curr) => prev && prev[curr], this.features) || [];\n    }\n\n    getElements<T extends ExtensionElement>(key: string, fallback: Array<T> = []): Array<T> {\n        return this.loader.getElements(this.config, key, fallback);\n    }\n\n    /**\n     * Adds one or more new rule evaluators to the existing set.\n     * @param values The new evaluators to add\n     */\n    setEvaluators(values: { [key: string]: RuleEvaluator }) {\n        this.ruleService.setEvaluators(values);\n    }\n\n    /**\n     * Adds one or more new auth guards to the existing set.\n     * @param values The new auth guards to add\n     */\n    setAuthGuards(values: { [key: string]: Type<{}> }) {\n        if (values) {\n            this.authGuards = Object.assign({}, this.authGuards, values);\n        }\n    }\n\n    /**\n     * Adds one or more new components to the existing set.\n     * @param values The new components to add\n     */\n    setComponents(values: { [key: string]: Type<{}> }) {\n        this.componentRegister.setComponents(values);\n    }\n\n    /**\n     * Retrieves a route using its ID value.\n     * @param id The ID value to look for\n     * @returns The route or null if not found\n     */\n    getRouteById(id: string): RouteRef {\n        return this.routes.find((route) => route.id === id);\n    }\n\n    /**\n     * Retrieves one or more auth guards using an array of ID values.\n     * @param ids Array of ID value to look for\n     * @returns Array of auth guards or empty array if none were found\n     */\n    getAuthGuards(ids: string[]): Array<Type<{}>> {\n        return (ids || [])\n            .map((id) => this.authGuards[id])\n            .filter((guard) => guard);\n    }\n\n    /**\n     * Retrieves an action using its ID value.\n     * @param id The ID value to look for\n     * @returns Action or null if not found\n     */\n    getActionById(id: string): ActionRef {\n        return this.actions.find((action) => action.id === id);\n    }\n\n    /**\n     * Retrieves a RuleEvaluator function using its key name.\n     * @param key Key name to look for\n     * @returns RuleEvaluator or null if not found\n     */\n    getEvaluator(key: string): RuleEvaluator {\n        return this.ruleService.getEvaluator(key);\n    }\n\n    /**\n     * Evaluates a rule.\n     * @param ruleId ID of the rule to evaluate\n     * @param context Custom rule execution context.\n     * @returns True if the rule passed, false otherwise\n     */\n    evaluateRule(ruleId: string, context?: RuleContext): boolean {\n        return this.ruleService.evaluateRule(ruleId, context);\n    }\n\n    /**\n     * Retrieves a registered extension component using its ID value.\n     * @param id The ID value to look for\n     * @returns The component or null if not found\n     */\n    getComponentById<T>(id: string) {\n        return this.componentRegister.getComponentById<T>(id);\n    }\n\n    /**\n     * Retrieves a rule using its ID value.\n     * @param id The ID value to look for\n     * @returns The rule or null if not found\n     */\n    getRuleById(id: string): RuleRef {\n        return this.ruleService.getRuleById(id);\n    }\n\n    /**\n     * Runs a lightweight expression stored in a string.\n     * @param value String containing the expression or literal value\n     * @param context Parameter object for the expression with details of app state\n     * @returns Result of evaluated expression, if found, or the literal value otherwise\n     */\n    runExpression(value: string | {} , context?: any) {\n        if (typeof value === 'string' ) {\n            return this.evaluateExpression(value, context);\n        } else {\n            const duplicate = Object.assign({}, value);\n            Object.keys(duplicate).forEach( (key) => {\n                duplicate[key] = this.evaluateExpression(duplicate[key], context);\n            });\n            return duplicate;\n        }\n    }\n\n    private evaluateExpression(value: string, context?: any): string {\n        const pattern = new RegExp(/\\$\\((.*\\)?)\\)/g);\n        const matches = pattern.exec(value);\n\n        if (matches && matches.length > 1) {\n            const expression = matches[1];\n            const fn = new Function('context', `return ${expression}`);\n            const result = fn(context);\n\n            return result;\n        }\n        return value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ExtensionConfig, ExtensionRef } from '../config/extension.config';\nimport { ExtensionService } from '../services/extension.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ViewerExtensionRef } from '../config/viewer.extensions';\nimport { DocumentListPresetRef } from '../config/document-list.extensions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppExtensionService {\n    private _references = new BehaviorSubject<ExtensionRef[]>([]);\n\n    references$: Observable<ExtensionRef[]>;\n\n    constructor(protected extensionService: ExtensionService) {\n        this.references$ = this._references.asObservable();\n    }\n\n    async load() {\n        const config = await this.extensionService.load();\n        this.setup(config);\n    }\n\n    setup(config: ExtensionConfig) {\n        if (!config) {\n            return;\n        }\n\n        const references = (config.$references || [])\n            .filter((entry) => typeof entry === 'object')\n            .map((entry) => <ExtensionRef> entry);\n        this._references.next(references);\n    }\n\n    /**\n     * Provides a collection of document list columns for the particular preset.\n     * The result is filtered by the **disabled** state.\n     * @param key Preset key.\n     */\n    getDocumentListPreset(key: string): DocumentListPresetRef[] {\n        return this.extensionService\n          .getElements<DocumentListPresetRef>(\n            `features.documentList.${key}`\n          )\n          .filter((entry) => !entry.disabled);\n    }\n\n    /**\n     * Provides a list of the Viewer content extensions,\n     * filtered by **disabled** state and **rules**.\n     */\n    getViewerExtensions(): ViewerExtensionRef[] {\n        return this.extensionService\n            .getElements<ViewerExtensionRef>('features.viewer.content')\n            .filter((extension) => !this.isViewerExtensionDisabled(extension));\n    }\n\n    protected isViewerExtensionDisabled(extension: ViewerExtensionRef): boolean {\n        if (extension) {\n          if (extension.disabled) {\n            return true;\n          }\n\n          if (extension.rules && extension.rules.disabled) {\n            return this.extensionService.evaluateRule(extension.rules.disabled);\n          }\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '@alfresco/js-api';\n\nexport interface NavigationState {\n    currentFolder?: Node;\n    url?: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Group } from '@alfresco/js-api';\n\nexport interface ProfileState {\n    [key: string]: any;\n\n    id: string;\n    isAdmin: boolean;\n    firstName: string;\n    lastName: string;\n    userName?: string;\n    initials?: string;\n    groups?: Group[];\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, SiteEntry } from '@alfresco/js-api';\n\nexport interface SelectionState {\n    count: number;\n    nodes: NodeEntry[];\n    libraries: SiteEntry[];\n    isEmpty: boolean;\n    first?: NodeEntry;\n    last?: NodeEntry;\n    folder?: NodeEntry;\n    file?: NodeEntry;\n    library?: SiteEntry;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface RepositoryState {\n    isAuditEnabled?: boolean;\n    isQuickShareEnabled?: boolean;\n    isReadOnly?: boolean;\n    isThumbnailGenerationEnabled?: boolean;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '@alfresco/js-api';\n\nexport interface ViewerExtensionInterface {\n    url: string;\n    nameFile: string;\n    node: Node;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ComponentRef,\n    OnInit,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnDestroy,\n    OnChanges\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-preview-extension',\n    template: `\n    <div #content></div>\n  `\n})\nexport class PreviewExtensionComponent implements OnInit, OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef, static: true })\n    content: ViewContainerRef;\n\n    /** ID string of the component to preview. */\n    @Input()\n    id: string;\n\n    /** URL of the content in the repository. */\n    @Input()\n    url: string;\n\n    /** File extension (.jpg, .png, etc) for the viewer. */\n    @Input()\n    extension: string;\n\n    /** Node containing the content to display. */\n    @Input()\n    node: Node;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private extensionService: ExtensionService,\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit() {\n        if (!this.id) {\n            return;\n        }\n\n        const componentType = this.extensionService.getComponentById(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.updateInstance();\n            }\n        }\n    }\n\n    ngOnChanges() {\n        this.updateInstance();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentRef && this.componentRef.instance) {\n            const instance = this.componentRef.instance;\n\n            instance.node = this.node;\n            instance.url = this.url;\n            instance.extension = this.extension;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\n\n@Component({\n  selector: 'adf-dynamic-column',\n  template: `\n    <ng-container #content></ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'adf-dynamic-column' },\n  styles: [\n    `\n      .adf-dynamic-column {\n        display: flex;\n        align-items: center;\n      }\n    `\n  ]\n})\nexport class DynamicColumnComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('content', { read: ViewContainerRef, static: true })\n  content: ViewContainerRef;\n\n  @Input()\n  id: string;\n\n  @Input()\n  context: any;\n\n  private componentRef: ComponentRef<any>;\n\n  constructor(\n    private extensions: ExtensionService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    const componentType = this.extensions.getComponentById(this.id);\n    if (componentType) {\n      const factory = this.componentFactoryResolver.resolveComponentFactory(\n        componentType\n      );\n      if (factory) {\n        this.content.clear();\n        this.componentRef = this.content.createComponent(factory, 0);\n        this.updateInstance();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.node) {\n      this.updateInstance();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.componentRef = null;\n    }\n  }\n\n  private updateInstance() {\n    if (this.componentRef && this.componentRef.instance) {\n      this.componentRef.instance.context = this.context;\n    }\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ComponentRef,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnDestroy,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\nimport { ExtensionComponent } from '../../services/component-register.service';\n\n// cSpell:words lifecycle\n@Component({\n    selector: 'adf-dynamic-component',\n    template: `<div #content></div>`\n})\nexport class DynamicExtensionComponent implements OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef, static: true })\n    content: ViewContainerRef;\n\n    /** Unique ID string for the component to show. */\n    @Input() id: string;\n\n    /** Data for the dynamically-loaded component instance. */\n    @Input() data: any;\n\n    private componentRef: ComponentRef<ExtensionComponent>;\n    private loaded: boolean = false;\n\n    constructor(private extensions: ExtensionService, private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        if (changes.data) {\n            this.data = changes.data.currentValue;\n        }\n\n        this.updateInstance();\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const componentType = this.extensions.getComponentById<ExtensionComponent>(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentCreated()) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentCreated()) {\n            this.componentRef.instance.data = this.data;\n        }\n    }\n\n    private proxy(lifecycleMethod, ...args) {\n        if (this.componentCreated() && this.lifecycleHookIsImplemented(lifecycleMethod)) {\n            this.componentRef.instance[lifecycleMethod].apply(this.componentRef.instance, args);\n        }\n    }\n\n    private componentCreated(): boolean {\n        return !!this.componentRef  && !!this.componentRef.instance;\n    }\n\n    private lifecycleHookIsImplemented(lifecycleMethod: string): boolean {\n        return !!this.componentRef.instance[lifecycleMethod];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ViewContainerRef,\n    ComponentRef,\n    ComponentFactoryResolver,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ExtensionService } from '../../services/extension.service';\n\n@Component({\n    selector: 'adf-dynamic-tab',\n    template: `<div #content></div>`\n})\nexport class DynamicTabComponent implements OnInit, OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef, static: true })\n    content: ViewContainerRef;\n\n    /** Unique ID string for the component to show. */\n    @Input()\n    id: string;\n\n    @Input()\n    node: Node;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private extensions: ExtensionService,\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit() {\n        const componentType = this.extensions.getComponentById(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.updateInstance();\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node) {\n            this.updateInstance();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentRef && this.componentRef.instance) {\n            this.componentRef.instance.node = this.node;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './viewer/viewer-extension.interface';\nexport * from './viewer/preview-extension.component';\nexport * from './dynamic-column/dynamic-column.component';\nexport * from './dynamic-component/dynamic.component';\nexport * from './dynamic-tab/dynamic-tab.component';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppExtensionService } from './app-extension.service';\n\nexport function setupExtensions(appExtensionService: AppExtensionService): Function {\n    return () => appExtensionService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicExtensionComponent } from './components/dynamic-component/dynamic.component';\nimport { DynamicTabComponent } from './components/dynamic-tab/dynamic-tab.component';\nimport { DynamicColumnComponent } from './components/dynamic-column/dynamic-column.component';\nimport { PreviewExtensionComponent } from './components/viewer/preview-extension.component';\nimport { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\nimport { AppExtensionService } from './services/app-extension.service';\nimport { setupExtensions } from './services/startup-extension-factory';\n\n@NgModule({\n    declarations: [\n        DynamicExtensionComponent,\n        DynamicTabComponent,\n        DynamicColumnComponent,\n        PreviewExtensionComponent\n    ],\n    exports: [\n        DynamicExtensionComponent,\n        DynamicTabComponent,\n        DynamicColumnComponent,\n        PreviewExtensionComponent\n    ]\n})\nexport class ExtensionsModule {\n    static forRoot(): ModuleWithProviders<ExtensionsModule> {\n        return {\n            ngModule: ExtensionsModule,\n            providers: [\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: setupExtensions,\n                    deps: [AppExtensionService],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders<ExtensionsModule> {\n        return {\n            ngModule: ExtensionsModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './lib/config/action.extensions';\nexport * from './lib/config/document-list.extensions';\nexport * from './lib/config/extension-element';\nexport * from './lib/config/extension-utils';\nexport * from './lib/config/extension.config';\nexport * from './lib/config/icon.extensions';\nexport * from './lib/config/navbar.extensions';\nexport * from './lib/config/permission.extensions';\nexport * from './lib/config/routing.extensions';\nexport * from './lib/config/rule.extensions';\nexport * from './lib/config/sidebar.extensions';\nexport * from './lib/config/viewer.extensions';\n\nexport * from './lib/services/extension-loader.service';\nexport * from './lib/services/extension.service';\nexport * from './lib/services/component-register.service';\nexport * from './lib/services/app-extension.service';\nexport * from './lib/services/rule.service';\n\nexport * from './lib/store/states/navigation.state';\nexport * from './lib/store/states/profile.state';\nexport * from './lib/store/states/selection.state';\nexport * from './lib/store/states/repository.state';\n\nexport * from './lib/components/public-api';\nexport * from './lib/extensions.module';\n"],"names":["core.every","core.some","core.not"],"mappings":"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"}