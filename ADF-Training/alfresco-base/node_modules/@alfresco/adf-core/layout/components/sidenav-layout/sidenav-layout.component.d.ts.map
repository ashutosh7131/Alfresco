{"version":3,"file":"sidenav-layout.component.d.ts","sources":["sidenav-layout.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnInit, AfterViewInit, OnDestroy, TemplateRef, EventEmitter } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { UserPreferencesService } from '../../../services/user-preferences.service';\nimport { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';\nimport { Observable } from 'rxjs';\nimport { Direction } from '@angular/cdk/bidi';\nexport declare class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n    private mediaMatcher;\n    private userPreferencesService;\n    static STEP_OVER: number;\n    dir: Direction;\n    position: 'start' | 'end';\n    sidenavMin: number;\n    sidenavMax: number;\n    stepOver: number;\n    hideSidenav: boolean;\n    expandedSidenav: boolean;\n    expanded: EventEmitter<boolean>;\n    headerDirective: SidenavLayoutHeaderDirective;\n    navigationDirective: SidenavLayoutNavigationDirective;\n    contentDirective: SidenavLayoutContentDirective;\n    private menuOpenStateSubject;\n    menuOpenState$: Observable<boolean>;\n    container: any;\n    emptyTemplate: any;\n    mediaQueryList: MediaQueryList;\n    _isMenuMinimized: any;\n    templateContext: {\n        toggleMenu: () => void;\n        isMenuMinimized: () => boolean;\n    };\n    private onDestroy$;\n    constructor(mediaMatcher: MediaMatcher, userPreferencesService: UserPreferencesService);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    toggleMenu(): void;\n    get isMenuMinimized(): boolean;\n    set isMenuMinimized(menuState: boolean);\n    get isHeaderInside(): boolean;\n    get headerTemplate(): TemplateRef<any>;\n    get navigationTemplate(): TemplateRef<any>;\n    get contentTemplate(): TemplateRef<any>;\n    onMediaQueryChange(): void;\n}\n"]}