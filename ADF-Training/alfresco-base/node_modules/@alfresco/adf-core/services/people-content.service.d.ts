/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Observable } from 'rxjs';
import { AlfrescoApiService } from './alfresco-api.service';
import { PeopleApi, PersonBodyCreate, Pagination } from '@alfresco/js-api';
import { EcmUserModel } from '../models/ecm-user.model';
import { LogService } from './log.service';
import * as ɵngcc0 from '@angular/core';
export declare enum ContentGroups {
    ALFRESCO_ADMINISTRATORS = "ALFRESCO_ADMINISTRATORS"
}
export interface PeopleContentQueryResponse {
    pagination: Pagination;
    entries: EcmUserModel[];
}
export interface PeopleContentSortingModel {
    orderBy: string;
    direction: string;
}
export interface PeopleContentQueryRequestModel {
    skipCount?: number;
    maxItems?: number;
    sorting?: PeopleContentSortingModel;
}
export declare class PeopleContentService {
    private apiService;
    private logService;
    private hasContentAdminRole;
    hasCheckedIsContentAdmin: boolean;
    _peopleApi: PeopleApi;
    get peopleApi(): PeopleApi;
    constructor(apiService: AlfrescoApiService, logService: LogService);
    getPerson(personId: string): Observable<any>;
    getCurrentPerson(): Observable<any>;
    listPeople(requestQuery?: PeopleContentQueryRequestModel): Observable<PeopleContentQueryResponse>;
    createPerson(newPerson: PersonBodyCreate, opts?: any): Observable<EcmUserModel>;
    isContentAdmin(): Promise<boolean>;
    private buildOrderArray;
    private handleError;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PeopleContentService, never>;
}

//# sourceMappingURL=people-content.service.d.ts.map