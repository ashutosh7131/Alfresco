{"version":3,"file":"search.service.d.ts","sources":["search.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NodePaging, QueriesApi, QueryBody, ResultSetPaging, SearchApi } from '@alfresco/js-api';\nimport { Observable, Subject } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SearchConfigurationService } from './search-configuration.service';\nexport declare class SearchService {\n    private apiService;\n    private searchConfigurationService;\n    dataLoaded: Subject<ResultSetPaging>;\n    _queriesApi: QueriesApi;\n    get queriesApi(): QueriesApi;\n    _searchApi: SearchApi;\n    get searchApi(): SearchApi;\n    constructor(apiService: AlfrescoApiService, searchConfigurationService: SearchConfigurationService);\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging>;\n    search(searchTerm: string, maxResults: number, skipCount: number): Observable<ResultSetPaging>;\n    searchByQueryBody(queryBody: QueryBody): Observable<ResultSetPaging>;\n    private handleError;\n}\nexport interface SearchOptions {\n    skipCount?: number;\n    maxItems?: number;\n    rootNodeId?: string;\n    nodeType?: string;\n    include?: string[];\n    orderBy?: string;\n    fields?: string[];\n}\n"]}