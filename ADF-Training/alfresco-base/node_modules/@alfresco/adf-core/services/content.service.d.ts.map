{"version":3,"file":"content.service.d.ts","sources":["content.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentApi, MinimalNode, Node, NodeEntry, NodesApi } from '@alfresco/js-api';\nimport { Observable, Subject } from 'rxjs';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AllowableOperationsEnum } from '../models/allowable-operations.enum';\nimport { DownloadService } from './download.service';\nimport { ThumbnailService } from './thumbnail.service';\nexport declare class ContentService {\n    authService: AuthenticationService;\n    apiService: AlfrescoApiService;\n    private logService;\n    private sanitizer;\n    private downloadService;\n    private thumbnailService;\n    folderCreated: Subject<FolderCreatedEvent>;\n    folderCreate: Subject<MinimalNode>;\n    folderEdit: Subject<MinimalNode>;\n    _contentApi: ContentApi;\n    get contentApi(): ContentApi;\n    _nodesApi: NodesApi;\n    get nodesApi(): NodesApi;\n    constructor(authService: AuthenticationService, apiService: AlfrescoApiService, logService: LogService, sanitizer: DomSanitizer, downloadService: DownloadService, thumbnailService: ThumbnailService);\n    downloadBlob(blob: Blob, fileName: string): void;\n    createTrustedUrl(blob: Blob): string;\n    getDocumentThumbnailUrl(node: NodeEntry | string, attachment?: boolean, ticket?: string): string;\n    getContentUrl(node: NodeEntry | string, attachment?: boolean, ticket?: string): string;\n    getNodeContent(nodeId: string): Observable<any>;\n    getNode(nodeId: string, opts?: any): Observable<NodeEntry>;\n    hasPermissions(node: Node, permission: PermissionsEnum | string, userId?: string): boolean;\n    hasAllowableOperations(node: Node, allowableOperation: AllowableOperationsEnum | string): boolean;\n    private handleError;\n}\n"]}