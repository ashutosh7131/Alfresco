/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { NodePaging, QueriesApi, QueryBody, ResultSetPaging, SearchApi } from '@alfresco/js-api';
import { Observable, Subject } from 'rxjs';
import { AlfrescoApiService } from './alfresco-api.service';
import { SearchConfigurationService } from './search-configuration.service';
export declare class SearchService {
    private apiService;
    private searchConfigurationService;
    dataLoaded: Subject<ResultSetPaging>;
    _queriesApi: QueriesApi;
    get queriesApi(): QueriesApi;
    _searchApi: SearchApi;
    get searchApi(): SearchApi;
    constructor(apiService: AlfrescoApiService, searchConfigurationService: SearchConfigurationService);
    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging>;
    search(searchTerm: string, maxResults: number, skipCount: number): Observable<ResultSetPaging>;
    searchByQueryBody(queryBody: QueryBody): Observable<ResultSetPaging>;
    private handleError;
}
export interface SearchOptions {
    skipCount?: number;
    maxItems?: number;
    rootNodeId?: string;
    nodeType?: string;
    include?: string[];
    orderBy?: string;
    fields?: string[];
}
