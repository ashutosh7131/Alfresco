/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Node, AlfrescoApi, AlfrescoApiConfig } from '@alfresco/js-api';
import { AppConfigService } from '../app-config/app-config.service';
import { Subject, ReplaySubject } from 'rxjs';
import { StorageService } from './storage.service';
import * as ɵngcc0 from '@angular/core';
export declare class AlfrescoApiService {
    protected appConfig: AppConfigService;
    protected storageService: StorageService;
    nodeUpdated: Subject<Node>;
    alfrescoApiInitialized: ReplaySubject<boolean>;
    protected alfrescoApi: AlfrescoApi;
    lastConfig: AlfrescoApiConfig;
    private excludedErrorUrl;
    getInstance(): AlfrescoApi;
    constructor(appConfig: AppConfigService, storageService: StorageService);
    load(): Promise<void>;
    reset(): void;
    protected initAlfrescoApi(): void;
    isDifferentConfig(lastConfig: AlfrescoApiConfig, newConfig: AlfrescoApiConfig): boolean;
    isExcludedErrorListener(currentFullPath: string): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AlfrescoApiService, never>;
}

//# sourceMappingURL=alfresco-api.service.d.ts.map