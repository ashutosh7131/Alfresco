{"version":3,"file":"identity-group.service.d.ts","sources":["identity-group.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Observable } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { IdentityGroupSearchParam, IdentityGroupQueryCloudRequestModel, IdentityGroupModel, IdentityGroupQueryResponse, IdentityGroupCountModel } from '../models/identity-group.model';\nimport { IdentityRoleModel } from '../models/identity-role.model';\nimport { IdentityGroupServiceInterface } from './identity-group.interface';\nimport { OAuth2Service } from './oauth2.service';\nexport declare class IdentityGroupService implements IdentityGroupServiceInterface {\n    private oAuth2Service;\n    private appConfigService;\n    constructor(oAuth2Service: OAuth2Service, appConfigService: AppConfigService);\n    private get identityHost();\n    getGroups(): Observable<IdentityGroupModel[]>;\n    getAvailableRoles(groupId: string): Observable<IdentityRoleModel[]>;\n    getAssignedRoles(groupId: string): Observable<IdentityRoleModel[]>;\n    assignRoles(groupId: string, roles: IdentityRoleModel[]): Observable<any>;\n    removeRoles(groupId: string, roles: IdentityRoleModel[]): Observable<any>;\n    getEffectiveRoles(groupId: string): Observable<IdentityRoleModel[]>;\n    queryGroups(requestQuery: IdentityGroupQueryCloudRequestModel): Observable<IdentityGroupQueryResponse>;\n    getTotalGroupsCount(): Observable<IdentityGroupCountModel>;\n    createGroup(newGroup: IdentityGroupModel): Observable<any>;\n    updateGroup(groupId: string, updatedGroup: IdentityGroupModel): Observable<any>;\n    deleteGroup(groupId: string): Observable<any>;\n    findGroupsByName(searchParams: IdentityGroupSearchParam): Observable<IdentityGroupModel[]>;\n    getGroupRoles(groupId: string): Observable<IdentityRoleModel[]>;\n    checkGroupHasRole(groupId: string, roleNames: string[]): Observable<boolean>;\n    getClientIdByApplicationName(applicationName: string): Observable<string>;\n    getClientRoles(groupId: string, clientId: string): Observable<IdentityRoleModel[]>;\n    checkGroupHasClientApp(groupId: string, clientId: string): Observable<boolean>;\n    checkGroupHasAnyClientAppRole(groupId: string, clientId: string, roleNames: string[]): Observable<boolean>;\n    private buildRolesUrl;\n}\n"]}