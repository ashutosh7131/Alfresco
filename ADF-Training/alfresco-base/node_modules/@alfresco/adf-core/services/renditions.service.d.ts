/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { RenditionEntry, RenditionPaging, RenditionsApi, ContentApi } from '@alfresco/js-api';
import { Observable } from 'rxjs';
import { AlfrescoApiService } from './alfresco-api.service';
import * as ɵngcc0 from '@angular/core';
export declare class RenditionsService {
    private apiService;
    _renditionsApi: RenditionsApi;
    get renditionsApi(): RenditionsApi;
    _contentApi: ContentApi;
    get contentApi(): ContentApi;
    constructor(apiService: AlfrescoApiService);
    getAvailableRenditionForNode(nodeId: string): Observable<RenditionEntry>;
    generateRenditionForNode(nodeId: string): Observable<any>;
    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean>;
    isConversionPossible(nodeId: string, encoding: string): Observable<boolean>;
    getRenditionUrl(nodeId: string, encoding: string): string;
    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry>;
    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging>;
    createRendition(nodeId: string, encoding: string): Observable<{}>;
    convert(nodeId: string, encoding: string, pollingInterval?: number, retries?: number): Observable<RenditionEntry>;
    private pollRendition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RenditionsService, never>;
}

//# sourceMappingURL=renditions.service.d.ts.map