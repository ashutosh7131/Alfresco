/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Observable } from 'rxjs';
import { Injector } from '@angular/core';
import { HttpHandler, HttpInterceptor, HttpRequest, HttpSentEvent, HttpHeaderResponse, HttpProgressEvent, HttpResponse, HttpUserEvent } from '@angular/common/http';
import * as ɵngcc0 from '@angular/core';
export declare class AuthBearerInterceptor implements HttpInterceptor {
    private injector;
    private excludedUrlsRegex;
    private authService;
    constructor(injector: Injector);
    private loadExcludedUrlsRegex;
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>>;
    private appendJsonContentType;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AuthBearerInterceptor, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AuthBearerInterceptor>;
}

//# sourceMappingURL=auth-bearer.interceptor.d.ts.map