/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ChangeDetectorRef, ElementRef, OnChanges, Renderer2, SimpleChanges } from '@angular/core';
import { NodeEntry } from '@alfresco/js-api';
import { ContentService } from './../services/content.service';
import * as ɵngcc0 from '@angular/core';
export interface NodeAllowableOperationSubject {
    disabled: boolean;
}
export declare class CheckAllowableOperationDirective implements OnChanges {
    private elementRef;
    private renderer;
    private contentService;
    private changeDetector;
    private parentComponent?;
    permission: string;
    nodes: NodeEntry[];
    constructor(elementRef: ElementRef, renderer: Renderer2, contentService: ContentService, changeDetector: ChangeDetectorRef, parentComponent?: NodeAllowableOperationSubject);
    ngOnChanges(changes: SimpleChanges): void;
    updateElement(): boolean;
    private enable;
    private disable;
    enableElement(): void;
    disableElement(): void;
    hasAllowableOperations(nodes: NodeEntry[], permission: string): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CheckAllowableOperationDirective, [null, null, null, null, { optional: true; host: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CheckAllowableOperationDirective, "[adf-check-allowable-operation]", never, { "permission": "adf-check-allowable-operation"; "nodes": "adf-nodes"; }, {}, never>;
}

//# sourceMappingURL=check-allowable-operation.directive.d.ts.map