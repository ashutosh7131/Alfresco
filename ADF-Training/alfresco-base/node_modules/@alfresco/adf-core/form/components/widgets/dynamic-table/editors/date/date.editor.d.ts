/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { UserPreferencesService } from '../../../../../../services/user-preferences.service';
import { OnInit, OnDestroy } from '@angular/core';
import { DateAdapter } from '@angular/material/core';
import { MatDatepickerInputEvent } from '@angular/material/datepicker';
import { Moment } from 'moment';
import { DynamicTableColumn } from './../../dynamic-table-column.model';
import { DynamicTableRow } from './../../dynamic-table-row.model';
import { DynamicTableModel } from './../../dynamic-table.widget.model';
import * as ɵngcc0 from '@angular/core';
export declare class DateEditorComponent implements OnInit, OnDestroy {
    private dateAdapter;
    private userPreferencesService;
    DATE_FORMAT: string;
    value: any;
    table: DynamicTableModel;
    row: DynamicTableRow;
    column: DynamicTableColumn;
    minDate: Moment;
    maxDate: Moment;
    private onDestroy$;
    constructor(dateAdapter: DateAdapter<Moment>, userPreferencesService: UserPreferencesService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onDateChanged(newDateValue: MatDatepickerInputEvent<any> | HTMLInputElement): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateEditorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DateEditorComponent, "adf-date-editor", never, { "table": "table"; "row": "row"; "column": "column"; }, {}, never, never>;
}

//# sourceMappingURL=date.editor.d.ts.map