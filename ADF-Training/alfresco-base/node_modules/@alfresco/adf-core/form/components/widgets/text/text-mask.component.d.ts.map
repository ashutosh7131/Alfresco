{"version":3,"file":"text-mask.component.d.ts","sources":["text-mask.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ElementRef, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any;\nexport declare class InputMaskDirective implements OnChanges, ControlValueAccessor {\n    private el;\n    private render;\n    inputMask: {\n        mask: string;\n        isReversed: boolean;\n    };\n    private translationMask;\n    private byPassKeys;\n    private value;\n    private invalidCharacters;\n    constructor(el: ElementRef, render: Renderer2);\n    _onChange: (_: any) => void;\n    _onTouched: () => void;\n    onTextInput(event: KeyboardEvent): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: () => any): void;\n    private maskValue;\n    private setCaretPosition;\n    calculateCaretPosition(caretPosition: any, newValue: any, keyCode: any): any;\n    getMasked(skipMaskChars: any, val: any, mask: any, isReversed?: boolean): string;\n    private isToCheck;\n    private setValue;\n    private getValue;\n}\n"]}