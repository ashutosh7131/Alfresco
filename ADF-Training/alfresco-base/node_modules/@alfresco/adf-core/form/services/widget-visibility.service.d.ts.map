{"version":3,"file":"widget-visibility.service.d.ts","sources":["widget-visibility.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Observable } from 'rxjs';\nimport { FormFieldModel, FormModel, TabModel, FormOutcomeModel } from '../components/widgets/core/index';\nimport { TaskProcessVariableModel } from '../models/task-process-variable.model';\nimport { WidgetVisibilityModel } from '../models/widget-visibility.model';\nimport { TaskFormsApi } from '@alfresco/js-api';\nexport declare class WidgetVisibilityService {\n    private apiService;\n    private logService;\n    _taskFormsApi: TaskFormsApi;\n    get taskFormsApi(): TaskFormsApi;\n    private processVarList;\n    private form;\n    constructor(apiService: AlfrescoApiService, logService: LogService);\n    refreshVisibility(form: FormModel, processVarList?: TaskProcessVariableModel[]): void;\n    refreshEntityVisibility(element: FormFieldModel | TabModel): void;\n    refreshOutcomeVisibility(element: FormOutcomeModel): void;\n    evaluateVisibility(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean;\n    isFieldVisible(form: FormModel, visibilityObj: WidgetVisibilityModel, accumulator?: any[], result?: boolean): boolean;\n    private transformToLiteralExpression;\n    private transformToLiteralOperator;\n    getLeftValue(form: FormModel, visibilityObj: WidgetVisibilityModel): string;\n    getRightValue(form: FormModel, visibilityObj: WidgetVisibilityModel): string;\n    getFormValue(form: FormModel, fieldId: string): any;\n    isFormFieldValid(formField: FormFieldModel): boolean;\n    getFieldValue(valueList: any, fieldId: string): any;\n    private isInvalidValue;\n    getFormFieldById(form: FormModel, fieldId: string): FormFieldModel;\n    searchValueInForm(formField: FormFieldModel, fieldId: string): string;\n    isParentTabVisible(form: FormModel, currentFormField: FormFieldModel | TabModel): boolean;\n    private getCurrentFieldFromTabById;\n    private getFormTabContainers;\n    private getObjectValue;\n    private getValueFromOption;\n    private isSearchedField;\n    getVariableValue(form: FormModel, name: string, processVarList: TaskProcessVariableModel[]): string;\n    private getProcessVariableValue;\n    evaluateCondition(leftValue: any, rightValue: any, operator: string): boolean | undefined;\n    private contains;\n    cleanProcessVariable(): void;\n    getTaskProcessVariable(taskId: string): Observable<TaskProcessVariableModel[]>;\n    toJson(res: any): any;\n    private isValidCondition;\n    private handleError;\n}\n"]}