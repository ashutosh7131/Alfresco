{"version":3,"file":"ecm-model.service.d.ts","sources":["ecm-model.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { LogService } from '../../services/log.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Observable } from 'rxjs';\nimport { FormModel } from '../components/widgets/core/form.model';\nimport { CustomModelApi } from '@alfresco/js-api';\nexport declare class EcmModelService {\n    private apiService;\n    private logService;\n    static MODEL_NAMESPACE: string;\n    static MODEL_NAME: string;\n    static TYPE_MODEL: string;\n    _customModelApi: CustomModelApi;\n    get customModelApi(): CustomModelApi;\n    constructor(apiService: AlfrescoApiService, logService: LogService);\n    createEcmTypeForActivitiForm(formName: string, form: FormModel): Observable<any>;\n    searchActivitiEcmModel(): Observable<any>;\n    createActivitiEcmModel(formName: string, form: FormModel): Observable<any>;\n    saveFomType(formName: string, form: FormModel): Observable<any>;\n    createEcmTypeWithProperties(formName: string, form: FormModel): Observable<any>;\n    searchEcmType(typeName: string, modelName: string): Observable<any>;\n    activeEcmModel(modelName: string): Observable<any>;\n    createEcmModel(modelName: string, nameSpace: string): Observable<any>;\n    getEcmModels(): Observable<any>;\n    getEcmType(modelName: string): Observable<any>;\n    createEcmType(typeName: string, modelName: string, parentType: string): Observable<any>;\n    addPropertyToAType(modelName: string, typeName: string, formFields: any): Observable<any>;\n    cleanNameType(name: string): string;\n    toJson(res: any): any;\n    handleError(err: any): any;\n}\n"]}