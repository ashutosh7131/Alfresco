{"version":3,"file":"activiti-alfresco.service.d.ts","sources":["activiti-alfresco.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { SitesService } from '../../services/sites.service';\nimport { IntegrationAlfrescoOnPremiseApi, MinimalNode, ActivitiContentApi } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\nimport { ExternalContent } from '../components/widgets/core/external-content';\nimport { ExternalContentLink } from '../components/widgets/core/external-content-link';\nexport declare class ActivitiContentService {\n    private apiService;\n    private logService;\n    private sitesService;\n    static UNKNOWN_ERROR_MESSAGE: string;\n    static GENERIC_ERROR_MESSAGE: string;\n    _integrationAlfrescoOnPremiseApi: IntegrationAlfrescoOnPremiseApi;\n    get integrationAlfrescoOnPremiseApi(): IntegrationAlfrescoOnPremiseApi;\n    _contentApi: ActivitiContentApi;\n    get contentApi(): ActivitiContentApi;\n    constructor(apiService: AlfrescoApiService, logService: LogService, sitesService: SitesService);\n    getAlfrescoNodes(accountId: string, folderId: string): Observable<[ExternalContent]>;\n    getAlfrescoRepositories(tenantId?: number, includeAccount?: boolean): Observable<any>;\n    linkAlfrescoNode(accountId: string, node: ExternalContent, siteId: string): Observable<ExternalContentLink>;\n    applyAlfrescoNode(node: MinimalNode, siteId: string, accountId: string): Observable<any>;\n    toJson(res: any): any;\n    toJsonArray(res: any): any;\n    handleError(error: any): Observable<any>;\n}\n"]}