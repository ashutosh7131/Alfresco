{"version":3,"file":"user-info.component.d.ts","sources":["user-info.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnInit, OnDestroy } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { BpmUserModel } from '../../models/bpm-user.model';\nimport { EcmUserModel } from '../../models/ecm-user.model';\nimport { IdentityUserModel } from '../../models/identity-user.model';\nimport { BpmUserService } from '../../services/bpm-user.service';\nimport { EcmUserService } from '../../services/ecm-user.service';\nimport { IdentityUserService } from '../../services/identity-user.service';\nimport { Observable } from 'rxjs';\nimport { MatMenuTrigger, MenuPositionX, MenuPositionY } from '@angular/material/menu';\nexport declare class UserInfoComponent implements OnInit, OnDestroy {\n    private ecmUserService;\n    private bpmUserService;\n    private identityUserService;\n    private authService;\n    trigger: MatMenuTrigger;\n    ecmBackgroundImage: string;\n    bpmBackgroundImage: string;\n    menuPositionX: MenuPositionX;\n    menuPositionY: MenuPositionY;\n    showName: boolean;\n    namePosition: string;\n    mode: string;\n    ecmUser$: Observable<EcmUserModel>;\n    bpmUser$: Observable<BpmUserModel>;\n    identityUser$: Observable<IdentityUserModel>;\n    selectedIndex: number;\n    private destroy$;\n    constructor(ecmUserService: EcmUserService, bpmUserService: BpmUserService, identityUserService: IdentityUserService, authService: AuthenticationService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    getUserInfo(): void;\n    onKeyPress(event: KeyboardEvent): void;\n    private closeUserModal;\n    get isLoggedIn(): boolean;\n    private loadEcmUserInfo;\n    private loadBpmUserInfo;\n    private loadIdentityUserInfo;\n    private isAllLoggedIn;\n    private isBpmLoggedIn;\n    private isEcmLoggedIn;\n    stopClosing(event: Event): void;\n    getEcmAvatar(avatarId: any): string;\n    getBpmUserImage(): string;\n    get showOnRight(): boolean;\n}\n"]}