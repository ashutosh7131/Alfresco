/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnInit, OnDestroy } from '@angular/core';
import { AuthenticationService } from '../../services/authentication.service';
import { BpmUserModel } from '../../models/bpm-user.model';
import { EcmUserModel } from '../../models/ecm-user.model';
import { IdentityUserModel } from '../../models/identity-user.model';
import { BpmUserService } from '../../services/bpm-user.service';
import { EcmUserService } from '../../services/ecm-user.service';
import { IdentityUserService } from '../../services/identity-user.service';
import { Observable } from 'rxjs';
import { MatMenuTrigger, MenuPositionX, MenuPositionY } from '@angular/material/menu';
import * as ɵngcc0 from '@angular/core';
export declare class UserInfoComponent implements OnInit, OnDestroy {
    private ecmUserService;
    private bpmUserService;
    private identityUserService;
    private authService;
    trigger: MatMenuTrigger;
    ecmBackgroundImage: string;
    bpmBackgroundImage: string;
    menuPositionX: MenuPositionX;
    menuPositionY: MenuPositionY;
    showName: boolean;
    namePosition: string;
    mode: string;
    ecmUser$: Observable<EcmUserModel>;
    bpmUser$: Observable<BpmUserModel>;
    identityUser$: Observable<IdentityUserModel>;
    selectedIndex: number;
    private destroy$;
    constructor(ecmUserService: EcmUserService, bpmUserService: BpmUserService, identityUserService: IdentityUserService, authService: AuthenticationService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    getUserInfo(): void;
    onKeyPress(event: KeyboardEvent): void;
    private closeUserModal;
    get isLoggedIn(): boolean;
    private loadEcmUserInfo;
    private loadBpmUserInfo;
    private loadIdentityUserInfo;
    private isAllLoggedIn;
    private isBpmLoggedIn;
    private isEcmLoggedIn;
    stopClosing(event: Event): void;
    getEcmAvatar(avatarId: any): string;
    getBpmUserImage(): string;
    get showOnRight(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UserInfoComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<UserInfoComponent, "adf-userinfo", never, { "ecmBackgroundImage": "ecmBackgroundImage"; "bpmBackgroundImage": "bpmBackgroundImage"; "menuPositionX": "menuPositionX"; "menuPositionY": "menuPositionY"; "showName": "showName"; "namePosition": "namePosition"; }, {}, never, never>;
}

//# sourceMappingURL=user-info.component.d.ts.map