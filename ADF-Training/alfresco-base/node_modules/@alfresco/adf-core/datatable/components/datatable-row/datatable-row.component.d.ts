/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ElementRef, EventEmitter } from '@angular/core';
import { FocusableOption } from '@angular/cdk/a11y';
import { DataRow } from '../../data/data-row.model';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableRowComponent implements FocusableOption {
    private element;
    row: DataRow;
    disabled: boolean;
    select: EventEmitter<any>;
    get isSelected(): boolean;
    get isAriaSelected(): boolean;
    get ariaLabel(): string | null;
    get tabindex(): number | null;
    onKeyDown(event: KeyboardEvent): void;
    constructor(element: ElementRef);
    focus(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableRowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableRowComponent, "adf-datatable-row", never, { "disabled": "disabled"; "row": "row"; }, { "select": "select"; }, never, ["*"]>;
}

//# sourceMappingURL=datatable-row.component.d.ts.map