/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnDestroy, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';
import { NotificationService } from '../services/notification.service';
import { NotificationModel } from '../models/notification.model';
import { MatMenuTrigger, MenuPositionX, MenuPositionY } from '@angular/material/menu';
import { Subject } from 'rxjs';
import { StorageService } from '../../services/storage.service';
import { Pagination } from '@alfresco/js-api';
import * as ɵngcc0 from '@angular/core';
export declare class NotificationHistoryComponent implements OnDestroy, OnInit, AfterViewInit {
    private notificationService;
    storageService: StorageService;
    cd: ChangeDetectorRef;
    static MAX_NOTIFICATION_STACK_LENGTH: number;
    static NOTIFICATION_STORAGE: string;
    trigger: MatMenuTrigger;
    menuPositionX: MenuPositionX;
    menuPositionY: MenuPositionY;
    maxNotifications: number;
    onDestroy$: Subject<boolean>;
    notifications: NotificationModel[];
    paginatedNotifications: any[];
    pagination: Pagination;
    constructor(notificationService: NotificationService, storageService: StorageService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    addNewNotification(notification: NotificationModel): void;
    saveNotifications(): void;
    onMenuOpened(): void;
    onKeyPress(event: KeyboardEvent): void;
    private closeUserModal;
    markAsRead(): void;
    createPagination(): void;
    loadMore(): void;
    hasMoreNotifications(): boolean;
    onNotificationClick(notification: NotificationModel): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NotificationHistoryComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NotificationHistoryComponent, "adf-notification-history", never, { "menuPositionX": "menuPositionX"; "menuPositionY": "menuPositionY"; "maxNotifications": "maxNotifications"; }, {}, never, never>;
}

//# sourceMappingURL=notification-history.component.d.ts.map