{"version":3,"file":"host-settings.component.d.ts","sources":["host-settings.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nexport declare class HostSettingsComponent implements OnInit {\n    private formBuilder;\n    private storageService;\n    private alfrescoApiService;\n    private appConfig;\n    HOST_REGEX: string;\n    providers: string[];\n    showSelectProviders: boolean;\n    form: FormGroup;\n    error: EventEmitter<string>;\n    cancel: EventEmitter<boolean>;\n    success: EventEmitter<boolean>;\n    constructor(formBuilder: FormBuilder, storageService: StorageService, alfrescoApiService: AlfrescoApiService, appConfig: AppConfigService);\n    ngOnInit(): void;\n    private removeFormGroups;\n    private addFormGroups;\n    private addOAuthFormGroup;\n    private addBPMFormControl;\n    private addIdentityHostFormControl;\n    private addECMFormControl;\n    private createOAuthFormGroup;\n    private createBPMFormControl;\n    private createIdentityFormControl;\n    private createECMFormControl;\n    onCancel(): void;\n    onSubmit(values: any): void;\n    keyDownFunction(event: any): void;\n    private saveOAuthValues;\n    private saveBPMValues;\n    private saveECMValues;\n    isBPM(): boolean;\n    isECM(): boolean;\n    isALL(): boolean;\n    isOAUTH(): boolean;\n    get providersControl(): FormControl;\n    get bpmHost(): FormControl;\n    get ecmHost(): FormControl;\n    get host(): FormControl;\n    get identityHost(): FormControl;\n    get clientId(): FormControl;\n    get scope(): FormControl;\n    get secretId(): FormControl;\n    get implicitFlow(): FormControl;\n    get silentLogin(): FormControl;\n    get redirectUri(): FormControl;\n    get publicUrls(): FormControl;\n    get redirectUriLogout(): FormControl;\n    get oauthConfig(): FormControl;\n}\n"]}