{"version":3,"file":"app-config.service.d.ts","sources":["app-config.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { ExtensionConfig, ExtensionService } from '@alfresco/adf-extensions';\nexport declare enum AppConfigValues {\n    APP_CONFIG_LANGUAGES_KEY = \"languages\",\n    PROVIDERS = \"providers\",\n    OAUTHCONFIG = \"oauth2\",\n    ECMHOST = \"ecmHost\",\n    BASESHAREURL = \"baseShareUrl\",\n    BPMHOST = \"bpmHost\",\n    IDENTITY_HOST = \"identityHost\",\n    AUTHTYPE = \"authType\",\n    CONTEXTROOTECM = \"contextRootEcm\",\n    CONTEXTROOTBPM = \"contextRootBpm\",\n    ALFRESCO_REPOSITORY_NAME = \"alfrescoRepositoryName\",\n    LOG_LEVEL = \"logLevel\",\n    LOGIN_ROUTE = \"loginRoute\",\n    DISABLECSRF = \"disableCSRF\",\n    AUTH_WITH_CREDENTIALS = \"auth.withCredentials\",\n    APPLICATION = \"application\",\n    STORAGE_PREFIX = \"application.storagePrefix\",\n    NOTIFY_DURATION = \"notificationDefaultDuration\"\n}\nexport declare enum Status {\n    INIT = \"init\",\n    LOADING = \"loading\",\n    LOADED = \"loaded\"\n}\nexport declare class AppConfigService {\n    protected http: HttpClient;\n    protected extensionService: ExtensionService;\n    config: any;\n    status: Status;\n    protected onLoadSubject: Subject<any>;\n    onLoad: Observable<any>;\n    constructor(http: HttpClient, extensionService: ExtensionService);\n    select(property: string): Observable<any>;\n    get<T>(key: string, defaultValue?: T): T;\n    getLocationProtocol(): string;\n    getLocationHostname(): string;\n    getLocationPort(prefix?: string): string;\n    protected onLoaded(): void;\n    protected onDataLoaded(data: any): void;\n    protected onExtensionsLoaded(config: ExtensionConfig): void;\n    load(): Promise<any>;\n    private formatString;\n}\n"]}