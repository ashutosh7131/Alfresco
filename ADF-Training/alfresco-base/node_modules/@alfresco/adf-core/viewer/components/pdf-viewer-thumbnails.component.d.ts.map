{"version":3,"file":"pdf-viewer-thumbnails.component.d.ts","sources":["pdf-viewer-thumbnails.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnInit, AfterViewInit, ElementRef, OnDestroy, EventEmitter, QueryList } from '@angular/core';\nimport { PdfThumbComponent } from './pdf-viewer-thumb.component';\nexport declare class PdfThumbListComponent implements OnInit, AfterViewInit, OnDestroy {\n    private element;\n    private document;\n    pdfViewer: any;\n    close: EventEmitter<any>;\n    virtualHeight: number;\n    translateY: number;\n    renderItems: any[];\n    width: number;\n    currentHeight: number;\n    private items;\n    private margin;\n    private itemHeight;\n    private previouslyFocusedElement;\n    private keyManager;\n    template: any;\n    thumbsList: QueryList<PdfThumbComponent>;\n    onKeydown(event: KeyboardEvent): void;\n    onResize(): void;\n    constructor(element: ElementRef, document: any);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    trackByFn(_: number, item: any): number;\n    isSelected(pageNumber: number): boolean;\n    goTo(pageNumber: number): void;\n    scrollInto(pageNumber: number): void;\n    getPages(): any;\n    private setHeight;\n    private calculateHeight;\n    private calculateItems;\n    private getContainerSetup;\n    private onPageChange;\n    private getPageIndex;\n    private canSelectNextItem;\n    private canSelectPreviousItem;\n}\n"]}