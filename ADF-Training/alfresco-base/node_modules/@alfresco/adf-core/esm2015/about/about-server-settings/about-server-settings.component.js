/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { AppConfigService, AppConfigValues } from '../../app-config/app-config.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../app-config/app-config.service';
import * as ɵngcc2 from '@angular/material/card';
import * as ɵngcc3 from '@ngx-translate/core';

const _c0 = function (a0) { return { value: a0 }; };
export class AboutServerSettingsComponent {
    constructor(appConfig) {
        this.appConfig = appConfig;
        this.ecmHost = '';
        this.bpmHost = '';
    }
    ngOnInit() {
        this.ecmHost = this.appConfig.get(AppConfigValues.ECMHOST);
        this.bpmHost = this.appConfig.get(AppConfigValues.BPMHOST);
    }
}
AboutServerSettingsComponent.ɵfac = function AboutServerSettingsComponent_Factory(t) { return new (t || AboutServerSettingsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppConfigService)); };
AboutServerSettingsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AboutServerSettingsComponent, selectors: [["adf-about-server-settings"]], decls: 14, vars: 18, consts: [[1, "adf-github-link-container"], ["data-automation-id", "adf-about-setting-title"], ["data-automation-id", "adf-process-service-host"], ["data-automation-id", "adf-content-service-host"]], template: function AboutServerSettingsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "h3", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "small");
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "mat-card");
        ɵngcc0.ɵɵelementStart(8, "p", 2);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "p", 3);
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "ABOUT.SERVER_SETTINGS.TITLE"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 6, "ABOUT.SERVER_SETTINGS.DESCRIPTION"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(10, 8, "ABOUT.SERVER_SETTINGS.PROCESS_SERVICE_HOST", ɵngcc0.ɵɵpureFunction1(14, _c0, ctx.bpmHost)), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(13, 11, "ABOUT.SERVER_SETTINGS.CONTENT_SERVICE_HOST", ɵngcc0.ɵɵpureFunction1(16, _c0, ctx.ecmHost)), " ");
    } }, directives: [ɵngcc2.MatCard], pipes: [ɵngcc3.TranslatePipe], encapsulation: 2 });
AboutServerSettingsComponent.ctorParameters = () => [
    { type: AppConfigService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AboutServerSettingsComponent, [{
        type: Component,
        args: [{
                selector: 'adf-about-server-settings',
                template: "<div class=\"adf-github-link-container\">\n    <h3 data-automation-id=\"adf-about-setting-title\">{{ 'ABOUT.SERVER_SETTINGS.TITLE' | translate }}</h3>\n    <small>{{ 'ABOUT.SERVER_SETTINGS.DESCRIPTION' | translate }}</small>\n    <mat-card>\n        <p data-automation-id=\"adf-process-service-host\">\n            {{ 'ABOUT.SERVER_SETTINGS.PROCESS_SERVICE_HOST' | translate: {value: bpmHost} }}\n        </p>\n        <p data-automation-id=\"adf-content-service-host\">\n            {{ 'ABOUT.SERVER_SETTINGS.CONTENT_SERVICE_HOST' | translate: {value: ecmHost} }}\n        </p>\n    </mat-card>\n</div>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.AppConfigService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQtc2VydmVyLXNldHRpbmdzLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvYWJvdXQvYWJvdXQtc2VydmVyLXNldHRpbmdzL2Fib3V0LXNlcnZlci1zZXR0aW5ncy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOzs7Ozs7O0FBT3hGLE1BQU0sT0FBTyw0QkFBNEI7QUFBRyxJQUl4QyxZQUFvQixTQUEyQjtBQUFJLFFBQS9CLGNBQVMsR0FBVCxTQUFTLENBQWtCO0FBQUMsUUFIaEQsWUFBTyxHQUFHLEVBQUUsQ0FBQztBQUNqQixRQUFJLFlBQU8sR0FBRyxFQUFFLENBQUM7QUFDakIsSUFDc0QsQ0FBQztBQUN2RCxJQUNJLFFBQVE7QUFDWixRQUFRLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQVMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzNFLFFBQVEsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBUyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDM0UsSUFBSSxDQUFDO0FBQ0w7d0RBZkMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSwyQkFBMkIsa0JBQ3JDOzs7OztpQkFBcUQsa0JBQ3JEO1NBQWEsRUFBRSxpQkFBaUIsQ0FBQztFQUFJLGNBQ3hDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEZBQ0k7QUFBQztBQUFzRCxZQVBuRCxnQkFBZ0I7QUFBRzs7Ozs7Ozs7aUZBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwQ29uZmlnU2VydmljZSwgQXBwQ29uZmlnVmFsdWVzIH0gZnJvbSAnLi4vLi4vYXBwLWNvbmZpZy9hcHAtY29uZmlnLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1hYm91dC1zZXJ2ZXItc2V0dGluZ3MnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9hYm91dC1zZXJ2ZXItc2V0dGluZ3MuY29tcG9uZW50Lmh0bWwnLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgQWJvdXRTZXJ2ZXJTZXR0aW5nc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgZWNtSG9zdCA9ICcnO1xuICAgIGJwbUhvc3QgPSAnJztcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYXBwQ29uZmlnOiBBcHBDb25maWdTZXJ2aWNlKSB7fVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuZWNtSG9zdCA9IHRoaXMuYXBwQ29uZmlnLmdldDxzdHJpbmc+KEFwcENvbmZpZ1ZhbHVlcy5FQ01IT1NUKTtcbiAgICAgICAgdGhpcy5icG1Ib3N0ID0gdGhpcy5hcHBDb25maWcuZ2V0PHN0cmluZz4oQXBwQ29uZmlnVmFsdWVzLkJQTUhPU1QpO1xuICAgIH1cbn1cbiJdfQ==