/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { ObjectDataTableAdapter } from '../../datatable/data/object-datatable-adapter';
import { AuthenticationService } from '../../services/authentication.service';
import { DiscoveryApiService } from '../../services/discovery-api.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/authentication.service';
import * as ɵngcc2 from '../../services/discovery-api.service';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/card';
import * as ɵngcc5 from '../../datatable/components/datatable/datatable.component';
import * as ɵngcc6 from '@ngx-translate/core';

function AboutProductVersionComponent_div_0_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelementStart(1, "h3");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 7);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "p", 8);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 7, "ABOUT.VERSIONS.PROCESS_SERVICE"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(6, 9, "ABOUT.VERSIONS.LABELS.EDITION"), ": ", ctx_r1.bpmVersion.edition, " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate4(" ", ɵngcc0.ɵɵpipeBind1(9, 11, "ABOUT.VERSIONS.LABELS.VERSION"), ": ", ctx_r1.bpmVersion.majorVersion, ".", ctx_r1.bpmVersion.minorVersion, ".", ctx_r1.bpmVersion.revisionVersion, " ");
} }
function AboutProductVersionComponent_div_0_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "h3");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 10);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "p", 11);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 5, "ABOUT.VERSIONS.CONTENT_SERVICE"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(6, 7, "ABOUT.VERSIONS.LABELS.EDITION"), ": ", ctx_r2.ecmVersion.edition, " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(9, 9, "ABOUT.VERSIONS.LABELS.VERSION"), ": ", ctx_r2.ecmVersion.version.display, " ");
} }
function AboutProductVersionComponent_div_0_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "h3", 13);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "adf-datatable", 14);
    ɵngcc0.ɵɵelementStart(5, "h3", 15);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "adf-datatable", 14);
    ɵngcc0.ɵɵelementStart(9, "h3", 16);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(12, "adf-datatable", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 6, "ABOUT.VERSIONS.LABELS.LICENSE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("data", ctx_r3.license);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 8, "ABOUT.VERSIONS.LABELS.STATUS"), "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("data", ctx_r3.status);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 10, "ABOUT.VERSIONS.LABELS.MODULES"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("data", ctx_r3.modules);
} }
function AboutProductVersionComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "h3", 2);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "mat-card");
    ɵngcc0.ɵɵtemplate(5, AboutProductVersionComponent_div_0_div_5_Template, 10, 13, "div", 3);
    ɵngcc0.ɵɵtemplate(6, AboutProductVersionComponent_div_0_div_6_Template, 10, 11, "div", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, AboutProductVersionComponent_div_0_div_7_Template, 13, 12, "div", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "ABOUT.VERSIONS.TITLE"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.bpmVersion);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.ecmVersion);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.ecmVersion);
} }
export class AboutProductVersionComponent {
    constructor(authService, discovery) {
        this.authService = authService;
        this.discovery = discovery;
        this.ecmVersion = null;
        this.bpmVersion = null;
    }
    ngOnInit() {
        if (this.authService.isEcmLoggedIn()) {
            this.setECMInfo();
        }
        if (this.authService.isBpmLoggedIn()) {
            this.setBPMInfo();
        }
    }
    setECMInfo() {
        this.discovery.getEcmProductInfo().subscribe((ecmVers) => {
            this.ecmVersion = ecmVers;
            this.modules = new ObjectDataTableAdapter(this.ecmVersion.modules, [
                { type: 'text', key: 'id', title: 'ABOUT.TABLE_HEADERS.MODULES.ID', sortable: true },
                { type: 'text', key: 'title', title: 'ABOUT.TABLE_HEADERS.MODULES.TITLE', sortable: true },
                { type: 'text', key: 'version', title: 'ABOUT.TABLE_HEADERS.MODULES.DESCRIPTION', sortable: true },
                {
                    type: 'text',
                    key: 'installDate',
                    title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_DATE',
                    sortable: true
                },
                {
                    type: 'text',
                    key: 'installState',
                    title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_STATE',
                    sortable: true
                },
                {
                    type: 'text',
                    key: 'versionMin',
                    title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MIN',
                    sortable: true
                },
                {
                    type: 'text',
                    key: 'versionMax',
                    title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MAX',
                    sortable: true
                }
            ]);
            this.status = new ObjectDataTableAdapter([this.ecmVersion.status], [
                { type: 'text', key: 'isReadOnly', title: 'ABOUT.TABLE_HEADERS.STATUS.READ_ONLY', sortable: true },
                {
                    type: 'text',
                    key: 'isAuditEnabled',
                    title: 'ABOUT.TABLE_HEADERS.STATUS.AUDIT_ENABLED',
                    sortable: true
                },
                {
                    type: 'text',
                    key: 'isQuickShareEnabled',
                    title: 'ABOUT.TABLE_HEADERS.STATUS.QUICK_SHARE_ENABLED',
                    sortable: true
                },
                {
                    type: 'text',
                    key: 'isThumbnailGenerationEnabled',
                    title: 'ABOUT.TABLE_HEADERS.STATUS.THUMBNAIL_ENABLED',
                    sortable: true
                }
            ]);
            this.license = new ObjectDataTableAdapter([this.ecmVersion.license], [
                { type: 'text', key: 'issuedAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.ISSUES_AT', sortable: true },
                { type: 'text', key: 'expiresAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.EXPIRES_AT', sortable: true },
                {
                    type: 'text',
                    key: 'remainingDays',
                    title: 'ABOUT.TABLE_HEADERS.LICENSE.REMAINING_DAYS',
                    sortable: true
                },
                { type: 'text', key: 'holder', title: 'ABOUT.TABLE_HEADERS.LICENSE.HOLDER', sortable: true },
                { type: 'text', key: 'mode', title: 'ABOUT.TABLE_HEADERS.LICENSE.MODE', sortable: true },
                {
                    type: 'text',
                    key: 'isClusterEnabled',
                    title: 'ABOUT.TABLE_HEADERS.LICENSE.CLUSTER_ENABLED',
                    sortable: true
                },
                {
                    type: 'text',
                    key: 'isCryptodocEnabled',
                    title: 'ABOUT.TABLE_HEADERS.LICENSE.CRYPTODOC_ENABLED',
                    sortable: true
                }
            ]);
        });
    }
    setBPMInfo() {
        this.discovery.getBpmProductInfo().subscribe((bpmVersion) => {
            this.bpmVersion = bpmVersion;
        });
    }
}
AboutProductVersionComponent.ɵfac = function AboutProductVersionComponent_Factory(t) { return new (t || AboutProductVersionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AuthenticationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DiscoveryApiService)); };
AboutProductVersionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AboutProductVersionComponent, selectors: [["adf-about-product-version"]], decls: 1, vars: 1, consts: [["class", "adf-about-product-version-container", 4, "ngIf"], [1, "adf-about-product-version-container"], ["data-automation-id", "adf-about-product-version-title"], ["data-automation-id", "adf-about-bpm-service", 4, "ngIf"], ["data-automation-id", "adf-about-ecm-service", 4, "ngIf"], ["data-automation-id", "adf-about-ecm", 4, "ngIf"], ["data-automation-id", "adf-about-bpm-service"], ["data-automation-id", "adf-about-bpm-edition"], ["data-automation-id", "adf-about-bpm-version"], ["data-automation-id", "adf-about-ecm-service"], ["data-automation-id", "adf-about-ecm-edition"], ["data-automation-id", "adf-about-ecm-version"], ["data-automation-id", "adf-about-ecm"], ["data-automation-id", "adf-about-ecm-license-title"], [3, "data"], ["data-automation-id", "adf-about-ecm-status-title"], ["data-automation-id", "adf-about-ecm-modules-title"]], template: function AboutProductVersionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AboutProductVersionComponent_div_0_Template, 8, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.bpmVersion || ctx.ecmVersion);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.MatCard, ɵngcc5.DataTableComponent], pipes: [ɵngcc6.TranslatePipe], encapsulation: 2 });
AboutProductVersionComponent.ctorParameters = () => [
    { type: AuthenticationService },
    { type: DiscoveryApiService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AboutProductVersionComponent, [{
        type: Component,
        args: [{
                selector: 'adf-about-product-version',
                template: "<div class=\"adf-about-product-version-container\" *ngIf=\"bpmVersion || ecmVersion\">\n    <h3 data-automation-id=\"adf-about-product-version-title\">{{ 'ABOUT.VERSIONS.TITLE' | translate }}</h3>\n        <mat-card>\n            <div *ngIf=\"bpmVersion\" data-automation-id=\"adf-about-bpm-service\">\n                <h3>{{ 'ABOUT.VERSIONS.PROCESS_SERVICE' | translate }}</h3>\n                <p data-automation-id=\"adf-about-bpm-edition\">\n                    {{ 'ABOUT.VERSIONS.LABELS.EDITION' | translate }}: {{ bpmVersion.edition }}\n                </p>\n                <p data-automation-id=\"adf-about-bpm-version\">\n                    {{ 'ABOUT.VERSIONS.LABELS.VERSION' | translate }}: {{ bpmVersion.majorVersion }}.{{\n                    bpmVersion.minorVersion }}.{{ bpmVersion.revisionVersion }}\n                </p>\n            </div>\n            <div *ngIf=\"ecmVersion\" data-automation-id=\"adf-about-ecm-service\">\n                <h3>{{ 'ABOUT.VERSIONS.CONTENT_SERVICE' | translate }}</h3>\n                <p data-automation-id=\"adf-about-ecm-edition\">\n                    {{ 'ABOUT.VERSIONS.LABELS.EDITION' | translate }}: {{ ecmVersion.edition }}\n                </p>\n                <p data-automation-id=\"adf-about-ecm-version\">\n                    {{ 'ABOUT.VERSIONS.LABELS.VERSION' | translate }}: {{ ecmVersion.version.display }}\n                </p>\n            </div>\n        </mat-card>\n    <div *ngIf=\"ecmVersion\" data-automation-id=\"adf-about-ecm\">\n        <h3 data-automation-id=\"adf-about-ecm-license-title\">{{ 'ABOUT.VERSIONS.LABELS.LICENSE' | translate }}</h3>\n        <adf-datatable [data]=\"license\"></adf-datatable>\n        <h3 data-automation-id=\"adf-about-ecm-status-title\"> {{ 'ABOUT.VERSIONS.LABELS.STATUS' | translate }}</h3>\n        <adf-datatable [data]=\"status\"></adf-datatable>\n        <h3 data-automation-id=\"adf-about-ecm-modules-title\">{{ 'ABOUT.VERSIONS.LABELS.MODULES' | translate }}</h3>\n        <adf-datatable [data]=\"modules\"></adf-datatable>\n    </div>\n</div>\n\n\n\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.AuthenticationService }, { type: ɵngcc2.DiscoveryApiService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,