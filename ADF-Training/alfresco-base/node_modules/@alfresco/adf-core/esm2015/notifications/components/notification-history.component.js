/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewChild, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';
import { NotificationService } from '../services/notification.service';
import { NOTIFICATION_TYPE } from '../models/notification.model';
import { MatMenuTrigger } from '@angular/material/menu';
import { takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { StorageService } from '../../services/storage.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../services/notification.service';
import * as ɵngcc2 from '../../services/storage.service';
import * as ɵngcc3 from '@angular/material/button';
import * as ɵngcc4 from '@angular/material/menu';
import * as ɵngcc5 from '@angular/material/icon';
import * as ɵngcc6 from '@angular/material/badge';
import * as ɵngcc7 from '@angular/material/list';
import * as ɵngcc8 from '@angular/common';
import * as ɵngcc9 from '@angular/material/divider';
import * as ɵngcc10 from '@angular/material/core';
import * as ɵngcc11 from '@angular/material/tooltip';
import * as ɵngcc12 from '@ngx-translate/core';
import * as ɵngcc13 from '../../pipes/time-ago.pipe';
import * as ɵngcc14 from '../../pipes/user-initial.pipe';
import * as ɵngcc15 from '../pipes/notification-icon.pipe';

function NotificationHistoryComponent_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function NotificationHistoryComponent_button_11_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.markAsRead(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "NOTIFICATIONS.MARK_AS_READ"), " ");
} }
function NotificationHistoryComponent_ng_container_14_mat_list_item_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 18);
    ɵngcc0.ɵɵpipe(1, "usernameInitials");
} if (rf & 2) {
    const notification_r9 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("outerHTML", ɵngcc0.ɵɵpipeBind2(1, 1, notification_r9.initiator, "adf-notification-initiator-pic"), ɵngcc0.ɵɵsanitizeHtml);
} }
function NotificationHistoryComponent_ng_container_14_mat_list_item_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "notificationIcon");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const notification_r9 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, notification_r9));
} }
function NotificationHistoryComponent_ng_container_14_mat_list_item_1_p_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const message_r16 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("matTooltip", message_r16);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(message_r16);
} }
function NotificationHistoryComponent_ng_container_14_mat_list_item_1_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 13);
    ɵngcc0.ɵɵlistener("click", function NotificationHistoryComponent_ng_container_14_mat_list_item_1_Template_mat_list_item_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const notification_r9 = ctx.$implicit; const ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.onNotificationClick(notification_r9); });
    ɵngcc0.ɵɵtemplate(1, NotificationHistoryComponent_ng_container_14_mat_list_item_1_div_1_Template, 2, 4, "div", 14);
    ɵngcc0.ɵɵtemplate(2, NotificationHistoryComponent_ng_container_14_mat_list_item_1_ng_template_2_Template, 3, 3, "ng-template", null, 15, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, NotificationHistoryComponent_ng_container_14_mat_list_item_1_p_4_Template, 2, 2, "p", 16);
    ɵngcc0.ɵɵelementStart(5, "p", 17);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "adfTimeAgo");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const notification_r9 = ctx.$implicit;
    const _r11 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", notification_r9.initiator)("ngIfElse", _r11);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", notification_r9.messages);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 4, notification_r9.datetime), " ");
} }
function NotificationHistoryComponent_ng_container_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, NotificationHistoryComponent_ng_container_14_mat_list_item_1_Template, 8, 6, "mat-list-item", 12);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.paginatedNotifications);
} }
function NotificationHistoryComponent_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 21);
    ɵngcc0.ɵɵelementStart(1, "h4", 22);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "NOTIFICATIONS.NO_MESSAGE"));
} }
function NotificationHistoryComponent_div_18_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵelementStart(1, "button", 24);
    ɵngcc0.ɵɵlistener("click", function NotificationHistoryComponent_div_18_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.loadMore(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "NOTIFICATIONS.LOAD_MORE"), " ");
} }
export class NotificationHistoryComponent {
    constructor(notificationService, storageService, cd) {
        this.notificationService = notificationService;
        this.storageService = storageService;
        this.cd = cd;
        this.menuPositionX = 'after';
        this.menuPositionY = 'below';
        this.maxNotifications = 5;
        this.onDestroy$ = new Subject();
        this.notifications = [];
        this.paginatedNotifications = [];
    }
    ngOnInit() {
        this.notifications = JSON.parse(this.storageService.getItem(NotificationHistoryComponent.NOTIFICATION_STORAGE)) || [];
    }
    ngAfterViewInit() {
        this.notificationService.notifications$
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((notification) => {
            this.addNewNotification(notification);
            this.cd.detectChanges();
        });
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    addNewNotification(notification) {
        this.notifications.unshift(notification);
        if (this.notifications.length > NotificationHistoryComponent.MAX_NOTIFICATION_STACK_LENGTH) {
            this.notifications.shift();
        }
        this.saveNotifications();
        this.createPagination();
    }
    saveNotifications() {
        this.storageService.setItem(NotificationHistoryComponent.NOTIFICATION_STORAGE, JSON.stringify(this.notifications.filter((notification) => notification.type !== NOTIFICATION_TYPE.RECURSIVE)));
    }
    onMenuOpened() {
        this.createPagination();
    }
    onKeyPress(event) {
        this.closeUserModal(event);
    }
    closeUserModal($event) {
        if ($event.keyCode === 27) {
            this.trigger.closeMenu();
        }
    }
    markAsRead() {
        this.notifications = [];
        this.paginatedNotifications = [];
        this.storageService.removeItem(NotificationHistoryComponent.NOTIFICATION_STORAGE);
        this.createPagination();
        this.trigger.closeMenu();
    }
    createPagination() {
        this.pagination = {
            skipCount: this.maxNotifications,
            maxItems: this.maxNotifications,
            totalItems: this.notifications.length,
            hasMoreItems: this.notifications.length > this.maxNotifications
        };
        this.paginatedNotifications = this.notifications.slice(0, this.pagination.skipCount);
    }
    loadMore() {
        this.pagination.skipCount = this.pagination.maxItems + this.pagination.skipCount;
        this.pagination.hasMoreItems = this.notifications.length > this.pagination.skipCount;
        this.paginatedNotifications = this.notifications.slice(0, this.pagination.skipCount);
    }
    hasMoreNotifications() {
        var _a;
        return (_a = this.pagination) === null || _a === void 0 ? void 0 : _a.hasMoreItems;
    }
    onNotificationClick(notification) {
        if (notification.clickCallBack) {
            notification.clickCallBack(notification.args);
            this.trigger.closeMenu();
        }
    }
}
NotificationHistoryComponent.ɵfac = function NotificationHistoryComponent_Factory(t) { return new (t || NotificationHistoryComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NotificationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.StorageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
NotificationHistoryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NotificationHistoryComponent, selectors: [["adf-notification-history"]], viewQuery: function NotificationHistoryComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(MatMenuTrigger, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);
    } }, inputs: { menuPositionX: "menuPositionX", menuPositionY: "menuPositionY", maxNotifications: "maxNotifications" }, decls: 19, vars: 11, consts: [[3, "keyup"], ["mat-button", "", "id", "adf-notification-history-open-button", 1, "adf-notification-history-menu_button", 3, "matMenuTriggerFor", "menuOpened"], ["matBadge", "\u2060", "matBadgeColor", "accent", "matBadgeSize", "small", 3, "matBadgeHidden"], ["id", "adf-notification-history-menu", 1, "adf-notification-history-menu", 3, "xPosition", "yPosition"], ["menu", "matMenu"], [1, "adf-notification-history-list", 3, "click"], ["mat-subheader", ""], ["id", "adf-notification-history-mark-as-read", "mat-button", "", "color", "accent", 3, "click", 4, "ngIf"], [4, "ngIf", "ngIfElse"], ["empty_list_template", ""], ["class", "adf-notification-history-load-more", 4, "ngIf"], ["id", "adf-notification-history-mark-as-read", "mat-button", "", "color", "accent", 3, "click"], ["class", "adf-notification-history-menu-item", 3, "click", 4, "ngFor", "ngForOf"], [1, "adf-notification-history-menu-item", 3, "click"], ["matListAvatar", "", 3, "outerHTML", 4, "ngIf", "ngIfElse"], ["no_avatar", ""], ["class", "adf-notification-history-menu-message", "mat-line", "", "matTooltipShowDelay", "1000", 3, "matTooltip", 4, "ngFor", "ngForOf"], ["mat-line", "", 1, "adf-notification-history-menu-date"], ["matListAvatar", "", 3, "outerHTML"], ["mat-list-icon", "", 1, "adf-notification-history-menu-initiator"], ["mat-line", "", "matTooltipShowDelay", "1000", 1, "adf-notification-history-menu-message", 3, "matTooltip"], ["id", "adf-notification-history-component-no-message", 1, "adf-notification-history-menu-no-message"], ["mat-line", ""], [1, "adf-notification-history-load-more"], ["mat-button", "", 3, "click"]], template: function NotificationHistoryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("keyup", function NotificationHistoryComponent_Template_div_keyup_0_listener($event) { return ctx.onKeyPress($event); });
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("menuOpened", function NotificationHistoryComponent_Template_button_menuOpened_1_listener() { return ctx.onMenuOpened(); });
        ɵngcc0.ɵɵelementStart(2, "mat-icon", 2);
        ɵngcc0.ɵɵtext(3, "notifications");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "mat-menu", 3, 4);
        ɵngcc0.ɵɵelementStart(6, "div", 5);
        ɵngcc0.ɵɵlistener("click", function NotificationHistoryComponent_Template_div_click_6_listener($event) { return $event.stopPropagation(); });
        ɵngcc0.ɵɵelementStart(7, "div", 6);
        ɵngcc0.ɵɵelementStart(8, "span");
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, NotificationHistoryComponent_button_11_Template, 3, 3, "button", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(12, "mat-divider");
        ɵngcc0.ɵɵelementStart(13, "mat-list");
        ɵngcc0.ɵɵtemplate(14, NotificationHistoryComponent_ng_container_14_Template, 2, 1, "ng-container", 8);
        ɵngcc0.ɵɵtemplate(15, NotificationHistoryComponent_ng_template_15_Template, 4, 3, "ng-template", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(17, "mat-divider");
        ɵngcc0.ɵɵtemplate(18, NotificationHistoryComponent_div_18_Template, 4, 3, "div", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(5);
        const _r3 = ɵngcc0.ɵɵreference(16);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("matBadgeHidden", !ctx.notifications.length);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("xPosition", ctx.menuPositionX)("yPosition", ctx.menuPositionY);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 9, "NOTIFICATIONS.TITLE"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.notifications.length);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.notifications.length)("ngIfElse", _r3);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMoreNotifications());
    } }, directives: [ɵngcc3.MatButton, ɵngcc4.MatMenuTrigger, ɵngcc5.MatIcon, ɵngcc6.MatBadge, ɵngcc4._MatMenu, ɵngcc7.MatListSubheaderCssMatStyler, ɵngcc8.NgIf, ɵngcc9.MatDivider, ɵngcc7.MatList, ɵngcc8.NgForOf, ɵngcc7.MatListItem, ɵngcc10.MatLine, ɵngcc7.MatListAvatarCssMatStyler, ɵngcc7.MatListIconCssMatStyler, ɵngcc11.MatTooltip], pipes: [ɵngcc12.TranslatePipe, ɵngcc13.TimeAgoPipe, ɵngcc14.InitialUsernamePipe, ɵngcc15.NotificationIconPipe], styles: [".adf-notification-history-menu_button.mat-button{border-radius:90%;height:40px;margin-right:0;min-width:40px;padding:0}.adf-notification-history-list .mat-subheader{justify-content:space-between}.adf-notification-history-menu-item{cursor:pointer}.adf-notification-history-menu-item:focus{background:var(--theme-bg-hover-color);outline:none}.adf-notification-history-menu-item:hover{background-color:var(--theme-bg-hover-color)}.adf-notification-history-menu-message,.adf-notification-history-menu-no-message{font-size:13px!important}.adf-notification-history-menu-date{font-size:12px!important}.adf-notification-history-menu-initiator{margin:4px}.adf-notification-initiator-pic{background:var(--theme-accent-color);border-radius:100px;color:var(--theme-colors-mat-grey);display:inline-block;font-size:18px;font-weight:bolder;height:40px;line-height:40px;min-width:40px;text-align:center;text-transform:uppercase;vertical-align:middle}.adf-notification-history-load-more{display:flex;justify-content:center;padding:10px}.mat-menu-panel.adf-notification-history-menu{max-height:500px;min-width:320px}.mat-menu-panel.adf-notification-history-menu .mat-menu-content{padding:0}"], encapsulation: 2 });
NotificationHistoryComponent.MAX_NOTIFICATION_STACK_LENGTH = 100;
NotificationHistoryComponent.NOTIFICATION_STORAGE = 'notification-history';
NotificationHistoryComponent.ctorParameters = () => [
    { type: NotificationService },
    { type: StorageService },
    { type: ChangeDetectorRef }
];
NotificationHistoryComponent.propDecorators = {
    trigger: [{ type: ViewChild, args: [MatMenuTrigger, { static: true },] }],
    menuPositionX: [{ type: Input }],
    menuPositionY: [{ type: Input }],
    maxNotifications: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NotificationHistoryComponent, [{
        type: Component,
        args: [{
                selector: 'adf-notification-history',
                template: "<div (keyup)=\"onKeyPress($event)\">\n    <button mat-button\n            [matMenuTriggerFor]=\"menu\"\n            class=\"adf-notification-history-menu_button\"\n            id=\"adf-notification-history-open-button\"\n            (menuOpened)=\"onMenuOpened()\">\n        <mat-icon matBadge=\"&#8288;\"\n                  [matBadgeHidden]=\"!notifications.length\"\n                  matBadgeColor=\"accent\"\n                  matBadgeSize=\"small\">notifications</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\"\n              [xPosition]=\"menuPositionX\"\n              [yPosition]=\"menuPositionY\"\n              id=\"adf-notification-history-menu\"\n              class=\"adf-notification-history-menu\">\n\n        <div class=\"adf-notification-history-list\"\n             (click)=\"$event.stopPropagation()\">\n            <div mat-subheader>\n                <span>{{ 'NOTIFICATIONS.TITLE' | translate }}</span>\n                <button (click)=\"markAsRead()\"\n                        id=\"adf-notification-history-mark-as-read\"\n                        mat-button\n                        color=\"accent\"\n                        *ngIf=\"notifications.length\">\n                    {{ 'NOTIFICATIONS.MARK_AS_READ' | translate }}\n                </button>\n            </div>\n\n            <mat-divider></mat-divider>\n\n            <mat-list>\n                <ng-container *ngIf=\"notifications.length; else empty_list_template\">\n                    <mat-list-item *ngFor=\"let notification of paginatedNotifications\"\n                                   class=\"adf-notification-history-menu-item\"\n                                   (click)=\"onNotificationClick(notification)\">\n                        <div *ngIf=\"notification.initiator; else no_avatar\"\n                             matListAvatar\n                             [outerHTML]=\"notification.initiator | usernameInitials:'adf-notification-initiator-pic'\">\n                        </div>\n                        <ng-template #no_avatar>\n                            <mat-icon mat-list-icon\n                                      class=\"adf-notification-history-menu-initiator\">{{ notification | notificationIcon\n                                }}</mat-icon>\n                        </ng-template>\n                        <p class=\"adf-notification-history-menu-message\"\n                           *ngFor=\"let message of notification.messages\"\n                           mat-line [matTooltip]=\"message\" matTooltipShowDelay=\"1000\">{{ message }}</p>\n                        <p class=\"adf-notification-history-menu-date\"\n                           mat-line> {{notification.datetime | adfTimeAgo}} </p>\n                    </mat-list-item>\n                </ng-container>\n                <ng-template #empty_list_template>\n                    <mat-list-item id=\"adf-notification-history-component-no-message\"\n                                   class=\"adf-notification-history-menu-no-message\">\n                        <h4 mat-line>{{ 'NOTIFICATIONS.NO_MESSAGE' | translate }}</h4>\n                    </mat-list-item>\n                </ng-template>\n            </mat-list>\n\n            <mat-divider></mat-divider>\n\n            <div class=\"adf-notification-history-load-more\"\n                 *ngIf=\"hasMoreNotifications()\">\n                <button mat-button\n                        (click)=\"loadMore()\">\n                    {{ 'NOTIFICATIONS.LOAD_MORE' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-menu>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-notification-history-menu_button.mat-button{border-radius:90%;height:40px;margin-right:0;min-width:40px;padding:0}.adf-notification-history-list .mat-subheader{justify-content:space-between}.adf-notification-history-menu-item{cursor:pointer}.adf-notification-history-menu-item:focus{background:var(--theme-bg-hover-color);outline:none}.adf-notification-history-menu-item:hover{background-color:var(--theme-bg-hover-color)}.adf-notification-history-menu-message,.adf-notification-history-menu-no-message{font-size:13px!important}.adf-notification-history-menu-date{font-size:12px!important}.adf-notification-history-menu-initiator{margin:4px}.adf-notification-initiator-pic{background:var(--theme-accent-color);border-radius:100px;color:var(--theme-colors-mat-grey);display:inline-block;font-size:18px;font-weight:bolder;height:40px;line-height:40px;min-width:40px;text-align:center;text-transform:uppercase;vertical-align:middle}.adf-notification-history-load-more{display:flex;justify-content:center;padding:10px}.mat-menu-panel.adf-notification-history-menu{max-height:500px;min-width:320px}.mat-menu-panel.adf-notification-history-menu .mat-menu-content{padding:0}"]
            }]
    }], function () { return [{ type: ɵngcc1.NotificationService }, { type: ɵngcc2.StorageService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { menuPositionX: [{
            type: Input
        }], menuPositionY: [{
            type: Input
        }], maxNotifications: [{
            type: Input
        }], trigger: [{
            type: ViewChild,
            args: [MatMenuTrigger, { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,