/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import { LoginDialogPanelComponent } from './login-dialog-panel.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/dialog';
import * as ɵngcc2 from './login-dialog-panel.component';
import * as ɵngcc3 from '@angular/material/button';
import * as ɵngcc4 from '@ngx-translate/core';

const _c0 = ["adfLoginPanel"];
export class LoginDialogComponent {
    constructor(data) {
        this.data = data;
        this.buttonActionName = '';
        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';
    }
    close() {
        this.data.logged.complete();
    }
    submitForm() {
        this.loginPanel.submitForm();
    }
    onLoginSuccess(event) {
        this.data.logged.next(event);
        this.close();
    }
    isFormValid() {
        return this.loginPanel ? this.loginPanel.isValid() : false;
    }
}
LoginDialogComponent.ɵfac = function LoginDialogComponent_Factory(t) { return new (t || LoginDialogComponent)(ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };
LoginDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LoginDialogComponent, selectors: [["adf-login-dialog"]], viewQuery: function LoginDialogComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loginPanel = _t.first);
    } }, decls: 12, vars: 8, consts: [["mat-dialog-title", "", "data-automation-id", "login-dialog-title"], [1, "adf-login-dialog-content"], [3, "success"], ["adfLoginPanel", ""], ["align", "end"], ["mat-button", "", "data-automation-id", "login-dialog-actions-cancel", 3, "click"], ["mat-button", "", "data-automation-id", "login-dialog-actions-perform", 1, "choose-action", 3, "disabled", "click"]], template: function LoginDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "header", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "mat-dialog-content", 1);
        ɵngcc0.ɵɵelementStart(3, "adf-login-dialog-panel", 2, 3);
        ɵngcc0.ɵɵlistener("success", function LoginDialogComponent_Template_adf_login_dialog_panel_success_3_listener($event) { return ctx.onLoginSuccess($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "mat-dialog-actions", 4);
        ɵngcc0.ɵɵelementStart(6, "button", 5);
        ɵngcc0.ɵɵlistener("click", function LoginDialogComponent_Template_button_click_6_listener() { return ctx.close(); });
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "button", 6);
        ɵngcc0.ɵɵlistener("click", function LoginDialogComponent_Template_button_click_9_listener() { return ctx.submitForm(); });
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("", ctx.data == null ? null : ctx.data.title, "\n");
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(8, 4, "LOGIN.DIALOG.CANCEL"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", !ctx.isFormValid());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(11, 6, ctx.buttonActionName), " ");
    } }, directives: [ɵngcc1.MatDialogTitle, ɵngcc1.MatDialogContent, ɵngcc2.LoginDialogPanelComponent, ɵngcc1.MatDialogActions, ɵngcc3.MatButton], pipes: [ɵngcc4.TranslatePipe], styles: [".adf-login-dialog-content adf-login .adf-login-content .adf-login-card-wide{box-shadow:none;padding:0}"], encapsulation: 2 });
LoginDialogComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
LoginDialogComponent.propDecorators = {
    loginPanel: [{ type: ViewChild, args: ['adfLoginPanel', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoginDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-login-dialog',
                template: "<header\n    mat-dialog-title\n    data-automation-id=\"login-dialog-title\">{{data?.title}}\n</header>\n\n<mat-dialog-content class=\"adf-login-dialog-content\">\n    <adf-login-dialog-panel #adfLoginPanel\n                            (success)=\"onLoginSuccess($event)\">\n    </adf-login-dialog-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"login-dialog-actions-cancel\">{{ 'LOGIN.DIALOG.CANCEL' | translate }}\n    </button>\n\n    <button mat-button\n        class=\"choose-action\"\n        data-automation-id=\"login-dialog-actions-perform\"\n        [disabled]=\"!isFormValid()\"\n        (click)=\"submitForm()\">{{ buttonActionName | translate}}\n    </button>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-login-dialog-content adf-login .adf-login-content .adf-login-card-wide{box-shadow:none;padding:0}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, { loginPanel: [{
            type: ViewChild,
            args: ['adfLoginPanel', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvbG9naW4vY29tcG9uZW50cy9sb2dpbi1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTNELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7Ozs7OztBQU8zRSxNQUFNLE9BQU8sb0JBQW9CO0FBQ2pDLElBTUksWUFBNEMsSUFBOEI7QUFDOUUsUUFEZ0QsU0FBSSxHQUFKLElBQUksQ0FBMEI7QUFBQyxRQUYzRSxxQkFBZ0IsR0FBRyxFQUFFLENBQUM7QUFDMUIsUUFFUSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMscUJBQXFCLENBQUM7QUFDMUgsSUFBSSxDQUFDO0FBQ0wsSUFDSSxLQUFLO0FBQ1QsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUNwQyxJQUFJLENBQUM7QUFDTCxJQUNJLFVBQVU7QUFBSyxRQUNYLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7QUFDckMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxjQUFjLENBQUMsS0FBVTtBQUM3QixRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyQyxRQUFRLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNyQixJQUFJLENBQUM7QUFDTCxJQUNJLFdBQVc7QUFDZixRQUFRLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ25FLElBQUksQ0FBQztBQUNMO2dEQWpDQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGtCQUFrQixrQkFDNUI7Ozs7OztrYkFBNEMsa0JBRTVDLGFBQWEsRUFBRTtRQUFpQixDQUFDLElBQUk7Ozt1REFDeEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJUQUNJO0FBQUM7QUFFUyw0Q0FLRSxNQUFNLFNBQUMsZUFBZTtBQUFRO0FBQUc7QUFDMUMseUJBTkgsU0FBUyxTQUFDLGVBQWUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFDNUM7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIFZpZXdFbmNhcHN1bGF0aW9uLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1BVF9ESUFMT0dfREFUQSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBMb2dpbkRpYWxvZ0NvbXBvbmVudERhdGEgfSBmcm9tICcuL2xvZ2luLWRpYWxvZy1jb21wb25lbnQtZGF0YS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTG9naW5EaWFsb2dQYW5lbENvbXBvbmVudCB9IGZyb20gJy4vbG9naW4tZGlhbG9nLXBhbmVsLmNvbXBvbmVudCc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1sb2dpbi1kaWFsb2cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sb2dpbi1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xvZ2luLWRpYWxvZy5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgTG9naW5EaWFsb2dDb21wb25lbnQge1xuXG4gICAgQFZpZXdDaGlsZCgnYWRmTG9naW5QYW5lbCcsIHsgc3RhdGljOiB0cnVlIH0pXG4gICAgbG9naW5QYW5lbDogTG9naW5EaWFsb2dQYW5lbENvbXBvbmVudDtcblxuICAgIGJ1dHRvbkFjdGlvbk5hbWUgPSAnJztcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogTG9naW5EaWFsb2dDb21wb25lbnREYXRhKSB7XG4gICAgICAgIHRoaXMuYnV0dG9uQWN0aW9uTmFtZSA9IGRhdGEuYWN0aW9uTmFtZSA/IGBMT0dJTi5ESUFMT0cuJHtkYXRhLmFjdGlvbk5hbWUudG9VcHBlckNhc2UoKX1gIDogJ0xPR0lOLkRJQUxPRy5DSE9PU0UnO1xuICAgIH1cblxuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLmRhdGEubG9nZ2VkLmNvbXBsZXRlKCk7XG4gICAgfVxuXG4gICAgc3VibWl0Rm9ybSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5sb2dpblBhbmVsLnN1Ym1pdEZvcm0oKTtcbiAgICB9XG5cbiAgICBvbkxvZ2luU3VjY2VzcyhldmVudDogYW55KSB7XG4gICAgICAgIHRoaXMuZGF0YS5sb2dnZWQubmV4dChldmVudCk7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG5cbiAgICBpc0Zvcm1WYWxpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9naW5QYW5lbCA/IHRoaXMubG9naW5QYW5lbC5pc1ZhbGlkKCkgOiBmYWxzZTtcbiAgICB9XG59XG4iXX0=