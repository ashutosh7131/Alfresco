/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import { LoginDialogPanelComponent } from './login-dialog-panel.component';
export class LoginDialogComponent {
    constructor(data) {
        this.data = data;
        this.buttonActionName = '';
        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';
    }
    close() {
        this.data.logged.complete();
    }
    submitForm() {
        this.loginPanel.submitForm();
    }
    onLoginSuccess(event) {
        this.data.logged.next(event);
        this.close();
    }
    isFormValid() {
        return this.loginPanel ? this.loginPanel.isValid() : false;
    }
}
LoginDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-login-dialog',
                template: "<header\n    mat-dialog-title\n    data-automation-id=\"login-dialog-title\">{{data?.title}}\n</header>\n\n<mat-dialog-content class=\"adf-login-dialog-content\">\n    <adf-login-dialog-panel #adfLoginPanel\n                            (success)=\"onLoginSuccess($event)\">\n    </adf-login-dialog-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"login-dialog-actions-cancel\">{{ 'LOGIN.DIALOG.CANCEL' | translate }}\n    </button>\n\n    <button mat-button\n        class=\"choose-action\"\n        data-automation-id=\"login-dialog-actions-perform\"\n        [disabled]=\"!isFormValid()\"\n        (click)=\"submitForm()\">{{ buttonActionName | translate}}\n    </button>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-login-dialog-content adf-login .adf-login-content .adf-login-card-wide{box-shadow:none;padding:0}"]
            },] }
];
LoginDialogComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
LoginDialogComponent.propDecorators = {
    loginPanel: [{ type: ViewChild, args: ['adfLoginPanel', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvIiwic291cmNlcyI6WyJsb2dpbi9jb21wb25lbnRzL2xvZ2luLWRpYWxvZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUUzRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQU8zRSxNQUFNLE9BQU8sb0JBQW9CO0lBTzdCLFlBQTRDLElBQThCO1FBQTlCLFNBQUksR0FBSixJQUFJLENBQTBCO1FBRjFFLHFCQUFnQixHQUFHLEVBQUUsQ0FBQztRQUdsQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMscUJBQXFCLENBQUM7SUFDdEgsQ0FBQztJQUVELEtBQUs7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsVUFBVTtRQUNOLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELGNBQWMsQ0FBQyxLQUFVO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVELFdBQVc7UUFDUCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUMvRCxDQUFDOzs7WUFoQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLHF6QkFBNEM7Z0JBRTVDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOzthQUN4Qzs7OzRDQVFnQixNQUFNLFNBQUMsZUFBZTs7O3lCQUxsQyxTQUFTLFNBQUMsZUFBZSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBWaWV3RW5jYXBzdWxhdGlvbiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgTG9naW5EaWFsb2dDb21wb25lbnREYXRhIH0gZnJvbSAnLi9sb2dpbi1kaWFsb2ctY29tcG9uZW50LWRhdGEuaW50ZXJmYWNlJztcbmltcG9ydCB7IExvZ2luRGlhbG9nUGFuZWxDb21wb25lbnQgfSBmcm9tICcuL2xvZ2luLWRpYWxvZy1wYW5lbC5jb21wb25lbnQnO1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtbG9naW4tZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbG9naW4tZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9sb2dpbi1kaWFsb2cuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIExvZ2luRGlhbG9nQ29tcG9uZW50IHtcblxuICAgIEBWaWV3Q2hpbGQoJ2FkZkxvZ2luUGFuZWwnLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICAgIGxvZ2luUGFuZWw6IExvZ2luRGlhbG9nUGFuZWxDb21wb25lbnQ7XG5cbiAgICBidXR0b25BY3Rpb25OYW1lID0gJyc7XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IExvZ2luRGlhbG9nQ29tcG9uZW50RGF0YSkge1xuICAgICAgICB0aGlzLmJ1dHRvbkFjdGlvbk5hbWUgPSBkYXRhLmFjdGlvbk5hbWUgPyBgTE9HSU4uRElBTE9HLiR7ZGF0YS5hY3Rpb25OYW1lLnRvVXBwZXJDYXNlKCl9YCA6ICdMT0dJTi5ESUFMT0cuQ0hPT1NFJztcbiAgICB9XG5cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5kYXRhLmxvZ2dlZC5jb21wbGV0ZSgpO1xuICAgIH1cblxuICAgIHN1Ym1pdEZvcm0oKTogdm9pZCB7XG4gICAgICAgIHRoaXMubG9naW5QYW5lbC5zdWJtaXRGb3JtKCk7XG4gICAgfVxuXG4gICAgb25Mb2dpblN1Y2Nlc3MoZXZlbnQ6IGFueSkge1xuICAgICAgICB0aGlzLmRhdGEubG9nZ2VkLm5leHQoZXZlbnQpO1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuXG4gICAgaXNGb3JtVmFsaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvZ2luUGFuZWwgPyB0aGlzLmxvZ2luUGFuZWwuaXNWYWxpZCgpIDogZmFsc2U7XG4gICAgfVxufVxuIl19