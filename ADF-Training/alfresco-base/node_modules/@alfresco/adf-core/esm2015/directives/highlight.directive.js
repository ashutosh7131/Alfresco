/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { HighlightTransformService } from '../services/highlight-transform.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../services/highlight-transform.service';
export class HighlightDirective {
    constructor(el, renderer, highlightTransformService) {
        this.el = el;
        this.renderer = renderer;
        this.highlightTransformService = highlightTransformService;
        this.selector = '';
        this.search = '';
        this.classToApply = 'adf-highlight';
    }
    ngAfterViewChecked() {
        this.highlight();
    }
    highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {
        if (search && selector) {
            const elements = this.el.nativeElement.querySelectorAll(selector);
            elements.forEach((element) => {
                const highlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);
                if (highlightTransformResult.changed) {
                    this.renderer.setProperty(element, 'innerHTML', highlightTransformResult.text);
                }
            });
        }
    }
}
HighlightDirective.ɵfac = function HighlightDirective_Factory(t) { return new (t || HighlightDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HighlightTransformService)); };
HighlightDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HighlightDirective, selectors: [["", "adf-highlight", ""]], inputs: { selector: ["adf-highlight-selector", "selector"], search: ["adf-highlight", "search"], classToApply: ["adf-highlight-class", "classToApply"] } });
HighlightDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: HighlightTransformService }
];
HighlightDirective.propDecorators = {
    selector: [{ type: Input, args: ['adf-highlight-selector',] }],
    search: [{ type: Input, args: ['adf-highlight',] }],
    classToApply: [{ type: Input, args: ['adf-highlight-class',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighlightDirective, [{
        type: Directive,
        args: [{
                selector: '[adf-highlight]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.HighlightTransformService }]; }, { selector: [{
            type: Input,
            args: ['adf-highlight-selector']
        }], search: [{
            type: Input,
            args: ['adf-highlight']
        }], classToApply: [{
            type: Input,
            args: ['adf-highlight-class']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGxpZ2h0LmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvZGlyZWN0aXZlcy9oaWdobGlnaHQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFJSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUseUJBQXlCLEVBQTRCLE1BQU0seUNBQXlDLENBQUM7OztBQUs5RyxNQUFNLE9BQU8sa0JBQWtCO0FBQUcsSUFjOUIsWUFDWSxFQUFjLEVBQ2QsUUFBbUIsRUFDbkIseUJBQW9EO0FBQ3BFLFFBSGdCLE9BQUUsR0FBRixFQUFFLENBQVk7QUFBQyxRQUNmLGFBQVEsR0FBUixRQUFRLENBQVc7QUFBQyxRQUNwQiw4QkFBeUIsR0FBekIseUJBQXlCLENBQTJCO0FBQUMsUUFiakUsYUFBUSxHQUFXLEVBQUUsQ0FBQztBQUMxQixRQUdJLFdBQU0sR0FBVyxFQUFFLENBQUM7QUFDeEIsUUFHSSxpQkFBWSxHQUFXLGVBQWUsQ0FBQztBQUMzQyxJQUtJLENBQUM7QUFDTCxJQUNJLGtCQUFrQjtBQUN0QixRQUFRLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztBQUN6QixJQUFJLENBQUM7QUFDTCxJQUNXLFNBQVMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVk7QUFDckcsUUFBUSxJQUFJLE1BQU0sSUFBSSxRQUFRLEVBQUU7QUFDaEMsWUFBWSxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM5RSxZQUNZLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtBQUN6QyxnQkFBZ0IsTUFBTSx3QkFBd0IsR0FBNkIsSUFBSSxDQUFDLHlCQUF5QixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztBQUM3SixnQkFBZ0IsSUFBSSx3QkFBd0IsQ0FBQyxPQUFPLEVBQUU7QUFDdEQsb0JBQW9CLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsd0JBQXdCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbkcsaUJBQWlCO0FBQ2pCLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDZixTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0w7OENBdkNDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsaUJBQWlCLGNBQzlCO21SQUNJO0FBQUM7QUFBNEMsWUFOOUIsVUFBVTtBQUFJLFlBQUssU0FBUztBQUFJLFlBQzNDLHlCQUF5QjtBQUFHO0FBQUc7QUFBc0MsdUJBUXpFLEtBQUssU0FBQyx3QkFBd0I7QUFDOUIscUJBR0EsS0FBSyxTQUFDLGVBQWU7QUFDckIsMkJBR0EsS0FBSyxTQUFDLHFCQUFxQjtBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTpuby1pbnB1dC1yZW5hbWUgICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQsIFJlbmRlcmVyMiwgQWZ0ZXJWaWV3Q2hlY2tlZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGlnaGxpZ2h0VHJhbnNmb3JtU2VydmljZSwgSGlnaGxpZ2h0VHJhbnNmb3JtUmVzdWx0IH0gZnJvbSAnLi4vc2VydmljZXMvaGlnaGxpZ2h0LXRyYW5zZm9ybS5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbYWRmLWhpZ2hsaWdodF0nXG59KVxuZXhwb3J0IGNsYXNzIEhpZ2hsaWdodERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0NoZWNrZWQge1xuXG4gICAgLyoqIENsYXNzIHNlbGVjdG9yIGZvciBoaWdobGlnaHRhYmxlIGVsZW1lbnRzLiAqL1xuICAgIEBJbnB1dCgnYWRmLWhpZ2hsaWdodC1zZWxlY3RvcicpXG4gICAgc2VsZWN0b3I6IHN0cmluZyA9ICcnO1xuXG4gICAgLyoqIFRleHQgdG8gaGlnaGxpZ2h0LiAqL1xuICAgIEBJbnB1dCgnYWRmLWhpZ2hsaWdodCcpXG4gICAgc2VhcmNoOiBzdHJpbmcgPSAnJztcblxuICAgIC8qKiBDU1MgY2xhc3MgdXNlZCB0byBhcHBseSBoaWdobGlnaHRpbmcuICovXG4gICAgQElucHV0KCdhZGYtaGlnaGxpZ2h0LWNsYXNzJylcbiAgICBjbGFzc1RvQXBwbHk6IHN0cmluZyA9ICdhZGYtaGlnaGxpZ2h0JztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmLFxuICAgICAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgICAgIHByaXZhdGUgaGlnaGxpZ2h0VHJhbnNmb3JtU2VydmljZTogSGlnaGxpZ2h0VHJhbnNmb3JtU2VydmljZSkge1xuICAgIH1cblxuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpIHtcbiAgICAgICAgdGhpcy5oaWdobGlnaHQoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaGlnaGxpZ2h0KHNlYXJjaCA9IHRoaXMuc2VhcmNoLCBzZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IsIGNsYXNzVG9BcHBseSA9IHRoaXMuY2xhc3NUb0FwcGx5KSB7XG4gICAgICAgIGlmIChzZWFyY2ggJiYgc2VsZWN0b3IpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRzID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuXG4gICAgICAgICAgICBlbGVtZW50cy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaGlnaGxpZ2h0VHJhbnNmb3JtUmVzdWx0OiBIaWdobGlnaHRUcmFuc2Zvcm1SZXN1bHQgPSB0aGlzLmhpZ2hsaWdodFRyYW5zZm9ybVNlcnZpY2UuaGlnaGxpZ2h0KGVsZW1lbnQuaW5uZXJIVE1MLCBzZWFyY2gsIGNsYXNzVG9BcHBseSk7XG4gICAgICAgICAgICAgICAgaWYgKGhpZ2hsaWdodFRyYW5zZm9ybVJlc3VsdC5jaGFuZ2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuc2V0UHJvcGVydHkoZWxlbWVudCwgJ2lubmVySFRNTCcsIGhpZ2hsaWdodFRyYW5zZm9ybVJlc3VsdC50ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==