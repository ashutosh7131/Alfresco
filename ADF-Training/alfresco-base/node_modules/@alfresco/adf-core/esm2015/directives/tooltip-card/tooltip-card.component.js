import { Component, Input, SecurityContext } from '@angular/core';
import { animate, style, transition, trigger } from '@angular/animations';
import { DomSanitizer } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
import * as ɵngcc2 from '@angular/common';

function TooltipCardComponent_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 4);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r0.text);
    ɵngcc0.ɵɵproperty("src", ctx_r0.image, ɵngcc0.ɵɵsanitizeUrl)("width", ctx_r0.width);
} }
function TooltipCardComponent_hr_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "hr");
} }
function TooltipCardComponent_p_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.text);
} }
function TooltipCardComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 5);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r3.sanitizedHtmlContent(), ɵngcc0.ɵɵsanitizeHtml);
} }
export class TooltipCardComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.image = '';
        this.text = '';
        this.htmlContent = '';
        this.width = '300';
    }
    sanitizedHtmlContent() {
        return this.sanitizer.sanitize(SecurityContext.HTML, this.htmlContent);
    }
}
TooltipCardComponent.ɵfac = function TooltipCardComponent_Factory(t) { return new (t || TooltipCardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
TooltipCardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipCardComponent, selectors: [["adf-tooltip-card-component"]], inputs: { image: "image", text: "text", htmlContent: "htmlContent", width: "width" }, decls: 5, vars: 7, consts: [[1, "adf-tooltip-card"], [3, "src", "width", "alt", 4, "ngIf"], [4, "ngIf"], ["class", "adf-tooltip-card-content", 3, "innerHTML", 4, "ngIf"], [3, "src", "width", "alt"], [1, "adf-tooltip-card-content", 3, "innerHTML"]], template: function TooltipCardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, TooltipCardComponent_img_1_Template, 1, 3, "img", 1);
        ɵngcc0.ɵɵtemplate(2, TooltipCardComponent_hr_2_Template, 1, 0, "hr", 2);
        ɵngcc0.ɵɵtemplate(3, TooltipCardComponent_p_3_Template, 2, 1, "p", 2);
        ɵngcc0.ɵɵtemplate(4, TooltipCardComponent_div_4_Template, 1, 1, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width, "px");
        ɵngcc0.ɵɵproperty("@tooltip", undefined);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.image);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.image);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.text);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.htmlContent);
    } }, directives: [ɵngcc2.NgIf], styles: ["[_nghost-%COMP%]{display:block}div.adf-tooltip-card[_ngcontent-%COMP%]{background-color:var(--theme-card-bg-color);border:1px solid var(--theme-primary-color);border-radius:6px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);padding:12px}div.adf-tooltip-card[_ngcontent-%COMP%]   div[_ngcontent-%COMP%], div.adf-tooltip-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:var(--adf-tooltip-card-color);font-size:var(--theme-caption-font-size);margin:0}div.adf-tooltip-card[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{border:1px solid var(--theme-primary-color);margin:6px 0}div.adf-tooltip-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:6px}  .cdk-overlay-connected-position-bounding-box{margin-top:10px!important}"], data: { animation: [
            trigger('tooltip', [
                transition(':enter', [
                    style({ opacity: 0 }),
                    animate(200, style({ opacity: 1 }))
                ]),
                transition(':leave', [
                    animate(200, style({ opacity: 0 }))
                ])
            ])
        ] } });
TooltipCardComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
TooltipCardComponent.propDecorators = {
    image: [{ type: Input }],
    text: [{ type: Input }],
    htmlContent: [{ type: Input }],
    width: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipCardComponent, [{
        type: Component,
        args: [{
                selector: 'adf-tooltip-card-component',
                template: "<div @tooltip class=\"adf-tooltip-card\" [style.width.px]=\"width\">\n    <img *ngIf=\"image \" [src]=\"image\" [width]=\"width\" alt=\"{{text}}\">\n    <hr *ngIf=\"image\" />\n    <p *ngIf=\"text\">{{text}}</p>\n    <div *ngIf=\"htmlContent\" [innerHTML]=\"sanitizedHtmlContent()\" class=\"adf-tooltip-card-content\"></div>\n</div>\n",
                animations: [
                    trigger('tooltip', [
                        transition(':enter', [
                            style({ opacity: 0 }),
                            animate(200, style({ opacity: 1 }))
                        ]),
                        transition(':leave', [
                            animate(200, style({ opacity: 0 }))
                        ])
                    ])
                ],
                styles: [":host{display:block}div.adf-tooltip-card{background-color:var(--theme-card-bg-color);border:1px solid var(--theme-primary-color);border-radius:6px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);padding:12px}div.adf-tooltip-card div,div.adf-tooltip-card p{color:var(--adf-tooltip-card-color);font-size:var(--theme-caption-font-size);margin:0}div.adf-tooltip-card hr{border:1px solid var(--theme-primary-color);margin:6px 0}div.adf-tooltip-card img{border-radius:6px}::ng-deep .cdk-overlay-connected-position-bounding-box{margin-top:10px!important}"]
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, { image: [{
            type: Input
        }], text: [{
            type: Input
        }], htmlContent: [{
            type: Input
        }], width: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC1jYXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvZGlyZWN0aXZlcy90b29sdGlwLWNhcmQvdG9vbHRpcC1jYXJkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQkEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CekQsTUFBTSxPQUFPLG9CQUFvQjtBQUNqQyxJQUtJLFlBQW9CLFNBQXVCO0FBQUksUUFBM0IsY0FBUyxHQUFULFNBQVMsQ0FBYztBQUFDLFFBTG5DLFVBQUssR0FBRyxFQUFFLENBQUM7QUFDeEIsUUFBYSxTQUFJLEdBQUcsRUFBRSxDQUFDO0FBQ3ZCLFFBQWEsZ0JBQVcsR0FBRyxFQUFFLENBQUM7QUFDOUIsUUFBYSxVQUFLLEdBQUcsS0FBSyxDQUFDO0FBQzNCLElBQ21ELENBQUM7QUFDcEQsSUFDSSxvQkFBb0I7QUFBSyxRQUNyQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQy9FLElBQUksQ0FBQztBQUNMO2dEQTVCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLDRCQUE0QixrQkFDdEM7cVVBQTRDLGtCQUU1QyxVQUFVLEVBQUUsc0JBQ1IsT0FBTyxDQUFDLFNBQVMsRUFBRSwwQkFDZixVQUFVLENBQUMsUUFBUSxFQUFFLDhCQUNqQixLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsOEJBQ3JCLE9BQU8sQ0FBQyxHQUFHO0FBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdEMsQ0FBQywwQkFDRixVQUFVLENBQUMsUUFBUSxFQUFFLDhCQUNqQjtNQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLDBCQUV0QyxDQUFDO0VBQ0wsQ0FBQyxrQkFDTDs7Ozs7Ozs7Ozs7Ozs7NkNBQ0o7Ozs7Ozs7Ozs7ZUFDSTtBQUFDO0FBQ1UsWUFwQlAsWUFBWTtBQUFHO0FBQUc7QUFFbkIsb0JBa0JILEtBQUs7QUFBSyxtQkFDVixLQUFLO0FBQUssMEJBQ1YsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgU2VjdXJpdHlDb250ZXh0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhbmltYXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXRvb2x0aXAtY2FyZC1jb21wb25lbnQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90b29sdGlwLWNhcmQuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3Rvb2x0aXAtY2FyZC5jb21wb25lbnQuc2NzcyddLFxuICAgIGFuaW1hdGlvbnM6IFtcbiAgICAgICAgdHJpZ2dlcigndG9vbHRpcCcsIFtcbiAgICAgICAgICAgIHRyYW5zaXRpb24oJzplbnRlcicsIFtcbiAgICAgICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAgfSksXG4gICAgICAgICAgICAgICAgYW5pbWF0ZSgyMDAsIHN0eWxlKHsgb3BhY2l0eTogMSB9KSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgdHJhbnNpdGlvbignOmxlYXZlJywgW1xuICAgICAgICAgICAgICAgIGFuaW1hdGUoMjAwLCBzdHlsZSh7IG9wYWNpdHk6IDAgfSkpXG5cbiAgICAgICAgICAgIF0pXG4gICAgICAgIF0pXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUb29sdGlwQ2FyZENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgaW1hZ2UgPSAnJztcbiAgICBASW5wdXQoKSB0ZXh0ID0gJyc7XG4gICAgQElucHV0KCkgaHRtbENvbnRlbnQgPSAnJztcbiAgICBASW5wdXQoKSB3aWR0aCA9ICczMDAnO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBzYW5pdGl6ZXI6IERvbVNhbml0aXplcikgeyB9XG5cbiAgICBzYW5pdGl6ZWRIdG1sQ29udGVudCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5zYW5pdGl6ZXIuc2FuaXRpemUoU2VjdXJpdHlDb250ZXh0LkhUTUwsIHRoaXMuaHRtbENvbnRlbnQpO1xuICAgIH1cbn1cbiJdfQ==