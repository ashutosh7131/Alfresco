/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, Injectable } from '@angular/core';
import { of } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export class TranslationMock {
    constructor() {
        this.defaultLang = 'en';
        this.translate = {
            onLangChange: new EventEmitter()
        };
    }
    addTranslationFolder() { }
    onTranslationChanged() { }
    use() { }
    loadTranslation() { }
    get(key) {
        return of(key);
    }
    instant(key) {
        return key;
    }
}
TranslationMock.ɵfac = function TranslationMock_Factory(t) { return new (t || TranslationMock)(); };
TranslationMock.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TranslationMock, factory: TranslationMock.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslationMock, [{
        type: Injectable
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb24uc2VydmljZS5tb2NrLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9tb2NrL3RyYW5zbGF0aW9uLnNlcnZpY2UubW9jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7QUFTdEMsTUFBTSxPQUFPLGVBQWU7QUFBRyxJQUQvQjtBQUNFLFFBRUUsZ0JBQVcsR0FBVyxJQUFJLENBQUM7QUFDL0IsUUFHSSxjQUFTLEdBQVE7QUFDckIsWUFBUSxZQUFZLEVBQUUsSUFBSSxZQUFZLEVBQW1CO0FBQ3pELFNBQUssQ0FBQztBQUNOLElBaUJBLENBQUM7QUFDRCxJQWpCSSxvQkFBb0IsS0FBSSxDQUFDO0FBQzdCLElBQ0ksb0JBQW9CLEtBQUksQ0FBQztBQUM3QixJQUNJLEdBQUcsS0FBUyxDQUFDO0FBQ2pCLElBQ0ksZUFBZSxLQUFJLENBQUM7QUFDeEIsSUFDSSxHQUFHLENBQUMsR0FBMkI7QUFBSSxRQUMvQixPQUFPLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN2QixJQUFJLENBQUM7QUFDTCxJQUNJLE9BQU8sQ0FBQyxHQUEyQjtBQUFJLFFBQ25DLE9BQU8sR0FBRyxDQUFDO0FBQ25CLElBQUksQ0FBQztBQUNMOzJDQTFCQyxVQUFVOzs7O2dEQUNUO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBUcmFuc2xhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy90cmFuc2xhdGlvbi5zZXJ2aWNlJztcblxuZXhwb3J0IGludGVyZmFjZSBMYW5nQ2hhbmdlRXZlbnQge1xuICAgIGxhbmc6IHN0cmluZztcbiAgICB0cmFuc2xhdGlvbnM6IGFueTtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRyYW5zbGF0aW9uTW9jayBpbXBsZW1lbnRzIFRyYW5zbGF0aW9uU2VydmljZSB7XG5cbiAgICBkZWZhdWx0TGFuZzogc3RyaW5nID0gJ2VuJztcbiAgICB1c2VyTGFuZzogc3RyaW5nO1xuICAgIGN1c3RvbUxvYWRlcjogYW55O1xuXG4gICAgdHJhbnNsYXRlOiBhbnkgPSB7XG4gICAgICAgIG9uTGFuZ0NoYW5nZTogbmV3IEV2ZW50RW1pdHRlcjxMYW5nQ2hhbmdlRXZlbnQ+KClcbiAgICB9O1xuXG4gICAgYWRkVHJhbnNsYXRpb25Gb2xkZXIoKSB7fVxuXG4gICAgb25UcmFuc2xhdGlvbkNoYW5nZWQoKSB7fVxuXG4gICAgdXNlKCk6IGFueSB7fVxuXG4gICAgbG9hZFRyYW5zbGF0aW9uKCkge31cblxuICAgIGdldChrZXk6IHN0cmluZyB8IEFycmF5PHN0cmluZz4pOiBPYnNlcnZhYmxlPHN0cmluZyB8IGFueT4ge1xuICAgICAgICByZXR1cm4gb2Yoa2V5KTtcbiAgICB9XG5cbiAgICBpbnN0YW50KGtleTogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPik6IHN0cmluZyB8IGFueSB7XG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgfVxuXG59XG4iXX0=