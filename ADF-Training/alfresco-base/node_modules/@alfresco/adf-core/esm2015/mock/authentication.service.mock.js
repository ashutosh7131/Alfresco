/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { of, throwError } from 'rxjs';
export class AuthenticationMock {
    constructor() {
        this.redirectUrl = null;
    }
    setRedirectUrl(url) {
        this.redirectUrl = url;
    }
    getRedirectUrl() {
        return this.redirectUrl ? this.redirectUrl.url : null;
    }
    login(username, password) {
        if (username === 'fake-username' && password === 'fake-password') {
            return of({ type: 'type', ticket: 'ticket' });
        }
        if (username === 'fake-username-CORS-error' && password === 'fake-password') {
            return throwError({
                error: {
                    crossDomain: true,
                    message: 'ERROR: the network is offline, Origin is not allowed by Access-Control-Allow-Origin'
                }
            });
        }
        if (username === 'fake-username-CSRF-error' && password === 'fake-password') {
            return throwError({ message: 'ERROR: Invalid CSRF-token', status: 403 });
        }
        if (username === 'fake-username-ECM-access-error' && password === 'fake-password') {
            return throwError({ message: 'ERROR: 00170728 Access Denied.  The system is currently in read-only mode', status: 403 });
        }
        return throwError('Fake server error');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGVudGljYXRpb24uc2VydmljZS5tb2NrLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS8iLCJzb3VyY2VzIjpbIm1vY2svYXV0aGVudGljYXRpb24uc2VydmljZS5tb2NrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBYyxFQUFFLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBSWxELE1BQU0sT0FBTyxrQkFBa0I7SUFBL0I7UUFDWSxnQkFBVyxHQUFxQixJQUFJLENBQUM7SUFtQ2pELENBQUM7SUFqQ0csY0FBYyxDQUFDLEdBQXFCO1FBQ2hDLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO0lBQzNCLENBQUM7SUFFRCxjQUFjO1FBQ1YsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQzFELENBQUM7SUFHRCxLQUFLLENBQUMsUUFBZ0IsRUFBRSxRQUFnQjtRQUNwQyxJQUFJLFFBQVEsS0FBSyxlQUFlLElBQUksUUFBUSxLQUFLLGVBQWUsRUFBRTtZQUM5RCxPQUFPLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBQyxDQUFDLENBQUM7U0FDaEQ7UUFFRCxJQUFJLFFBQVEsS0FBSywwQkFBMEIsSUFBSSxRQUFRLEtBQUssZUFBZSxFQUFFO1lBQ3pFLE9BQU8sVUFBVSxDQUFDO2dCQUNkLEtBQUssRUFBRTtvQkFDSCxXQUFXLEVBQUUsSUFBSTtvQkFDakIsT0FBTyxFQUFFLHFGQUFxRjtpQkFDakc7YUFDSixDQUFDLENBQUM7U0FDTjtRQUVELElBQUksUUFBUSxLQUFLLDBCQUEwQixJQUFJLFFBQVEsS0FBSyxlQUFlLEVBQUU7WUFDekUsT0FBTyxVQUFVLENBQUMsRUFBQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBQyxDQUFDLENBQUM7U0FDMUU7UUFFRCxJQUFJLFFBQVEsS0FBSyxnQ0FBZ0MsSUFBSSxRQUFRLEtBQUssZUFBZSxFQUFFO1lBQy9FLE9BQU8sVUFBVSxDQUFDLEVBQUMsT0FBTyxFQUFFLDJFQUEyRSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUMsQ0FBQyxDQUFDO1NBQzFIO1FBRUQsT0FBTyxVQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUMzQyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiwgdGhyb3dFcnJvciB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUmVkaXJlY3Rpb25Nb2RlbCB9IGZyb20gJy4uL21vZGVscy9yZWRpcmVjdGlvbi5tb2RlbCc7XG5cbi8vIFRPRE86IHNob3VsZCBiZSBleHRlbmRpbmcgQXV0aGVudGljYXRpb25TZXJ2aWNlXG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRpb25Nb2NrIC8qZXh0ZW5kcyBBdXRoZW50aWNhdGlvblNlcnZpY2UqLyB7XG4gICAgcHJpdmF0ZSByZWRpcmVjdFVybDogUmVkaXJlY3Rpb25Nb2RlbCA9IG51bGw7XG5cbiAgICBzZXRSZWRpcmVjdFVybCh1cmw6IFJlZGlyZWN0aW9uTW9kZWwpIHtcbiAgICAgICAgdGhpcy5yZWRpcmVjdFVybCA9IHVybDtcbiAgICB9XG5cbiAgICBnZXRSZWRpcmVjdFVybCgpOiBzdHJpbmd8bnVsbCB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlZGlyZWN0VXJsID8gdGhpcy5yZWRpcmVjdFVybC51cmwgOiBudWxsO1xuICAgIH1cblxuICAgIC8vIFRPRE86IHJlYWwgYXV0aCBzZXJ2aWNlIHJldHVybnMgT2JzZXJ2YWJsZTxzdHJpbmc+XG4gICAgbG9naW4odXNlcm5hbWU6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZyk6IE9ic2VydmFibGU8eyB0eXBlOiBzdHJpbmcsIHRpY2tldDogYW55IH0+IHtcbiAgICAgICAgaWYgKHVzZXJuYW1lID09PSAnZmFrZS11c2VybmFtZScgJiYgcGFzc3dvcmQgPT09ICdmYWtlLXBhc3N3b3JkJykge1xuICAgICAgICAgICAgcmV0dXJuIG9mKHsgdHlwZTogJ3R5cGUnLCB0aWNrZXQ6ICd0aWNrZXQnfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodXNlcm5hbWUgPT09ICdmYWtlLXVzZXJuYW1lLUNPUlMtZXJyb3InICYmIHBhc3N3b3JkID09PSAnZmFrZS1wYXNzd29yZCcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aHJvd0Vycm9yKHtcbiAgICAgICAgICAgICAgICBlcnJvcjoge1xuICAgICAgICAgICAgICAgICAgICBjcm9zc0RvbWFpbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0VSUk9SOiB0aGUgbmV0d29yayBpcyBvZmZsaW5lLCBPcmlnaW4gaXMgbm90IGFsbG93ZWQgYnkgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHVzZXJuYW1lID09PSAnZmFrZS11c2VybmFtZS1DU1JGLWVycm9yJyAmJiBwYXNzd29yZCA9PT0gJ2Zha2UtcGFzc3dvcmQnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhyb3dFcnJvcih7bWVzc2FnZTogJ0VSUk9SOiBJbnZhbGlkIENTUkYtdG9rZW4nLCBzdGF0dXM6IDQwM30pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHVzZXJuYW1lID09PSAnZmFrZS11c2VybmFtZS1FQ00tYWNjZXNzLWVycm9yJyAmJiBwYXNzd29yZCA9PT0gJ2Zha2UtcGFzc3dvcmQnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhyb3dFcnJvcih7bWVzc2FnZTogJ0VSUk9SOiAwMDE3MDcyOCBBY2Nlc3MgRGVuaWVkLiAgVGhlIHN5c3RlbSBpcyBjdXJyZW50bHkgaW4gcmVhZC1vbmx5IG1vZGUnLCBzdGF0dXM6IDQwM30pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRocm93RXJyb3IoJ0Zha2Ugc2VydmVyIGVycm9yJyk7XG4gICAgfVxufVxuIl19