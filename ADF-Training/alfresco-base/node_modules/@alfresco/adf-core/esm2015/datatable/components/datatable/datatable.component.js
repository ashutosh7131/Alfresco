/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ViewChildren, QueryList, HostListener, Component, ContentChild, ElementRef, EventEmitter, Input, IterableDiffers, Output, ViewEncapsulation } from '@angular/core';
import { FocusKeyManager } from '@angular/cdk/a11y';
import { Observable } from 'rxjs';
import { DataColumnListComponent } from '../../../data-column/data-column-list.component';
import { DataRowEvent } from '../../data/data-row-event.model';
import { DataSorting } from '../../data/data-sorting.model';
import { DataTableRowComponent } from '../datatable-row/datatable-row.component';
import { ObjectDataRow } from '../../data/object-datarow.model';
import { ObjectDataColumn } from '../../data/object-datacolumn.model';
import { ObjectDataTableAdapter } from '../../data/object-datatable-adapter';
import { DataCellEvent } from '../data-cell.event';
import { DataRowActionEvent } from '../data-row-action.event';
import { share, buffer, map, filter, debounceTime } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../datatable-row/datatable-row.component';
import * as ɵngcc3 from '@angular/material/checkbox';
import * as ɵngcc4 from '../../directives/drop-zone.directive';
import * as ɵngcc5 from '@angular/material/form-field';
import * as ɵngcc6 from '@angular/material/select';
import * as ɵngcc7 from '@angular/material/core';
import * as ɵngcc8 from '../../../directives/upload.directive';
import * as ɵngcc9 from '@angular/material/button';
import * as ɵngcc10 from '@angular/material/menu';
import * as ɵngcc11 from '@angular/material/icon';
import * as ɵngcc12 from '../../../context-menu/context-menu.directive';
import * as ɵngcc13 from '../date-cell/date-cell.component';
import * as ɵngcc14 from '../location-cell/location-cell.component';
import * as ɵngcc15 from '../filesize-cell/filesize-cell.component';
import * as ɵngcc16 from '../datatable-cell/datatable-cell.component';
import * as ɵngcc17 from '../json-cell/json-cell.component';
import * as ɵngcc18 from '@ngx-translate/core';
import * as ɵngcc19 from '../../../pipes/file-type.pipe';
import * as ɵngcc20 from '../../../pipes/localized-date.pipe';

function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "span", 15);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "ADF-DATATABLE.ACCESSIBILITY.ACTIONS"));
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 17);
    ɵngcc0.ɵɵlistener("change", function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_2_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(4); return ctx_r11.onSelectAllClick($event); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("indeterminate", ctx_r8.isSelectAllIndeterminate)("checked", ctx_r8.isSelectAllChecked);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 3, "ADF-DATATABLE.ACCESSIBILITY.SELECT_ALL"));
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 21);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r13 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, col_r13.title));
} }
const _c0 = function (a0) { return { string: a0 }; };
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r13 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r17 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r17.getSortLiveAnnouncement(col_r13), ɵngcc0.ɵɵpureFunction1(6, _c0, ɵngcc0.ɵɵpipeBind1(3, 4, col_r13.title))));
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_3_ng_template_0_Template(rf, ctx) { }
const _c1 = function (a0) { return { $implicit: a0 }; };
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_3_ng_template_0_Template, 0, 0, "ng-template", 23);
} if (rf & 2) {
    const col_r13 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r18 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r18.headerFilterTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c1, col_r13));
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_span_1_Template, 3, 3, "span", 19);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_span_2_Template, 4, 8, "span", 20);
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_3_Template, 1, 4, undefined, 4);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const col_r13 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r14 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r13.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r13.title && col_r13.sortable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r14.allowFiltering);
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_3_ng_template_0_Template(rf, ctx) { }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_3_ng_template_0_Template, 0, 0, "ng-template", 23);
} if (rf & 2) {
    const col_r13 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r13.header)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c1, col_r13));
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵlistener("click", function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); const col_r13 = ctx.$implicit; const ctx_r26 = ɵngcc0.ɵɵnextContext(4); return ctx_r26.onColumnHeaderClick(col_r13); })("keyup.enter", function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_Template_div_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); const col_r13 = ctx.$implicit; const ctx_r28 = ɵngcc0.ɵɵnextContext(4); return ctx_r28.onColumnHeaderClick(col_r13); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_ng_container_2_Template, 4, 3, "ng-container", 4);
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_3_Template, 1, 4, undefined, 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r13 = ctx.$implicit;
    const ctx_r9 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate2("adf-datatable-cell--", col_r13.type || "text", " ", col_r13.cssClass, " adf-datatable-cell-header");
    ɵngcc0.ɵɵclassProp("adf-sortable", col_r13.sortable)("adf-datatable__header--sorted-asc", ctx_r9.isColumnSorted(col_r13, "asc"))("adf-datatable__header--sorted-desc", ctx_r9.isColumnSorted(col_r13, "desc"));
    ɵngcc0.ɵɵproperty("dropColumn", col_r13);
    ɵngcc0.ɵɵattribute("data-automation-id", "auto_id_" + col_r13.key)("tabindex", ctx_r9.isHeaderVisible() ? 0 : null)("aria-sort", col_r13.sortable ? ɵngcc0.ɵɵpipeBind1(1, 16, ctx_r9.getAriaSort(col_r13)) : null);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !col_r13.header);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r13.header);
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelementStart(1, "span", 15);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "ADF-DATATABLE.ACCESSIBILITY.ACTIONS"));
} }
function DataTableComponent_div_0_div_1_adf_datatable_row_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "adf-datatable-row", 9);
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_1_Template, 4, 3, "div", 10);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_2_Template, 4, 5, "div", 11);
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_3_Template, 4, 18, "div", 12);
    ɵngcc0.ɵɵtemplate(4, DataTableComponent_div_0_div_1_adf_datatable_row_1_div_4_Template, 4, 3, "div", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r5.isHeaderVisible());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.actions && ctx_r5.actionsPosition === "left");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.multiselect);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.data.getColumns());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.actions && ctx_r5.actionsPosition === "right");
} }
function DataTableComponent_div_0_div_1_mat_form_field_2_mat_option_2_Template(rf, ctx) { if (rf & 1) {
    const _r32 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-option", 27);
    ɵngcc0.ɵɵlistener("click", function DataTableComponent_div_0_div_1_mat_form_field_2_mat_option_2_Template_mat_option_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r32); const col_r30 = ctx.$implicit; const ctx_r31 = ɵngcc0.ɵɵnextContext(4); return ctx_r31.onColumnHeaderClick(col_r30); })("keyup.enter", function DataTableComponent_div_0_div_1_mat_form_field_2_mat_option_2_Template_mat_option_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r32); const col_r30 = ctx.$implicit; const ctx_r33 = ɵngcc0.ɵɵnextContext(4); return ctx_r33.onColumnHeaderClick(col_r30); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r30 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", col_r30.key);
    ɵngcc0.ɵɵattribute("data-automation-id", "grid-view-sorting-" + col_r30.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, col_r30.title), " ");
} }
function DataTableComponent_div_0_div_1_mat_form_field_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-form-field");
    ɵngcc0.ɵɵelementStart(1, "mat-select", 25);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_div_1_mat_form_field_2_mat_option_2_Template, 3, 5, "mat-option", 26);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r6.getSortingKey());
    ɵngcc0.ɵɵattribute("data-automation-id", "grid-view-sorting");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r6.getSortableColumns());
} }
const _c2 = function (a0) { return { "adf-sr-only": a0 }; };
function DataTableComponent_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_div_1_adf_datatable_row_1_Template, 5, 5, "adf-datatable-row", 8);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_div_1_mat_form_field_2_Template, 3, 3, "mat-form-field", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c2, !ctx_r1.isHeaderVisible()));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.display === "list");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.display === "gallery" && ctx_r1.isHeaderVisible());
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_1_button_8_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const action_r46 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(action_r46.icon);
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_1_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r51 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 41);
    ɵngcc0.ɵɵlistener("click", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_1_button_8_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r51); const action_r46 = ctx.$implicit; const row_r37 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r49 = ɵngcc0.ɵɵnextContext(3); return ctx_r49.onExecuteRowAction(row_r37, action_r46); });
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_1_button_8_mat_icon_1_Template, 2, 1, "mat-icon", 4);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const action_r46 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("disabled", action_r46.disabled);
    ɵngcc0.ɵɵattribute("data-automation-id", action_r46.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", action_r46.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, action_r46.title));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵelementStart(1, "button", 37, 38);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "mat-icon");
    ɵngcc0.ɵɵtext(5, "more_vert");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "mat-menu", null, 39);
    ɵngcc0.ɵɵtemplate(8, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_1_button_8_Template, 5, 6, "button", 40);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r43 = ɵngcc0.ɵɵreference(2);
    const _r44 = ɵngcc0.ɵɵreference(7);
    const ctx_r52 = ɵngcc0.ɵɵnextContext();
    const idx_r38 = ctx_r52.index;
    const row_r37 = ctx_r52.$implicit;
    const ctx_r39 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r44)("ngClass", ctx_r39.getHideActionsWithoutHoverClass(_r43))("title", ɵngcc0.ɵɵpipeBind1(3, 6, "ADF-DATATABLE.CONTENT-ACTIONS.TOOLTIP"));
    ɵngcc0.ɵɵattribute("id", "action_menu_left_" + idx_r38)("data-automation-id", "action_menu_" + idx_r38);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r39.getRowActions(row_r37));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r55 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 42);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 43);
    ɵngcc0.ɵɵlistener("change", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_2_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r55); const row_r37 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r53 = ɵngcc0.ɵɵnextContext(3); return ctx_r53.onCheckboxChange(row_r37, $event); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", row_r37.isSelected);
    ɵngcc0.ɵɵattribute("aria-checked", row_r37.isSelected);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 3, "ADF-DATATABLE.ACCESSIBILITY.SELECT_FILE"), " ");
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r68 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r68.asIconValue(row_r37, col_r57), " ");
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_ng_template_2_mat_icon_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-icon", 55);
} }
const _c3 = function (a0) { return { type: a0 }; };
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_ng_template_2_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r77 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "img", 56);
    ɵngcc0.ɵɵlistener("error", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_ng_template_2_ng_template_1_Template_img_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r77); const row_r37 = ɵngcc0.ɵɵnextContext(5).$implicit; const ctx_r76 = ɵngcc0.ɵɵnextContext(3); return ctx_r76.onImageLoadingError($event, row_r37); });
    ɵngcc0.ɵɵpipe(1, "fileType");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵpipe(5, "uppercase");
    ɵngcc0.ɵɵpipe(6, "fileType");
    ɵngcc0.ɵɵpipe(7, "fileType");
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵpipe(11, "uppercase");
    ɵngcc0.ɵɵpipe(12, "fileType");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(4).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r75 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵpropertyInterpolate("src", ctx_r75.data.getValue(row_r37, col_r57), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r75.data.getValue(row_r37, col_r57)) === "disable" ? ɵngcc0.ɵɵpipeBind1(2, 5, "ADF-DATATABLE.ACCESSIBILITY.ICON_DISABLED") : ɵngcc0.ɵɵpipeBind2(3, 7, "ADF-DATATABLE.ACCESSIBILITY.ICON_TEXT", ɵngcc0.ɵɵpureFunction1(29, _c3, ɵngcc0.ɵɵpipeBind1(4, 10, "ADF-DATATABLE.FILE_TYPE." + ɵngcc0.ɵɵpipeBind1(5, 12, ɵngcc0.ɵɵpipeBind1(6, 14, ctx_r75.data.getValue(row_r37, col_r57)))))))("alt", ɵngcc0.ɵɵpipeBind1(7, 16, ctx_r75.data.getValue(row_r37, col_r57)) === "disable" ? ɵngcc0.ɵɵpipeBind1(8, 18, "ADF-DATATABLE.ACCESSIBILITY.ICON_DISABLED") : ɵngcc0.ɵɵpipeBind2(9, 20, "ADF-DATATABLE.ACCESSIBILITY.ICON_TEXT", ɵngcc0.ɵɵpureFunction1(31, _c3, ɵngcc0.ɵɵpipeBind1(10, 23, "ADF-DATATABLE.FILE_TYPE." + ɵngcc0.ɵɵpipeBind1(11, 25, ɵngcc0.ɵɵpipeBind1(12, 27, ctx_r75.data.getValue(row_r37, col_r57)))))));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_ng_template_2_mat_icon_0_Template, 1, 0, "mat-icon", 53);
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_ng_template_2_ng_template_1_Template, 13, 33, "ng-template", null, 54, ɵngcc0.ɵɵtemplateRefExtractor);
} if (rf & 2) {
    const _r74 = ɵngcc0.ɵɵreference(2);
    const row_r37 = ɵngcc0.ɵɵnextContext(4).$implicit;
    const ctx_r70 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngIf", row_r37.isSelected && !ctx_r70.multiselect)("ngIfElse", _r74);
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 50);
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_mat_icon_1_Template, 2, 1, "mat-icon", 51);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_ng_template_2_Template, 3, 2, "ng-template", null, 52, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r69 = ɵngcc0.ɵɵreference(3);
    const col_r57 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r60 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r60.isIconValue(row_r37, col_r57))("ngIfElse", _r69);
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 50);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r61 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r61.data.getValue(row_r37, col_r57));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 50);
    ɵngcc0.ɵɵpipe(1, "adfLocalizedDate");
    ɵngcc0.ɵɵelement(2, "adf-date-cell", 57);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r62 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r62.data.getValue(row_r37, col_r57, ctx_r62.resolverFn) ? 0 : -1)("data-automation-id", "date_" + ɵngcc0.ɵɵpipeBind2(1, 7, ctx_r62.data.getValue(row_r37, col_r57, ctx_r62.resolverFn), "medium"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("data", ctx_r62.data)("column", col_r57)("row", row_r37)("resolverFn", ctx_r62.resolverFn)("tooltip", ctx_r62.getCellTooltip(row_r37, col_r57));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 50);
    ɵngcc0.ɵɵelement(1, "adf-location-cell", 58);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r63 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r63.data.getValue(row_r37, col_r57, ctx_r63.resolverFn) ? 0 : -1)("data-automation-id", "location" + ctx_r63.data.getValue(row_r37, col_r57, ctx_r63.resolverFn));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r63.data)("column", col_r57)("row", row_r37)("resolverFn", ctx_r63.resolverFn)("tooltip", ctx_r63.getCellTooltip(row_r37, col_r57));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 50);
    ɵngcc0.ɵɵelement(1, "adf-filesize-cell", 59);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r64 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r64.data.getValue(row_r37, col_r57, ctx_r64.resolverFn) ? 0 : -1)("data-automation-id", "fileSize_" + ctx_r64.data.getValue(row_r37, col_r57, ctx_r64.resolverFn));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r64.data)("column", col_r57)("row", row_r37)("resolverFn", ctx_r64.resolverFn)("tooltip", ctx_r64.getCellTooltip(row_r37, col_r57));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 50);
    ɵngcc0.ɵɵelement(1, "adf-datatable-cell", 60);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r65 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r65.data.getValue(row_r37, col_r57, ctx_r65.resolverFn) ? 0 : -1)("data-automation-id", "text_" + ctx_r65.data.getValue(row_r37, col_r57, ctx_r65.resolverFn));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("copyContent", col_r57.copyContent)("data", ctx_r65.data)("column", col_r57)("row", row_r37)("resolverFn", ctx_r65.resolverFn)("tooltip", ctx_r65.getCellTooltip(row_r37, col_r57));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 50);
    ɵngcc0.ɵɵelement(1, "adf-json-cell", 61);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r66 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r66.data.getValue(row_r37, col_r57, ctx_r66.resolverFn) ? 0 : -1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("editable", col_r57.editable)("data", ctx_r66.data)("column", col_r57)("resolverFn", ctx_r66.resolverFn)("row", row_r37);
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 50);
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 46);
    ɵngcc0.ɵɵelementContainerStart(1, 47);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_2_Template, 4, 2, "div", 48);
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_3_Template, 3, 1, "div", 48);
    ɵngcc0.ɵɵtemplate(4, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_4_Template, 3, 10, "div", 48);
    ɵngcc0.ɵɵtemplate(5, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_5_Template, 2, 7, "div", 48);
    ɵngcc0.ɵɵtemplate(6, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_6_Template, 2, 7, "div", 48);
    ɵngcc0.ɵɵtemplate(7, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_7_Template, 2, 8, "div", 48);
    ɵngcc0.ɵɵtemplate(8, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_div_8_Template, 2, 6, "div", 48);
    ɵngcc0.ɵɵtemplate(9, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_span_9_Template, 1, 0, "span", 49);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", col_r57.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "image");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "icon");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "date");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "location");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "fileSize");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "text");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "json");
} }
const _c4 = function (a0, a1, a2) { return { data: a0, row: a1, col: a2 }; };
const _c5 = function (a0, a1) { return { $implicit: a0, value: a1 }; };
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 46);
    ɵngcc0.ɵɵelementStart(1, "div", 50);
    ɵngcc0.ɵɵelementContainer(2, 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ɵngcc0.ɵɵnextContext().$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r59 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("tabindex", col_r57.focus ? 0 : null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r57.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(7, _c5, ɵngcc0.ɵɵpureFunction3(3, _c4, ctx_r59.data, row_r37, col_r57), ctx_r59.data.getValue(row_r37, col_r57, ctx_r59.resolverFn)));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r101 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 44);
    ɵngcc0.ɵɵlistener("click", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r101); const row_r37 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r99 = ɵngcc0.ɵɵnextContext(3); return ctx_r99.onRowClick(row_r37, $event); })("keydown.enter", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_Template_div_keydown_enter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r101); const row_r37 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r102 = ɵngcc0.ɵɵnextContext(3); return ctx_r102.onEnterKeyPressed(row_r37, $event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_3_Template, 10, 8, "div", 45);
    ɵngcc0.ɵɵtemplate(4, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_div_4_Template, 3, 10, "div", 45);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const col_r57 = ctx.$implicit;
    const row_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r41 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate2("adf-datatable-cell adf-datatable-cell--", col_r57.type || "text", " ", col_r57.cssClass, "");
    ɵngcc0.ɵɵproperty("adf-context-menu", ctx_r41.getContextMenuActions(row_r37, col_r57))("adf-context-menu-enabled", ctx_r41.contextMenu)("dropColumn", col_r57)("dropRow", row_r37);
    ɵngcc0.ɵɵattribute("title", ɵngcc0.ɵɵpipeBind1(1, 14, col_r57.title))("data-automation-id", ctx_r41.getAutomationValue(row_r37))("aria-selected", row_r37.isSelected ? true : false)("aria-label", col_r57.title ? ɵngcc0.ɵɵpipeBind1(2, 16, col_r57.title) : null);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !col_r57.template);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r57.template);
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_4_button_9_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const action_r108 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(action_r108.icon);
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_4_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r113 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 41);
    ɵngcc0.ɵɵlistener("click", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_4_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r113); const action_r108 = ctx.$implicit; const row_r37 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r111 = ɵngcc0.ɵɵnextContext(3); return ctx_r111.onExecuteRowAction(row_r37, action_r108); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_4_button_9_mat_icon_2_Template, 2, 1, "mat-icon", 4);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const action_r108 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("disabled", action_r108.disabled);
    ɵngcc0.ɵɵattribute("data-automation-id", action_r108.title)("aria-label", ɵngcc0.ɵɵpipeBind1(1, 5, action_r108.title));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", action_r108.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 7, action_r108.title));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 62);
    ɵngcc0.ɵɵelementStart(1, "button", 37, 38);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementStart(5, "mat-icon");
    ɵngcc0.ɵɵtext(6, "more_vert");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "mat-menu", null, 39);
    ɵngcc0.ɵɵtemplate(9, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_4_button_9_Template, 6, 9, "button", 40);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r105 = ɵngcc0.ɵɵreference(2);
    const _r106 = ɵngcc0.ɵɵreference(8);
    const ctx_r114 = ɵngcc0.ɵɵnextContext();
    const idx_r38 = ctx_r114.index;
    const row_r37 = ctx_r114.$implicit;
    const ctx_r42 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r106)("ngClass", ctx_r42.getHideActionsWithoutHoverClass(_r105))("title", ɵngcc0.ɵɵpipeBind1(4, 9, "ADF-DATATABLE.CONTENT-ACTIONS.TOOLTIP"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(3, 7, "ADF-DATATABLE.ACCESSIBILITY.ROW_OPTION_BUTTON"))("id", "action_menu_right_" + idx_r38)("data-automation-id", "action_menu_" + idx_r38);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r42.getRowActions(row_r37));
} }
function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_Template(rf, ctx) { if (rf & 1) {
    const _r116 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-datatable-row", 31);
    ɵngcc0.ɵɵlistener("select", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_Template_adf_datatable_row_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const row_r37 = ctx.$implicit; const ctx_r115 = ɵngcc0.ɵɵnextContext(3); return ctx_r115.onEnterKeyPressed(row_r37, $event); })("keyup", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_Template_adf_datatable_row_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const row_r37 = ctx.$implicit; const ctx_r117 = ɵngcc0.ɵɵnextContext(3); return ctx_r117.onRowKeyUp(row_r37, $event); })("keydown", function DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_Template_adf_datatable_row_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const row_r37 = ctx.$implicit; const ctx_r118 = ɵngcc0.ɵɵnextContext(3); return ctx_r118.onRowEnterKeyDown(row_r37, $event); });
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_1_Template, 9, 8, "div", 32);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_2_Template, 4, 5, "div", 33);
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_3_Template, 5, 18, "div", 34);
    ɵngcc0.ɵɵtemplate(4, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_div_4_Template, 10, 11, "div", 35);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r37 = ctx.$implicit;
    const idx_r38 = ctx.index;
    const ctx_r34 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("row", row_r37)("adf-upload", ctx_r34.rowAllowsDrop(row_r37))("adf-upload-data", row_r37)("ngStyle", ctx_r34.rowStyle)("ngClass", ctx_r34.getRowStyle(row_r37));
    ɵngcc0.ɵɵattribute("data-automation-id", "datatable-row-" + idx_r38);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r34.actions && ctx_r34.actionsPosition === "left");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r34.multiselect);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r34.data.getColumns());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r34.actions && ctx_r34.actionsPosition === "right");
} }
function DataTableComponent_div_0_ng_container_3_div_2_2_ng_template_0_Template(rf, ctx) { }
const _c6 = function (a0) { return [a0]; };
function DataTableComponent_div_0_ng_container_3_div_2_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataTableComponent_div_0_ng_container_3_div_2_2_ng_template_0_Template, 0, 0, "ng-template", 65);
} if (rf & 2) {
    const ctx_r119 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r119.data))("ngForTemplate", ctx_r119.noContentTemplate);
} }
function DataTableComponent_div_0_ng_container_3_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 63);
    ɵngcc0.ɵɵelementStart(1, "div", 64);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_ng_container_3_div_2_2_Template, 1, 4, undefined, 4);
    ɵngcc0.ɵɵprojection(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r35 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassProp("adf-datatable-row", ctx_r35.display === "list")("adf-datatable-card-empty", ctx_r35.display === "gallery");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r35.noContentTemplate);
} }
function DataTableComponent_div_0_ng_container_3_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 66);
} }
function DataTableComponent_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_ng_container_3_adf_datatable_row_1_Template, 5, 10, "adf-datatable-row", 28);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_ng_container_3_div_2_Template, 4, 5, "div", 29);
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_ng_container_3_div_3_Template, 1, 0, "div", 30);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.data.getRows());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.isEmpty());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.fakeRows);
} }
function DataTableComponent_div_0_div_4_2_ng_template_0_Template(rf, ctx) { }
function DataTableComponent_div_0_div_4_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataTableComponent_div_0_div_4_2_ng_template_0_Template, 0, 0, "ng-template", 65);
} if (rf & 2) {
    const ctx_r122 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r122.data))("ngForTemplate", ctx_r122.noPermissionTemplate);
} }
function DataTableComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 67);
    ɵngcc0.ɵɵelementStart(1, "div", 68);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_div_4_2_Template, 1, 4, undefined, 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("adf-datatable-row", ctx_r3.display === "list")("adf-datatable-card-permissions", ctx_r3.display === "gallery");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.noPermissionTemplate);
} }
function DataTableComponent_div_0_div_5_2_ng_template_0_Template(rf, ctx) { }
function DataTableComponent_div_0_div_5_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataTableComponent_div_0_div_5_2_ng_template_0_Template, 0, 0, "ng-template", 65);
} if (rf & 2) {
    const ctx_r124 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r124.data))("ngForTemplate", ctx_r124.loadingTemplate);
} }
function DataTableComponent_div_0_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 69);
    ɵngcc0.ɵɵtemplate(2, DataTableComponent_div_0_div_5_2_Template, 1, 4, undefined, 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("adf-datatable-row", ctx_r4.display === "list")("adf-datatable-card-loading", ctx_r4.display === "gallery");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.loadingTemplate);
} }
function DataTableComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, DataTableComponent_div_0_div_1_Template, 3, 5, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵtemplate(3, DataTableComponent_div_0_ng_container_3_Template, 4, 3, "ng-container", 4);
    ɵngcc0.ɵɵtemplate(4, DataTableComponent_div_0_div_4_Template, 3, 5, "div", 5);
    ɵngcc0.ɵɵtemplate(5, DataTableComponent_div_0_div_5_Template, 3, 5, "div", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("adf-datatable-card", ctx_r0.display === "gallery")("adf-datatable-list", ctx_r0.display === "list")("adf-sticky-header", ctx_r0.isStickyHeaderEnabled())("adf-datatable--empty", ctx_r0.isEmpty() && !ctx_r0.isHeaderVisible() || ctx_r0.loading)("adf-datatable--empty--header-visible", ctx_r0.isEmpty() && ctx_r0.isHeaderVisible());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isHeaderVisible());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.loading && !ctx_r0.noPermission);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.loading && ctx_r0.noPermission);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.loading);
} }
const _c7 = [[["adf-empty-list"]]];
const _c8 = ["adf-empty-list"];
export var DisplayMode;
(function (DisplayMode) {
    DisplayMode["List"] = "list";
    DisplayMode["Gallery"] = "gallery";
})(DisplayMode || (DisplayMode = {}));
export var ShowHeaderMode;
(function (ShowHeaderMode) {
    ShowHeaderMode["Never"] = "never";
    ShowHeaderMode["Always"] = "always";
    ShowHeaderMode["Data"] = "data";
})(ShowHeaderMode || (ShowHeaderMode = {}));
export class DataTableComponent {
    constructor(elementRef, differs) {
        this.elementRef = elementRef;
        this.display = DisplayMode.List;
        this.rows = [];
        this.sorting = [];
        this.columns = [];
        this.selectionMode = 'single';
        this.multiselect = false;
        this.actions = false;
        this.actionsPosition = 'right';
        this.actionsVisibleOnHover = false;
        this.contextMenu = false;
        this.rowStyleClass = '';
        this.showHeader = ShowHeaderMode.Data;
        this.stickyHeader = false;
        this.rowClick = new EventEmitter();
        this.rowDblClick = new EventEmitter();
        this.showRowContextMenu = new EventEmitter();
        this.showRowActionsMenu = new EventEmitter();
        this.executeRowAction = new EventEmitter();
        this.loading = false;
        this.noPermission = false;
        this.rowMenuCacheEnabled = true;
        this.resolverFn = null;
        this.allowFiltering = false;
        this.isSelectAllIndeterminate = false;
        this.isSelectAllChecked = false;
        this.selection = new Array();
        this.fakeRows = [];
        this.rowMenuCache = {};
        this.subscriptions = [];
        if (differs) {
            this.differ = differs.find([]).create(null);
        }
        this.click$ = new Observable((observer) => this.clickObserver = observer)
            .pipe(share());
    }
    onKeydown(event) {
        this.keyManager.onKeydown(event);
    }
    ngAfterContentInit() {
        if (this.columnList) {
            this.subscriptions.push(this.columnList.columns.changes.subscribe(() => {
                this.setTableSchema();
            }));
        }
        this.datatableLayoutFix();
        this.setTableSchema();
    }
    ngAfterViewInit() {
        this.keyManager = new FocusKeyManager(this.rowsList)
            .withWrap()
            .skipPredicate(item => item.disabled);
    }
    ngOnChanges(changes) {
        this.initAndSubscribeClickStream();
        const dataChanges = changes['data'];
        const rowChanges = changes['rows'];
        const columnChanges = changes['columns'];
        if (this.isPropertyChanged(dataChanges) || this.isPropertyChanged(rowChanges) || this.isPropertyChanged(columnChanges)) {
            if (this.isTableEmpty()) {
                this.initTable();
            }
            else {
                if (dataChanges) {
                    this.data = changes['data'].currentValue;
                    this.resetSelection();
                }
                else if (rowChanges) {
                    this.setTableRows(changes['rows'].currentValue);
                    this.setTableSorting(this.sorting);
                }
                else {
                    this.setTableColumns(changes['columns'].currentValue);
                }
            }
            return;
        }
        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {
            this.resetSelection();
            this.emitRowSelectionEvent('row-unselect', null);
        }
        if (this.isPropertyChanged(changes['sorting'])) {
            this.setTableSorting(changes['sorting'].currentValue);
        }
        if (this.isPropertyChanged(changes['display'])) {
            this.datatableLayoutFix();
        }
    }
    isColumnSortActive(column) {
        if (!column || !this.data.getSorting()) {
            return false;
        }
        return column.key === this.data.getSorting().key;
    }
    ngDoCheck() {
        const changes = this.differ.diff(this.rows);
        if (changes) {
            this.setTableRows(this.rows);
        }
    }
    isPropertyChanged(property) {
        return !!(property && property.currentValue);
    }
    convertToRowsData(rows) {
        return rows.map((row) => new ObjectDataRow(row, row.isSelected));
    }
    convertToColumnsData(columns) {
        return columns.map((column) => new ObjectDataColumn(column));
    }
    convertToDataSorting(sorting) {
        if (sorting && sorting.length > 0) {
            return new DataSorting(sorting[0], sorting[1]);
        }
        return null;
    }
    initAndSubscribeClickStream() {
        this.unsubscribeClickStream();
        const singleClickStream = this.click$
            .pipe(buffer(this.click$.pipe(debounceTime(250))), map((list) => list), filter((x) => x.length === 1));
        this.singleClickStreamSub = singleClickStream.subscribe((dataRowEvents) => {
            const event = dataRowEvents[0];
            this.handleRowSelection(event.value, event.event);
            this.rowClick.emit(event);
            if (!event.defaultPrevented) {
                this.elementRef.nativeElement.dispatchEvent(new CustomEvent('row-click', {
                    detail: event,
                    bubbles: true
                }));
            }
        });
        const multiClickStream = this.click$
            .pipe(buffer(this.click$.pipe(debounceTime(250))), map((list) => list), filter((x) => x.length >= 2));
        this.multiClickStreamSub = multiClickStream.subscribe((dataRowEvents) => {
            const event = dataRowEvents[0];
            this.rowDblClick.emit(event);
            if (!event.defaultPrevented) {
                this.elementRef.nativeElement.dispatchEvent(new CustomEvent('row-dblclick', {
                    detail: event,
                    bubbles: true
                }));
            }
        });
    }
    unsubscribeClickStream() {
        if (this.singleClickStreamSub) {
            this.singleClickStreamSub.unsubscribe();
            this.singleClickStreamSub = null;
        }
        if (this.multiClickStreamSub) {
            this.multiClickStreamSub.unsubscribe();
            this.multiClickStreamSub = null;
        }
    }
    initTable() {
        const runtimeColumns = this.getRuntimeColumns();
        this.data = new ObjectDataTableAdapter(this.rows, runtimeColumns);
        this.setTableSorting(this.sorting);
        this.resetSelection();
        this.rowMenuCache = {};
    }
    isTableEmpty() {
        return this.data === undefined || this.data === null;
    }
    setTableRows(rows) {
        if (this.data) {
            this.resetSelection();
            const rowsData = this.convertToRowsData(rows);
            this.data.setRows(rowsData);
        }
    }
    setTableColumns(columns) {
        if (this.data) {
            this.resetSelection();
            const columnsData = this.convertToColumnsData(columns);
            this.data.setColumns(columnsData);
        }
    }
    getRuntimeColumns() {
        return [
            ...(this.columns || []),
            ...this.getSchemaFromHtml()
        ];
    }
    setTableSchema() {
        const columns = this.getRuntimeColumns();
        if (this.data && columns.length > 0) {
            this.data.setColumns(columns);
        }
    }
    setTableSorting(sorting) {
        if (this.data) {
            this.data.setSorting(this.convertToDataSorting(sorting));
        }
    }
    getSchemaFromHtml() {
        let schema = [];
        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {
            schema = this.columnList.columns.map((c) => c);
        }
        return schema;
    }
    onRowClick(row, mouseEvent) {
        if (mouseEvent) {
            mouseEvent.preventDefault();
        }
        if (row) {
            const rowIndex = this.data.getRows().indexOf(row) + (this.isHeaderListVisible() ? 1 : 0);
            this.keyManager.setActiveItem(rowIndex);
            const dataRowEvent = new DataRowEvent(row, mouseEvent, this);
            this.clickObserver.next(dataRowEvent);
        }
    }
    onEnterKeyPressed(row, e) {
        if (row) {
            this.handleRowSelection(row, e);
        }
    }
    isHeaderListVisible() {
        return this.isHeaderVisible() && this.display === DisplayMode.List;
    }
    handleRowSelection(row, e) {
        if (this.data) {
            if (this.isSingleSelectionMode()) {
                this.resetSelection();
                this.selectRow(row, true);
                this.emitRowSelectionEvent('row-select', row);
            }
            if (this.isMultiSelectionMode()) {
                const modifier = e && (e.metaKey || e.ctrlKey);
                let newValue;
                if (this.selection.length === 1) {
                    newValue = !row.isSelected;
                }
                else {
                    newValue = modifier ? !row.isSelected : true;
                }
                const domEventName = newValue ? 'row-select' : 'row-unselect';
                if (!modifier) {
                    this.resetSelection();
                }
                this.selectRow(row, newValue);
                this.emitRowSelectionEvent(domEventName, row);
            }
        }
    }
    resetSelection() {
        if (this.data) {
            const rows = this.data.getRows();
            if (rows && rows.length > 0) {
                rows.forEach((r) => r.isSelected = false);
            }
            this.selection = [];
        }
        this.isSelectAllChecked = false;
    }
    onRowDblClick(row, event) {
        if (event) {
            event.preventDefault();
        }
        const dataRowEvent = new DataRowEvent(row, event, this);
        this.clickObserver.next(dataRowEvent);
    }
    onRowEnterKeyDown(row, keyboardEvent) {
        if (keyboardEvent.key === 'Enter') {
            this.onKeyboardNavigate(row, keyboardEvent);
        }
    }
    onRowKeyUp(row, keyboardEvent) {
        const event = new CustomEvent('row-keyup', {
            detail: {
                row: row,
                keyboardEvent: keyboardEvent,
                sender: this
            },
            bubbles: true
        });
        this.elementRef.nativeElement.dispatchEvent(event);
        if (event.defaultPrevented) {
            keyboardEvent.preventDefault();
        }
    }
    onKeyboardNavigate(row, keyboardEvent) {
        if (keyboardEvent) {
            keyboardEvent.preventDefault();
        }
        const event = new DataRowEvent(row, keyboardEvent, this);
        this.rowDblClick.emit(event);
        this.elementRef.nativeElement.dispatchEvent(new CustomEvent('row-dblclick', {
            detail: event,
            bubbles: true
        }));
    }
    onColumnHeaderClick(column) {
        var _a;
        if (column && column.sortable) {
            const current = this.data.getSorting();
            let newDirection = 'asc';
            if (current && column.key === current.key) {
                newDirection = ((_a = current.direction) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'asc' ? 'desc' : 'asc';
            }
            this.sorting = [column.key, newDirection];
            this.data.setSorting(new DataSorting(column.key, newDirection));
            this.emitSortingChangedEvent(column.key, column.sortingKey, newDirection);
        }
        this.keyManager.updateActiveItem(0);
    }
    onSelectAllClick(matCheckboxChange) {
        this.isSelectAllChecked = matCheckboxChange.checked;
        this.isSelectAllIndeterminate = false;
        if (this.multiselect) {
            const rows = this.data.getRows();
            if (rows && rows.length > 0) {
                for (let i = 0; i < rows.length; i++) {
                    this.selectRow(rows[i], matCheckboxChange.checked);
                }
            }
            const domEventName = matCheckboxChange.checked ? 'row-select' : 'row-unselect';
            const row = this.selection.length > 0 ? this.selection[0] : null;
            this.emitRowSelectionEvent(domEventName, row);
        }
    }
    onCheckboxChange(row, event) {
        const newValue = event.checked;
        this.selectRow(row, newValue);
        const domEventName = newValue ? 'row-select' : 'row-unselect';
        this.emitRowSelectionEvent(domEventName, row);
        this.checkSelectAllCheckboxState();
    }
    checkSelectAllCheckboxState() {
        if (this.multiselect) {
            let numberOfSelectedRows = 0;
            const rows = this.data.getRows();
            rows.forEach((row) => {
                if (row.isSelected) {
                    numberOfSelectedRows++;
                }
            });
            if (numberOfSelectedRows === rows.length) {
                this.isSelectAllChecked = true;
                this.isSelectAllIndeterminate = false;
            }
            else if (numberOfSelectedRows > 0 && numberOfSelectedRows < rows.length) {
                this.isSelectAllChecked = false;
                this.isSelectAllIndeterminate = true;
            }
            else {
                this.isSelectAllChecked = false;
                this.isSelectAllIndeterminate = false;
            }
        }
    }
    onImageLoadingError(event, row) {
        if (event) {
            const element = event.target;
            if (this.fallbackThumbnail) {
                element.src = this.fallbackThumbnail;
            }
            else {
                element.src = row.imageErrorResolver(event);
            }
        }
    }
    isIconValue(row, col) {
        if (row && col) {
            const value = row.getValue(col.key);
            return value && value.startsWith('material-icons://');
        }
        return false;
    }
    asIconValue(row, col) {
        if (this.isIconValue(row, col)) {
            const value = row.getValue(col.key) || '';
            return value.replace('material-icons://', '');
        }
        return null;
    }
    iconAltTextKey(value) {
        return value ? 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\.[a-z]+/, '') : '';
    }
    isColumnSorted(col, direction) {
        if (col && direction) {
            const sorting = this.data.getSorting();
            return sorting && sorting.key === col.key && sorting.direction.toLocaleLowerCase() === direction;
        }
        return false;
    }
    getContextMenuActions(row, col) {
        const event = new DataCellEvent(row, col, []);
        this.showRowContextMenu.emit(event);
        return event.value.actions;
    }
    getRowActions(row, col) {
        const id = row.getValue('id');
        if (!this.rowMenuCache[id]) {
            const event = new DataCellEvent(row, col, []);
            this.showRowActionsMenu.emit(event);
            if (!this.rowMenuCacheEnabled) {
                return this.getVisibleActions(event.value.actions);
            }
            this.rowMenuCache[id] = event.value.actions;
        }
        return this.getVisibleActions(this.rowMenuCache[id]);
    }
    getVisibleActions(actions) {
        return actions.filter((action) => action.visible || action.visible === undefined);
    }
    onExecuteRowAction(row, action) {
        if (action.disabled || action.disabled) {
            event.stopPropagation();
        }
        else {
            this.executeRowAction.emit(new DataRowActionEvent(row, action));
        }
    }
    getHideActionsWithoutHoverClass(actionsMenuTrigger) {
        return { 'adf-datatable-hide-actions-without-hover': this.actionsVisibleOnHover && !actionsMenuTrigger.menuOpen };
    }
    rowAllowsDrop(row) {
        return row.isDropTarget === true;
    }
    hasSelectionMode() {
        return this.isSingleSelectionMode() || this.isMultiSelectionMode();
    }
    isSingleSelectionMode() {
        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';
    }
    isMultiSelectionMode() {
        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';
    }
    getRowStyle(row) {
        row.cssClass = row.cssClass ? row.cssClass : '';
        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';
        return `${row.cssClass} ${this.rowStyleClass}`;
    }
    getSortingKey() {
        if (this.data.getSorting()) {
            return this.data.getSorting().key;
        }
        return null;
    }
    selectRow(row, value) {
        if (row) {
            row.isSelected = value;
            const idx = (row === null || row === void 0 ? void 0 : row.id) ? this.findSelectionById(row.id) : this.selection.indexOf(row);
            if (value) {
                if (idx < 0) {
                    this.selection.push(row);
                }
            }
            else {
                if (idx > -1) {
                    this.selection.splice(idx, 1);
                }
            }
        }
    }
    findSelectionById(id) {
        return this.selection.findIndex(selection => (selection === null || selection === void 0 ? void 0 : selection.id) === id);
    }
    getCellTooltip(row, col) {
        if (row && col && col.formatTooltip) {
            const result = col.formatTooltip(row, col);
            if (result) {
                return result;
            }
        }
        return null;
    }
    getSortableColumns() {
        return this.data.getColumns().filter((column) => {
            return column.sortable === true;
        });
    }
    isEmpty() {
        return this.data.getRows().length === 0;
    }
    isHeaderVisible() {
        let headerVisibility;
        if (this.showHeader === ShowHeaderMode.Data) {
            headerVisibility = !this.loading && !this.noPermission && !this.isEmpty();
        }
        else if (this.showHeader === ShowHeaderMode.Always) {
            headerVisibility = !this.loading && !this.noPermission;
        }
        else if (this.showHeader === ShowHeaderMode.Never) {
            headerVisibility = false;
        }
        return headerVisibility;
    }
    isStickyHeaderEnabled() {
        return this.stickyHeader && this.isHeaderVisible();
    }
    emitRowSelectionEvent(name, row) {
        const domEvent = new CustomEvent(name, {
            detail: {
                row: row,
                selection: this.selection
            },
            bubbles: true
        });
        this.elementRef.nativeElement.dispatchEvent(domEvent);
    }
    emitSortingChangedEvent(key, sortingKey, direction) {
        const domEvent = new CustomEvent('sorting-changed', {
            detail: {
                key,
                sortingKey,
                direction
            },
            bubbles: true
        });
        this.elementRef.nativeElement.dispatchEvent(domEvent);
    }
    ngOnDestroy() {
        this.unsubscribeClickStream();
        this.subscriptions.forEach((s) => s.unsubscribe());
        this.subscriptions = [];
        if (this.dataRowsChanged) {
            this.dataRowsChanged.unsubscribe();
            this.dataRowsChanged = null;
        }
    }
    datatableLayoutFix() {
        const maxGalleryRows = 25;
        if (this.display === 'gallery') {
            for (let i = 0; i < maxGalleryRows; i++) {
                this.fakeRows.push('');
            }
        }
        else {
            this.fakeRows = [];
        }
    }
    getNameColumnValue() {
        return this.data.getColumns().find((el) => {
            return el.key.includes('name');
        });
    }
    getAutomationValue(row) {
        const name = this.getNameColumnValue();
        return name ? row.getValue(name.key) : '';
    }
    getAriaSort(column) {
        if (!this.isColumnSortActive(column)) {
            return 'ADF-DATATABLE.ACCESSIBILITY.SORT_NONE';
        }
        return this.isColumnSorted(column, 'asc') ?
            'ADF-DATATABLE.ACCESSIBILITY.SORT_ASCENDING' :
            'ADF-DATATABLE.ACCESSIBILITY.SORT_DESCENDING';
    }
    getSortLiveAnnouncement(column) {
        if (!this.isColumnSortActive(column)) {
            return 'ADF-DATATABLE.ACCESSIBILITY.SORT_DEFAULT';
        }
        return this.isColumnSorted(column, 'asc') ?
            'ADF-DATATABLE.ACCESSIBILITY.SORT_ASCENDING_BY' :
            'ADF-DATATABLE.ACCESSIBILITY.SORT_DESCENDING_BY';
    }
}
DataTableComponent.ɵfac = function DataTableComponent_Factory(t) { return new (t || DataTableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };
DataTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableComponent, selectors: [["adf-datatable"]], contentQueries: function DataTableComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DataColumnListComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnList = _t.first);
    } }, viewQuery: function DataTableComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(DataTableRowComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rowsList = _t);
    } }, hostAttrs: [1, "adf-datatable"], hostBindings: function DataTableComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup", function DataTableComponent_keyup_HostBindingHandler($event) { return ctx.onKeydown($event); });
    } }, inputs: { display: "display", rows: "rows", sorting: "sorting", columns: "columns", selectionMode: "selectionMode", multiselect: "multiselect", actions: "actions", actionsPosition: "actionsPosition", actionsVisibleOnHover: "actionsVisibleOnHover", contextMenu: "contextMenu", rowStyleClass: "rowStyleClass", showHeader: "showHeader", stickyHeader: "stickyHeader", loading: "loading", noPermission: "noPermission", rowMenuCacheEnabled: "rowMenuCacheEnabled", resolverFn: "resolverFn", allowFiltering: "allowFiltering", data: "data", fallbackThumbnail: "fallbackThumbnail", rowStyle: "rowStyle" }, outputs: { rowClick: "rowClick", rowDblClick: "rowDblClick", showRowContextMenu: "showRowContextMenu", showRowActionsMenu: "showRowActionsMenu", executeRowAction: "executeRowAction" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c8, decls: 1, vars: 1, consts: [["role", "grid", "class", "adf-full-width", 3, "adf-datatable-card", "adf-datatable-list", "adf-sticky-header", "adf-datatable--empty", "adf-datatable--empty--header-visible", 4, "ngIf"], ["role", "grid", 1, "adf-full-width"], ["class", "adf-datatable-header", "role", "rowgroup", 3, "ngClass", 4, "ngIf"], ["role", "rowgroup", 1, "adf-datatable-body"], [4, "ngIf"], ["role", "row", "class", "adf-no-permission__row", 3, "adf-datatable-row", "adf-datatable-card-permissions", 4, "ngIf"], [3, "adf-datatable-row", "adf-datatable-card-loading", 4, "ngIf"], ["role", "rowgroup", 1, "adf-datatable-header", 3, "ngClass"], ["data-automation-id", "datatable-row-header", "class", "adf-datatable-row", "role", "row", 3, "disabled", 4, "ngIf"], ["data-automation-id", "datatable-row-header", "role", "row", 1, "adf-datatable-row", 3, "disabled"], ["class", "adf-actions-column adf-datatable-cell-header", 4, "ngIf"], ["class", "adf-datatable-cell-header adf-datatable-checkbox", 4, "ngIf"], ["role", "columnheader", "adf-drop-zone", "", "dropTarget", "header", 3, "class", "adf-sortable", "adf-datatable__header--sorted-asc", "adf-datatable__header--sorted-desc", "dropColumn", "click", "keyup.enter", 4, "ngFor", "ngForOf"], ["class", "adf-actions-column adf-datatable-cell-header adf-datatable__actions-cell", 4, "ngIf"], [1, "adf-actions-column", "adf-datatable-cell-header"], [1, "adf-sr-only"], [1, "adf-datatable-cell-header", "adf-datatable-checkbox"], [1, "adf-checkbox-sr-only", 3, "indeterminate", "checked", "change"], ["role", "columnheader", "adf-drop-zone", "", "dropTarget", "header", 3, "dropColumn", "click", "keyup.enter"], ["class", "adf-datatable-cell-value", 4, "ngIf"], ["class", "adf-sr-only", "aria-live", "polite", 4, "ngIf"], [1, "adf-datatable-cell-value"], ["aria-live", "polite", 1, "adf-sr-only"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "adf-actions-column", "adf-datatable-cell-header", "adf-datatable__actions-cell"], [3, "value"], [3, "value", "click", "keyup.enter", 4, "ngFor", "ngForOf"], [3, "value", "click", "keyup.enter"], [3, "row", "adf-upload", "adf-upload-data", "ngStyle", "ngClass", "select", "keyup", "keydown", 4, "ngFor", "ngForOf"], ["role", "row", 3, "adf-datatable-row", "adf-datatable-card-empty", 4, "ngIf"], ["class", "adf-datatable-row adf-datatable-row-empty-card", 4, "ngFor", "ngForOf"], [3, "row", "adf-upload", "adf-upload-data", "ngStyle", "ngClass", "select", "keyup", "keydown"], ["role", "gridcell", "class", "adf-datatable-cell", 4, "ngIf"], ["class", "adf-datatable-cell adf-datatable-checkbox", 4, "ngIf"], ["role", "gridcell", "adf-drop-zone", "", "dropTarget", "cell", 3, "class", "adf-context-menu", "adf-context-menu-enabled", "dropColumn", "dropRow", "click", "keydown.enter", 4, "ngFor", "ngForOf"], ["role", "gridcell", "class", "adf-datatable-cell adf-datatable__actions-cell adf-datatable-center-actions-column-ie", 4, "ngIf"], ["role", "gridcell", 1, "adf-datatable-cell"], ["mat-icon-button", "", 3, "matMenuTriggerFor", "ngClass", "title"], ["actionsMenuTrigger", "matMenuTrigger"], ["menu", "matMenu"], ["mat-menu-item", "", 3, "disabled", "click", 4, "ngFor", "ngForOf"], ["mat-menu-item", "", 3, "disabled", "click"], [1, "adf-datatable-cell", "adf-datatable-checkbox"], ["role", "checkbox", 1, "adf-checkbox-sr-only", 3, "checked", "change"], ["role", "gridcell", "adf-drop-zone", "", "dropTarget", "cell", 3, "adf-context-menu", "adf-context-menu-enabled", "dropColumn", "dropRow", "click", "keydown.enter"], ["class", "adf-datatable-cell-container", 4, "ngIf"], [1, "adf-datatable-cell-container"], [3, "ngSwitch"], ["class", "adf-cell-value", 4, "ngSwitchCase"], ["class", "adf-cell-value", 4, "ngSwitchDefault"], [1, "adf-cell-value"], [4, "ngIf", "ngIfElse"], ["no_iconvalue", ""], ["class", "adf-datatable-selected", "svgIcon", "selected", 4, "ngIf", "ngIfElse"], ["no_selected_row", ""], ["svgIcon", "selected", 1, "adf-datatable-selected"], [1, "adf-datatable-center-img-ie", 3, "src", "error"], [1, "adf-datatable-center-date-column-ie", 3, "data", "column", "row", "resolverFn", "tooltip"], [3, "data", "column", "row", "resolverFn", "tooltip"], [1, "adf-datatable-center-size-column-ie", 3, "data", "column", "row", "resolverFn", "tooltip"], [3, "copyContent", "data", "column", "row", "resolverFn", "tooltip"], [3, "editable", "data", "column", "resolverFn", "row"], ["role", "gridcell", 1, "adf-datatable-cell", "adf-datatable__actions-cell", "adf-datatable-center-actions-column-ie"], ["role", "row"], ["role", "gridcell", 1, "adf-no-content-container", "adf-datatable-cell"], ["ngFor", "", 3, "ngForOf", "ngForTemplate"], [1, "adf-datatable-row", "adf-datatable-row-empty-card"], ["role", "row", 1, "adf-no-permission__row"], [1, "adf-no-permission__cell", "adf-no-content-container", "adf-datatable-cell"], [1, "adf-no-content-container", "adf-datatable-cell"]], template: function DataTableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c7);
        ɵngcc0.ɵɵtemplate(0, DataTableComponent_div_0_Template, 6, 14, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.data);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc2.DataTableRowComponent, ɵngcc1.NgForOf, ɵngcc3.MatCheckbox, ɵngcc4.DropZoneDirective, ɵngcc1.NgTemplateOutlet, ɵngcc5.MatFormField, ɵngcc6.MatSelect, ɵngcc7.MatOption, ɵngcc8.UploadDirective, ɵngcc1.NgStyle, ɵngcc9.MatButton, ɵngcc10.MatMenuTrigger, ɵngcc11.MatIcon, ɵngcc10._MatMenu, ɵngcc10.MatMenuItem, ɵngcc12.ContextMenuDirective, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc13.DateCellComponent, ɵngcc14.LocationCellComponent, ɵngcc15.FileSizeCellComponent, ɵngcc16.DataTableCellComponent, ɵngcc17.JsonCellComponent], pipes: [ɵngcc18.TranslatePipe, ɵngcc19.FileTypePipe, ɵngcc1.UpperCasePipe, ɵngcc20.LocalizedDatePipe], styles: [".adf-datatable{height:100%;overflow-y:scroll}.adf-datatable .adf-full-width{width:100%}.adf-datatable-card{border:1px solid var(--theme-fg-divider)}.adf-datatable-card .adf-datatable-body{align-content:flex-start;align-items:flex-start;display:flex;flex-flow:row wrap;justify-content:space-evenly;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-row{display:flex;flex:0 1 24%;flex-direction:column;height:200px;margin:6px;max-width:288px!important;min-width:288px!important;overflow:hidden!important;padding:15px;position:relative;transition:all .3s ease;transition:box-shadow .28s cubic-bezier(.4,0,.2,1);width:288px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-row:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.adf-datatable-card .adf-datatable-body .adf-datatable-row-empty-card{height:0!important;margin-bottom:0;margin-top:0;padding-bottom:0;padding-top:0}.adf-datatable-card .adf-datatable-body .adf-is-selected{background:var(--adf-datatable-selected-color);padding-bottom:31px}.adf-datatable-card .adf-datatable-body .adf-datatable-card-permission{min-height:250px;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-card-permission .adf-datatable-cell{height:240px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-card-loading{min-height:250px;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-card-loading .adf-datatable-cell{height:240px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-card-empty{min-height:380px;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-card-empty .adf-datatable-cell{height:370px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-cell--image{margin-left:8px}.adf-datatable-card .adf-datatable-body .adf-datatable-cell{flex:0 1 24%;height:136px!important;outline:none;overflow:hidden;text-align:left;text-overflow:ellipsis;white-space:nowrap}.adf-datatable-card .adf-datatable-body .adf-datatable-cell:before{color:var(--theme-text-color);content:attr(title);float:left;margin-left:10px;overflow:hidden;text-align:left;text-overflow:ellipsis;white-space:nowrap;width:140px}.adf-datatable-card .adf-datatable-body .adf-datatable-cell .adf-datatable-cell-value{display:block;overflow:hidden;text-overflow:ellipsis}.adf-datatable-card .adf-datatable-body .adf-datatable__actions-cell{height:42px!important;position:absolute;right:0;top:4px;width:42px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-row:not(:hover) .adf-datatable-hide-actions-without-hover{display:none}.adf-datatable-card .adf-datatable-body .adf-image-table-cell{border-bottom:1px solid var(--theme-fg-divider);margin:8px;overflow:visible;padding:4px}.adf-datatable-card .adf-datatable-body .adf-image-table-cell .adf-datatable-cell-container{float:left;width:42px}.adf-datatable-card .adf-datatable-body .adf-image-table-cell:after{content:attr(filename);float:left;margin:2px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:140px}.adf-datatable-card .adf-datatable-body .adf-datatable-checkbox{margin:8px}.adf-datatable-card .adf-datatable-header{float:right;margin-right:18px}.adf-datatable-list{background-color:var(--theme-card-bg-color);border:1px solid var(--theme-border-color);box-sizing:border-box;display:flex;flex-direction:column;overflow-x:auto}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-datatable-center-size-column-ie{padding-top:17px}.adf-datatable-list .adf-datatable-center-actions-column-ie{padding-top:7px!important}.adf-datatable-list .adf-datatable-center-date-column-ie{position:relative!important}.adf-datatable-list .adf-datatable-center-date-column-ie .adf-datatable-cell-value{width:100%}.adf-datatable-list .adf-datatable-center-img-ie{height:56px;min-width:0;padding:0;width:24px}}.adf-datatable-list .adf-datatable-header{box-sizing:border-box;display:flex;flex-direction:column;min-width:100%;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.adf-datatable-list .adf-datatable-cell{color:var(--theme-text-fg-color)}.adf-datatable-list .adf-datatable-row:focus,.adf-datatable-list .adf-datatable-row:hover{background-color:var(--theme-bg-hover-color)}.adf-datatable-list .adf-datatable-row:focus{outline:1px solid var(--theme-accent-color-a200);outline-offset:-1px}.adf-datatable-list .adf-datatable-row .adf-cell-value:focus,.adf-datatable-list .adf-datatable-row .adf-datatable-cell-header:focus{outline:1px solid var(--theme-accent-color-a200);outline-offset:-1px}.adf-datatable-list .adf-datatable-body{background-color:inherit;display:flex;flex-direction:column;min-width:100%;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.adf-datatable-list .adf-datatable-body .adf-datatable-row{-webkit-touch-callout:none;-webkit-user-select:none;border-top:1px solid var(--theme-border-color);cursor:pointer;min-height:56px;transition-duration:.28s;transition-property:background-color;transition-timing-function:cubic-bezier(.4,0,.2,1);user-select:none}.adf-datatable-list .adf-datatable-body .adf-datatable-row.adf-is-selected,.adf-datatable-list .adf-datatable-body .adf-datatable-row.adf-is-selected:hover{background-color:var(--theme-selected-button-bg-color)}.adf-datatable-list .adf-datatable-body .adf-datatable-row:last-child{border-bottom:1px solid var(--theme-border-color)}.adf-datatable-list .adf-datatable-row{align-items:center;display:flex;padding-left:15px;padding-right:15px}.adf-datatable-list .adf-datatable-row .adf-datatable-checkbox{max-width:50px;width:50px}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-datatable-row .adf-datatable-checkbox{padding-top:15px}}.adf-datatable-list .adf-datatable-cell,.adf-datatable-list .adf-datatable-cell-header{box-sizing:border-box;min-width:50px;text-align:left}.adf-datatable-list .adf-datatable-cell--text,.adf-datatable-list .adf-datatable-cell-header--text{position:relative;text-align:left}.adf-datatable-list .adf-datatable-cell--date,.adf-datatable-list .adf-datatable-cell-header--date{text-align:left}.adf-datatable-list .adf-datatable-cell--number,.adf-datatable-list .adf-datatable-cell-header--number{text-align:right}.adf-datatable-list .adf-datatable-cell--icon,.adf-datatable-list .adf-datatable-cell--image,.adf-datatable-list .adf-datatable-cell-header--icon,.adf-datatable-list .adf-datatable-cell-header--image{min-width:50px;padding-left:24px;padding-right:24px;text-align:left;width:50px}.adf-datatable-list .adf-datatable-cell--fileSize,.adf-datatable-list .adf-datatable-cell-header--fileSize{min-width:50px}.adf-datatable-list .adf-datatable-cell-header{-webkit-touch-callout:none;-webkit-user-select:none;box-sizing:border-box;color:var(--theme-text-fg-color);cursor:pointer;font-size:12px;font-weight:700;letter-spacing:0;line-height:24px;min-height:56px!important;padding-bottom:8px;padding-top:12px!important;position:relative;text-overflow:ellipsis;user-select:none;vertical-align:bottom}.adf-datatable-list .adf-datatable-cell-header.adf-sortable{-webkit-touch-callout:none;-webkit-user-select:none;align-items:center;display:flex;user-select:none}.adf-datatable-list .adf-datatable-cell-header.adf-sortable:hover{cursor:pointer}.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-asc,.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-desc{color:var(--theme-text-fg-color)}.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-asc:before,.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-desc:before{-webkit-font-feature-settings:\"liga\";-webkit-font-smoothing:antialiased;content:\"\\e5d8\";display:inline-block;font-family:Material Icons;font-feature-settings:\"liga\";font-size:24px;font-size:16px;font-style:normal;font-weight:400;left:5px;letter-spacing:normal;line-height:1;position:relative;right:5px;text-transform:none;vertical-align:sub;word-wrap:normal}.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-desc:before{content:\"\\e5db\"}.adf-datatable-list .adf-datatable-cell-header.adf-datatable-cell--fileSize.adf-datatable__header--sorted-asc:before,.adf-datatable-list .adf-datatable-cell-header.adf-datatable-cell--fileSize.adf-datatable__header--sorted-desc:before{left:-3px;right:-3px}.adf-datatable-list .adf-datatable-cell-header.adf-datatable-checkbox{align-items:center;display:flex}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-1,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-1{flex-grow:1}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-2,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-2{flex-grow:2}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-3,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-3{flex-grow:3}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-4,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-4{flex-grow:4}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-5,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-5{flex-grow:5}.adf-datatable-list .adf-datatable-cell-header.adf-no-grow-cell,.adf-datatable-list .adf-datatable-cell.adf-no-grow-cell{flex-grow:0;min-width:100px}.adf-datatable-list .adf-datatable-cell,.adf-datatable-list .adf-datatable-cell-header{align-items:center;display:flex;flex:1;min-height:inherit;padding:0}.adf-datatable-list .adf-datatable-cell-header .adf-datatable-cell-container,.adf-datatable-list .adf-datatable-cell .adf-datatable-cell-container{align-items:center;display:flex;min-height:inherit;overflow:hidden;width:100%}.adf-datatable-list .adf-datatable-cell-header .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell .adf-datatable-cell-value{display:block;padding:10px;word-break:break-word}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-datatable-cell-header .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell .adf-datatable-cell-value{padding:17px 10px 10px}}.adf-datatable-list .adf-datatable-cell--fileSize .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell-header--fileSize .adf-datatable-cell-value{padding:0 10px 0 0}.adf-datatable-list .adf-cell-value{align-items:center;display:flex;min-height:inherit;width:100%;word-break:break-all}.adf-datatable-list .adf-datatable-cell--image,.adf-datatable-list .adf-datatable__actions-cell{display:flex;max-width:50px}.adf-datatable-list .adf-datatable-row:not(:hover) .adf-datatable-hide-actions-without-hover{display:none}.adf-datatable-list .adf-datatable-cell--image{max-width:50px}.adf-datatable-list .adf-location-cell a{color:var(--theme-text-fg-color);text-decoration:none}.adf-datatable-list .adf-location-cell a:hover{color:var(--adf-datatable-cell-link-hover-color);text-decoration:underline}.adf-datatable-list .adf-sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.adf-datatable-list .adf-is-selected{background:var(--adf-datatable-selected-color)}.adf-datatable-list .adf-datatable-link{color:var(--theme-text-fg-color);text-decoration:none}.adf-datatable-list .adf-datatable-link:hover{color:var(--adf-datatable-cell-link-hover-color);text-decoration:underline}.adf-datatable-list .adf-dynamic-column .adf-datatable-link:hover{text-decoration:none}.adf-datatable-list .adf-dynamic-column .adf-datatable-link:hover .adf-datatable-cell-value{text-decoration:underline}.adf-datatable-list .adf-datatable-cell-header .adf-datatable-link .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell .adf-datatable-link .adf-datatable-cell-value{padding:0 10px}.adf-datatable-list .adf-ellipsis-cell{overflow:hidden;padding:0 4px;position:sticky;text-overflow:ellipsis;white-space:nowrap}.adf-datatable-list .adf-ellipsis-cell.adf-datatable-cell-header,.adf-datatable-list .adf-ellipsis-cell .adf-datatable-content-cell{max-width:calc(100% - .1px);overflow:hidden;text-overflow:ellipsis}.adf-datatable-list .adf-ellipsis-cell.adf-datatable-cell-header .adf-datatable-cell-value,.adf-datatable-list .adf-ellipsis-cell .adf-datatable-content-cell .adf-datatable-cell-value{overflow:hidden;text-overflow:ellipsis}.adf-datatable-list .adf-ellipsis-cell .adf-datatable-content-cell{overflow:unset;position:absolute}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-ellipsis-cell .adf-cell-value{top:100%}}.adf-datatable-list .adf-ellipsis-cell>div:after{content:attr(title);display:block;height:0;overflow:hidden}.adf-datatable-list .adf-no-content-container{border:none!important;justify-content:center;padding:0!important;width:100%}.adf-datatable-list .adf-no-content-container>img{width:100%}.adf-datatable-list .adf-loading-content-container{padding:0!important;width:100%}.adf-datatable-list .adf-loading-content-container>img{width:100%}.adf-datatable-list .adf-no-permission__row:hover{background-color:inherit;cursor:default}.adf-datatable-list .adf-no-permission__cell{padding:0!important}.adf-datatable-list .adf-hidden{display:none}@media (max-width:768px){.adf-datatable-list .adf-desktop-only{display:none!important}}@media (max-device-width:768px){.adf-datatable-list .adf-desktop-only{display:none!important}}.adf-checkbox-sr-only .mat-checkbox-label{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.adf-sticky-header{border-top:0;height:100%}.adf-sticky-header .adf-datatable-header{border-bottom:1px solid var(--theme-border-color);border-top:1px solid var(--theme-border-color);display:block;margin-right:0}.adf-sticky-header .adf-datatable-body{display:block;flex:1;margin-top:-1px;overflow-y:scroll}.adf-upload__dragging>div{border-bottom:1px dashed var(--theme-accent-color-a200)!important;border-top:1px dashed var(--theme-accent-color-a200)!important}.adf-upload__dragging>div:first-child{border-left:1px dashed var(--theme-accent-color-a200)}.adf-upload__dragging>div:last-child{border-right:1px dashed var(--theme-accent-color-a200)!important}.adf-datatable--empty{align-items:center;display:flex;flex:1;flex-direction:column;height:100%;height:inherit;justify-content:center;min-height:0;overflow:hidden}.adf-datatable--empty .adf-datatable-body .adf-datatable-row{background-color:var(--theme-card-bg-color);border:none!important;height:100%}.adf-datatable--empty .adf-datatable-body .adf-datatable-row:focus,.adf-datatable--empty .adf-datatable-body .adf-datatable-row:hover{background-color:unset;cursor:default}.adf-datatable--empty--header-visible .adf-datatable-header{border:1px solid var(--theme-border-color)}.adf-datatable--empty--header-visible .adf-datatable-body{align-items:center;display:flex;flex:1;flex-direction:column;height:100%;justify-content:center;min-height:0;overflow:hidden}.adf-datatable--empty--header-visible .adf-datatable-body .adf-datatable-row{background-color:var(--theme-card-bg-color);border:none!important;height:100%}.adf-datatable--empty--header-visible .adf-datatable-body .adf-datatable-row:focus,.adf-datatable--empty--header-visible .adf-datatable-body .adf-datatable-row:hover{background-color:unset;cursor:default}"], encapsulation: 2 });
DataTableComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: IterableDiffers }
];
DataTableComponent.propDecorators = {
    rowsList: [{ type: ViewChildren, args: [DataTableRowComponent,] }],
    columnList: [{ type: ContentChild, args: [DataColumnListComponent,] }],
    data: [{ type: Input }],
    display: [{ type: Input }],
    rows: [{ type: Input }],
    sorting: [{ type: Input }],
    columns: [{ type: Input }],
    selectionMode: [{ type: Input }],
    multiselect: [{ type: Input }],
    actions: [{ type: Input }],
    actionsPosition: [{ type: Input }],
    actionsVisibleOnHover: [{ type: Input }],
    fallbackThumbnail: [{ type: Input }],
    contextMenu: [{ type: Input }],
    rowStyle: [{ type: Input }],
    rowStyleClass: [{ type: Input }],
    showHeader: [{ type: Input }],
    stickyHeader: [{ type: Input }],
    rowClick: [{ type: Output }],
    rowDblClick: [{ type: Output }],
    showRowContextMenu: [{ type: Output }],
    showRowActionsMenu: [{ type: Output }],
    executeRowAction: [{ type: Output }],
    loading: [{ type: Input }],
    noPermission: [{ type: Input }],
    rowMenuCacheEnabled: [{ type: Input }],
    resolverFn: [{ type: Input }],
    allowFiltering: [{ type: Input }],
    onKeydown: [{ type: HostListener, args: ['keyup', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableComponent, [{
        type: Component,
        args: [{
                selector: 'adf-datatable',
                template: "<div\n    role=\"grid\"\n    *ngIf=\"data\" class=\"adf-full-width\"\n    [class.adf-datatable-card]=\"display === 'gallery'\"\n    [class.adf-datatable-list]=\"display === 'list'\"\n    [class.adf-sticky-header]=\"isStickyHeaderEnabled()\"\n    [class.adf-datatable--empty]=\"(isEmpty() && !isHeaderVisible()) || loading\"\n    [class.adf-datatable--empty--header-visible]=\"isEmpty() && isHeaderVisible()\">\n    <div *ngIf=\"isHeaderVisible()\" class=\"adf-datatable-header\" role=\"rowgroup\" [ngClass]=\"{ 'adf-sr-only': !isHeaderVisible() }\">\n        <adf-datatable-row\n            data-automation-id=\"datatable-row-header\"\n            [disabled]=\"!isHeaderVisible()\"\n            class=\"adf-datatable-row\"\n            *ngIf=\"display === 'list'\"\n            role=\"row\">\n            <!-- Actions (left) -->\n            <div *ngIf=\"actions && actionsPosition === 'left'\" class=\"adf-actions-column adf-datatable-cell-header\">\n                <span class=\"adf-sr-only\">{{ 'ADF-DATATABLE.ACCESSIBILITY.ACTIONS' | translate }}</span>\n            </div>\n            <!-- Columns -->\n            <div *ngIf=\"multiselect\" class=\"adf-datatable-cell-header adf-datatable-checkbox\">\n                <mat-checkbox [indeterminate]=\"isSelectAllIndeterminate\" [checked]=\"isSelectAllChecked\" (change)=\"onSelectAllClick($event)\" class=\"adf-checkbox-sr-only\">{{ 'ADF-DATATABLE.ACCESSIBILITY.SELECT_ALL' | translate }}</mat-checkbox>\n            </div>\n            <div class=\"adf-datatable-cell--{{col.type || 'text'}} {{col.cssClass}} adf-datatable-cell-header\"\n                 *ngFor=\"let col of data.getColumns()\"\n                 [class.adf-sortable]=\"col.sortable\"\n                 [attr.data-automation-id]=\"'auto_id_' + col.key\"\n                 [class.adf-datatable__header--sorted-asc]=\"isColumnSorted(col, 'asc')\"\n                 [class.adf-datatable__header--sorted-desc]=\"isColumnSorted(col, 'desc')\"\n                 (click)=\"onColumnHeaderClick(col)\"\n                 (keyup.enter)=\"onColumnHeaderClick(col)\"\n                 role=\"columnheader\"\n                 [attr.tabindex]=\"isHeaderVisible() ? 0 : null\"\n                 [attr.aria-sort]=\"col.sortable ? (getAriaSort(col) | translate) : null\"\n                 adf-drop-zone dropTarget=\"header\" [dropColumn]=\"col\">\n                <ng-container *ngIf=\"!col.header\">\n                    <span *ngIf=\"col.title\" class=\"adf-datatable-cell-value\">{{ col.title | translate}}</span>\n                    <span *ngIf=\"col.title && col.sortable\" class=\"adf-sr-only\" aria-live=\"polite\">{{ getSortLiveAnnouncement(col) | translate: { string: col.title | translate } }}</span>\n                    <ng-template *ngIf=\"allowFiltering\" [ngTemplateOutlet]=\"headerFilterTemplate\" [ngTemplateOutletContext]=\"{$implicit: col}\"></ng-template>\n                </ng-container>\n                <ng-template *ngIf=\"col.header\" [ngTemplateOutlet]=\"col.header\" [ngTemplateOutletContext]=\"{$implicit: col}\"></ng-template>\n            </div>\n            <!-- Actions (right) -->\n            <div *ngIf=\"actions && actionsPosition === 'right'\" class=\"adf-actions-column adf-datatable-cell-header adf-datatable__actions-cell\">\n                <span class=\"adf-sr-only\">{{ 'ADF-DATATABLE.ACCESSIBILITY.ACTIONS' | translate }}</span>\n            </div>\n        </adf-datatable-row>\n        <mat-form-field *ngIf=\"display === 'gallery' && isHeaderVisible()\">\n            <mat-select [value]=\"getSortingKey()\" [attr.data-automation-id]=\"'grid-view-sorting'\">\n                <mat-option *ngFor=\"let col of getSortableColumns()\"\n                            [value]=\"col.key\"\n                            [attr.data-automation-id]=\"'grid-view-sorting-'+col.title\"\n                            (click)=\"onColumnHeaderClick(col)\"\n                            (keyup.enter)=\"onColumnHeaderClick(col)\">\n                    {{ col.title | translate}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n    <div class=\"adf-datatable-body\" role=\"rowgroup\">\n        <ng-container *ngIf=\"!loading && !noPermission\">\n            <adf-datatable-row *ngFor=\"let row of data.getRows(); let idx = index\"\n                [row]=\"row\"\n                (select)=\"onEnterKeyPressed(row, $event)\"\n                (keyup)=\"onRowKeyUp(row, $event)\"\n                (keydown)=\"onRowEnterKeyDown(row, $event)\"\n                [adf-upload]=\"rowAllowsDrop(row)\"\n                [adf-upload-data]=\"row\"\n                [ngStyle]=\"rowStyle\"\n                [ngClass]=\"getRowStyle(row)\"\n                [attr.data-automation-id]=\"'datatable-row-' + idx\">\n                <!-- Actions (left) -->\n                <div *ngIf=\"actions && actionsPosition === 'left'\" role=\"gridcell\" class=\"adf-datatable-cell\">\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" #actionsMenuTrigger=\"matMenuTrigger\"\n                            [ngClass]=\"getHideActionsWithoutHoverClass(actionsMenuTrigger)\"\n                            [title]=\"'ADF-DATATABLE.CONTENT-ACTIONS.TOOLTIP' | translate\"\n                            [attr.id]=\"'action_menu_left_' + idx\"\n                            [attr.data-automation-id]=\"'action_menu_' + idx\">\n                        <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let action of getRowActions(row)\"\n                                [attr.data-automation-id]=\"action.title\"\n                                [disabled]=\"action.disabled\"\n                                (click)=\"onExecuteRowAction(row, action)\">\n                            <mat-icon *ngIf=\"action.icon\">{{ action.icon }}</mat-icon>\n                            <span>{{ action.title | translate }}</span>\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf=\"multiselect\" class=\"adf-datatable-cell adf-datatable-checkbox\">\n                    <mat-checkbox\n                        [checked]=\"row.isSelected\"\n                        [attr.aria-checked]=\"row.isSelected\"\n                        role=\"checkbox\"\n                        (change)=\"onCheckboxChange(row, $event)\"\n                        class=\"adf-checkbox-sr-only\">\n                        {{ 'ADF-DATATABLE.ACCESSIBILITY.SELECT_FILE' | translate }}\n                    </mat-checkbox>\n                </div>\n                <div *ngFor=\"let col of data.getColumns()\"\n                     role=\"gridcell\"\n                     class=\"adf-datatable-cell adf-datatable-cell--{{col.type || 'text'}} {{col.cssClass}}\"\n                     [attr.title]=\"col.title | translate\"\n                     [attr.data-automation-id]=\"getAutomationValue(row)\"\n                     [attr.aria-selected]=\"row.isSelected ? true : false\"\n                     [attr.aria-label]=\"col.title ? (col.title | translate) : null\"\n                     (click)=\"onRowClick(row, $event)\"\n                     (keydown.enter)=\"onEnterKeyPressed(row, $any($event))\"\n                     [adf-context-menu]=\"getContextMenuActions(row, col)\"\n                     [adf-context-menu-enabled]=\"contextMenu\"\n                     adf-drop-zone dropTarget=\"cell\" [dropColumn]=\"col\" [dropRow]=\"row\">\n                    <div *ngIf=\"!col.template\" class=\"adf-datatable-cell-container\">\n                        <ng-container [ngSwitch]=\"col.type\">\n                            <div *ngSwitchCase=\"'image'\" class=\"adf-cell-value\">\n                                <mat-icon *ngIf=\"isIconValue(row, col); else no_iconvalue\">{{ asIconValue(row, col) }}\n                                </mat-icon>\n                                <ng-template #no_iconvalue>\n                                    <mat-icon class=\"adf-datatable-selected\"\n                                              *ngIf=\"row.isSelected && !multiselect; else no_selected_row\" svgIcon=\"selected\">\n                                    </mat-icon>\n                                    <ng-template #no_selected_row>\n                                        <img class=\"adf-datatable-center-img-ie\"\n                                            [attr.aria-label]=\" (data.getValue(row, col) | fileType) === 'disable' ?\n                                                ('ADF-DATATABLE.ACCESSIBILITY.ICON_DISABLED' | translate) :\n                                                'ADF-DATATABLE.ACCESSIBILITY.ICON_TEXT' | translate:{\n                                                    type: 'ADF-DATATABLE.FILE_TYPE.' + (data.getValue(row, col) | fileType | uppercase) | translate\n                                                }\"\n                                            [attr.alt]=\" (data.getValue(row, col) | fileType) === 'disable' ?\n                                                ('ADF-DATATABLE.ACCESSIBILITY.ICON_DISABLED' | translate) :\n                                                'ADF-DATATABLE.ACCESSIBILITY.ICON_TEXT' | translate:{\n                                                        type: 'ADF-DATATABLE.FILE_TYPE.' + (data.getValue(row, col) | fileType | uppercase) | translate\n                                                }\"\n                                            src=\"{{ data.getValue(row, col) }}\"\n                                            (error)=\"onImageLoadingError($event, row)\">\n                                    </ng-template>\n                                </ng-template>\n                            </div>\n                            <div *ngSwitchCase=\"'icon'\" class=\"adf-cell-value\">\n                                <mat-icon>{{ data.getValue(row, col) }}</mat-icon>\n                            </div>\n                            <div *ngSwitchCase=\"'date'\" class=\"adf-cell-value\" [attr.tabindex]=\"data.getValue(row, col, resolverFn)? 0 : -1\"\n                                 [attr.data-automation-id]=\"'date_' + (data.getValue(row, col, resolverFn) | adfLocalizedDate: 'medium') \">\n                                <adf-date-cell class=\"adf-datatable-center-date-column-ie\"\n                                    [data]=\"data\"\n                                    [column]=\"col\"\n                                    [row]=\"row\"\n                                    [resolverFn]=\"resolverFn\"\n                                    [tooltip]=\"getCellTooltip(row, col)\">\n                                </adf-date-cell>\n                            </div>\n                            <div *ngSwitchCase=\"'location'\" [attr.tabindex]=\"data.getValue(row, col, resolverFn)? 0 : -1\"  class=\"adf-cell-value\"\n                                 [attr.data-automation-id]=\"'location' + data.getValue(row, col, resolverFn)\">\n                                <adf-location-cell\n                                    [data]=\"data\"\n                                    [column]=\"col\"\n                                    [row]=\"row\"\n                                    [resolverFn]=\"resolverFn\"\n                                    [tooltip]=\"getCellTooltip(row, col)\">\n                                </adf-location-cell>\n                            </div>\n                            <div *ngSwitchCase=\"'fileSize'\" [attr.tabindex]=\"data.getValue(row, col, resolverFn)? 0 : -1\" class=\"adf-cell-value\"\n                                 [attr.data-automation-id]=\"'fileSize_' + data.getValue(row, col, resolverFn)\">\n                                <adf-filesize-cell class=\"adf-datatable-center-size-column-ie\"\n                                    [data]=\"data\"\n                                    [column]=\"col\"\n                                    [row]=\"row\"\n                                    [resolverFn]=\"resolverFn\"\n                                    [tooltip]=\"getCellTooltip(row, col)\">\n                                </adf-filesize-cell>\n                            </div>\n                            <div *ngSwitchCase=\"'text'\" [attr.tabindex]=\"data.getValue(row, col, resolverFn)? 0 : -1\"  class=\"adf-cell-value\"\n                                 [attr.data-automation-id]=\"'text_' + data.getValue(row, col, resolverFn)\">\n                                <adf-datatable-cell\n                                    [copyContent]=\"col.copyContent\"\n                                    [data]=\"data\"\n                                    [column]=\"col\"\n                                    [row]=\"row\"\n                                    [resolverFn]=\"resolverFn\"\n                                    [tooltip]=\"getCellTooltip(row, col)\">\n                                </adf-datatable-cell>\n                            </div>\n                            <div *ngSwitchCase=\"'json'\" [attr.tabindex]=\"data.getValue(row, col, resolverFn)? 0 : -1\" class=\"adf-cell-value\">\n                                <adf-json-cell\n                                    [editable]=\"col.editable\"\n                                    [data]=\"data\"\n                                    [column]=\"col\"\n                                    [resolverFn]=\"resolverFn\"\n                                    [row]=\"row\">\n                                </adf-json-cell>\n                            </div>\n                            <span *ngSwitchDefault class=\"adf-cell-value\">\n                    <!-- empty cell for unknown column type -->\n                    </span>\n                        </ng-container>\n                    </div>\n                    <div *ngIf=\"col.template\" class=\"adf-datatable-cell-container\">\n                        <div class=\"adf-cell-value\" [attr.tabindex]=\"col.focus ? 0 : null\">\n                            <ng-container\n                                [ngTemplateOutlet]=\"col.template\"\n                                [ngTemplateOutletContext]=\"{ $implicit: { data: data, row: row, col: col }, value: data.getValue(row, col, resolverFn) }\">\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Actions (right) -->\n                <div *ngIf=\"actions && actionsPosition === 'right'\"\n                     role=\"gridcell\"\n                     class=\"adf-datatable-cell adf-datatable__actions-cell adf-datatable-center-actions-column-ie\">\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" #actionsMenuTrigger=\"matMenuTrigger\"\n                            [ngClass]=\"getHideActionsWithoutHoverClass(actionsMenuTrigger)\"\n                            [attr.aria-label]=\"'ADF-DATATABLE.ACCESSIBILITY.ROW_OPTION_BUTTON' | translate\"\n                            [title]=\"'ADF-DATATABLE.CONTENT-ACTIONS.TOOLTIP' | translate\"\n                            [attr.id]=\"'action_menu_right_' + idx\"\n                            [attr.data-automation-id]=\"'action_menu_' + idx\">\n                        <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let action of getRowActions(row)\"\n                                [attr.data-automation-id]=\"action.title\"\n                                [attr.aria-label]=\"action.title | translate\"\n                                [disabled]=\"action.disabled\"\n                                (click)=\"onExecuteRowAction(row, action)\">\n                            <mat-icon *ngIf=\"action.icon\">{{ action.icon }}</mat-icon>\n                            <span>{{ action.title | translate }}</span>\n                        </button>\n                    </mat-menu>\n                </div>\n            </adf-datatable-row>\n            <div *ngIf=\"isEmpty()\"\n                 role=\"row\"\n                 [class.adf-datatable-row]=\"display === 'list'\"\n                 [class.adf-datatable-card-empty]=\"display === 'gallery'\">\n                <div class=\"adf-no-content-container adf-datatable-cell\" role=\"gridcell\">\n                    <ng-template *ngIf=\"noContentTemplate\"\n                                 ngFor [ngForOf]=\"[data]\"\n                                 [ngForTemplate]=\"noContentTemplate\">\n                    </ng-template>\n                    <ng-content select=\"adf-empty-list\"></ng-content>\n                </div>\n            </div>\n            <div *ngFor=\"let row of fakeRows\"\n                 class=\"adf-datatable-row adf-datatable-row-empty-card\">\n            </div>\n        </ng-container>\n        <div *ngIf=\"!loading && noPermission\"\n             role=\"row\"\n             [class.adf-datatable-row]=\"display === 'list'\"\n             [class.adf-datatable-card-permissions]=\"display === 'gallery'\"\n             class=\"adf-no-permission__row\">\n            <div class=\"adf-no-permission__cell adf-no-content-container adf-datatable-cell\">\n                <ng-template *ngIf=\"noPermissionTemplate\"\n                             ngFor [ngForOf]=\"[data]\"\n                             [ngForTemplate]=\"noPermissionTemplate\">\n                </ng-template>\n            </div>\n        </div>\n        <div *ngIf=\"loading\"\n             [class.adf-datatable-row]=\"display === 'list'\"\n             [class.adf-datatable-card-loading]=\"display === 'gallery'\">\n            <div class=\"adf-no-content-container adf-datatable-cell\">\n                <ng-template *ngIf=\"loadingTemplate\"\n                             ngFor [ngForOf]=\"[data]\"\n                             [ngForTemplate]=\"loadingTemplate\">\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-datatable' },
                styles: [".adf-datatable{height:100%;overflow-y:scroll}.adf-datatable .adf-full-width{width:100%}.adf-datatable-card{border:1px solid var(--theme-fg-divider)}.adf-datatable-card .adf-datatable-body{align-content:flex-start;align-items:flex-start;display:flex;flex-flow:row wrap;justify-content:space-evenly;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-row{display:flex;flex:0 1 24%;flex-direction:column;height:200px;margin:6px;max-width:288px!important;min-width:288px!important;overflow:hidden!important;padding:15px;position:relative;transition:all .3s ease;transition:box-shadow .28s cubic-bezier(.4,0,.2,1);width:288px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-row:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.adf-datatable-card .adf-datatable-body .adf-datatable-row-empty-card{height:0!important;margin-bottom:0;margin-top:0;padding-bottom:0;padding-top:0}.adf-datatable-card .adf-datatable-body .adf-is-selected{background:var(--adf-datatable-selected-color);padding-bottom:31px}.adf-datatable-card .adf-datatable-body .adf-datatable-card-permission{min-height:250px;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-card-permission .adf-datatable-cell{height:240px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-card-loading{min-height:250px;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-card-loading .adf-datatable-cell{height:240px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-card-empty{min-height:380px;width:100%}.adf-datatable-card .adf-datatable-body .adf-datatable-card-empty .adf-datatable-cell{height:370px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-cell--image{margin-left:8px}.adf-datatable-card .adf-datatable-body .adf-datatable-cell{flex:0 1 24%;height:136px!important;outline:none;overflow:hidden;text-align:left;text-overflow:ellipsis;white-space:nowrap}.adf-datatable-card .adf-datatable-body .adf-datatable-cell:before{color:var(--theme-text-color);content:attr(title);float:left;margin-left:10px;overflow:hidden;text-align:left;text-overflow:ellipsis;white-space:nowrap;width:140px}.adf-datatable-card .adf-datatable-body .adf-datatable-cell .adf-datatable-cell-value{display:block;overflow:hidden;text-overflow:ellipsis}.adf-datatable-card .adf-datatable-body .adf-datatable__actions-cell{height:42px!important;position:absolute;right:0;top:4px;width:42px!important}.adf-datatable-card .adf-datatable-body .adf-datatable-row:not(:hover) .adf-datatable-hide-actions-without-hover{display:none}.adf-datatable-card .adf-datatable-body .adf-image-table-cell{border-bottom:1px solid var(--theme-fg-divider);margin:8px;overflow:visible;padding:4px}.adf-datatable-card .adf-datatable-body .adf-image-table-cell .adf-datatable-cell-container{float:left;width:42px}.adf-datatable-card .adf-datatable-body .adf-image-table-cell:after{content:attr(filename);float:left;margin:2px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:140px}.adf-datatable-card .adf-datatable-body .adf-datatable-checkbox{margin:8px}.adf-datatable-card .adf-datatable-header{float:right;margin-right:18px}.adf-datatable-list{background-color:var(--theme-card-bg-color);border:1px solid var(--theme-border-color);box-sizing:border-box;display:flex;flex-direction:column;overflow-x:auto}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-datatable-center-size-column-ie{padding-top:17px}.adf-datatable-list .adf-datatable-center-actions-column-ie{padding-top:7px!important}.adf-datatable-list .adf-datatable-center-date-column-ie{position:relative!important}.adf-datatable-list .adf-datatable-center-date-column-ie .adf-datatable-cell-value{width:100%}.adf-datatable-list .adf-datatable-center-img-ie{height:56px;min-width:0;padding:0;width:24px}}.adf-datatable-list .adf-datatable-header{box-sizing:border-box;display:flex;flex-direction:column;min-width:100%;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.adf-datatable-list .adf-datatable-cell{color:var(--theme-text-fg-color)}.adf-datatable-list .adf-datatable-row:focus,.adf-datatable-list .adf-datatable-row:hover{background-color:var(--theme-bg-hover-color)}.adf-datatable-list .adf-datatable-row:focus{outline:1px solid var(--theme-accent-color-a200);outline-offset:-1px}.adf-datatable-list .adf-datatable-row .adf-cell-value:focus,.adf-datatable-list .adf-datatable-row .adf-datatable-cell-header:focus{outline:1px solid var(--theme-accent-color-a200);outline-offset:-1px}.adf-datatable-list .adf-datatable-body{background-color:inherit;display:flex;flex-direction:column;min-width:100%;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.adf-datatable-list .adf-datatable-body .adf-datatable-row{-webkit-touch-callout:none;-webkit-user-select:none;border-top:1px solid var(--theme-border-color);cursor:pointer;min-height:56px;transition-duration:.28s;transition-property:background-color;transition-timing-function:cubic-bezier(.4,0,.2,1);user-select:none}.adf-datatable-list .adf-datatable-body .adf-datatable-row.adf-is-selected,.adf-datatable-list .adf-datatable-body .adf-datatable-row.adf-is-selected:hover{background-color:var(--theme-selected-button-bg-color)}.adf-datatable-list .adf-datatable-body .adf-datatable-row:last-child{border-bottom:1px solid var(--theme-border-color)}.adf-datatable-list .adf-datatable-row{align-items:center;display:flex;padding-left:15px;padding-right:15px}.adf-datatable-list .adf-datatable-row .adf-datatable-checkbox{max-width:50px;width:50px}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-datatable-row .adf-datatable-checkbox{padding-top:15px}}.adf-datatable-list .adf-datatable-cell,.adf-datatable-list .adf-datatable-cell-header{box-sizing:border-box;min-width:50px;text-align:left}.adf-datatable-list .adf-datatable-cell--text,.adf-datatable-list .adf-datatable-cell-header--text{position:relative;text-align:left}.adf-datatable-list .adf-datatable-cell--date,.adf-datatable-list .adf-datatable-cell-header--date{text-align:left}.adf-datatable-list .adf-datatable-cell--number,.adf-datatable-list .adf-datatable-cell-header--number{text-align:right}.adf-datatable-list .adf-datatable-cell--icon,.adf-datatable-list .adf-datatable-cell--image,.adf-datatable-list .adf-datatable-cell-header--icon,.adf-datatable-list .adf-datatable-cell-header--image{min-width:50px;padding-left:24px;padding-right:24px;text-align:left;width:50px}.adf-datatable-list .adf-datatable-cell--fileSize,.adf-datatable-list .adf-datatable-cell-header--fileSize{min-width:50px}.adf-datatable-list .adf-datatable-cell-header{-webkit-touch-callout:none;-webkit-user-select:none;box-sizing:border-box;color:var(--theme-text-fg-color);cursor:pointer;font-size:12px;font-weight:700;letter-spacing:0;line-height:24px;min-height:56px!important;padding-bottom:8px;padding-top:12px!important;position:relative;text-overflow:ellipsis;user-select:none;vertical-align:bottom}.adf-datatable-list .adf-datatable-cell-header.adf-sortable{-webkit-touch-callout:none;-webkit-user-select:none;align-items:center;display:flex;user-select:none}.adf-datatable-list .adf-datatable-cell-header.adf-sortable:hover{cursor:pointer}.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-asc,.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-desc{color:var(--theme-text-fg-color)}.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-asc:before,.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-desc:before{-webkit-font-feature-settings:\"liga\";-webkit-font-smoothing:antialiased;content:\"\\e5d8\";display:inline-block;font-family:Material Icons;font-feature-settings:\"liga\";font-size:24px;font-size:16px;font-style:normal;font-weight:400;left:5px;letter-spacing:normal;line-height:1;position:relative;right:5px;text-transform:none;vertical-align:sub;word-wrap:normal}.adf-datatable-list .adf-datatable-cell-header.adf-datatable__header--sorted-desc:before{content:\"\\e5db\"}.adf-datatable-list .adf-datatable-cell-header.adf-datatable-cell--fileSize.adf-datatable__header--sorted-asc:before,.adf-datatable-list .adf-datatable-cell-header.adf-datatable-cell--fileSize.adf-datatable__header--sorted-desc:before{left:-3px;right:-3px}.adf-datatable-list .adf-datatable-cell-header.adf-datatable-checkbox{align-items:center;display:flex}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-1,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-1{flex-grow:1}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-2,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-2{flex-grow:2}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-3,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-3{flex-grow:3}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-4,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-4{flex-grow:4}.adf-datatable-list .adf-datatable-cell-header.adf-expand-cell-5,.adf-datatable-list .adf-datatable-cell.adf-expand-cell-5{flex-grow:5}.adf-datatable-list .adf-datatable-cell-header.adf-no-grow-cell,.adf-datatable-list .adf-datatable-cell.adf-no-grow-cell{flex-grow:0;min-width:100px}.adf-datatable-list .adf-datatable-cell,.adf-datatable-list .adf-datatable-cell-header{align-items:center;display:flex;flex:1;min-height:inherit;padding:0}.adf-datatable-list .adf-datatable-cell-header .adf-datatable-cell-container,.adf-datatable-list .adf-datatable-cell .adf-datatable-cell-container{align-items:center;display:flex;min-height:inherit;overflow:hidden;width:100%}.adf-datatable-list .adf-datatable-cell-header .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell .adf-datatable-cell-value{display:block;padding:10px;word-break:break-word}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-datatable-cell-header .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell .adf-datatable-cell-value{padding:17px 10px 10px}}.adf-datatable-list .adf-datatable-cell--fileSize .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell-header--fileSize .adf-datatable-cell-value{padding:0 10px 0 0}.adf-datatable-list .adf-cell-value{align-items:center;display:flex;min-height:inherit;width:100%;word-break:break-all}.adf-datatable-list .adf-datatable-cell--image,.adf-datatable-list .adf-datatable__actions-cell{display:flex;max-width:50px}.adf-datatable-list .adf-datatable-row:not(:hover) .adf-datatable-hide-actions-without-hover{display:none}.adf-datatable-list .adf-datatable-cell--image{max-width:50px}.adf-datatable-list .adf-location-cell a{color:var(--theme-text-fg-color);text-decoration:none}.adf-datatable-list .adf-location-cell a:hover{color:var(--adf-datatable-cell-link-hover-color);text-decoration:underline}.adf-datatable-list .adf-sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.adf-datatable-list .adf-is-selected{background:var(--adf-datatable-selected-color)}.adf-datatable-list .adf-datatable-link{color:var(--theme-text-fg-color);text-decoration:none}.adf-datatable-list .adf-datatable-link:hover{color:var(--adf-datatable-cell-link-hover-color);text-decoration:underline}.adf-datatable-list .adf-dynamic-column .adf-datatable-link:hover{text-decoration:none}.adf-datatable-list .adf-dynamic-column .adf-datatable-link:hover .adf-datatable-cell-value{text-decoration:underline}.adf-datatable-list .adf-datatable-cell-header .adf-datatable-link .adf-datatable-cell-value,.adf-datatable-list .adf-datatable-cell .adf-datatable-link .adf-datatable-cell-value{padding:0 10px}.adf-datatable-list .adf-ellipsis-cell{overflow:hidden;padding:0 4px;position:sticky;text-overflow:ellipsis;white-space:nowrap}.adf-datatable-list .adf-ellipsis-cell.adf-datatable-cell-header,.adf-datatable-list .adf-ellipsis-cell .adf-datatable-content-cell{max-width:calc(100% - .1px);overflow:hidden;text-overflow:ellipsis}.adf-datatable-list .adf-ellipsis-cell.adf-datatable-cell-header .adf-datatable-cell-value,.adf-datatable-list .adf-ellipsis-cell .adf-datatable-content-cell .adf-datatable-cell-value{overflow:hidden;text-overflow:ellipsis}.adf-datatable-list .adf-ellipsis-cell .adf-datatable-content-cell{overflow:unset;position:absolute}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-datatable-list .adf-ellipsis-cell .adf-cell-value{top:100%}}.adf-datatable-list .adf-ellipsis-cell>div:after{content:attr(title);display:block;height:0;overflow:hidden}.adf-datatable-list .adf-no-content-container{border:none!important;justify-content:center;padding:0!important;width:100%}.adf-datatable-list .adf-no-content-container>img{width:100%}.adf-datatable-list .adf-loading-content-container{padding:0!important;width:100%}.adf-datatable-list .adf-loading-content-container>img{width:100%}.adf-datatable-list .adf-no-permission__row:hover{background-color:inherit;cursor:default}.adf-datatable-list .adf-no-permission__cell{padding:0!important}.adf-datatable-list .adf-hidden{display:none}@media (max-width:768px){.adf-datatable-list .adf-desktop-only{display:none!important}}@media (max-device-width:768px){.adf-datatable-list .adf-desktop-only{display:none!important}}.adf-checkbox-sr-only .mat-checkbox-label{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.adf-sticky-header{border-top:0;height:100%}.adf-sticky-header .adf-datatable-header{border-bottom:1px solid var(--theme-border-color);border-top:1px solid var(--theme-border-color);display:block;margin-right:0}.adf-sticky-header .adf-datatable-body{display:block;flex:1;margin-top:-1px;overflow-y:scroll}.adf-upload__dragging>div{border-bottom:1px dashed var(--theme-accent-color-a200)!important;border-top:1px dashed var(--theme-accent-color-a200)!important}.adf-upload__dragging>div:first-child{border-left:1px dashed var(--theme-accent-color-a200)}.adf-upload__dragging>div:last-child{border-right:1px dashed var(--theme-accent-color-a200)!important}.adf-datatable--empty{align-items:center;display:flex;flex:1;flex-direction:column;height:100%;height:inherit;justify-content:center;min-height:0;overflow:hidden}.adf-datatable--empty .adf-datatable-body .adf-datatable-row{background-color:var(--theme-card-bg-color);border:none!important;height:100%}.adf-datatable--empty .adf-datatable-body .adf-datatable-row:focus,.adf-datatable--empty .adf-datatable-body .adf-datatable-row:hover{background-color:unset;cursor:default}.adf-datatable--empty--header-visible .adf-datatable-header{border:1px solid var(--theme-border-color)}.adf-datatable--empty--header-visible .adf-datatable-body{align-items:center;display:flex;flex:1;flex-direction:column;height:100%;justify-content:center;min-height:0;overflow:hidden}.adf-datatable--empty--header-visible .adf-datatable-body .adf-datatable-row{background-color:var(--theme-card-bg-color);border:none!important;height:100%}.adf-datatable--empty--header-visible .adf-datatable-body .adf-datatable-row:focus,.adf-datatable--empty--header-visible .adf-datatable-body .adf-datatable-row:hover{background-color:unset;cursor:default}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.IterableDiffers }]; }, { display: [{
            type: Input
        }], rows: [{
            type: Input
        }], sorting: [{
            type: Input
        }], columns: [{
            type: Input
        }], selectionMode: [{
            type: Input
        }], multiselect: [{
            type: Input
        }], actions: [{
            type: Input
        }], actionsPosition: [{
            type: Input
        }], actionsVisibleOnHover: [{
            type: Input
        }], contextMenu: [{
            type: Input
        }], rowStyleClass: [{
            type: Input
        }], showHeader: [{
            type: Input
        }], stickyHeader: [{
            type: Input
        }], rowClick: [{
            type: Output
        }], rowDblClick: [{
            type: Output
        }], showRowContextMenu: [{
            type: Output
        }], showRowActionsMenu: [{
            type: Output
        }], executeRowAction: [{
            type: Output
        }], loading: [{
            type: Input
        }], noPermission: [{
            type: Input
        }], rowMenuCacheEnabled: [{
            type: Input
        }], resolverFn: [{
            type: Input
        }], allowFiltering: [{
            type: Input
        }], onKeydown: [{
            type: HostListener,
            args: ['keyup', ['$event']]
        }], data: [{
            type: Input
        }], rowsList: [{
            type: ViewChildren,
            args: [DataTableRowComponent]
        }], columnList: [{
            type: ContentChild,
            args: [DataColumnListComponent]
        }], fallbackThumbnail: [{
            type: Input
        }], rowStyle: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,