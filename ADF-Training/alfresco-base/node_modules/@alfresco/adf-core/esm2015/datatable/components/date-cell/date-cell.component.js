/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { DataTableCellComponent } from '../datatable-cell/datatable-cell.component';
import { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';
import { AlfrescoApiService } from '../../../services/alfresco-api.service';
import { AppConfigService } from '../../../app-config/app-config.service';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../services/user-preferences.service';
import * as ɵngcc2 from '../../../services/alfresco-api.service';
import * as ɵngcc3 from '../../../app-config/app-config.service';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../../../pipes/time-ago.pipe';
import * as ɵngcc6 from '../../../pipes/localized-date.pipe';

function DateCellComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵpipe(1, "adfTimeAgo");
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵpipe(3, "adfLocalizedDate");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "adfTimeAgo");
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind2(3, 8, ctx_r0.tooltip, "medium"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(1, 3, ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.value$), ctx_r0.currentLocale));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(5, 11, ɵngcc0.ɵɵpipeBind1(6, 14, ctx_r0.value$), ctx_r0.currentLocale), " ");
} }
function DateCellComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵpipe(1, "adfLocalizedDate");
    ɵngcc0.ɵɵpipe(2, "adfLocalizedDate");
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "adfLocalizedDate");
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind2(1, 3, ctx_r2.tooltip, ctx_r2.format));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(2, 6, ɵngcc0.ɵɵpipeBind1(3, 9, ctx_r2.value$), ctx_r2.format));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(5, 11, ɵngcc0.ɵɵpipeBind1(6, 14, ctx_r2.value$), ctx_r2.format), " ");
} }
export class DateCellComponent extends DataTableCellComponent {
    constructor(userPreferenceService, alfrescoApiService, appConfig) {
        super(alfrescoApiService);
        this.dateFormat = appConfig.get('dateValues.defaultDateFormat', DateCellComponent.DATE_FORMAT);
        if (userPreferenceService) {
            userPreferenceService
                .select(UserPreferenceValues.Locale)
                .pipe(takeUntil(this.onDestroy$))
                .subscribe(locale => this.currentLocale = locale);
        }
    }
    get format() {
        if (this.column) {
            return this.column.format || this.dateFormat;
        }
        return this.dateFormat;
    }
}
DateCellComponent.ɵfac = function DateCellComponent_Factory(t) { return new (t || DateCellComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UserPreferencesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AlfrescoApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AppConfigService)); };
DateCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DateCellComponent, selectors: [["adf-date-cell"]], hostAttrs: [1, "adf-date-cell", "adf-datatable-content-cell"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [["class", "adf-datatable-cell-value", 3, "title", 4, "ngIf", "ngIfElse"], ["standard_date", ""], [1, "adf-datatable-cell-value", 3, "title"]], template: function DateCellComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵtemplate(1, DateCellComponent_span_1_Template, 7, 16, "span", 0);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵtemplate(2, DateCellComponent_ng_template_2_Template, 7, 16, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.format === "timeAgo")("ngIfElse", _r1);
    } }, directives: [ɵngcc4.NgIf], pipes: [ɵngcc5.TimeAgoPipe, ɵngcc4.AsyncPipe, ɵngcc6.LocalizedDatePipe], encapsulation: 2 });
DateCellComponent.DATE_FORMAT = 'medium';
DateCellComponent.ctorParameters = () => [
    { type: UserPreferencesService },
    { type: AlfrescoApiService },
    { type: AppConfigService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateCellComponent, [{
        type: Component,
        args: [{
                selector: 'adf-date-cell',
                template: `
        <ng-container>
            <span
                [attr.aria-label]="value$ | async | adfTimeAgo: currentLocale"
                title="{{ tooltip | adfLocalizedDate: 'medium' }}"
                class="adf-datatable-cell-value"
                *ngIf="format === 'timeAgo'; else standard_date">
                {{ value$ | async | adfTimeAgo: currentLocale }}
            </span>
        </ng-container>
        <ng-template #standard_date>
            <span
                class="adf-datatable-cell-value"
                title="{{ tooltip | adfLocalizedDate: format }}"
                class="adf-datatable-cell-value"
                [attr.aria-label]="value$ | async | adfLocalizedDate: format">
                {{ value$ | async | adfLocalizedDate: format }}
            </span>
        </ng-template>
    `,
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-date-cell adf-datatable-content-cell' }
            }]
    }], function () { return [{ type: ɵngcc1.UserPreferencesService }, { type: ɵngcc2.AlfrescoApiService }, { type: ɵngcc3.AppConfigService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1jZWxsLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvZGF0YXRhYmxlL2NvbXBvbmVudHMvZGF0ZS1jZWxsL2RhdGUtY2VsbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDcEYsT0FBTyxFQUNILHNCQUFzQixFQUN0QixvQkFBb0IsRUFDdkIsTUFBTSw0Q0FBNEMsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMxRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEIzQyxNQUFNLE9BQU8saUJBQWtCLFNBQVEsc0JBQXNCO0FBQzdELElBYUksWUFDSSxxQkFBNkMsRUFDN0Msa0JBQXNDLEVBQ3RDLFNBQTJCO0FBQ2hDLFFBQ0ssS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDbEMsUUFDUSxJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsOEJBQThCLEVBQUUsaUJBQWlCLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDdkcsUUFBUSxJQUFJLHFCQUFxQixFQUFFO0FBQ25DLFlBQVkscUJBQXFCO0FBQ2pDLGlCQUFpQixNQUFNLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDO0FBQ3BELGlCQUFpQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNqRCxpQkFBaUIsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUMsQ0FBQztBQUNsRSxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0wsSUF0QkksSUFBSSxNQUFNO0FBQUssUUFDWCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7QUFDekIsWUFBWSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUM7QUFDekQsU0FBUztBQUNULFFBQVEsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0FBQy9CLElBQUksQ0FBQztBQUNMOzs7Ozs7Ozs7OztpSUFDQTtBQVpXLDZCQUFXLEdBQUcsUUFBUSxDQUFDLEFBRjdCO0FBQUM7RUExQkwsU0FBUyxTQUFDLHBCQTBCc0MsWUFqQzdDLHNCQUFzQjtBQVF0QixRQUFRLEVBQUUsZUFBZSx6QkFQM0IsWUFFTyxrQkFBa0I7U0FPdkIsUUFBUSxFQUFFLG5CQVBpQixZQUN0QixnQkFBZ0I7QUFBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQ0F5QnZCO09BQ0QsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksa0JBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRTt3Q0FBMEMsRUFBRSxjQUM5RDs7Ozs7OzsrSkE1QjZCO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRhVGFibGVDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi4vZGF0YXRhYmxlLWNlbGwvZGF0YXRhYmxlLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7XG4gICAgVXNlclByZWZlcmVuY2VzU2VydmljZSxcbiAgICBVc2VyUHJlZmVyZW5jZVZhbHVlc1xufSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy91c2VyLXByZWZlcmVuY2VzLnNlcnZpY2UnO1xuaW1wb3J0IHsgQWxmcmVzY29BcGlTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvYWxmcmVzY28tYXBpLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXBwQ29uZmlnU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2FwcC1jb25maWcvYXBwLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IHRha2VVbnRpbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtZGF0ZS1jZWxsJyxcblxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250YWluZXI+XG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwidmFsdWUkIHwgYXN5bmMgfCBhZGZUaW1lQWdvOiBjdXJyZW50TG9jYWxlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cInt7IHRvb2x0aXAgfCBhZGZMb2NhbGl6ZWREYXRlOiAnbWVkaXVtJyB9fVwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJhZGYtZGF0YXRhYmxlLWNlbGwtdmFsdWVcIlxuICAgICAgICAgICAgICAgICpuZ0lmPVwiZm9ybWF0ID09PSAndGltZUFnbyc7IGVsc2Ugc3RhbmRhcmRfZGF0ZVwiPlxuICAgICAgICAgICAgICAgIHt7IHZhbHVlJCB8IGFzeW5jIHwgYWRmVGltZUFnbzogY3VycmVudExvY2FsZSB9fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPG5nLXRlbXBsYXRlICNzdGFuZGFyZF9kYXRlPlxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICBjbGFzcz1cImFkZi1kYXRhdGFibGUtY2VsbC12YWx1ZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJ7eyB0b29sdGlwIHwgYWRmTG9jYWxpemVkRGF0ZTogZm9ybWF0IH19XCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImFkZi1kYXRhdGFibGUtY2VsbC12YWx1ZVwiXG4gICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJ2YWx1ZSQgfCBhc3luYyB8IGFkZkxvY2FsaXplZERhdGU6IGZvcm1hdFwiPlxuICAgICAgICAgICAgICAgIHt7IHZhbHVlJCB8IGFzeW5jIHwgYWRmTG9jYWxpemVkRGF0ZTogZm9ybWF0IH19XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgYCxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHsgY2xhc3M6ICdhZGYtZGF0ZS1jZWxsIGFkZi1kYXRhdGFibGUtY29udGVudC1jZWxsJyB9XG59KVxuZXhwb3J0IGNsYXNzIERhdGVDZWxsQ29tcG9uZW50IGV4dGVuZHMgRGF0YVRhYmxlQ2VsbENvbXBvbmVudCB7XG5cbiAgICBzdGF0aWMgREFURV9GT1JNQVQgPSAnbWVkaXVtJztcblxuICAgIGN1cnJlbnRMb2NhbGU6IHN0cmluZztcbiAgICBkYXRlRm9ybWF0OiBzdHJpbmc7XG5cbiAgICBnZXQgZm9ybWF0KCk6IHN0cmluZyB7XG4gICAgICAgIGlmICh0aGlzLmNvbHVtbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uLmZvcm1hdCB8fCB0aGlzLmRhdGVGb3JtYXQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZUZvcm1hdDtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgdXNlclByZWZlcmVuY2VTZXJ2aWNlOiBVc2VyUHJlZmVyZW5jZXNTZXJ2aWNlLFxuICAgICAgICBhbGZyZXNjb0FwaVNlcnZpY2U6IEFsZnJlc2NvQXBpU2VydmljZSxcbiAgICAgICAgYXBwQ29uZmlnOiBBcHBDb25maWdTZXJ2aWNlXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGFsZnJlc2NvQXBpU2VydmljZSk7XG5cbiAgICAgICAgdGhpcy5kYXRlRm9ybWF0ID0gYXBwQ29uZmlnLmdldCgnZGF0ZVZhbHVlcy5kZWZhdWx0RGF0ZUZvcm1hdCcsIERhdGVDZWxsQ29tcG9uZW50LkRBVEVfRk9STUFUKTtcbiAgICAgICAgaWYgKHVzZXJQcmVmZXJlbmNlU2VydmljZSkge1xuICAgICAgICAgICAgdXNlclByZWZlcmVuY2VTZXJ2aWNlXG4gICAgICAgICAgICAgICAgLnNlbGVjdChVc2VyUHJlZmVyZW5jZVZhbHVlcy5Mb2NhbGUpXG4gICAgICAgICAgICAgICAgLnBpcGUodGFrZVVudGlsKHRoaXMub25EZXN0cm95JCkpXG4gICAgICAgICAgICAgICAgLnN1YnNjcmliZShsb2NhbGUgPT4gdGhpcy5jdXJyZW50TG9jYWxlID0gbG9jYWxlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==