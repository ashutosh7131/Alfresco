/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation, ElementRef, Output, EventEmitter, ViewChild, HostListener } from '@angular/core';
import { ContentService } from '../../services/content.service';
import { AppConfigService } from './../../app-config/app-config.service';
import Cropper from 'cropperjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../../app-config/app-config.service';
import * as ɵngcc2 from '../../services/content.service';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../../toolbar/toolbar.component';
import * as ɵngcc5 from '@angular/material/button';
import * as ɵngcc6 from '@angular/material/icon';
import * as ɵngcc7 from '@ngx-translate/core';

const _c0 = ["image"];
function ImgViewerComponent_div_3_button_14_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 13);
    ɵngcc0.ɵɵlistener("click", function ImgViewerComponent_div_3_button_14_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.rotateImage(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "rotate_left");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_VIEWER.ARIA.ROTATE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ARIA.ROTATE"));
} }
function ImgViewerComponent_div_3_button_15_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 14);
    ɵngcc0.ɵɵlistener("click", function ImgViewerComponent_div_3_button_15_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.cropImage(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "crop");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_VIEWER.ARIA.CROP"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ARIA.CROP"));
} }
function ImgViewerComponent_div_3_adf_toolbar_21_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-toolbar", 15);
    ɵngcc0.ɵɵelementStart(1, "button", 16);
    ɵngcc0.ɵɵlistener("click", function ImgViewerComponent_div_3_adf_toolbar_21_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.reset(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "mat-icon");
    ɵngcc0.ɵɵtext(5, "close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "button", 17);
    ɵngcc0.ɵɵlistener("click", function ImgViewerComponent_div_3_adf_toolbar_21_Template_button_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.save(); });
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementStart(9, "mat-icon");
    ɵngcc0.ɵɵtext(10, "check");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ARIA.CANCEL"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(3, 6, "ADF_VIEWER.ARIA.CANCEL"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(7, 8, "ADF_VIEWER.ARIA.SAVE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(8, 10, "ADF_VIEWER.ARIA.SAVE"));
} }
function ImgViewerComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "adf-toolbar", 5);
    ɵngcc0.ɵɵelementStart(2, "button", 6);
    ɵngcc0.ɵɵlistener("click", function ImgViewerComponent_div_3_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.zoomOut(); });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementStart(5, "mat-icon");
    ɵngcc0.ɵɵtext(6, "zoom_out");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 7);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "button", 8);
    ɵngcc0.ɵɵlistener("click", function ImgViewerComponent_div_3_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.zoomIn(); });
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementStart(12, "mat-icon");
    ɵngcc0.ɵɵtext(13, "zoom_in");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(14, ImgViewerComponent_div_3_button_14_Template, 5, 6, "button", 9);
    ɵngcc0.ɵɵtemplate(15, ImgViewerComponent_div_3_button_15_Template, 5, 6, "button", 10);
    ɵngcc0.ɵɵelementStart(16, "button", 11);
    ɵngcc0.ɵɵlistener("click", function ImgViewerComponent_div_3_Template_button_click_16_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.reset(); });
    ɵngcc0.ɵɵpipe(17, "translate");
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵelementStart(19, "mat-icon");
    ɵngcc0.ɵɵtext(20, "zoom_out_map");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(21, ImgViewerComponent_div_3_adf_toolbar_21_Template, 11, 12, "adf-toolbar", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 10, "ADF_VIEWER.ARIA.ZOOM_OUT"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(4, 12, "ADF_VIEWER.ARIA.ZOOM_OUT"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.currentScaleText, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 14, "ADF_VIEWER.ARIA.ZOOM_IN"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(11, 16, "ADF_VIEWER.ARIA.ZOOM_IN"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.readOnly);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.readOnly);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(17, 18, "ADF_VIEWER.ARIA.RESET"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(18, 20, "ADF_VIEWER.ARIA.RESET"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.readOnly && ctx_r1.isEditing);
} }
export class ImgViewerComponent {
    constructor(appConfigService, contentService) {
        this.appConfigService = appConfigService;
        this.contentService = contentService;
        this.showToolbar = true;
        this.readOnly = true;
        this.error = new EventEmitter();
        this.submit = new EventEmitter();
        this.scale = 1.0;
        this.isEditing = false;
        this.initializeScaling();
    }
    get currentScaleText() {
        return Math.round(this.scale * 100) + '%';
    }
    initializeScaling() {
        const scaling = this.appConfigService.get('adf-viewer.image-viewer-scaling', undefined) / 100;
        if (scaling) {
            this.scale = scaling;
        }
    }
    ngAfterViewInit() {
        this.cropper = new Cropper(this.imageElement.nativeElement, {
            autoCrop: false,
            dragMode: 'move',
            background: false,
            scalable: true,
            zoomOnWheel: false,
            toggleDragModeOnDblclick: false,
            viewMode: 1,
            checkCrossOrigin: false,
            ready: () => {
                this.updateCanvasContainer();
            }
        });
    }
    ngOnDestroy() {
        this.cropper.destroy();
    }
    onKeyDown(event) {
        switch (event.key) {
            case 'ArrowLeft':
                event.preventDefault();
                this.cropper.move(-3, 0);
                break;
            case 'ArrowUp':
                event.preventDefault();
                this.cropper.move(0, -3);
                break;
            case 'ArrowRight':
                event.preventDefault();
                this.cropper.move(3, 0);
                break;
            case 'ArrowDown':
                event.preventDefault();
                this.cropper.move(0, 3);
                break;
            case 'i':
                this.zoomIn();
                break;
            case 'o':
                this.zoomOut();
                break;
            case 'r':
                this.rotateImage();
                break;
            default:
        }
    }
    ngOnChanges(changes) {
        const blobFile = changes['blobFile'];
        if (blobFile && blobFile.currentValue) {
            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);
            return;
        }
        if (!this.urlFile && !this.blobFile) {
            throw new Error('Attribute urlFile or blobFile is required');
        }
    }
    zoomIn() {
        this.cropper.zoom(0.2);
        this.scale = +((this.scale + 0.2).toFixed(1));
    }
    zoomOut() {
        if (this.scale > 0.2) {
            this.cropper.zoom(-0.2);
            this.scale = +((this.scale - 0.2).toFixed(1));
        }
    }
    rotateImage() {
        this.isEditing = true;
        this.cropper.rotate(-90);
    }
    cropImage() {
        this.isEditing = true;
        this.cropper.setDragMode('crop');
        this.cropper.crop();
    }
    save() {
        this.isEditing = false;
        this.cropper.setDragMode('move');
        this.cropper.getCroppedCanvas().toBlob((blob) => {
            this.submit.emit(blob);
            this.cropper.replace(this.cropper.getCroppedCanvas().toDataURL());
            this.cropper.clear();
        });
    }
    reset() {
        this.isEditing = false;
        this.cropper.clear();
        this.cropper.reset();
        this.cropper.setDragMode('move');
        this.scale = 1.0;
        this.updateCanvasContainer();
    }
    updateCanvasContainer() {
        if (this.imageElement.nativeElement.width < this.cropper.getContainerData().width) {
            const width = this.imageElement.nativeElement.width;
            const height = this.imageElement.nativeElement.height;
            const top = (this.cropper.getContainerData().height - this.imageElement.nativeElement.height) / 2;
            const left = (this.cropper.getContainerData().width - this.imageElement.nativeElement.width) / 2;
            this.cropper.setCanvasData({
                width,
                height,
                top,
                left
            });
        }
    }
    onImageError() {
        this.error.emit();
    }
}
ImgViewerComponent.ɵfac = function ImgViewerComponent_Factory(t) { return new (t || ImgViewerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentService)); };
ImgViewerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ImgViewerComponent, selectors: [["adf-img-viewer"]], viewQuery: function ImgViewerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.imageElement = _t.first);
    } }, hostAttrs: [1, "adf-image-viewer"], hostBindings: function ImgViewerComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown", function ImgViewerComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { showToolbar: "showToolbar", readOnly: "readOnly", urlFile: "urlFile", blobFile: "blobFile", nameFile: "nameFile" }, outputs: { error: "error", submit: "submit" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 4, vars: 4, consts: [["id", "adf-image-container", "tabindex", "0", "role", "img", "data-automation-id", "adf-image-container", 1, "adf-image-container", 3, "keydown"], ["id", "viewer-image", 3, "src", "alt", "error"], ["image", ""], ["class", "adf-image-viewer__toolbar", 4, "ngIf"], [1, "adf-image-viewer__toolbar"], [1, "adf-main-toolbar"], ["id", "viewer-zoom-out-button", "mat-icon-button", "", 3, "title", "click"], ["data-automation-id", "adf-page-scale", 1, "adf-viewer__toolbar-page-scale"], ["id", "viewer-zoom-in-button", "mat-icon-button", "", 3, "title", "click"], ["id", "viewer-rotate-button", "mat-icon-button", "", 3, "title", "click", 4, "ngIf"], ["id", "viewer-crop-button", "mat-icon-button", "", 3, "title", "click", 4, "ngIf"], ["id", "viewer-reset-button", "mat-icon-button", "", 3, "title", "click"], ["class", "adf-secondary-toolbar", 4, "ngIf"], ["id", "viewer-rotate-button", "mat-icon-button", "", 3, "title", "click"], ["id", "viewer-crop-button", "mat-icon-button", "", 3, "title", "click"], [1, "adf-secondary-toolbar"], ["id", "viewer-cancel-button", "mat-icon-button", "", 3, "title", "click"], ["id", "viewer-save-button", "mat-icon-button", "", 3, "title", "click"]], template: function ImgViewerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("keydown", function ImgViewerComponent_Template_div_keydown_0_listener($event) { return ctx.onKeyDown($event); });
        ɵngcc0.ɵɵelementStart(1, "img", 1, 2);
        ɵngcc0.ɵɵlistener("error", function ImgViewerComponent_Template_img_error_1_listener() { return ctx.onImageError(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ImgViewerComponent_div_3_Template, 22, 22, "div", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-label", ctx.nameFile);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("src", ctx.urlFile, ɵngcc0.ɵɵsanitizeUrl)("alt", ctx.nameFile);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showToolbar);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.ToolbarComponent, ɵngcc5.MatButton, ɵngcc6.MatIcon], pipes: [ɵngcc7.TranslatePipe], styles: [".adf-image-viewer{width:100%}.adf-image-viewer .adf-image-container{align-items:center;display:flex;height:90vh;justify-content:center}.adf-image-viewer .adf-image-container:focus{outline:1px solid var(--theme-accent-color-a200);outline-offset:-1px}.adf-image-viewer .adf-image-container img{max-height:100%;max-width:100%}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-image-viewer .adf-image-container img{height:100%}}.adf-image-viewer__toolbar{bottom:5px;left:50%;position:absolute;transform:translateX(-50%)}.adf-image-viewer__toolbar .adf-toolbar .mat-toolbar{background-color:var(--theme-card-bg-color);border-radius:2px;border-width:0;box-shadow:0 2px 2px 0 rgba(0,0,0,.24),0 0 2px 0 rgba(0,0,0,.12);max-height:48px}.adf-image-viewer__toolbar .adf-main-toolbar{display:inline-block}.adf-image-viewer__toolbar .adf-secondary-toolbar{display:inline-block;margin-left:10px}"], encapsulation: 2 });
ImgViewerComponent.ctorParameters = () => [
    { type: AppConfigService },
    { type: ContentService }
];
ImgViewerComponent.propDecorators = {
    showToolbar: [{ type: Input }],
    readOnly: [{ type: Input }],
    urlFile: [{ type: Input }],
    blobFile: [{ type: Input }],
    nameFile: [{ type: Input }],
    error: [{ type: Output }],
    submit: [{ type: Output }],
    imageElement: [{ type: ViewChild, args: ['image', { static: false },] }],
    onKeyDown: [{ type: HostListener, args: ['document:keydown', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ImgViewerComponent, [{
        type: Component,
        args: [{
                selector: 'adf-img-viewer',
                template: "<div id=\"adf-image-container\" (keydown)=\"onKeyDown($event)\" class=\"adf-image-container\" tabindex=\"0\" role=\"img\" [attr.aria-label]=\"nameFile\" data-automation-id=\"adf-image-container\">\n    <img #image id=\"viewer-image\" [src]=\"urlFile\" [alt]=\"nameFile\" (error)=\"onImageError()\" />\n</div>\n\n<div class=\"adf-image-viewer__toolbar\" *ngIf=\"showToolbar\">\n    <adf-toolbar class=\"adf-main-toolbar\">\n        <button\n            id=\"viewer-zoom-out-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.ZOOM_OUT' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.ZOOM_OUT' | translate }}\"\n            mat-icon-button\n            (click)=\"zoomOut()\">\n            <mat-icon>zoom_out</mat-icon>\n        </button>\n\n        <div class=\"adf-viewer__toolbar-page-scale\" data-automation-id=\"adf-page-scale\">\n            {{ currentScaleText }}\n        </div>\n\n        <button\n            id=\"viewer-zoom-in-button\"\n            mat-icon-button\n            title=\"{{ 'ADF_VIEWER.ARIA.ZOOM_IN' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.ZOOM_IN' | translate }}\"\n            (click)=\"zoomIn()\">\n            <mat-icon>zoom_in</mat-icon>\n        </button>\n\n        <button\n            *ngIf=\"!readOnly\" id=\"viewer-rotate-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.ROTATE' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.ROTATE' | translate }}\"\n            mat-icon-button\n            (click)=\"rotateImage()\">\n            <mat-icon>rotate_left</mat-icon>\n        </button>\n        <button\n            *ngIf=\"!readOnly\" id=\"viewer-crop-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.CROP' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.CROP' | translate }}\"\n            mat-icon-button\n            (click)=\"cropImage()\">\n            <mat-icon>crop</mat-icon>\n        </button>\n\n        <button\n            id=\"viewer-reset-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.RESET' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.RESET' | translate }}\"\n            mat-icon-button\n            (click)=\"reset()\">\n            <mat-icon>zoom_out_map</mat-icon>\n        </button>\n\n    </adf-toolbar>\n\n    <adf-toolbar class=\"adf-secondary-toolbar\" *ngIf=\"!readOnly && isEditing\">\n        <button\n            id=\"viewer-cancel-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.CANCEL' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.CANCEL' | translate }}\"\n            mat-icon-button\n            (click)=\"reset()\">\n            <mat-icon>close</mat-icon>\n        </button>\n\n        <button\n            id=\"viewer-save-button\"\n            title=\"{{ 'ADF_VIEWER.ARIA.SAVE' | translate }}\"\n            attr.aria-label=\"{{ 'ADF_VIEWER.ARIA.SAVE' | translate }}\"\n            mat-icon-button\n            (click)=\"save()\">\n            <mat-icon>check</mat-icon>\n        </button>\n\n    </adf-toolbar>\n</div>\n",
                host: { 'class': 'adf-image-viewer' },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-image-viewer{width:100%}.adf-image-viewer .adf-image-container{align-items:center;display:flex;height:90vh;justify-content:center}.adf-image-viewer .adf-image-container:focus{outline:1px solid var(--theme-accent-color-a200);outline-offset:-1px}.adf-image-viewer .adf-image-container img{max-height:100%;max-width:100%}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-image-viewer .adf-image-container img{height:100%}}.adf-image-viewer__toolbar{bottom:5px;left:50%;position:absolute;transform:translateX(-50%)}.adf-image-viewer__toolbar .adf-toolbar .mat-toolbar{background-color:var(--theme-card-bg-color);border-radius:2px;border-width:0;box-shadow:0 2px 2px 0 rgba(0,0,0,.24),0 0 2px 0 rgba(0,0,0,.12);max-height:48px}.adf-image-viewer__toolbar .adf-main-toolbar{display:inline-block}.adf-image-viewer__toolbar .adf-secondary-toolbar{display:inline-block;margin-left:10px}"]
            }]
    }], function () { return [{ type: ɵngcc1.AppConfigService }, { type: ɵngcc2.ContentService }]; }, { showToolbar: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], error: [{
            type: Output
        }], submit: [{
            type: Output
        }], onKeyDown: [{
            type: HostListener,
            args: ['document:keydown', ['$event']]
        }], urlFile: [{
            type: Input
        }], blobFile: [{
            type: Input
        }], nameFile: [{
            type: Input
        }], imageElement: [{
            type: ViewChild,
            args: ['image', { static: false }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,