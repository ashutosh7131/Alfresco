/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { MatSidenav } from '@angular/material/sidenav';
import { sidenavAnimation, contentAnimation } from '../../helpers/animations';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/sidenav';
import * as ɵngcc2 from '@angular/common';

const _c0 = [[["", "app-layout-navigation", ""]], [["", "app-layout-content", ""]]];
const _c1 = function (a0) { return { "adf-sidenav--hidden": a0 }; };
const _c2 = ["[app-layout-navigation]", "[app-layout-content]"];
export class LayoutContainerComponent {
    constructor() {
        this.hideSidenav = false;
        this.expandedSidenav = true;
        this.position = 'start';
        this.direction = 'ltr';
        this.SIDENAV_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };
        this.CONTENT_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };
        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);
    }
    ngOnInit() {
        this.SIDENAV_STATES.MOBILE = { value: 'expanded', params: { width: this.sidenavMax } };
        this.SIDENAV_STATES.EXPANDED = { value: 'expanded', params: { width: this.sidenavMax } };
        this.SIDENAV_STATES.COMPACT = { value: 'compact', params: { width: this.sidenavMin } };
        this.CONTENT_STATES.MOBILE = { value: 'expanded' };
        this.mediaQueryList.addListener(this.onMediaQueryChange);
        if (this.isMobileScreenSize) {
            this.sidenavAnimationState = this.SIDENAV_STATES.MOBILE;
            this.contentAnimationState = this.CONTENT_STATES.MOBILE;
        }
        else if (this.expandedSidenav) {
            this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;
            this.contentAnimationState = this.toggledContentAnimation;
        }
        else {
            this.sidenavAnimationState = this.SIDENAV_STATES.COMPACT;
            this.contentAnimationState = this.toggledContentAnimation;
        }
    }
    ngOnDestroy() {
        this.mediaQueryList.removeListener(this.onMediaQueryChange);
    }
    ngOnChanges(changes) {
        if (changes && changes.direction) {
            this.contentAnimationState = this.toggledContentAnimation;
        }
    }
    toggleMenu() {
        if (this.isMobileScreenSize) {
            this.sidenav.toggle();
        }
        else {
            this.sidenavAnimationState = this.toggledSidenavAnimation;
            this.contentAnimationState = this.toggledContentAnimation;
        }
    }
    get isMobileScreenSize() {
        return this.mediaQueryList.matches;
    }
    getContentAnimationState() {
        return this.contentAnimationState;
    }
    get toggledSidenavAnimation() {
        return this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED
            ? this.SIDENAV_STATES.COMPACT
            : this.SIDENAV_STATES.EXPANDED;
    }
    get toggledContentAnimation() {
        if (this.isMobileScreenSize) {
            return this.CONTENT_STATES.MOBILE;
        }
        if (this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED) {
            if (this.position === 'start' && this.direction === 'ltr') {
                return { value: 'compact', params: { 'margin-left': this.sidenavMax } };
            }
            if (this.position === 'start' && this.direction === 'rtl') {
                return { value: 'compact', params: { 'margin-right': this.sidenavMax } };
            }
            if (this.position === 'end' && this.direction === 'ltr') {
                return { value: 'compact', params: { 'margin-right': this.sidenavMax } };
            }
            if (this.position === 'end' && this.direction === 'rtl') {
                return { value: 'compact', params: { 'margin-left': this.sidenavMax } };
            }
        }
        else {
            if (this.position === 'start' && this.direction === 'ltr') {
                return { value: 'expanded', params: { 'margin-left': this.sidenavMin } };
            }
            if (this.position === 'start' && this.direction === 'rtl') {
                return { value: 'expanded', params: { 'margin-right': this.sidenavMin } };
            }
            if (this.position === 'end' && this.direction === 'ltr') {
                return { value: 'expanded', params: { 'margin-right': this.sidenavMin } };
            }
            if (this.position === 'end' && this.direction === 'rtl') {
                return { value: 'expanded', params: { 'margin-left': this.sidenavMin } };
            }
        }
    }
    onMediaQueryChange() {
        this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;
        this.contentAnimationState = this.toggledContentAnimation;
    }
}
LayoutContainerComponent.ɵfac = function LayoutContainerComponent_Factory(t) { return new (t || LayoutContainerComponent)(); };
LayoutContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LayoutContainerComponent, selectors: [["adf-layout-container"]], viewQuery: function LayoutContainerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(MatSidenav, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);
    } }, inputs: { hideSidenav: "hideSidenav", expandedSidenav: "expandedSidenav", position: "position", direction: "direction", sidenavMin: "sidenavMin", sidenavMax: "sidenavMax", mediaQueryList: "mediaQueryList" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 6, vars: 9, consts: [[3, "position", "disableClose", "ngClass", "opened", "mode"], [1, "adf-container-full-width"]], template: function LayoutContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "mat-sidenav-container");
        ɵngcc0.ɵɵelementStart(1, "mat-sidenav", 0);
        ɵngcc0.ɵɵprojection(2, 0, ["sidenav", ""]);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div");
        ɵngcc0.ɵɵelementStart(4, "div", 1);
        ɵngcc0.ɵɵprojection(5, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("position", ctx.position)("disableClose", !ctx.isMobileScreenSize)("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c1, ctx.hideSidenav))("@sidenavAnimation", ctx.sidenavAnimationState)("opened", !ctx.isMobileScreenSize)("mode", ctx.isMobileScreenSize ? "over" : "side");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("@contentAnimationLeft", ctx.getContentAnimationState());
    } }, directives: [ɵngcc1.MatSidenavContainer, ɵngcc1.MatSidenav, ɵngcc2.NgClass], styles: ["adf-layout-container{display:block;height:100%;overflow:hidden;width:100%}.adf-container-full-width{width:inherit}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-container-full-width{width:100%}}.adf-sidenav--hidden{opacity:0!important;transform:unset!important;visibility:hidden!important;width:0!important}.mat-sidenav-container{display:block;height:100%;overflow:hidden;width:100%}.mat-sidenav{background-color:var(--theme-background-color);border-right:1px solid var(--theme-border-color);overflow:hidden}.mat-drawer-transition .mat-drawer-content,mat-sidenav-content.mat-sidenav-content{margin-left:0!important;transform:unset!important;transition-duration:unset!important;transition-property:unset!important;transition-timing-function:unset!important}mat-sidenav-content>div{display:flex;height:100%}mat-sidenav-content>div>div{flex:auto}"], encapsulation: 2, data: { animation: [sidenavAnimation, contentAnimation] } });
LayoutContainerComponent.ctorParameters = () => [];
LayoutContainerComponent.propDecorators = {
    sidenavMin: [{ type: Input }],
    sidenavMax: [{ type: Input }],
    mediaQueryList: [{ type: Input }],
    hideSidenav: [{ type: Input }],
    expandedSidenav: [{ type: Input }],
    position: [{ type: Input }],
    direction: [{ type: Input }],
    sidenav: [{ type: ViewChild, args: [MatSidenav, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutContainerComponent, [{
        type: Component,
        args: [{
                selector: 'adf-layout-container',
                template: "<mat-sidenav-container>\n    <mat-sidenav\n        [position]=\"position\"\n        [disableClose]=\"!isMobileScreenSize\"\n        [ngClass]=\"{ 'adf-sidenav--hidden': hideSidenav }\"\n        [@sidenavAnimation]=\"sidenavAnimationState\"\n        [opened]=\"!isMobileScreenSize\"\n        [mode]=\"isMobileScreenSize ? 'over' : 'side'\">\n        <ng-content sidenav select=\"[app-layout-navigation]\"></ng-content>\n    </mat-sidenav>\n\n    <div>\n        <div class=\"adf-container-full-width\" [@contentAnimationLeft]=\"getContentAnimationState()\">\n            <ng-content select=\"[app-layout-content]\"></ng-content>\n        </div>\n    </div>\n</mat-sidenav-container>\n",
                encapsulation: ViewEncapsulation.None,
                animations: [sidenavAnimation, contentAnimation],
                styles: ["adf-layout-container{display:block;height:100%;overflow:hidden;width:100%}.adf-container-full-width{width:inherit}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){.adf-container-full-width{width:100%}}.adf-sidenav--hidden{opacity:0!important;transform:unset!important;visibility:hidden!important;width:0!important}.mat-sidenav-container{display:block;height:100%;overflow:hidden;width:100%}.mat-sidenav{background-color:var(--theme-background-color);border-right:1px solid var(--theme-border-color);overflow:hidden}.mat-drawer-transition .mat-drawer-content,mat-sidenav-content.mat-sidenav-content{margin-left:0!important;transform:unset!important;transition-duration:unset!important;transition-property:unset!important;transition-timing-function:unset!important}mat-sidenav-content>div{display:flex;height:100%}mat-sidenav-content>div>div{flex:auto}"]
            }]
    }], function () { return []; }, { hideSidenav: [{
            type: Input
        }], expandedSidenav: [{
            type: Input
        }], position: [{
            type: Input
        }], direction: [{
            type: Input
        }], sidenavMin: [{
            type: Input
        }], sidenavMax: [{
            type: Input
        }], mediaQueryList: [{
            type: Input
        }], sidenav: [{
            type: ViewChild,
            args: [MatSidenav, { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,