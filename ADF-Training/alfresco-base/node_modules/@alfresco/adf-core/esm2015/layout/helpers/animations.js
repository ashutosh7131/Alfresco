/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { trigger, transition, animate, style, state } from '@angular/animations';
export const sidenavAnimation = trigger('sidenavAnimation', [
    state('expanded', style({ width: '{{ width }}px' }), { params: { width: 0 } }),
    state('compact', style({ width: '{{ width }}px' }), { params: { width: 0 } }),
    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))
]);
export const contentAnimation = trigger('contentAnimationLeft', [
    state('expanded', style({
        'margin-left': '{{ margin-left }}px',
        'margin-right': '{{ margin-right }}px'
    }), { params: { 'margin-left': 0, 'margin-right': 0 } }),
    state('compact', style({
        'margin-left': '{{ margin-left }}px',
        'margin-right': '{{ margin-right }}px'
    }), { params: { 'margin-left': 0, 'margin-right': 0 } }),
    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvIiwic291cmNlcyI6WyJsYXlvdXQvaGVscGVycy9hbmltYXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUE0QixNQUFNLHFCQUFxQixDQUFDO0FBRTNHLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUE2QixPQUFPLENBQUMsa0JBQWtCLEVBQUU7SUFDbEYsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO0lBQy9FLEtBQUssQ0FBQyxTQUFTLEVBQUcsS0FBSyxDQUFDLEVBQUUsS0FBSyxFQUFFLGVBQWUsRUFBRSxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUMvRSxVQUFVLENBQUMsc0JBQXNCLEVBQUUsT0FBTyxDQUFDLHVDQUF1QyxDQUFDLENBQUM7Q0FDdkYsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQTZCLE9BQU8sQ0FBQyxzQkFBc0IsRUFBRTtJQUN0RixLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQztRQUNwQixhQUFhLEVBQUUscUJBQXFCO1FBQ3BDLGNBQWMsRUFBRSxzQkFBc0I7S0FDekMsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsYUFBYSxFQUFFLENBQUMsRUFBRSxjQUFjLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUN4RCxLQUFLLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQztRQUNuQixhQUFhLEVBQUUscUJBQXFCO1FBQ3BDLGNBQWMsRUFBRSxzQkFBc0I7S0FDekMsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsYUFBYSxFQUFFLENBQUMsRUFBRSxjQUFjLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUN4RCxVQUFVLENBQUMsc0JBQXNCLEVBQUUsT0FBTyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7Q0FDeEYsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgdHJpZ2dlciwgdHJhbnNpdGlvbiwgYW5pbWF0ZSwgc3R5bGUsIHN0YXRlLCBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcblxuZXhwb3J0IGNvbnN0IHNpZGVuYXZBbmltYXRpb246IEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSA9IHRyaWdnZXIoJ3NpZGVuYXZBbmltYXRpb24nLCBbXG4gICAgc3RhdGUoJ2V4cGFuZGVkJywgc3R5bGUoeyB3aWR0aDogJ3t7IHdpZHRoIH19cHgnIH0pLCB7IHBhcmFtcyA6IHsgd2lkdGg6IDAgfSB9KSxcbiAgICBzdGF0ZSgnY29tcGFjdCcsICBzdHlsZSh7IHdpZHRoOiAne3sgd2lkdGggfX1weCcgfSksIHsgcGFyYW1zIDogeyB3aWR0aDogMCB9IH0pLFxuICAgIHRyYW5zaXRpb24oJ2NvbXBhY3QgPD0+IGV4cGFuZGVkJywgYW5pbWF0ZSgnMC40cyBjdWJpYy1iZXppZXIoMC4yNSwgMC44LCAwLjI1LCAxKScpKVxuXSk7XG5cbmV4cG9ydCBjb25zdCBjb250ZW50QW5pbWF0aW9uOiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgPSB0cmlnZ2VyKCdjb250ZW50QW5pbWF0aW9uTGVmdCcsIFtcbiAgICBzdGF0ZSgnZXhwYW5kZWQnLCBzdHlsZSh7XG4gICAgICAgICdtYXJnaW4tbGVmdCc6ICd7eyBtYXJnaW4tbGVmdCB9fXB4JyxcbiAgICAgICAgJ21hcmdpbi1yaWdodCc6ICd7eyBtYXJnaW4tcmlnaHQgfX1weCdcbiAgICB9KSwgeyBwYXJhbXM6IHsgJ21hcmdpbi1sZWZ0JzogMCwgJ21hcmdpbi1yaWdodCc6IDAgfSB9KSxcbiAgICBzdGF0ZSgnY29tcGFjdCcsIHN0eWxlKHtcbiAgICAgICAgJ21hcmdpbi1sZWZ0JzogJ3t7IG1hcmdpbi1sZWZ0IH19cHgnLFxuICAgICAgICAnbWFyZ2luLXJpZ2h0JzogJ3t7IG1hcmdpbi1yaWdodCB9fXB4J1xuICAgIH0pLCB7IHBhcmFtczogeyAnbWFyZ2luLWxlZnQnOiAwLCAnbWFyZ2luLXJpZ2h0JzogMCB9IH0pLFxuICAgIHRyYW5zaXRpb24oJ2V4cGFuZGVkIDw9PiBjb21wYWN0JywgYW5pbWF0ZSgnNDAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSknKSlcbl0pO1xuIl19