import { DynamicComponentMapper, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';
import { Injectable } from '@angular/core';
import * as widgets from './../components/widgets/index';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class FormRenderingService extends DynamicComponentMapper {
    constructor() {
        super(...arguments);
        this.defaultValue = widgets.UnknownWidgetComponent;
        this.types = {
            'text': DynamicComponentResolver.fromType(widgets.TextWidgetComponent),
            'string': DynamicComponentResolver.fromType(widgets.TextWidgetComponent),
            'integer': DynamicComponentResolver.fromType(widgets.NumberWidgetComponent),
            'multi-line-text': DynamicComponentResolver.fromType(widgets.MultilineTextWidgetComponentComponent),
            'boolean': DynamicComponentResolver.fromType(widgets.CheckboxWidgetComponent),
            'dropdown': DynamicComponentResolver.fromType(widgets.DropdownWidgetComponent),
            'date': DynamicComponentResolver.fromType(widgets.DateWidgetComponent),
            'amount': DynamicComponentResolver.fromType(widgets.AmountWidgetComponent),
            'radio-buttons': DynamicComponentResolver.fromType(widgets.RadioButtonsWidgetComponent),
            'hyperlink': DynamicComponentResolver.fromType(widgets.HyperlinkWidgetComponent),
            'readonly-text': DynamicComponentResolver.fromType(widgets.DisplayTextWidgetComponent),
            'json': DynamicComponentResolver.fromType(widgets.JsonWidgetComponent),
            'readonly': DynamicComponentResolver.fromType(widgets.TextWidgetComponent),
            'typeahead': DynamicComponentResolver.fromType(widgets.TypeaheadWidgetComponent),
            'people': DynamicComponentResolver.fromType(widgets.PeopleWidgetComponent),
            'functional-group': DynamicComponentResolver.fromType(widgets.FunctionalGroupWidgetComponent),
            'dynamic-table': DynamicComponentResolver.fromType(widgets.DynamicTableWidgetComponent),
            'container': DynamicComponentResolver.fromType(widgets.ContainerWidgetComponent),
            'group': DynamicComponentResolver.fromType(widgets.ContainerWidgetComponent),
            'document': DynamicComponentResolver.fromType(widgets.DocumentWidgetComponent),
            'upload': DynamicComponentResolver.fromType(widgets.UploadWidgetComponent),
            'datetime': DynamicComponentResolver.fromType(widgets.DateTimeWidgetComponent),
            'file-viewer': DynamicComponentResolver.fromType(widgets.FileViewerWidgetComponent)
        };
    }
}
FormRenderingService.ɵfac = function FormRenderingService_Factory(t) { return ɵFormRenderingService_BaseFactory(t || FormRenderingService); };
FormRenderingService.ɵprov = i0.ɵɵdefineInjectable({ factory: function FormRenderingService_Factory() { return new FormRenderingService(); }, token: FormRenderingService, providedIn: "root" });
const ɵFormRenderingService_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormRenderingService);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormRenderingService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1yZW5kZXJpbmcuc2VydmljZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvZm9ybS9zZXJ2aWNlcy9mb3JtLXJlbmRlcmluZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlCQSxPQUFPLEVBQUUsc0JBQXNCLEVBQW1DLHdCQUF3QixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDcEosT0FBTyxFQUFFLFVBQVUsRUFBUSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEtBQUssT0FBTyxNQUFNLCtCQUErQixDQUFDO0FBQ3pEOztBQUlBLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxzQkFBc0I7QUFDaEUsSUFKQTtBQUNFO0FBRUcsUUFFUyxpQkFBWSxHQUFhLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQztBQUN0RSxRQUFjLFVBQUssR0FBdUQ7QUFDMUUsWUFBUSxNQUFNLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztBQUM5RSxZQUFRLFFBQVEsRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO0FBQ2hGLFlBQVEsU0FBUyxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMscUJBQXFCLENBQUM7QUFDbkYsWUFBUSxpQkFBaUIsRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLHFDQUFxQyxDQUFDO0FBQzNHLFlBQVEsU0FBUyxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFDckYsWUFBUSxVQUFVLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQztBQUN0RixZQUFRLE1BQU0sRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO0FBQzlFLFlBQVEsUUFBUSxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMscUJBQXFCLENBQUM7QUFDbEYsWUFBUSxlQUFlLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUMvRixZQUFRLFdBQVcsRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLHdCQUF3QixDQUFDO0FBQ3hGLFlBQVEsZUFBZSxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsMEJBQTBCLENBQUM7QUFDOUYsWUFBUSxNQUFNLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztBQUM5RSxZQUFRLFVBQVUsRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO0FBQ2xGLFlBQVEsV0FBVyxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFDeEYsWUFBUSxRQUFRLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUNsRixZQUFRLGtCQUFrQixFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsOEJBQThCLENBQUM7QUFDckcsWUFBUSxlQUFlLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUMvRixZQUFRLFdBQVcsRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLHdCQUF3QixDQUFDO0FBQ3hGLFlBQVEsT0FBTyxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFDcEYsWUFBUSxVQUFVLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQztBQUN0RixZQUFRLFFBQVEsRUFBRyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDO0FBQ25GLFlBQVEsVUFBVSxFQUFHLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFDdkYsWUFBUSxhQUFhLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQztBQUMzRixTQUFLLENBQUM7QUFDTixLQUFDO0FBQ0Q7OElBQUM7QUFBQztnREFoQ0QsVUFBVSxTQUFDLGtCQUNSLFVBQVUsRUFBRSxNQUFNO1NBQ3JCOzs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRHluYW1pY0NvbXBvbmVudE1hcHBlciwgRHluYW1pY0NvbXBvbmVudFJlc29sdmVGdW5jdGlvbiwgRHluYW1pY0NvbXBvbmVudFJlc29sdmVyIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZHluYW1pYy1jb21wb25lbnQtbWFwcGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgd2lkZ2V0cyBmcm9tICcuLy4uL2NvbXBvbmVudHMvd2lkZ2V0cy9pbmRleCc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgRm9ybVJlbmRlcmluZ1NlcnZpY2UgZXh0ZW5kcyBEeW5hbWljQ29tcG9uZW50TWFwcGVyIHtcblxuICAgIHByb3RlY3RlZCBkZWZhdWx0VmFsdWU6IFR5cGU8e30+ID0gd2lkZ2V0cy5Vbmtub3duV2lkZ2V0Q29tcG9uZW50O1xuICAgIHByb3RlY3RlZCB0eXBlczogeyBba2V5OiBzdHJpbmddOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZUZ1bmN0aW9uIH0gPSB7XG4gICAgICAgICd0ZXh0JzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuVGV4dFdpZGdldENvbXBvbmVudCksXG4gICAgICAgICdzdHJpbmcnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5UZXh0V2lkZ2V0Q29tcG9uZW50KSxcbiAgICAgICAgJ2ludGVnZXInOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5OdW1iZXJXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAnbXVsdGktbGluZS10ZXh0JzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuTXVsdGlsaW5lVGV4dFdpZGdldENvbXBvbmVudENvbXBvbmVudCksXG4gICAgICAgICdib29sZWFuJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuQ2hlY2tib3hXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAnZHJvcGRvd24nOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5Ecm9wZG93bldpZGdldENvbXBvbmVudCksXG4gICAgICAgICdkYXRlJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuRGF0ZVdpZGdldENvbXBvbmVudCksXG4gICAgICAgICdhbW91bnQnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5BbW91bnRXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAncmFkaW8tYnV0dG9ucyc6IER5bmFtaWNDb21wb25lbnRSZXNvbHZlci5mcm9tVHlwZSh3aWRnZXRzLlJhZGlvQnV0dG9uc1dpZGdldENvbXBvbmVudCksXG4gICAgICAgICdoeXBlcmxpbmsnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5IeXBlcmxpbmtXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAncmVhZG9ubHktdGV4dCc6IER5bmFtaWNDb21wb25lbnRSZXNvbHZlci5mcm9tVHlwZSh3aWRnZXRzLkRpc3BsYXlUZXh0V2lkZ2V0Q29tcG9uZW50KSxcbiAgICAgICAgJ2pzb24nOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5Kc29uV2lkZ2V0Q29tcG9uZW50KSxcbiAgICAgICAgJ3JlYWRvbmx5JzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuVGV4dFdpZGdldENvbXBvbmVudCksXG4gICAgICAgICd0eXBlYWhlYWQnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5UeXBlYWhlYWRXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAncGVvcGxlJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuUGVvcGxlV2lkZ2V0Q29tcG9uZW50KSxcbiAgICAgICAgJ2Z1bmN0aW9uYWwtZ3JvdXAnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5GdW5jdGlvbmFsR3JvdXBXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAnZHluYW1pYy10YWJsZSc6IER5bmFtaWNDb21wb25lbnRSZXNvbHZlci5mcm9tVHlwZSh3aWRnZXRzLkR5bmFtaWNUYWJsZVdpZGdldENvbXBvbmVudCksXG4gICAgICAgICdjb250YWluZXInOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5Db250YWluZXJXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAnZ3JvdXAnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5Db250YWluZXJXaWRnZXRDb21wb25lbnQpLFxuICAgICAgICAnZG9jdW1lbnQnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUod2lkZ2V0cy5Eb2N1bWVudFdpZGdldENvbXBvbmVudCksXG4gICAgICAgICd1cGxvYWQnOiAgRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuVXBsb2FkV2lkZ2V0Q29tcG9uZW50KSxcbiAgICAgICAgJ2RhdGV0aW1lJzogIER5bmFtaWNDb21wb25lbnRSZXNvbHZlci5mcm9tVHlwZSh3aWRnZXRzLkRhdGVUaW1lV2lkZ2V0Q29tcG9uZW50KSxcbiAgICAgICAgJ2ZpbGUtdmlld2VyJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKHdpZGdldHMuRmlsZVZpZXdlcldpZGdldENvbXBvbmVudClcbiAgICB9O1xufVxuIl19