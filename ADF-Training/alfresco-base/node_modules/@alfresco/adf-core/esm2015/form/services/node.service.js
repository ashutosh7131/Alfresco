import { Injectable } from '@angular/core';
import { NodesApiService } from '../../services/nodes-api.service';
import * as i0 from "@angular/core";
import * as i1 from "../../services/nodes-api.service";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/nodes-api.service';
export class NodeService {
    constructor(nodesApiService) {
        this.nodesApiService = nodesApiService;
    }
    getNodeMetadata(nodeId) {
        return this.nodesApiService.getNodeMetadata(nodeId);
    }
    createNodeMetadata(nodeType, nameSpace, data, path, name) {
        return this.nodesApiService.createNodeMetadata(nodeType, nameSpace, data, path, name);
    }
    createNode(name, nodeType, properties, path) {
        return this.nodesApiService.createNodeInsideRoot(name, nodeType, properties, path);
    }
}
NodeService.ɵfac = function NodeService_Factory(t) { return new (t || NodeService)(ɵngcc0.ɵɵinject(ɵngcc1.NodesApiService)); };
NodeService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NodeService_Factory() { return new NodeService(i0.ɵɵinject(i1.NodesApiService)); }, token: NodeService, providedIn: "root" });
NodeService.ctorParameters = () => [
    { type: NodesApiService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NodeService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.NodesApiService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9mb3JtL3NlcnZpY2VzL25vZGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQkEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbkU7QUFFc0I7OztBQUt0QixNQUFNLE9BQU8sV0FBVztBQUN4QixJQUNJLFlBQW9CLGVBQWdDO0FBQUksUUFBcEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO0FBQUMsSUFBRSxDQUFDO0FBQzVELElBT1csZUFBZSxDQUFDLE1BQWM7QUFBSSxRQUNyQyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzVELElBQUksQ0FBQztBQUNMLElBV1csa0JBQWtCLENBQUMsUUFBZ0IsRUFBRSxTQUFjLEVBQUUsSUFBUyxFQUFFLElBQVksRUFBRSxJQUFhO0FBQUksUUFDbEcsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLGtCQUFrQixDQUFDLFFBQVEsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUM5RixJQUFJLENBQUM7QUFDTCxJQVVXLFVBQVUsQ0FBQyxJQUFZLEVBQUUsUUFBZ0IsRUFBRSxVQUFlLEVBQUUsSUFBWTtBQUFJLFFBQy9FLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzRixJQUFJLENBQUM7QUFDTDsrSEFBQztBQUNELDRMQTNDQztBQUFDO0VBSkQsVUFBVSxTQUFDLHJCQUkyQixZQU45QixlQUFlO0FBQUc7TUFHdkIsVUFBVSxFQUFFLE1BQU0sY0FDckI7Ozs7O2dGQUo0QjtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTm9kZUVudHJ5IH0gZnJvbSAnQGFsZnJlc2NvL2pzLWFwaSc7XG5pbXBvcnQgeyBOb2RlTWV0YWRhdGEgfSBmcm9tICcuLi8uLi9tb2RlbHMvbm9kZS1tZXRhZGF0YS5tb2RlbCc7XG5pbXBvcnQgeyBOb2Rlc0FwaVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9ub2Rlcy1hcGkuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG4vKipcbiAqIEBkZXByZWNhdGVkIGluIDMuOC4wLCB1c2UgTm9kZXNBcGlTZXJ2aWNlIGluc3RlYWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBOb2RlU2VydmljZSB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5vZGVzQXBpU2VydmljZTogTm9kZXNBcGlTZXJ2aWNlKSB7fVxuXG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgaW4gMy44LjAsIHVzZSBOb2Rlc0FwaVNlcnZpY2UgaW5zdGVhZC5cbiAgICAgKiBHZXQgdGhlIG1ldGFkYXRhIGFuZCB0aGUgbm9kZVR5cGUgZm9yIGEgbm9kZUlkIGNsZWFuZWQgYnkgdGhlIHByZWZpeC5cbiAgICAgKiBAcGFyYW0gbm9kZUlkIElEIG9mIHRoZSB0YXJnZXQgbm9kZVxuICAgICAqIEByZXR1cm5zIE5vZGUgbWV0YWRhdGFcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0Tm9kZU1ldGFkYXRhKG5vZGVJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxOb2RlTWV0YWRhdGE+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMubm9kZXNBcGlTZXJ2aWNlLmdldE5vZGVNZXRhZGF0YShub2RlSWQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkIGluIDMuOC4wLCB1c2UgTm9kZXNBcGlTZXJ2aWNlIGluc3RlYWQuXG4gICAgICogQ3JlYXRlIGEgbmV3IE5vZGUgZnJvbSBmb3JtIG1ldGFkYXRhLlxuICAgICAqIEBwYXJhbSBwYXRoIFBhdGggdG8gdGhlIG5vZGVcbiAgICAgKiBAcGFyYW0gbm9kZVR5cGUgTm9kZSB0eXBlXG4gICAgICogQHBhcmFtIG5hbWUgTm9kZSBuYW1lXG4gICAgICogQHBhcmFtIG5hbWVTcGFjZSBOYW1lc3BhY2UgZm9yIHByb3BlcnRpZXNcbiAgICAgKiBAcGFyYW0gZGF0YSBQcm9wZXJ0eSBkYXRhIHRvIHN0b3JlIGluIHRoZSBub2RlIHVuZGVyIG5hbWVzcGFjZVxuICAgICAqIEByZXR1cm5zIFRoZSBjcmVhdGVkIG5vZGVcbiAgICAgKi9cbiAgICBwdWJsaWMgY3JlYXRlTm9kZU1ldGFkYXRhKG5vZGVUeXBlOiBzdHJpbmcsIG5hbWVTcGFjZTogYW55LCBkYXRhOiBhbnksIHBhdGg6IHN0cmluZywgbmFtZT86IHN0cmluZyk6IE9ic2VydmFibGU8Tm9kZUVudHJ5PiB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vZGVzQXBpU2VydmljZS5jcmVhdGVOb2RlTWV0YWRhdGEobm9kZVR5cGUsIG5hbWVTcGFjZSwgZGF0YSwgcGF0aCwgbmFtZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgaW4gMy44LjAsIHVzZSBgY3JlYXRlTm9kZUluc2lkZVJvb3RgIG1ldGhvZCBmcm9tIE5vZGVzQXBpU2VydmljZSBpbnN0ZWFkLlxuICAgICAqIENyZWF0ZSBhIG5ldyBOb2RlIGZyb20gZm9ybSBtZXRhZGF0YVxuICAgICAqIEBwYXJhbSBuYW1lIE5vZGUgbmFtZVxuICAgICAqIEBwYXJhbSBub2RlVHlwZSBOb2RlIHR5cGVcbiAgICAgKiBAcGFyYW0gcHJvcGVydGllcyBOb2RlIGJvZHkgcHJvcGVydGllc1xuICAgICAqIEBwYXJhbSBwYXRoIFBhdGggdG8gdGhlIG5vZGVcbiAgICAgKiBAcmV0dXJucyBUaGUgY3JlYXRlZCBub2RlXG4gICAgICovXG4gICAgcHVibGljIGNyZWF0ZU5vZGUobmFtZTogc3RyaW5nLCBub2RlVHlwZTogc3RyaW5nLCBwcm9wZXJ0aWVzOiBhbnksIHBhdGg6IHN0cmluZyk6IE9ic2VydmFibGU8Tm9kZUVudHJ5PiB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vZGVzQXBpU2VydmljZS5jcmVhdGVOb2RlSW5zaWRlUm9vdChuYW1lLCBub2RlVHlwZSwgcHJvcGVydGllcywgcGF0aCk7XG4gICAgfVxufVxuIl19