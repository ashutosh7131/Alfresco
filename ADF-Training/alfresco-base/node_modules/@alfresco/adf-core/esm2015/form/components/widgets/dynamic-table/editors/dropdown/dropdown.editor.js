/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { LogService } from '../../../../../../services/log.service';
import { Component, Input } from '@angular/core';
import { FormService } from './../../../../../services/form.service';
import { DynamicTableModel } from './../../dynamic-table.widget.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../../../../../services/form.service';
import * as ɵngcc2 from '../../../../../../services/log.service';
import * as ɵngcc3 from '@angular/material/form-field';
import * as ɵngcc4 from '@angular/material/select';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '@angular/material/core';
import * as ɵngcc7 from '@angular/common';

function DropdownEditorComponent_mat_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const opt_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", opt_r1.name)("id", opt_r1.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(opt_r1.name);
} }
export class DropdownEditorComponent {
    constructor(formService, logService) {
        this.formService = formService;
        this.logService = logService;
        this.value = null;
        this.options = [];
    }
    ngOnInit() {
        const field = this.table.field;
        if (field) {
            if (this.column.optionType === 'rest') {
                if (this.table.form && this.table.form.taskId) {
                    this.getValuesByTaskId(field);
                }
                else {
                    this.getValuesByProcessDefinitionId(field);
                }
            }
            else {
                this.options = this.column.options || [];
                this.value = this.table.getCellValue(this.row, this.column);
            }
        }
    }
    getValuesByTaskId(field) {
        this.formService
            .getRestFieldValuesColumn(field.form.taskId, field.id, this.column.id)
            .subscribe((dynamicTableColumnOption) => {
            this.column.options = dynamicTableColumnOption || [];
            this.options = this.column.options;
            this.value = this.table.getCellValue(this.row, this.column);
        }, (err) => this.handleError(err));
    }
    getValuesByProcessDefinitionId(field) {
        this.formService
            .getRestFieldValuesColumnByProcessId(field.form.processDefinitionId, field.id, this.column.id)
            .subscribe((dynamicTableColumnOption) => {
            this.column.options = dynamicTableColumnOption || [];
            this.options = this.column.options;
            this.value = this.table.getCellValue(this.row, this.column);
        }, (err) => this.handleError(err));
    }
    onValueChanged(row, column, event) {
        let value = event.value;
        value = column.options.find((opt) => opt.name === value);
        row.value[column.id] = value;
    }
    handleError(error) {
        this.logService.error(error);
    }
}
DropdownEditorComponent.ɵfac = function DropdownEditorComponent_Factory(t) { return new (t || DropdownEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LogService)); };
DropdownEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownEditorComponent, selectors: [["adf-dropdown-editor"]], inputs: { table: "table", row: "row", column: "column" }, decls: 7, vars: 7, consts: [[1, "dropdown-editor"], ["floatPlaceholder", "never", 1, "adf-dropdown-editor-select", 3, "id", "ngModel", "required", "disabled", "ngModelChange", "selectionChange"], [3, "value", "id", 4, "ngFor", "ngForOf"], [3, "value", "id"]], template: function DropdownEditorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "label");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "mat-form-field");
        ɵngcc0.ɵɵelementStart(4, "mat-select", 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function DropdownEditorComponent_Template_mat_select_ngModelChange_4_listener($event) { return ctx.value = $event; })("selectionChange", function DropdownEditorComponent_Template_mat_select_selectionChange_4_listener($event) { return ctx.onValueChanged(ctx.row, ctx.column, $event); });
        ɵngcc0.ɵɵelement(5, "mat-option");
        ɵngcc0.ɵɵtemplate(6, DropdownEditorComponent_mat_option_6_Template, 2, 3, "mat-option", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("for", ctx.column.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.column.name);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("id", ctx.column.id)("ngModel", ctx.value)("required", ctx.column.required)("disabled", !ctx.column.editable);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.options);
    } }, directives: [ɵngcc3.MatFormField, ɵngcc4.MatSelect, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc5.RequiredValidator, ɵngcc6.MatOption, ɵngcc7.NgForOf], styles: [".adf-dropdown-editor-select[_ngcontent-%COMP%]{width:100%}"] });
DropdownEditorComponent.ctorParameters = () => [
    { type: FormService },
    { type: LogService }
];
DropdownEditorComponent.propDecorators = {
    table: [{ type: Input }],
    row: [{ type: Input }],
    column: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownEditorComponent, [{
        type: Component,
        args: [{
                selector: 'adf-dropdown-editor',
                template: "<div class=\"dropdown-editor\">\n    <label [attr.for]=\"column.id\">{{column.name}}</label>\n    <mat-form-field>\n        <mat-select\n            floatPlaceholder=\"never\"\n            class=\"adf-dropdown-editor-select\"\n            [id]=\"column.id\"\n            [(ngModel)]=\"value\"\n            [required]=\"column.required\"\n            [disabled]=\"!column.editable\"\n            (selectionChange)=\"onValueChanged(row, column, $event)\">\n            <mat-option></mat-option>\n            <mat-option *ngFor=\"let opt of options\" [value]=\"opt.name\" [id]=\"opt.id\">{{opt.name}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n",
                styles: [".adf-dropdown-editor-select{width:100%}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc2.LogService }]; }, { table: [{
            type: Input
        }], row: [{
            type: Input
        }], column: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uZWRpdG9yLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9mb3JtL2NvbXBvbmVudHMvd2lkZ2V0cy9keW5hbWljLXRhYmxlL2VkaXRvcnMvZHJvcGRvd24vZHJvcGRvd24uZWRpdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFJSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDcEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBSXJFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU92RSxNQUFNLE9BQU8sdUJBQXVCO0FBQUcsSUFjbkMsWUFBbUIsV0FBd0IsRUFDdkIsVUFBc0I7QUFDOUMsUUFGdUIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7QUFBQyxRQUN4QixlQUFVLEdBQVYsVUFBVSxDQUFZO0FBQUMsUUFiM0MsVUFBSyxHQUFRLElBQUksQ0FBQztBQUN0QixRQUFJLFlBQU8sR0FBK0IsRUFBRSxDQUFDO0FBQzdDLElBWUksQ0FBQztBQUNMLElBQ0ksUUFBUTtBQUNaLFFBQVEsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7QUFDdkMsUUFBUSxJQUFJLEtBQUssRUFBRTtBQUNuQixZQUFZLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEtBQUssTUFBTSxFQUFFO0FB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QUFLLENBQUM7QUFDckMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxXQUFXLENBQUMsS0FBVTtBQUMxQixRQUFRLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3JDLElBQUksQ0FBQztBQUNMO21EQWxGQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHFCQUFxQixrQkFDL0I7OztrQ0FBcUM7OztpQkFFeEM7Ozs7Ozs7Ozs7Ozs7Ozs7OzRPQUNJO0FBQUM7QUFBaUQsWUFYOUMsV0FBVztBQUFJLFlBRmYsVUFBVTtBQUFHO0FBQUc7QUFBMkMsb0JBa0IvRCxLQUFLO0FBQ1Isa0JBRUcsS0FBSztBQUNSLHFCQUVHLEtBQUs7QUFDVDs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbiAvKiB0c2xpbnQ6ZGlzYWJsZTpjb21wb25lbnQtc2VsZWN0b3IgICovXG5cbmltcG9ydCB7IExvZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9zZXJ2aWNlcy9sb2cuc2VydmljZSc7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1TZXJ2aWNlIH0gZnJvbSAnLi8uLi8uLi8uLi8uLi8uLi9zZXJ2aWNlcy9mb3JtLnNlcnZpY2UnO1xuaW1wb3J0IHsgRHluYW1pY1RhYmxlQ29sdW1uT3B0aW9uIH0gZnJvbSAnLi8uLi8uLi9keW5hbWljLXRhYmxlLWNvbHVtbi1vcHRpb24ubW9kZWwnO1xuaW1wb3J0IHsgRHluYW1pY1RhYmxlQ29sdW1uIH0gZnJvbSAnLi8uLi8uLi9keW5hbWljLXRhYmxlLWNvbHVtbi5tb2RlbCc7XG5pbXBvcnQgeyBEeW5hbWljVGFibGVSb3cgfSBmcm9tICcuLy4uLy4uL2R5bmFtaWMtdGFibGUtcm93Lm1vZGVsJztcbmltcG9ydCB7IER5bmFtaWNUYWJsZU1vZGVsIH0gZnJvbSAnLi8uLi8uLi9keW5hbWljLXRhYmxlLndpZGdldC5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWRyb3Bkb3duLWVkaXRvcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Ryb3Bkb3duLmVkaXRvci5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9kcm9wZG93bi5lZGl0b3Iuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIERyb3Bkb3duRWRpdG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIHZhbHVlOiBhbnkgPSBudWxsO1xuICAgIG9wdGlvbnM6IER5bmFtaWNUYWJsZUNvbHVtbk9wdGlvbltdID0gW107XG5cbiAgICBASW5wdXQoKVxuICAgIHRhYmxlOiBEeW5hbWljVGFibGVNb2RlbDtcblxuICAgIEBJbnB1dCgpXG4gICAgcm93OiBEeW5hbWljVGFibGVSb3c7XG5cbiAgICBASW5wdXQoKVxuICAgIGNvbHVtbjogRHluYW1pY1RhYmxlQ29sdW1uO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGZvcm1TZXJ2aWNlOiBGb3JtU2VydmljZSxcbiAgICAgICAgICAgICAgICBwcml2YXRlIGxvZ1NlcnZpY2U6IExvZ1NlcnZpY2UpIHtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgY29uc3QgZmllbGQgPSB0aGlzLnRhYmxlLmZpZWxkO1xuICAgICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbHVtbi5vcHRpb25UeXBlID09PSAncmVzdCcpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy50YWJsZS5mb3JtICYmIHRoaXMudGFibGUuZm9ybS50YXNrSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRWYWx1ZXNCeVRhc2tJZChmaWVsZCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRWYWx1ZXNCeVByb2Nlc3NEZWZpbml0aW9uSWQoZmllbGQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb2x1bW4ub3B0aW9ucyB8fCBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy50YWJsZS5nZXRDZWxsVmFsdWUodGhpcy5yb3csIHRoaXMuY29sdW1uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldFZhbHVlc0J5VGFza0lkKGZpZWxkKSB7XG4gICAgICAgIHRoaXMuZm9ybVNlcnZpY2VcbiAgICAgICAgICAgIC5nZXRSZXN0RmllbGRWYWx1ZXNDb2x1bW4oXG4gICAgICAgICAgICAgICAgZmllbGQuZm9ybS50YXNrSWQsXG4gICAgICAgICAgICAgICAgZmllbGQuaWQsXG4gICAgICAgICAgICAgICAgdGhpcy5jb2x1bW4uaWRcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKGR5bmFtaWNUYWJsZUNvbHVtbk9wdGlvbjogRHluYW1pY1RhYmxlQ29sdW1uT3B0aW9uW10pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb2x1bW4ub3B0aW9ucyA9IGR5bmFtaWNUYWJsZUNvbHVtbk9wdGlvbiB8fCBbXTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb2x1bW4ub3B0aW9ucztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMudGFibGUuZ2V0Q2VsbFZhbHVlKHRoaXMucm93LCB0aGlzLmNvbHVtbik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAoZXJyKSA9PiB0aGlzLmhhbmRsZUVycm9yKGVycilcbiAgICAgICAgICAgICk7XG4gICAgfVxuXG4gICAgZ2V0VmFsdWVzQnlQcm9jZXNzRGVmaW5pdGlvbklkKGZpZWxkKSB7XG4gICAgICAgIHRoaXMuZm9ybVNlcnZpY2VcbiAgICAgICAgICAgIC5nZXRSZXN0RmllbGRWYWx1ZXNDb2x1bW5CeVByb2Nlc3NJZChcbiAgICAgICAgICAgICAgICBmaWVsZC5mb3JtLnByb2Nlc3NEZWZpbml0aW9uSWQsXG4gICAgICAgICAgICAgICAgZmllbGQuaWQsXG4gICAgICAgICAgICAgICAgdGhpcy5jb2x1bW4uaWRcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKGR5bmFtaWNUYWJsZUNvbHVtbk9wdGlvbjogRHluYW1pY1RhYmxlQ29sdW1uT3B0aW9uW10pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb2x1bW4ub3B0aW9ucyA9IGR5bmFtaWNUYWJsZUNvbHVtbk9wdGlvbiB8fCBbXTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb2x1bW4ub3B0aW9ucztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMudGFibGUuZ2V0Q2VsbFZhbHVlKHRoaXMucm93LCB0aGlzLmNvbHVtbik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAoZXJyKSA9PiB0aGlzLmhhbmRsZUVycm9yKGVycilcbiAgICAgICAgICAgICk7XG4gICAgfVxuXG4gICAgb25WYWx1ZUNoYW5nZWQocm93OiBEeW5hbWljVGFibGVSb3csIGNvbHVtbjogRHluYW1pY1RhYmxlQ29sdW1uLCBldmVudDogYW55KSB7XG4gICAgICAgIGxldCB2YWx1ZTogYW55ID0gKDxIVE1MSW5wdXRFbGVtZW50PiBldmVudCkudmFsdWU7XG4gICAgICAgIHZhbHVlID0gY29sdW1uLm9wdGlvbnMuZmluZCgob3B0KSA9PiBvcHQubmFtZSA9PT0gdmFsdWUpO1xuICAgICAgICByb3cudmFsdWVbY29sdW1uLmlkXSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGhhbmRsZUVycm9yKGVycm9yOiBhbnkpIHtcbiAgICAgICAgdGhpcy5sb2dTZXJ2aWNlLmVycm9yKGVycm9yKTtcbiAgICB9XG59XG4iXX0=