/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { FormService } from './../services/form.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../services/form.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../datatable/components/datatable/datatable.component';
import * as ɵngcc4 from '../../data-column/data-column-list.component';
import * as ɵngcc5 from '../../data-column/data-column.component';

function FormListComponent_adf_datatable_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "adf-datatable", 1);
    ɵngcc0.ɵɵelementStart(1, "data-columns");
    ɵngcc0.ɵɵelement(2, "data-column", 2);
    ɵngcc0.ɵɵelement(3, "data-column", 3);
    ɵngcc0.ɵɵelement(4, "data-column", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("rows", ctx_r0.forms);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("sortable", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("sortable", true);
} }
export class FormListComponent {
    constructor(formService) {
        this.formService = formService;
        this.forms = [];
    }
    ngOnChanges() {
        this.getForms();
    }
    isEmpty() {
        return this.forms && this.forms.length === 0;
    }
    getForms() {
        this.formService.getForms().subscribe((forms) => {
            this.forms.push(...forms);
        });
    }
}
FormListComponent.ɵfac = function FormListComponent_Factory(t) { return new (t || FormListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService)); };
FormListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormListComponent, selectors: [["adf-form-list"]], inputs: { forms: "forms" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[3, "rows", 4, "ngIf"], [3, "rows"], ["key", "name", "type", "text", "title", "Name", 1, "adf-ellipsis-cell", 3, "sortable"], ["key", "lastUpdatedByFullName", "type", "text", "title", "User", 1, "adf-ellipsis-cell", 3, "sortable"], ["key", "lastUpdated", "type", "date", "format", "shortDate", "title", "Date"]], template: function FormListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FormListComponent_adf_datatable_0_Template, 5, 3, "adf-datatable", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isEmpty());
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.DataTableComponent, ɵngcc4.DataColumnListComponent, ɵngcc5.DataColumnComponent], encapsulation: 2 });
FormListComponent.ctorParameters = () => [
    { type: FormService }
];
FormListComponent.propDecorators = {
    forms: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormListComponent, [{
        type: Component,
        args: [{
                selector: 'adf-form-list',
                template: "<adf-datatable *ngIf=\"!isEmpty()\"\n    [rows]=\"forms\">\n    <data-columns>\n        <data-column key=\"name\" type=\"text\" title=\"Name\" class=\"adf-ellipsis-cell\" [sortable]=\"true\"></data-column>\n        <data-column key=\"lastUpdatedByFullName\" type=\"text\" title=\"User\" class=\"adf-ellipsis-cell\" [sortable]=\"true\"></data-column>\n        <data-column key=\"lastUpdated\" type=\"date\" format=\"shortDate\" title=\"Date\"></data-column>\n    </data-columns>\n</adf-datatable>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.FormService }]; }, { forms: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvZm9ybS9jb21wb25lbnRzL2Zvcm0tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT3pELE1BQU0sT0FBTyxpQkFBaUI7QUFBRyxJQU03QixZQUFzQixXQUF3QjtBQUNsRCxRQUQwQixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUFDLFFBRi9DLFVBQUssR0FBVyxFQUFFLENBQUM7QUFDdkIsSUFFSSxDQUFDO0FBQ0wsSUFDSSxXQUFXO0FBQ2YsUUFBUSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDeEIsSUFBSSxDQUFDO0FBQ0wsSUFDSSxPQUFPO0FBQUssUUFDUixPQUFPLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDO0FBQ3JELElBQUksQ0FBQztBQUNMLElBQ0ksUUFBUTtBQUNaLFFBQVEsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtBQUN4RCxZQUFZLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDdEMsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNYLElBQUksQ0FBQztBQUNMOzZDQTNCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGVBQWUsa0JBQ3pCO2tlQUF5QyxrQkFDekMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksY0FDeEM7Ozs7K0lBQ0k7QUFBQztBQUEyQyxZQVB4QyxXQUFXO0FBQUc7QUFBRztBQUV0QixvQkFRQyxLQUFLO0FBQ1Q7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1TZXJ2aWNlIH0gZnJvbSAnLi8uLi9zZXJ2aWNlcy9mb3JtLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1mb3JtLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9mb3JtLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgRm9ybUxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuXG4gICAgLyoqIFRoZSBhcnJheSB0aGF0IGNvbnRhaW5zIHRoZSBpbmZvcm1hdGlvbiB0byBzaG93IGluc2lkZSB0aGUgbGlzdC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGZvcm1zOiBhbnkgW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBmb3JtU2VydmljZTogRm9ybVNlcnZpY2UpIHtcbiAgICB9XG5cbiAgICBuZ09uQ2hhbmdlcygpIHtcbiAgICAgICAgdGhpcy5nZXRGb3JtcygpO1xuICAgIH1cblxuICAgIGlzRW1wdHkoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1zICYmIHRoaXMuZm9ybXMubGVuZ3RoID09PSAwO1xuICAgIH1cblxuICAgIGdldEZvcm1zKCkge1xuICAgICAgICB0aGlzLmZvcm1TZXJ2aWNlLmdldEZvcm1zKCkuc3Vic2NyaWJlKChmb3JtcykgPT4ge1xuICAgICAgICAgICAgdGhpcy5mb3Jtcy5wdXNoKC4uLmZvcm1zKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG59XG4iXX0=