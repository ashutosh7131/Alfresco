/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { FormService } from '../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../services/form.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../../viewer/components/viewer.component';
import * as ɵngcc4 from '../error/error.component';
import * as ɵngcc5 from '@ngx-translate/core';

function FileViewerWidgetComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
export class FileViewerWidgetComponent extends WidgetComponent {
    constructor(formService) {
        super(formService);
    }
}
FileViewerWidgetComponent.ɵfac = function FileViewerWidgetComponent_Factory(t) { return new (t || FileViewerWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService)); };
FileViewerWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FileViewerWidgetComponent, selectors: [["file-viewer-widget"]], hostBindings: function FileViewerWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function FileViewerWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function FileViewerWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function FileViewerWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function FileViewerWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function FileViewerWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function FileViewerWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function FileViewerWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function FileViewerWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function FileViewerWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 17, consts: [[1, "adf-label"], [4, "ngIf"], [3, "overlayMode", "nodeId", "showViewer", "allowGoBack"], [3, "error"]], template: function FileViewerWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "label", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, FileViewerWidgetComponent_span_4_Template, 2, 0, "span", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "adf-viewer", 2);
        ɵngcc0.ɵɵelement(6, "error-widget", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adf-file-viewer-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 15, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("overlayMode", false)("nodeId", ctx.field.value)("showViewer", ctx.field.value)("allowGoBack", false);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ViewerComponent, ɵngcc4.ErrorWidgetComponent], pipes: [ɵngcc5.TranslatePipe], styles: ["file-viewer-widget,file-viewer-widget .adf-file-viewer-widget{height:100%;width:100%}file-viewer-widget .adf-file-viewer-widget adf-viewer.adf-viewer{position:relative}file-viewer-widget .adf-file-viewer-widget adf-viewer.adf-viewer .adf-viewer-container .adf-viewer-content>div{height:90vh}"], encapsulation: 2 });
FileViewerWidgetComponent.ctorParameters = () => [
    { type: FormService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileViewerWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'file-viewer-widget',
                template: "<div class=\"adf-file-viewer-widget {{field.className}}\" [class.adf-invalid]=\"!field.isValid\"\n    [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span\n            *ngIf=\"isRequired()\">*</span></label>\n    <adf-viewer [overlayMode]=\"false\" [nodeId]=\"field.value\" [showViewer]=\"field.value\" [allowGoBack]=\"false\"></adf-viewer>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: ["file-viewer-widget,file-viewer-widget .adf-file-viewer-widget{height:100%;width:100%}file-viewer-widget .adf-file-viewer-widget adf-viewer.adf-viewer{position:relative}file-viewer-widget .adf-file-viewer-widget adf-viewer.adf-viewer .adf-viewer-container .adf-viewer-content>div{height:90vh}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS12aWV3ZXIud2lkZ2V0LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9mb3JtL2NvbXBvbmVudHMvd2lkZ2V0cy9maWxlLXZpZXdlci9maWxlLXZpZXdlci53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzdELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7Ozs7Ozs7OztBQXFCeEQsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGVBQWU7QUFDOUQsSUFDSSxZQUFZLFdBQXdCO0FBQ3hDLFFBQVEsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzNCLElBQUksQ0FBQztBQUNMO3FEQXRCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLG9CQUFvQixrQkFDOUI7OytQQUF3QyxrQkFFeEMsSUFBSSxFQUFFLHNCQUNGLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixRQUFRLEVBQUUsZUFBZSxzQkFDekIsVUFBVSxFQUFFLGVBQWUsc0JBQzNCLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixXQUFXLEVBQUUsZUFBZSxzQkFDNUIsWUFBWSxFQUFFLGVBQWUsc0JBQzdCLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixXQUFXLEVBQUUsZUFBZSxzQkFDNUIsVUFBVSxFQUFFLGVBQWUsa0JBQzlCLGtCQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dIQUN4Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NmJBQ0k7QUFBQztBQUFtRCxZQXRCaEQsV0FBVztBQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0RUFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9mb3JtLnNlcnZpY2UnO1xuaW1wb3J0IHsgV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi8uLi93aWRnZXQuY29tcG9uZW50JztcblxuIC8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3RvciAgKi9cblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdmaWxlLXZpZXdlci13aWRnZXQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9maWxlLXZpZXdlci53aWRnZXQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZmlsZS12aWV3ZXIud2lkZ2V0LnNjc3MnXSxcbiAgICBob3N0OiB7XG4gICAgICAgICcoY2xpY2spJzogJ2V2ZW50KCRldmVudCknLFxuICAgICAgICAnKGJsdXIpJzogJ2V2ZW50KCRldmVudCknLFxuICAgICAgICAnKGNoYW5nZSknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoZm9jdXMpJzogJ2V2ZW50KCRldmVudCknLFxuICAgICAgICAnKGZvY3VzaW4pJzogJ2V2ZW50KCRldmVudCknLFxuICAgICAgICAnKGZvY3Vzb3V0KSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhpbnB1dCknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoaW52YWxpZCknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoc2VsZWN0KSc6ICdldmVudCgkZXZlbnQpJ1xuICAgIH0sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBGaWxlVmlld2VyV2lkZ2V0Q29tcG9uZW50IGV4dGVuZHMgV2lkZ2V0Q29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKGZvcm1TZXJ2aWNlOiBGb3JtU2VydmljZSkge1xuICAgICAgICBzdXBlcihmb3JtU2VydmljZSk7XG4gICAgfVxufVxuIl19