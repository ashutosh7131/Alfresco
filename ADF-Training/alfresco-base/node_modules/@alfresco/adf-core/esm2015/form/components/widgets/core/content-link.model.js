/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class ContentLinkModel {
    constructor(obj) {
        this.contentAvailable = obj && obj.contentAvailable;
        this.created = obj && obj.created;
        this.createdBy = obj && obj.createdBy || {};
        this.id = obj && obj.id;
        this.link = obj && obj.link;
        this.mimeType = obj && obj.mimeType;
        this.name = obj && obj.name;
        this.previewStatus = obj && obj.previewStatus;
        this.relatedContent = obj && obj.relatedContent;
        this.simpleType = obj && obj.simpleType;
        this.thumbnailStatus = obj && obj.thumbnailStatus;
        this.nodeId = obj && obj.nodeId;
    }
    hasPreviewStatus() {
        return this.previewStatus === 'supported';
    }
    isTypeImage() {
        return this.simpleType === 'image';
    }
    isTypePdf() {
        return this.simpleType === 'pdf';
    }
    isTypeDoc() {
        return this.simpleType === 'word' || this.simpleType === 'content';
    }
    isThumbnailReady() {
        return this.thumbnailStatus === 'created';
    }
    isThumbnailSupported() {
        return this.isTypeImage() || ((this.isTypePdf() || this.isTypeDoc()) && this.isThumbnailReady());
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1saW5rLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS8iLCJzb3VyY2VzIjpbImZvcm0vY29tcG9uZW50cy93aWRnZXRzL2NvcmUvY29udGVudC1saW5rLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQU1GLE1BQU0sT0FBTyxnQkFBZ0I7SUFrQjFCLFlBQVksR0FBUztRQUNqQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQztRQUNwRCxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDO1FBQzVDLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDNUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLGFBQWEsQ0FBQztRQUM5QyxJQUFJLENBQUMsY0FBYyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFDO1FBQ2hELElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUM7UUFDeEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLGVBQWUsQ0FBQztRQUNsRCxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxnQkFBZ0I7UUFDWixPQUFPLElBQUksQ0FBQyxhQUFhLEtBQUssV0FBVyxDQUFDO0lBQzlDLENBQUM7SUFFRCxXQUFXO1FBQ1AsT0FBTyxJQUFJLENBQUMsVUFBVSxLQUFLLE9BQU8sQ0FBQztJQUN2QyxDQUFDO0lBRUQsU0FBUztRQUNMLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxLQUFLLENBQUM7SUFDckMsQ0FBQztJQUVELFNBQVM7UUFDTCxPQUFPLElBQUksQ0FBQyxVQUFVLEtBQUssTUFBTSxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssU0FBUyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxnQkFBZ0I7UUFDWixPQUFPLElBQUksQ0FBQyxlQUFlLEtBQUssU0FBUyxDQUFDO0lBQzlDLENBQUM7SUFFRCxvQkFBb0I7UUFDaEIsT0FBTyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO0lBQ3JHLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbiAvKiB0c2xpbnQ6ZGlzYWJsZTpjb21wb25lbnQtc2VsZWN0b3IgICovXG5cbiBpbXBvcnQgeyBSZWxhdGVkQ29udGVudFJlcHJlc2VudGF0aW9uIH0gZnJvbSAnQGFsZnJlc2NvL2pzLWFwaSc7XG5cbiBleHBvcnQgY2xhc3MgQ29udGVudExpbmtNb2RlbCBpbXBsZW1lbnRzIFJlbGF0ZWRDb250ZW50UmVwcmVzZW50YXRpb24ge1xuXG4gICAgY29udGVudEF2YWlsYWJsZTogYm9vbGVhbjtcbiAgICBjcmVhdGVkOiBEYXRlO1xuICAgIGNyZWF0ZWRCeTogYW55O1xuICAgIGlkOiBudW1iZXI7XG4gICAgbm9kZUlkOiBzdHJpbmc7XG4gICAgbGluazogYm9vbGVhbjtcbiAgICBtaW1lVHlwZTogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBwcmV2aWV3U3RhdHVzOiBzdHJpbmc7XG4gICAgcmVsYXRlZENvbnRlbnQ6IGJvb2xlYW47XG4gICAgc2ltcGxlVHlwZTogc3RyaW5nO1xuICAgIHRodW1ibmFpbFVybDogc3RyaW5nO1xuICAgIGNvbnRlbnRSYXdVcmw6IHN0cmluZztcbiAgICBjb250ZW50QmxvYjogQmxvYjtcbiAgICB0aHVtYm5haWxTdGF0dXM6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKG9iaj86IGFueSkge1xuICAgICAgICB0aGlzLmNvbnRlbnRBdmFpbGFibGUgPSBvYmogJiYgb2JqLmNvbnRlbnRBdmFpbGFibGU7XG4gICAgICAgIHRoaXMuY3JlYXRlZCA9IG9iaiAmJiBvYmouY3JlYXRlZDtcbiAgICAgICAgdGhpcy5jcmVhdGVkQnkgPSBvYmogJiYgb2JqLmNyZWF0ZWRCeSB8fCB7fTtcbiAgICAgICAgdGhpcy5pZCA9IG9iaiAmJiBvYmouaWQ7XG4gICAgICAgIHRoaXMubGluayA9IG9iaiAmJiBvYmoubGluaztcbiAgICAgICAgdGhpcy5taW1lVHlwZSA9IG9iaiAmJiBvYmoubWltZVR5cGU7XG4gICAgICAgIHRoaXMubmFtZSA9IG9iaiAmJiBvYmoubmFtZTtcbiAgICAgICAgdGhpcy5wcmV2aWV3U3RhdHVzID0gb2JqICYmIG9iai5wcmV2aWV3U3RhdHVzO1xuICAgICAgICB0aGlzLnJlbGF0ZWRDb250ZW50ID0gb2JqICYmIG9iai5yZWxhdGVkQ29udGVudDtcbiAgICAgICAgdGhpcy5zaW1wbGVUeXBlID0gb2JqICYmIG9iai5zaW1wbGVUeXBlO1xuICAgICAgICB0aGlzLnRodW1ibmFpbFN0YXR1cyA9IG9iaiAmJiBvYmoudGh1bWJuYWlsU3RhdHVzO1xuICAgICAgICB0aGlzLm5vZGVJZCA9IG9iaiAmJiBvYmoubm9kZUlkO1xuICAgIH1cblxuICAgIGhhc1ByZXZpZXdTdGF0dXMoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnByZXZpZXdTdGF0dXMgPT09ICdzdXBwb3J0ZWQnO1xuICAgIH1cblxuICAgIGlzVHlwZUltYWdlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5zaW1wbGVUeXBlID09PSAnaW1hZ2UnO1xuICAgIH1cblxuICAgIGlzVHlwZVBkZigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2ltcGxlVHlwZSA9PT0gJ3BkZic7XG4gICAgfVxuXG4gICAgaXNUeXBlRG9jKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5zaW1wbGVUeXBlID09PSAnd29yZCcgfHwgdGhpcy5zaW1wbGVUeXBlID09PSAnY29udGVudCc7XG4gICAgfVxuXG4gICAgaXNUaHVtYm5haWxSZWFkeSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGh1bWJuYWlsU3RhdHVzID09PSAnY3JlYXRlZCc7XG4gICAgfVxuXG4gICAgaXNUaHVtYm5haWxTdXBwb3J0ZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzVHlwZUltYWdlKCkgfHwgKCh0aGlzLmlzVHlwZVBkZigpIHx8IHRoaXMuaXNUeXBlRG9jKCkpICYmIHRoaXMuaXNUaHVtYm5haWxSZWFkeSgpKTtcbiAgICB9XG59XG4iXX0=