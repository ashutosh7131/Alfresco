/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';
import { MomentDateAdapter } from '../../../../utils/moment-date-adapter';
import { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';
import { Component, ViewEncapsulation } from '@angular/core';
import { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';
import moment from 'moment-es6';
import { FormService } from './../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../../../services/form.service';
import * as ɵngcc2 from '@angular/material/core';
import * as ɵngcc3 from '../../../../services/user-preferences.service';
import * as ɵngcc4 from '@angular/material/form-field';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '@angular/material/input';
import * as ɵngcc7 from '@angular/material/datepicker';
import * as ɵngcc8 from '../error/error.component';
import * as ɵngcc9 from '@ngx-translate/core';
import * as ɵngcc10 from '../../../../pipes/moment-date.pipe';

function DateWidgetComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function DateWidgetComponent_error_widget_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
const ɵ0 = MOMENT_DATE_FORMATS;
export class DateWidgetComponent extends WidgetComponent {
    constructor(formService, dateAdapter, userPreferencesService) {
        super(formService);
        this.formService = formService;
        this.dateAdapter = dateAdapter;
        this.userPreferencesService = userPreferencesService;
        this.DATE_FORMAT = 'DD-MM-YYYY';
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        this.userPreferencesService
            .select(UserPreferenceValues.Locale)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(locale => this.dateAdapter.setLocale(locale));
        const momentDateAdapter = this.dateAdapter;
        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;
        if (this.field) {
            if (this.field.minValue) {
                this.minDate = moment(this.field.minValue, this.DATE_FORMAT);
            }
            if (this.field.maxValue) {
                this.maxDate = moment(this.field.maxValue, this.DATE_FORMAT);
            }
        }
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    onDateChanged(newDateValue) {
        const date = moment(newDateValue, this.field.dateDisplayFormat, true);
        if (date.isValid()) {
            this.field.value = date.format(this.field.dateDisplayFormat);
        }
        else {
            this.field.value = newDateValue;
        }
        this.onFieldChanged(this.field);
    }
}
DateWidgetComponent.ɵfac = function DateWidgetComponent_Factory(t) { return new (t || DateWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserPreferencesService)); };
DateWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DateWidgetComponent, selectors: [["date-widget"]], hostBindings: function DateWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function DateWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function DateWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function DateWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function DateWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function DateWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function DateWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function DateWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function DateWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function DateWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: DateAdapter, useClass: MomentDateAdapter },
            { provide: MAT_DATE_FORMATS, useValue: ɵ0 }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 15, vars: 34, consts: [["id", "data-widget"], [1, "adf-date-widget"], [1, "adf-label"], [4, "ngIf"], ["matInput", "", 3, "id", "value", "required", "disabled", "placeholder", "change"], ["matSuffix", "", 3, "for", "disabled"], [3, "error"], [3, "required", 4, "ngIf"], [3, "touchUi", "startAt", "disabled"], ["datePicker", ""], ["type", "hidden", 3, "matDatepicker", "value", "min", "max", "disabled", "dateInput"], [3, "required"]], template: function DateWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-form-field", 1);
        ɵngcc0.ɵɵelementStart(2, "label", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, DateWidgetComponent_span_5_Template, 2, 0, "span", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "input", 4);
        ɵngcc0.ɵɵlistener("change", function DateWidgetComponent_Template_input_change_6_listener($event) { return ctx.onDateChanged($event.srcElement.value); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "mat-datepicker-toggle", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(8, "error-widget", 6);
        ɵngcc0.ɵɵtemplate(9, DateWidgetComponent_error_widget_9_Template, 2, 3, "error-widget", 7);
        ɵngcc0.ɵɵelement(10, "mat-datepicker", 8, 9);
        ɵngcc0.ɵɵpipe(12, "adfMomentDate");
        ɵngcc0.ɵɵelementStart(13, "input", 10);
        ɵngcc0.ɵɵlistener("dateInput", function DateWidgetComponent_Template_input_dateInput_13_listener($event) { return ctx.onDateChanged($event.targetElement.value); });
        ɵngcc0.ɵɵpipe(14, "adfMomentDate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(11);
        ɵngcc0.ɵɵclassMap(ctx.field.className);
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate2("", ɵngcc0.ɵɵpipeBind1(4, 26, ctx.field.name), " (", ctx.field.dateDisplayFormat, ")");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.field.id)("value", ctx.field.value)("required", ctx.isRequired())("disabled", ctx.field.readOnly)("placeholder", ctx.field.placeholder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("for", _r2)("disabled", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("touchUi", true)("startAt", ɵngcc0.ɵɵpipeBind2(12, 28, ctx.field.value, ctx.field.dateDisplayFormat))("disabled", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("matDatepicker", _r2)("value", ɵngcc0.ɵɵpipeBind2(14, 31, ctx.field.value, ctx.field.dateDisplayFormat))("min", ctx.minDate)("max", ctx.maxDate)("disabled", ctx.field.readOnly);
    } }, directives: [ɵngcc4.MatFormField, ɵngcc5.NgIf, ɵngcc6.MatInput, ɵngcc7.MatDatepickerToggle, ɵngcc4.MatSuffix, ɵngcc8.ErrorWidgetComponent, ɵngcc7.MatDatepicker, ɵngcc7.MatDatepickerInput], pipes: [ɵngcc9.TranslatePipe, ɵngcc10.MomentDatePipe], styles: [".adf-date-widget .mat-form-field-suffix{top:26px}.adf-date-widget .mat-form-field-label-wrapper{top:20px}"], encapsulation: 2 });
DateWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: DateAdapter },
    { type: UserPreferencesService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'date-widget',
                providers: [
                    { provide: DateAdapter, useClass: MomentDateAdapter },
                    { provide: MAT_DATE_FORMATS, useValue: ɵ0 }
                ],
                template: "<div class=\"{{field.className}}\" id=\"data-widget\" [class.adf-invalid]=\"!field.isValid\">\n    <mat-form-field class=\"adf-date-widget\">\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }} ({{field.dateDisplayFormat}})<span *ngIf=\"isRequired()\">*</span></label>\n        <input matInput\n               [id]=\"field.id\"\n               [value]=\"field.value\"\n               [required]=\"isRequired()\"\n               [disabled]=\"field.readOnly\"\n               (change)=\"onDateChanged($any($event).srcElement.value)\"\n               [placeholder]=\"field.placeholder\">\n        <mat-datepicker-toggle  matSuffix [for]=\"datePicker\" [disabled]=\"field.readOnly\" ></mat-datepicker-toggle>\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n    <mat-datepicker #datePicker [touchUi]=\"true\" [startAt]=\"field.value | adfMomentDate: field.dateDisplayFormat\" [disabled]=\"field.readOnly\"></mat-datepicker>\n    <input\n        type=\"hidden\"\n        [matDatepicker]=\"datePicker\"\n        [value]=\"field.value | adfMomentDate: field.dateDisplayFormat\"\n        [min]=\"minDate\"\n        [max]=\"maxDate\"\n        [disabled]=\"field.readOnly\"\n        (dateInput)=\"onDateChanged($any($event).targetElement.value)\">\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-date-widget .mat-form-field-suffix{top:26px}.adf-date-widget .mat-form-field-label-wrapper{top:20px}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc2.DateAdapter }, { type: ɵngcc3.UserPreferencesService }]; }, null); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,