/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { FormService } from './../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../../../services/form.service';
import * as ɵngcc2 from '@angular/material/form-field';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/input';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from './text-mask.component';
import * as ɵngcc7 from '@angular/material/tooltip';
import * as ɵngcc8 from '../error/error.component';
import * as ɵngcc9 from '@ngx-translate/core';

function TextWidgetComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function TextWidgetComponent_error_widget_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 5);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
const _c0 = function (a0, a1) { return { mask: a0, isReversed: a1 }; };
export class TextWidgetComponent extends WidgetComponent {
    constructor(formService) {
        super(formService);
        this.formService = formService;
    }
    ngOnInit() {
        if (this.field.params) {
            this.mask = this.field.params['inputMask'];
            this.placeholder = this.field.params['inputMask'] && this.field.params['inputMaskPlaceholder'] ? this.field.params['inputMaskPlaceholder'] : this.field.placeholder;
            this.isMaskReversed = this.field.params['inputMaskReversed'] ? this.field.params['inputMaskReversed'] : false;
        }
    }
}
TextWidgetComponent.ɵfac = function TextWidgetComponent_Factory(t) { return new (t || TextWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService)); };
TextWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TextWidgetComponent, selectors: [["text-widget"]], hostBindings: function TextWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function TextWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function TextWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function TextWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function TextWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function TextWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function TextWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function TextWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function TextWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function TextWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 25, consts: [[1, "adf-label"], [4, "ngIf"], ["matInput", "", "type", "text", "matTooltipPosition", "above", "matTooltipShowDelay", "1000", 1, "adf-input", 3, "id", "required", "value", "ngModel", "disabled", "textMask", "placeholder", "matTooltip", "ngModelChange"], [3, "error"], [3, "required", 4, "ngIf"], [3, "required"]], template: function TextWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "mat-form-field");
        ɵngcc0.ɵɵelementStart(2, "label", 0);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, TextWidgetComponent_span_5_Template, 2, 0, "span", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "input", 2);
        ɵngcc0.ɵɵlistener("ngModelChange", function TextWidgetComponent_Template_input_ngModelChange_6_listener($event) { return ctx.field.value = $event; })("ngModelChange", function TextWidgetComponent_Template_input_ngModelChange_6_listener() { return ctx.onFieldChanged(ctx.field); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "error-widget", 3);
        ɵngcc0.ɵɵtemplate(8, TextWidgetComponent_error_widget_8_Template, 2, 3, "error-widget", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adf-textfield adf-text-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 20, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.field.id)("required", ctx.isRequired())("value", ctx.field.value)("ngModel", ctx.field.value)("disabled", ctx.field.readOnly || ctx.readOnly)("textMask", ɵngcc0.ɵɵpureFunction2(22, _c0, ctx.mask, ctx.isMaskReversed))("placeholder", ctx.placeholder)("matTooltip", ctx.field.tooltip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc2.MatFormField, ɵngcc3.NgIf, ɵngcc4.MatInput, ɵngcc5.DefaultValueAccessor, ɵngcc5.RequiredValidator, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc6.InputMaskDirective, ɵngcc7.MatTooltip, ɵngcc8.ErrorWidgetComponent], pipes: [ɵngcc9.TranslatePipe], styles: [".adf-text-widget{width:100%}.adf-text-widget .mat-form-field-label-wrapper{top:20px}"], encapsulation: 2 });
TextWidgetComponent.ctorParameters = () => [
    { type: FormService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'text-widget',
                template: "<div class=\"adf-textfield adf-text-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\">\n    <mat-form-field>\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <input matInput\n               class=\"adf-input\"\n               type=\"text\"\n               [id]=\"field.id\"\n               [required]=\"isRequired()\"\n               [value]=\"field.value\"\n               [(ngModel)]=\"field.value\"\n               (ngModelChange)=\"onFieldChanged(field)\"\n               [disabled]=\"field.readOnly || readOnly\"\n               [textMask]=\"{mask: mask, isReversed: isMaskReversed}\"\n               [placeholder]=\"placeholder\"\n               [matTooltip]=\"field.tooltip\"\n                matTooltipPosition=\"above\"\n                matTooltipShowDelay=\"1000\">\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-text-widget{width:100%}.adf-text-widget .mat-form-field-label-wrapper{top:20px}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC53aWRnZXQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlL2Zvcm0vY29tcG9uZW50cy93aWRnZXRzL3RleHQvdGV4dC53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUlILE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJ4RCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsZUFBZTtBQUFHLElBTXZELFlBQW1CLFdBQXdCO0FBQy9DLFFBQVEsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzNCLFFBRnVCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO0FBQUMsSUFFNUMsQ0FBQztBQUNMLElBQ0ksUUFBUTtBQUNaLFFBQVEsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtBQUMvQixZQUFZLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDdkQsWUFBWSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDO0FBQ2hMLFlBQVksSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDMUgsU0FBUztBQUNULElBQUksQ0FBQztBQUNMOytDQWxDQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGFBQWEsa0JBQ3ZCOztrN0JBQWlDO0dBRWpDLElBQUksRUFBRSxzQkFDRixTQUFTLEVBQUUsZUFBZSxzQkFDMUIsUUFBUSxFQUFFLGVBQWUsc0JBQ3pCLFVBQVUsRUFBRSxlQUFlLHNCQUMzQixTQUFTLEVBQUUsZUFBZSxzQkFDMUIsV0FBVyxFQUFFLGVBQWUsc0JBQzVCLFlBQVksRUFBRSxlQUFlLHNCQUM3QixTQUFTLEVBQUUsZUFBZSxzQkFDMUIsV0FBVyxFQUFFLGVBQWUsc0JBQzVCLFVBQVUsRUFBRSxlQUFlLGtCQUM5QjthQUNELGFBQWEsRUFBRTtJQUFpQixDQUFDLElBQUk7OzthQUN4Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5WUFDSTtBQUFDO0FBQTZDLFlBcEIxQyxXQUFXO0FBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTpjb21wb25lbnQtc2VsZWN0b3IgICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybVNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL2Zvcm0uc2VydmljZSc7XG5pbXBvcnQgeyBXaWRnZXRDb21wb25lbnQgfSBmcm9tICcuLy4uL3dpZGdldC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RleHQtd2lkZ2V0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdGV4dC53aWRnZXQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vdGV4dC53aWRnZXQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJyhjbGljayknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoYmx1ciknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoY2hhbmdlKSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhmb2N1cyknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoZm9jdXNpbiknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoZm9jdXNvdXQpJzogJ2V2ZW50KCRldmVudCknLFxuICAgICAgICAnKGlucHV0KSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhpbnZhbGlkKSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhzZWxlY3QpJzogJ2V2ZW50KCRldmVudCknXG4gICAgfSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFRleHRXaWRnZXRDb21wb25lbnQgZXh0ZW5kcyBXaWRnZXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgbWFzazogc3RyaW5nO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgaXNNYXNrUmV2ZXJzZWQ6IGJvb2xlYW47XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZm9ybVNlcnZpY2U6IEZvcm1TZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKGZvcm1TZXJ2aWNlKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZmllbGQucGFyYW1zKSB7XG4gICAgICAgICAgICB0aGlzLm1hc2sgPSB0aGlzLmZpZWxkLnBhcmFtc1snaW5wdXRNYXNrJ107XG4gICAgICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gdGhpcy5maWVsZC5wYXJhbXNbJ2lucHV0TWFzayddICYmIHRoaXMuZmllbGQucGFyYW1zWydpbnB1dE1hc2tQbGFjZWhvbGRlciddID8gdGhpcy5maWVsZC5wYXJhbXNbJ2lucHV0TWFza1BsYWNlaG9sZGVyJ10gOiB0aGlzLmZpZWxkLnBsYWNlaG9sZGVyO1xuICAgICAgICAgICAgdGhpcy5pc01hc2tSZXZlcnNlZCA9IHRoaXMuZmllbGQucGFyYW1zWydpbnB1dE1hc2tSZXZlcnNlZCddID8gdGhpcy5maWVsZC5wYXJhbXNbJ2lucHV0TWFza1JldmVyc2VkJ10gOiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==