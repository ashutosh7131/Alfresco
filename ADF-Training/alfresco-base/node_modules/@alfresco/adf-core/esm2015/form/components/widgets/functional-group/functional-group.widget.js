/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ElementRef, ViewEncapsulation } from '@angular/core';
import { FormService } from '../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import { catchError, debounceTime, filter, switchMap, tap } from 'rxjs/operators';
import { merge, of } from 'rxjs';
import { FormControl } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../services/form.service';
import * as ɵngcc2 from '@angular/material/form-field';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/input';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '@angular/material/autocomplete';
import * as ɵngcc7 from '../error/error.component';
import * as ɵngcc8 from '@angular/material/core';
import * as ɵngcc9 from '@ngx-translate/core';

function FunctionalGroupWidgetComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FunctionalGroupWidgetComponent_mat_option_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 9);
    ɵngcc0.ɵɵelementStart(1, "span", 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r4 = ctx.$implicit;
    const i_r5 = ctx.index;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-group-widget-user-", i_r5, "");
    ɵngcc0.ɵɵproperty("id", ctx_r2.field.id + "-" + item_r4.id)("value", item_r4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r4.name);
} }
function FunctionalGroupWidgetComponent_error_widget_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
export class FunctionalGroupWidgetComponent extends WidgetComponent {
    constructor(formService, elementRef) {
        super(formService);
        this.formService = formService;
        this.elementRef = elementRef;
        this.minTermLength = 1;
        this.searchTerm = new FormControl();
        this.groups$ = merge(this.searchTerm.valueChanges).pipe(tap((search) => {
            const isValid = typeof search !== 'string';
            const empty = search === '';
            this.updateOption(isValid ? search : null);
            this.validateGroup(isValid, empty);
        }), filter((group) => typeof group === 'string' && group.length >= this.minTermLength), debounceTime(300), switchMap((searchTerm) => this.formService.getWorkflowGroups(searchTerm, this.groupId)
            .pipe(catchError(() => of([])))));
    }
    ngOnInit() {
        var _a;
        if (this.field) {
            if (this.field.readOnly) {
                this.searchTerm.disable();
            }
            const params = this.field.params;
            if (params && params.restrictWithGroup) {
                const restrictWithGroup = params.restrictWithGroup;
                this.groupId = restrictWithGroup.id;
            }
            if ((_a = this.field.value) === null || _a === void 0 ? void 0 : _a.name) {
                this.searchTerm.setValue(this.field.value.name);
            }
        }
    }
    updateOption(option) {
        if (option) {
            this.field.value = option;
        }
        else {
            this.field.value = null;
        }
        this.field.updateForm();
    }
    validateGroup(valid, empty) {
        const isEmpty = !this.field.required && (empty || valid);
        const hasValue = this.field.required && valid;
        if (hasValue || isEmpty) {
            this.field.validationSummary.message = '';
            this.field.validate();
            this.field.form.validateForm();
        }
        else {
            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';
            this.field.markAsInvalid();
            this.field.form.markAsInvalid();
        }
    }
    getDisplayName(model) {
        if (model) {
            return typeof model === 'string' ? model : model.name;
        }
        return '';
    }
}
FunctionalGroupWidgetComponent.ɵfac = function FunctionalGroupWidgetComponent_Factory(t) { return new (t || FunctionalGroupWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FunctionalGroupWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FunctionalGroupWidgetComponent, selectors: [["functional-group-widget"]], hostBindings: function FunctionalGroupWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function FunctionalGroupWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function FunctionalGroupWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function FunctionalGroupWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function FunctionalGroupWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function FunctionalGroupWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function FunctionalGroupWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function FunctionalGroupWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function FunctionalGroupWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function FunctionalGroupWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 24, consts: [["id", "functional-group-div"], [1, "adf-label"], [4, "ngIf"], ["matInput", "", "type", "text", "data-automation-id", "adf-group-search-input", 1, "adf-input", 3, "id", "formControl", "placeholder", "matAutocomplete"], [3, "displayWith", "optionSelected"], ["auto", "matAutocomplete"], [3, "id", "value", 4, "ngFor", "ngForOf"], [3, "error"], [3, "required", 4, "ngIf"], [3, "id", "value"], ["id", "adf-group-label-name"], [3, "required"]], template: function FunctionalGroupWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-form-field");
        ɵngcc0.ɵɵelementStart(2, "label", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, FunctionalGroupWidgetComponent_span_5_Template, 2, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "input", 3);
        ɵngcc0.ɵɵelementStart(7, "mat-autocomplete", 4, 5);
        ɵngcc0.ɵɵlistener("optionSelected", function FunctionalGroupWidgetComponent_Template_mat_autocomplete_optionSelected_7_listener($event) { return ctx.updateOption($event.option.value); });
        ɵngcc0.ɵɵtemplate(9, FunctionalGroupWidgetComponent_mat_option_9_Template, 3, 4, "mat-option", 6);
        ɵngcc0.ɵɵpipe(10, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(11, "error-widget", 7);
        ɵngcc0.ɵɵtemplate(12, FunctionalGroupWidgetComponent_error_widget_12_Template, 2, 3, "error-widget", 8);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵclassMapInterpolate1("adf-group-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("is-dirty", !!ctx.field.value)("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 20, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.field.id)("formControl", ctx.searchTerm)("placeholder", ctx.field.placeholder)("matAutocomplete", _r1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("displayWith", ctx.getDisplayName);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(10, 22, ctx.groups$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc2.MatFormField, ɵngcc3.NgIf, ɵngcc4.MatInput, ɵngcc5.DefaultValueAccessor, ɵngcc6.MatAutocompleteTrigger, ɵngcc5.NgControlStatus, ɵngcc5.FormControlDirective, ɵngcc6.MatAutocomplete, ɵngcc3.NgForOf, ɵngcc7.ErrorWidgetComponent, ɵngcc8.MatOption], pipes: [ɵngcc9.TranslatePipe, ɵngcc3.AsyncPipe], styles: [".adf-group-widget{width:100%}"], encapsulation: 2 });
FunctionalGroupWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: ElementRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FunctionalGroupWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'functional-group-widget',
                template: "<div class=\"adf-group-widget {{field.className}}\"\n     [class.is-dirty]=\"!!field.value\"\n     [class.adf-invalid]=\"!field.isValid\"\n     [class.adf-readonly]=\"field.readOnly\"\n     id=\"functional-group-div\">\n\n    <mat-form-field>\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <input matInput\n               class=\"adf-input\"\n               type=\"text\"\n               data-automation-id=\"adf-group-search-input\"\n               [id]=\"field.id\"\n               [formControl]=\"searchTerm\"\n               [placeholder]=\"field.placeholder\"\n               [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updateOption($event.option.value)\" [displayWith]=\"getDisplayName\">\n            <mat-option *ngFor=\"let item of groups$ | async; let i = index\"\n                        id=\"adf-group-widget-user-{{i}}\"\n                       [id]=\"field.id +'-'+item.id\"\n                       [value]=\"item\">\n                <span id=\"adf-group-label-name\">{{item.name}}</span>\n            </mat-option>\n        </mat-autocomplete>\n\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-group-widget{width:100%}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc0.ElementRef }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,