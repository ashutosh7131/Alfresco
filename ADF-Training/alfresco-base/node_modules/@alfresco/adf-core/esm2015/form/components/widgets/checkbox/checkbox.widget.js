/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { FormService } from './../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../../../services/form.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/flex-layout/extended';
import * as ɵngcc4 from '@angular/material/checkbox';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '@angular/material/tooltip';
import * as ɵngcc7 from '@ngx-translate/core';

function CheckboxWidgetComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
export class CheckboxWidgetComponent extends WidgetComponent {
    constructor(formService) {
        super(formService);
        this.formService = formService;
    }
}
CheckboxWidgetComponent.ɵfac = function CheckboxWidgetComponent_Factory(t) { return new (t || CheckboxWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService)); };
CheckboxWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CheckboxWidgetComponent, selectors: [["checkbox-widget"]], hostBindings: function CheckboxWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function CheckboxWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function CheckboxWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function CheckboxWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function CheckboxWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function CheckboxWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function CheckboxWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function CheckboxWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function CheckboxWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function CheckboxWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 12, consts: [[3, "ngClass"], ["color", "primary", "matTooltipPosition", "right", "matTooltipShowDelay", "1000", 3, "id", "required", "disabled", "ngModel", "matTooltip", "ngModelChange"], [4, "ngIf"]], template: function CheckboxWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function CheckboxWidgetComponent_Template_mat_checkbox_ngModelChange_1_listener($event) { return ctx.field.value = $event; })("ngModelChange", function CheckboxWidgetComponent_Template_mat_checkbox_ngModelChange_1_listener() { return ctx.onFieldChanged(ctx.field); });
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, CheckboxWidgetComponent_span_4_Template, 2, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid);
        ɵngcc0.ɵɵproperty("ngClass", ctx.field.className);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.field.id)("required", ctx.field.required)("disabled", ctx.field.readOnly || ctx.readOnly)("ngModel", ctx.field.value)("matTooltip", ctx.field.tooltip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 10, ctx.field.name), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.field.required);
    } }, directives: [ɵngcc2.NgClass, ɵngcc3.DefaultClassDirective, ɵngcc4.MatCheckbox, ɵngcc4.MatCheckboxRequiredValidator, ɵngcc5.RequiredValidator, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc6.MatTooltip, ɵngcc2.NgIf], pipes: [ɵngcc7.TranslatePipe], encapsulation: 2 });
CheckboxWidgetComponent.ctorParameters = () => [
    { type: FormService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'checkbox-widget',
                template: "<div [ngClass]=\"field.className\"\n     [class.adf-invalid]=\"!field.isValid\">\n    <mat-checkbox\n        [id]=\"field.id\"\n        color=\"primary\"\n        [required]=\"field.required\"\n        [disabled]=\"field.readOnly || readOnly\"\n        [(ngModel)]=\"field.value\"\n        (ngModelChange)=\"onFieldChanged(field)\"\n        [matTooltip]=\"field.tooltip\"\n        matTooltipPosition=\"right\"\n        matTooltipShowDelay=\"1000\">\n        {{field.name | translate }}\n        <span *ngIf=\"field.required\" >*</span>\n    </mat-checkbox>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.FormService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gud2lkZ2V0LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9mb3JtL2NvbXBvbmVudHMvd2lkZ2V0cy9jaGVja2JveC9jaGVja2JveC53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUlILE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0FBa0J4RCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsZUFBZTtBQUM1RCxJQUVJLFlBQW1CLFdBQXdCO0FBQy9DLFFBQVEsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzNCLFFBRnVCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO0FBQUMsSUFFNUMsQ0FBQztBQUNMO21EQXRCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGlCQUFpQixrQkFDM0I7OzZVQUFxQyxrQkFDckMsSUFBSSxFQUFFLHNCQUNGLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixRQUFRLEVBQUUsZUFBZSxzQkFDekIsVUFBVSxFQUFFLGVBQWUsc0JBQzNCLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixXQUFXLEVBQUUsZUFBZSxzQkFDNUIsWUFBWSxFQUFFLGVBQWUsc0JBQzdCLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixXQUFXLEVBQUUsZUFBZSxzQkFDNUIsVUFBVSxFQUFFLGVBQWUsa0JBQzlCLGtCQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLGNBQ3hDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O21SQUNJO0FBQUM7QUFBaUQsWUFuQjlDLFdBQVc7QUFBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0RUFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yIG5vLWlucHV0LXJlbmFtZSAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvZm9ybS5zZXJ2aWNlJztcbmltcG9ydCB7IFdpZGdldENvbXBvbmVudCB9IGZyb20gJy4vLi4vd2lkZ2V0LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnY2hlY2tib3gtd2lkZ2V0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY2hlY2tib3gud2lkZ2V0Lmh0bWwnLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJyhjbGljayknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoYmx1ciknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoY2hhbmdlKSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhmb2N1cyknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoZm9jdXNpbiknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoZm9jdXNvdXQpJzogJ2V2ZW50KCRldmVudCknLFxuICAgICAgICAnKGlucHV0KSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhpbnZhbGlkKSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhzZWxlY3QpJzogJ2V2ZW50KCRldmVudCknXG4gICAgfSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIENoZWNrYm94V2lkZ2V0Q29tcG9uZW50IGV4dGVuZHMgV2lkZ2V0Q29tcG9uZW50IHtcbiAgICBjaGVja2JveFZhbHVlOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGZvcm1TZXJ2aWNlOiBGb3JtU2VydmljZSkge1xuICAgICAgICBzdXBlcihmb3JtU2VydmljZSk7XG4gICAgfVxufVxuIl19