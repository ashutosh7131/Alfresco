/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

function TabsWidgetComponent_div_0_mat_tab_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "adf-form-field", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const field_r4 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", field_r4.field);
} }
function TabsWidgetComponent_div_0_mat_tab_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-tab", 3);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, TabsWidgetComponent_div_0_mat_tab_2_div_2_Template, 2, 1, "div", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r2 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, tab_r2.title));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", tab_r2.fields);
} }
function TabsWidgetComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "mat-tab-group");
    ɵngcc0.ɵɵtemplate(2, TabsWidgetComponent_div_0_mat_tab_2_Template, 3, 4, "mat-tab", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.visibleTabs);
} }
export class TabsWidgetComponent {
    constructor() {
        this.tabs = [];
        this.formTabChanged = new EventEmitter();
        this.visibleTabs = [];
    }
    hasTabs() {
        return this.tabs && this.tabs.length > 0;
    }
    ngAfterContentChecked() {
        this.filterVisibleTabs();
    }
    filterVisibleTabs() {
        this.visibleTabs = this.tabs.filter((tab) => {
            return tab.isVisible;
        });
    }
    tabChanged(field) {
        this.formTabChanged.emit(field);
    }
}
TabsWidgetComponent.ɵfac = function TabsWidgetComponent_Factory(t) { return new (t || TabsWidgetComponent)(); };
TabsWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsWidgetComponent, selectors: [["tabs-widget"]], inputs: { tabs: "tabs" }, outputs: { formTabChanged: "formTabChanged" }, decls: 1, vars: 1, consts: [["class", "alfresco-tabs-widget", 4, "ngIf"], [1, "alfresco-tabs-widget"], [3, "label", 4, "ngFor", "ngForOf"], [3, "label"], [4, "ngFor", "ngForOf"], [3, "field"]], template: function TabsWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TabsWidgetComponent_div_0_Template, 3, 1, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasTabs());
    } }, encapsulation: 2 });
TabsWidgetComponent.propDecorators = {
    tabs: [{ type: Input }],
    formTabChanged: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'tabs-widget',
                template: "<div *ngIf=\"hasTabs()\" class=\"alfresco-tabs-widget\">\n    <mat-tab-group>\n        <mat-tab *ngFor=\"let tab of visibleTabs\" [label]=\"tab.title | translate\">\n            <div *ngFor=\"let field of tab.fields\">\n                <adf-form-field [field]=\"field.field\"></adf-form-field>\n             </div>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return []; }, { tabs: [{
            type: Input
        }], formTabChanged: [{
            type: Output
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy53aWRnZXQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlL2Zvcm0vY29tcG9uZW50cy93aWRnZXRzL3RhYnMvdGFicy53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUlILE9BQU8sRUFBdUIsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUS9HLE1BQU0sT0FBTyxtQkFBbUI7QUFBRyxJQUxuQztBQUNHLFFBT0MsU0FBSSxHQUFlLEVBQUUsQ0FBQztBQUMxQixRQUVJLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQWtCLENBQUM7QUFDeEQsUUFDSSxnQkFBVyxHQUFlLEVBQUUsQ0FBQztBQUNqQyxJQW1CQSxDQUFDO0FBQ0QsSUFuQkksT0FBTztBQUFLLFFBQ1IsT0FBTyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUNqRCxJQUFJLENBQUM7QUFDTCxJQUNJLHFCQUFxQjtBQUN6QixRQUFRLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQ2pDLElBQUksQ0FBQztBQUNMLElBQ0ksaUJBQWlCO0FBQ3JCLFFBQVEsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO0FBQ3BELFlBQVksT0FBTyxHQUFHLENBQUMsU0FBUyxDQUFDO0FBQ2pDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDWCxJQUFJLENBQUM7QUFDTCxJQUNJLFVBQVUsQ0FBQyxLQUFxQjtBQUNwQyxRQUFRLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3hDLElBQUksQ0FBQztBQUNMOytDQWhDQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGFBQWE7V0FDdkIsMFhBQWlDLGtCQUNqQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtPQUN4Qzs7OzZCQUNJO0FBQUM7QUFBdUMsbUJBRXhDLEtBQUs7QUFDUiw2QkFFRyxNQUFNO0FBQ1Y7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuIC8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3RvciAgKi9cblxuaW1wb3J0IHsgQWZ0ZXJDb250ZW50Q2hlY2tlZCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtRmllbGRNb2RlbCwgVGFiTW9kZWwgfSBmcm9tICcuLy4uL2NvcmUvaW5kZXgnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RhYnMtd2lkZ2V0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdGFicy53aWRnZXQuaHRtbCcsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBUYWJzV2lkZ2V0Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50Q2hlY2tlZCB7XG5cbiAgICBASW5wdXQoKVxuICAgIHRhYnM6IFRhYk1vZGVsW10gPSBbXTtcblxuICAgIEBPdXRwdXQoKVxuICAgIGZvcm1UYWJDaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxGb3JtRmllbGRNb2RlbD4oKTtcblxuICAgIHZpc2libGVUYWJzOiBUYWJNb2RlbFtdID0gW107XG5cbiAgICBoYXNUYWJzKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy50YWJzICYmIHRoaXMudGFicy5sZW5ndGggPiAwO1xuICAgIH1cblxuICAgIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpIHtcbiAgICAgICAgdGhpcy5maWx0ZXJWaXNpYmxlVGFicygpO1xuICAgIH1cblxuICAgIGZpbHRlclZpc2libGVUYWJzKCkge1xuICAgICAgICB0aGlzLnZpc2libGVUYWJzID0gdGhpcy50YWJzLmZpbHRlcigodGFiKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGFiLmlzVmlzaWJsZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGFiQ2hhbmdlZChmaWVsZDogRm9ybUZpZWxkTW9kZWwpIHtcbiAgICAgICAgdGhpcy5mb3JtVGFiQ2hhbmdlZC5lbWl0KGZpZWxkKTtcbiAgICB9XG5cbn1cbiJdfQ==