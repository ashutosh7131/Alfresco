/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { FormService } from './../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import { MatDialog } from '@angular/material/dialog';
import { EditJsonDialogComponent } from '../../../../dialogs/edit-json/edit-json.dialog';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../../../services/form.service';
import * as ɵngcc2 from '@angular/material/dialog';
import * as ɵngcc3 from '@angular/material/button';
export class JsonWidgetComponent extends WidgetComponent {
    constructor(formService, dialog) {
        super(formService);
        this.formService = formService;
        this.dialog = dialog;
    }
    view() {
        const rawValue = this.field.value;
        const value = typeof rawValue === 'object'
            ? JSON.stringify(rawValue || {}, null, 2)
            : rawValue;
        const settings = {
            title: this.field.name,
            editable: false,
            value
        };
        this.dialog
            .open(EditJsonDialogComponent, {
            data: settings,
            minWidth: '50%',
            minHeight: '50%'
        });
    }
}
JsonWidgetComponent.ɵfac = function JsonWidgetComponent_Factory(t) { return new (t || JsonWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialog)); };
JsonWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JsonWidgetComponent, selectors: [["ng-component"]], hostBindings: function JsonWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function JsonWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function JsonWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function JsonWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function JsonWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function JsonWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function JsonWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function JsonWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function JsonWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function JsonWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 0, consts: [["mat-raised-button", "", "color", "primary", 3, "click"]], template: function JsonWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function JsonWidgetComponent_Template_button_click_0_listener() { return ctx.view(); });
        ɵngcc0.ɵɵtext(1, "json");
        ɵngcc0.ɵɵelementEnd();
    } }, directives: [ɵngcc3.MatButton], encapsulation: 2 });
JsonWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: MatDialog }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonWidgetComponent, [{
        type: Component,
        args: [{
                template: `
        <button mat-raised-button color="primary" (click)="view()">json</button>
    `,
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc2.MatDialog }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi53aWRnZXQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlL2Zvcm0vY29tcG9uZW50cy93aWRnZXRzL2pzb24vanNvbi53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUEwQix1QkFBdUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDOzs7OztBQW1CakgsTUFBTSxPQUFPLG1CQUFvQixTQUFRLGVBQWU7QUFDeEQsSUFBSSxZQUFtQixXQUF3QixFQUFVLE1BQWlCO0FBQzFFLFFBQVEsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzNCLFFBRnVCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO0FBQUMsUUFBUyxXQUFNLEdBQU4sTUFBTSxDQUFXO0FBQUMsSUFFdkUsQ0FBQztBQUNMLElBQ0ksSUFBSTtBQUNSLFFBQVEsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7QUFDMUMsUUFBUSxNQUFNLEtBQUssR0FDUCxPQUFPLFFBQVEsS0FBSyxRQUFRO0FBQ3hDLFlBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUN6RCxZQUFnQixDQUFDLENBQUMsUUFBUSxDQUFDO0FBQzNCLFFBQ1EsTUFBTSxRQUFRLEdBQTJCO0FBQ2pELFlBQVksS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSTtBQUNsQyxZQUFZLFFBQVEsRUFBRSxLQUFLO0FBQzNCLFlBQVksS0FBSztBQUNqQixTQUFTLENBQUM7QUFDVixRQUNRLElBQUksQ0FBQyxNQUFNO0FBQ25CLGFBQWEsSUFBSSxDQUFDLHVCQUF1QixFQUFFO0FBQzNDLFlBQWdCLElBQUksRUFBRSxRQUFRO0FBQzlCLFlBQWdCLFFBQVEsRUFBRSxLQUFLO0FBQy9CLFlBQWdCLFNBQVMsRUFBRSxLQUFLO0FBQ2hDLFNBQWEsQ0FBQyxDQUFDO0FBQ2YsSUFBSSxDQUFDO0FBQ0w7K0NBMUNDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsd0ZBRVQsa0JBQ0Q7RUFBSSxFQUFFLHNCQUNGLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixRQUFRLEVBQUUsZUFBZSxzQkFDekIsVUFBVSxFQUFFLGVBQWUsc0JBQzNCLFNBQVMsRUFBRTtHQUFlLHNCQUMxQixXQUFXLEVBQUUsZUFBZSxzQkFDNUIsWUFBWSxFQUFFLGVBQWUsc0JBQzdCLFNBQVMsRUFBRSxlQUFlLHNCQUMxQixXQUFXLEVBQUUsZUFBZSxzQkFDNUIsVUFBVSxFQUFFLGVBQWUsa0JBQzlCLGtCQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLGNBQ3hDOzs7Ozs7NkRBQ0k7QUFBQztBQUE2QyxZQXRCMUMsV0FBVztBQUFJLFlBRWYsU0FBUztBQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3R0FBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybVNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL2Zvcm0uc2VydmljZSc7XG5pbXBvcnQgeyBXaWRnZXRDb21wb25lbnQgfSBmcm9tICcuLy4uL3dpZGdldC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWF0RGlhbG9nIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IEVkaXRKc29uRGlhbG9nU2V0dGluZ3MsIEVkaXRKc29uRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vZGlhbG9ncy9lZGl0LWpzb24vZWRpdC1qc29uLmRpYWxvZyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxidXR0b24gbWF0LXJhaXNlZC1idXR0b24gY29sb3I9XCJwcmltYXJ5XCIgKGNsaWNrKT1cInZpZXcoKVwiPmpzb248L2J1dHRvbj5cbiAgICBgLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJyhjbGljayknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoYmx1ciknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoY2hhbmdlKSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhmb2N1cyknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoZm9jdXNpbiknOiAnZXZlbnQoJGV2ZW50KScsXG4gICAgICAgICcoZm9jdXNvdXQpJzogJ2V2ZW50KCRldmVudCknLFxuICAgICAgICAnKGlucHV0KSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhpbnZhbGlkKSc6ICdldmVudCgkZXZlbnQpJyxcbiAgICAgICAgJyhzZWxlY3QpJzogJ2V2ZW50KCRldmVudCknXG4gICAgfSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEpzb25XaWRnZXRDb21wb25lbnQgZXh0ZW5kcyBXaWRnZXRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBmb3JtU2VydmljZTogRm9ybVNlcnZpY2UsIHByaXZhdGUgZGlhbG9nOiBNYXREaWFsb2cpIHtcbiAgICAgICAgc3VwZXIoZm9ybVNlcnZpY2UpO1xuICAgIH1cblxuICAgIHZpZXcoKSB7XG4gICAgICAgIGNvbnN0IHJhd1ZhbHVlID0gdGhpcy5maWVsZC52YWx1ZTtcbiAgICAgICAgY29uc3QgdmFsdWUgPVxuICAgICAgICAgICAgdHlwZW9mIHJhd1ZhbHVlID09PSAnb2JqZWN0J1xuICAgICAgICAgICAgICAgID8gSlNPTi5zdHJpbmdpZnkocmF3VmFsdWUgfHwge30sIG51bGwsIDIpXG4gICAgICAgICAgICAgICAgOiByYXdWYWx1ZTtcblxuICAgICAgICBjb25zdCBzZXR0aW5nczogRWRpdEpzb25EaWFsb2dTZXR0aW5ncyA9IHtcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLmZpZWxkLm5hbWUsXG4gICAgICAgICAgICBlZGl0YWJsZTogZmFsc2UsXG4gICAgICAgICAgICB2YWx1ZVxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMuZGlhbG9nXG4gICAgICAgICAgICAub3BlbihFZGl0SnNvbkRpYWxvZ0NvbXBvbmVudCwge1xuICAgICAgICAgICAgICAgIGRhdGE6IHNldHRpbmdzLFxuICAgICAgICAgICAgICAgIG1pbldpZHRoOiAnNTAlJyxcbiAgICAgICAgICAgICAgICBtaW5IZWlnaHQ6ICc1MCUnXG4gICAgICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=