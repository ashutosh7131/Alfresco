/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ChangeDetectionStrategy, Input, ViewEncapsulation } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { TranslationService } from '../../services/translation.service';
export class ErrorContentComponent {
    constructor(route, translateService) {
        this.route = route;
        this.translateService = translateService;
        this.errorCode = ErrorContentComponent.UNKNOWN_ERROR;
    }
    ngOnInit() {
        if (this.route) {
            this.route.params.subscribe(params => {
                const code = params['id'] || this.errorCode;
                const errorHasTranslation = this.checkErrorExists(code);
                this.errorCodeTranslated = errorHasTranslation ? code : ErrorContentComponent.UNKNOWN_ERROR;
            });
        }
    }
    checkErrorExists(errorCode) {
        const errorMessage = this.translateService.instant('ERROR_CONTENT.' + errorCode);
        return errorMessage !== ('ERROR_CONTENT.' + errorCode);
    }
}
ErrorContentComponent.UNKNOWN_ERROR = 'UNKNOWN';
ErrorContentComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-error-content',
                template: "<div class=\"adf-error-content\">\n    <p class=\"adf-error-content-code\">\n        {{ errorCodeTranslated }}\n    </p>\n    <div class=\"adf-error-content-shadow\"></div>\n    <p class=\"adf-error-content-title\">\n        {{ 'ERROR_CONTENT.' + errorCodeTranslated + '.TITLE' | translate }}\n    </p>\n    <p class=\"adf-error-content-description\">\n        {{ 'ERROR_CONTENT.' + errorCodeTranslated + '.DESCRIPTION' | translate }}\n    </p>\n    <ng-content select=\"[adf-error-content-actions]\"></ng-content>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-error-content' },
                styles: [".adf-error-content{align-items:center;color:var(--theme-text-color);display:flex;flex-direction:column}.adf-error-content-code{font-size:110px;font-weight:300;margin-bottom:45px;margin-top:200px}.adf-error-content-shadow{box-shadow:0 10px 15px 0 rgba(0,0,0,.39);height:3px;opacity:.54;width:170px}.adf-error-content-title{font-size:46px;font-weight:400;margin-bottom:10px;margin-top:40px}.adf-error-content-description{font-size:24px;font-weight:400;line-height:30px;margin-bottom:60px;min-width:250px;text-align:center;width:50%}@media screen and (max-width:959px){.adf-error-content-code{font-size:50px;margin-bottom:25px;margin-top:100px}.adf-error-content-shadow{width:100px}.adf-error-content-title{font-size:24px}.adf-error-content-description{font-size:17px}}"]
            },] }
];
ErrorContentComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: TranslationService }
];
ErrorContentComponent.propDecorators = {
    errorCode: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlLyIsInNvdXJjZXMiOlsidGVtcGxhdGVzL2Vycm9yLWNvbnRlbnQvZXJyb3ItY29udGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUNILFNBQVMsRUFDVCx1QkFBdUIsRUFDdkIsS0FBSyxFQUNMLGlCQUFpQixFQUVwQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFTeEUsTUFBTSxPQUFPLHFCQUFxQjtJQVU5QixZQUFvQixLQUFxQixFQUNyQixnQkFBb0M7UUFEcEMsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFDckIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFvQjtRQUx4RCxjQUFTLEdBQVcscUJBQXFCLENBQUMsYUFBYSxDQUFDO0lBTXhELENBQUM7SUFFRCxRQUFRO1FBQ0osSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1osSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUNqQyxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDNUMsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3hELElBQUksQ0FBQyxtQkFBbUIsR0FBSSxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxhQUFhLENBQUM7WUFDakcsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxTQUFpQjtRQUM5QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGdCQUFnQixHQUFHLFNBQVMsQ0FBQyxDQUFDO1FBQ2pGLE9BQU8sWUFBWSxLQUFLLENBQUMsZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDM0QsQ0FBQzs7QUF6Qk0sbUNBQWEsR0FBRyxTQUFTLENBQUM7O1lBVnBDLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3Qix3aEJBQTZDO2dCQUU3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxtQkFBbUIsRUFBRTs7YUFDdkM7OztZQVRRLGNBQWM7WUFDZCxrQkFBa0I7Ozt3QkFjdEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7XG4gICAgQ29tcG9uZW50LFxuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIElucHV0LFxuICAgIFZpZXdFbmNhcHN1bGF0aW9uLFxuICAgIE9uSW5pdFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFRyYW5zbGF0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RyYW5zbGF0aW9uLnNlcnZpY2UnO1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtZXJyb3ItY29udGVudCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Vycm9yLWNvbnRlbnQuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2Vycm9yLWNvbnRlbnQuY29tcG9uZW50LnNjc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHsgY2xhc3M6ICdhZGYtZXJyb3ItY29udGVudCcgfVxufSlcbmV4cG9ydCBjbGFzcyBFcnJvckNvbnRlbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgc3RhdGljIFVOS05PV05fRVJST1IgPSAnVU5LTk9XTic7XG5cbiAgICAvKiogRXJyb3IgY29kZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBlcnJvci4gKi9cbiAgICBASW5wdXQoKVxuICAgIGVycm9yQ29kZTogc3RyaW5nID0gRXJyb3JDb250ZW50Q29tcG9uZW50LlVOS05PV05fRVJST1I7XG5cbiAgICBlcnJvckNvZGVUcmFuc2xhdGVkOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICAgICAgICAgICAgICBwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0aW9uU2VydmljZSkge1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZiAodGhpcy5yb3V0ZSkge1xuICAgICAgICAgICAgdGhpcy5yb3V0ZS5wYXJhbXMuc3Vic2NyaWJlKHBhcmFtcyA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29kZSA9IHBhcmFtc1snaWQnXSB8fCB0aGlzLmVycm9yQ29kZTtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvckhhc1RyYW5zbGF0aW9uID0gdGhpcy5jaGVja0Vycm9yRXhpc3RzKGNvZGUpO1xuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JDb2RlVHJhbnNsYXRlZCA9ICBlcnJvckhhc1RyYW5zbGF0aW9uID8gY29kZSA6IEVycm9yQ29udGVudENvbXBvbmVudC5VTktOT1dOX0VSUk9SO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjaGVja0Vycm9yRXhpc3RzKGVycm9yQ29kZTogc3RyaW5nICkge1xuICAgICAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudCgnRVJST1JfQ09OVEVOVC4nICsgZXJyb3JDb2RlKTtcbiAgICAgICAgcmV0dXJuIGVycm9yTWVzc2FnZSAhPT0gKCdFUlJPUl9DT05URU5ULicgKyBlcnJvckNvZGUpO1xuICAgIH1cblxufVxuIl19