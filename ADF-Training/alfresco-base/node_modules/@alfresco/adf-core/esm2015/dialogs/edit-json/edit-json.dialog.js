/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, Input, ViewEncapsulation } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/dialog';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/material/button';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@ngx-translate/core';

function EditJsonDialogComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("mat-dialog-close", ctx_r0.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "CORE.DIALOG.EDIT_JSON.UPDATE"), " ");
} }
export class EditJsonDialogComponent {
    constructor(settings) {
        this.settings = settings;
        this.editable = false;
        this.title = 'JSON';
        this.value = '';
    }
    ngOnInit() {
        if (this.settings) {
            this.editable = this.settings.editable;
            this.value = this.settings.value || '';
            this.title = this.settings.title || 'JSON';
        }
    }
}
EditJsonDialogComponent.ɵfac = function EditJsonDialogComponent_Factory(t) { return new (t || EditJsonDialogComponent)(ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };
EditJsonDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EditJsonDialogComponent, selectors: [["ng-component"]], hostAttrs: [1, "adf-edit-json-dialog"], inputs: { value: "value" }, decls: 10, vars: 9, consts: [["mat-dialog-title", ""], [3, "ngModel", "ngModelChange"], ["align", "end"], ["mat-button", "", "mat-dialog-close", "", "cdkFocusInitial", ""], ["mat-button", "", 3, "mat-dialog-close", 4, "ngIf"], ["mat-button", "", 3, "mat-dialog-close"]], template: function EditJsonDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "h1", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "mat-dialog-content");
        ɵngcc0.ɵɵelementStart(4, "textarea", 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function EditJsonDialogComponent_Template_textarea_ngModelChange_4_listener($event) { return ctx.value = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "mat-dialog-actions", 2);
        ɵngcc0.ɵɵelementStart(6, "button", 3);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, EditJsonDialogComponent_button_9_Template, 3, 4, "button", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 5, ctx.title));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngModel", ctx.value);
        ɵngcc0.ɵɵattribute("readonly", !ctx.editable ? true : null);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 7, "CORE.DIALOG.EDIT_JSON.CLOSE"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.editable);
    } }, directives: [ɵngcc1.MatDialogTitle, ɵngcc1.MatDialogContent, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.MatDialogActions, ɵngcc3.MatButton, ɵngcc1.MatDialogClose, ɵngcc4.NgIf], pipes: [ɵngcc5.TranslatePipe], styles: [".adf-edit-json-dialog .mat-dialog-content{height:300px;overflow:hidden}.adf-edit-json-dialog textarea{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;height:100%;margin:0;padding:0;resize:none;width:100%}.adf-edit-json-dialog textarea:focus{outline:none}"], encapsulation: 2 });
EditJsonDialogComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
EditJsonDialogComponent.propDecorators = {
    value: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EditJsonDialogComponent, [{
        type: Component,
        args: [{
                template: "<h1 mat-dialog-title>{{ title | translate }}</h1>\n<mat-dialog-content>\n    <textarea [(ngModel)]=\"value\" [attr.readonly]=\"!editable ? true : null\"></textarea>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close cdkFocusInitial>\n        {{ 'CORE.DIALOG.EDIT_JSON.CLOSE' | translate }}\n    </button>\n    <button *ngIf=\"editable\" mat-button [mat-dialog-close]=\"value\">\n        {{ 'CORE.DIALOG.EDIT_JSON.UPDATE' | translate }}\n    </button>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-edit-json-dialog' },
                styles: [".adf-edit-json-dialog .mat-dialog-content{height:300px;overflow:hidden}.adf-edit-json-dialog textarea{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;height:100%;margin:0;padding:0;resize:none;width:100%}.adf-edit-json-dialog textarea:focus{outline:none}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, { value: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC1qc29uLmRpYWxvZy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvZGlhbG9ncy9lZGl0LWpzb24vZWRpdC1qc29uLmRpYWxvZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWMzRCxNQUFNLE9BQU8sdUJBQXVCO0FBQUcsSUFRbkMsWUFDcUMsUUFBZ0M7QUFDdEUsUUFEc0MsYUFBUSxHQUFSLFFBQVEsQ0FBd0I7QUFDekUsUUFSSSxhQUFRLEdBQVksS0FBSyxDQUFDO0FBQzlCLFFBQUksVUFBSyxHQUFXLE1BQU0sQ0FBQztBQUMzQixRQUVJLFVBQUssR0FBVyxFQUFFLENBQUM7QUFDdkIsSUFHTyxDQUFDO0FBQ1IsSUFDSSxRQUFRO0FBQ1osUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7QUFDM0IsWUFBWSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO0FBQ25ELFlBQVksSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7QUFDbkQsWUFBWSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLE1BQU0sQ0FBQztBQUN2RCxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0w7bURBekJDLFNBQVMsU0FBQyxrQkFDUDsyY0FBc0Msa0JBRXRDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLGtCQUNyQztBQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsc0JBQXNCLEVBQUU7Ozs7Ozt3SEFDMUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lqQkFDSTtBQUFDO0FBQWlELDRDQVM5QyxNQUFNLFNBQUMsZUFBZTtBQUFRO0FBQUc7QUFHekMsb0JBUEksS0FBSztBQUNUOzs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVkaXRKc29uRGlhbG9nU2V0dGluZ3Mge1xuICAgIHRpdGxlPzogc3RyaW5nO1xuICAgIGVkaXRhYmxlPzogYm9vbGVhbjtcbiAgICB2YWx1ZT86IHN0cmluZztcbn1cblxuQENvbXBvbmVudCh7XG4gICAgdGVtcGxhdGVVcmw6ICcuL2VkaXQtanNvbi5kaWFsb2cuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZWRpdC1qc29uLmRpYWxvZy5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7IGNsYXNzOiAnYWRmLWVkaXQtanNvbi1kaWFsb2cnIH1cbn0pXG5leHBvcnQgY2xhc3MgRWRpdEpzb25EaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgZWRpdGFibGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICB0aXRsZTogc3RyaW5nID0gJ0pTT04nO1xuXG4gICAgQElucHV0KClcbiAgICB2YWx1ZTogc3RyaW5nID0gJyc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHByaXZhdGUgc2V0dGluZ3M6IEVkaXRKc29uRGlhbG9nU2V0dGluZ3NcbiAgICApIHt9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MpIHtcbiAgICAgICAgICAgIHRoaXMuZWRpdGFibGUgPSB0aGlzLnNldHRpbmdzLmVkaXRhYmxlO1xuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuc2V0dGluZ3MudmFsdWUgfHwgJyc7XG4gICAgICAgICAgICB0aGlzLnRpdGxlID0gdGhpcy5zZXR0aW5ncy50aXRsZSB8fCAnSlNPTic7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=