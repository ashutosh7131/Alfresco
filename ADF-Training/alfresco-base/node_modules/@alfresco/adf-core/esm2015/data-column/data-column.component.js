/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class DataColumnComponent {
    constructor() {
        this.type = 'text';
        this.sortable = true;
        this.title = '';
        this.editable = false;
        this.focus = true;
    }
    ngOnInit() {
        if (!this.srTitle && this.key === '$thumbnail') {
            this.srTitle = 'Thumbnail';
        }
    }
}
DataColumnComponent.ɵfac = function DataColumnComponent_Factory(t) { return new (t || DataColumnComponent)(); };
DataColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataColumnComponent, selectors: [["data-column"]], contentQueries: function DataColumnComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { type: "type", sortable: "sortable", title: "title", editable: "editable", focus: "focus", srTitle: ["sr-title", "srTitle"], key: "key", format: "format", formatTooltip: "formatTooltip", cssClass: ["class", "cssClass"], copyContent: "copyContent", sortingKey: "sortingKey" }, decls: 0, vars: 0, template: function DataColumnComponent_Template(rf, ctx) { }, encapsulation: 2 });
DataColumnComponent.propDecorators = {
    key: [{ type: Input }],
    type: [{ type: Input }],
    format: [{ type: Input }],
    sortable: [{ type: Input }],
    title: [{ type: Input }],
    template: [{ type: ContentChild, args: [TemplateRef,] }],
    formatTooltip: [{ type: Input }],
    srTitle: [{ type: Input, args: ['sr-title',] }],
    cssClass: [{ type: Input, args: ['class',] }],
    copyContent: [{ type: Input }],
    editable: [{ type: Input }],
    focus: [{ type: Input }],
    sortingKey: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataColumnComponent, [{
        type: Component,
        args: [{
                selector: 'data-column',
                template: ''
            }]
    }], function () { return []; }, { type: [{
            type: Input
        }], sortable: [{
            type: Input
        }], title: [{
            type: Input
        }], editable: [{
            type: Input
        }], focus: [{
            type: Input
        }], srTitle: [{
            type: Input,
            args: ['sr-title']
        }], key: [{
            type: Input
        }], format: [{
            type: Input
        }], template: [{
            type: ContentChild,
            args: [TemplateRef]
        }], formatTooltip: [{
            type: Input
        }], cssClass: [{
            type: Input,
            args: ['class']
        }], copyContent: [{
            type: Input
        }], sortingKey: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9kYXRhLWNvbHVtbi9kYXRhLWNvbHVtbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUlILE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTXBGLE1BQU0sT0FBTyxtQkFBbUI7QUFBRyxJQUpuQztBQUNHLFFBZUMsU0FBSSxHQUFXLE1BQU0sQ0FBQztBQUMxQixRQU9JLGFBQVEsR0FBWSxJQUFJLENBQUM7QUFDN0IsUUFLSSxVQUFLLEdBQVcsRUFBRSxDQUFDO0FBQ3ZCLFFBc0JJLGFBQVEsR0FBWSxLQUFLLENBQUM7QUFDOUIsUUFHSSxVQUFLLEdBQVksSUFBSSxDQUFDO0FBQzFCLElBYUEsQ0FBQztBQUNELElBTkksUUFBUTtBQUNaLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLEdBQUcsS0FBSyxZQUFZLEVBQUU7QUFDeEQsWUFBWSxJQUFJLENBQUMsT0FBTyxHQUFHLFdBQVcsQ0FBQztBQUN2QyxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0w7K0NBdkVDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsYUFBYTtXQUN2QixRQUFRLEVBQUUsRUFBRSxjQUNmOzs7OzsyWUFDSTtBQUFDO0FBQXVDLGtCQUt4QyxLQUFLO0FBQ1IsbUJBS0csS0FBSztBQUNSLHFCQUdHLEtBQUs7QUFDUix1QkFHRyxLQUFLO0FBQ1Isb0JBS0csS0FBSztBQUNSLHVCQUVHLFlBQVksU0FBQyxXQUFXO0FBQ3hCLDRCQUdBLEtBQUs7QUFDUixzQkFHRyxLQUFLLFNBQUMsVUFBVTtBQUNoQix1QkFHQSxLQUFLLFNBQUMsT0FBTztBQUNiLDBCQUdBLEtBQUs7QUFDUix1QkFHRyxLQUFLO0FBQ1Isb0JBR0csS0FBSztBQUNSLHlCQUdHLEtBQUs7QUFDVDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4gLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yIG5vLWlucHV0LXJlbmFtZSAgKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGQsIElucHV0LCBPbkluaXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZGF0YS1jb2x1bW4nLFxuICAgIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBjbGFzcyBEYXRhQ29sdW1uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIC8qKiBEYXRhIHNvdXJjZSBrZXkuIENhbiBiZSBlaXRoZXIgYSBjb2x1bW4vcHJvcGVydHkga2V5IGxpa2UgYHRpdGxlYFxuICAgICAqICBvciBhIHByb3BlcnR5IHBhdGggbGlrZSBgY3JlYXRlZEJ5Lm5hbWVgLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAga2V5OiBzdHJpbmc7XG5cbiAgICAvKiogVmFsdWUgdHlwZSBmb3IgdGhlIGNvbHVtbi4gUG9zc2libGUgc2V0dGluZ3MgYXJlICd0ZXh0JywgJ2ltYWdlJyxcbiAgICAgKiAnZGF0ZScsICdmaWxlU2l6ZScsICdsb2NhdGlvbicsIGFuZCAnanNvbicuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICB0eXBlOiBzdHJpbmcgPSAndGV4dCc7XG5cbiAgICAvKiogVmFsdWUgZm9ybWF0IChpZiBzdXBwb3J0ZWQgYnkgdGhlIHBhcmVudCBjb21wb25lbnQpLCBmb3IgZXhhbXBsZSBmb3JtYXQgb2YgdGhlIGRhdGUuICovXG4gICAgQElucHV0KClcbiAgICBmb3JtYXQ6IHN0cmluZztcblxuICAgIC8qKiBUb2dnbGVzIGFiaWxpdHkgdG8gc29ydCBieSB0aGlzIGNvbHVtbiwgZm9yIGV4YW1wbGUgYnkgY2xpY2tpbmcgdGhlIGNvbHVtbiBoZWFkZXIuICovXG4gICAgQElucHV0KClcbiAgICBzb3J0YWJsZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogRGlzcGxheSB0aXRsZSBvZiB0aGUgY29sdW1uLCB0eXBpY2FsbHkgdXNlZCBmb3IgY29sdW1uIGhlYWRlcnMuIFlvdSBjYW4gdXNlIHRoZVxuICAgICAqIGkxOG4gcmVzb3VyY2Uga2V5IHRvIGdldCBpdCB0cmFuc2xhdGVkIGF1dG9tYXRpY2FsbHkuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICB0aXRsZTogc3RyaW5nID0gJyc7XG5cbiAgICBAQ29udGVudENoaWxkKFRlbXBsYXRlUmVmKVxuICAgIHRlbXBsYXRlOiBhbnk7XG5cbiAgICAvKiogQ3VzdG9tIHRvb2x0aXAgZm9ybWF0dGVyIGZ1bmN0aW9uLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgZm9ybWF0VG9vbHRpcDogRnVuY3Rpb247XG5cbiAgICAvKiogVGl0bGUgdG8gYmUgdXNlZCBmb3Igc2NyZWVuIHJlYWRlcnMuICovXG4gICAgQElucHV0KCdzci10aXRsZScpXG4gICAgc3JUaXRsZTogc3RyaW5nO1xuXG4gICAgLyoqIEFkZGl0aW9uYWwgQ1NTIGNsYXNzIHRvIGJlIGFwcGxpZWQgdG8gY29sdW1uIChoZWFkZXIgYW5kIGNlbGxzKS4gKi9cbiAgICBASW5wdXQoJ2NsYXNzJylcbiAgICBjc3NDbGFzczogc3RyaW5nO1xuXG4gICAgIC8qKiBFbmFibGVzL2Rpc2FibGVzIGEgQ2xpcGJvYXJkIGRpcmVjdGl2ZSB0byBhbGxvdyBjb3B5aW5nIG9mIGNlbGwgY29udGVudHMuICovXG4gICAgQElucHV0KClcbiAgICBjb3B5Q29udGVudDogYm9vbGVhbjtcblxuICAgIC8qKiAgVG9nZ2xlcyB0aGUgZWRpdGluZyBzdXBwb3J0IG9mIHRoZSBjb2x1bW4gZGF0YS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGVkaXRhYmxlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogIEVuYWJsZSBvciBkaXNhYmxlIGNlbGwgZm9jdXMgKi9cbiAgICBASW5wdXQoKVxuICAgIGZvY3VzOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBXaGVuIHVzaW5nIHNlcnZlciBzaWRlIHNvcnRpbmcgdGhlIGNvbHVtbiB1c2VkIGJ5IHRoZSBhcGkgY2FsbCB3aGVyZSB0aGUgc29ydGluZyB3aWxsIGJlIHBlcmZvcm1lZCAqL1xuICAgIEBJbnB1dCgpXG4gICAgc29ydGluZ0tleTogc3RyaW5nO1xuXG4gICAgLyoqIERhdGEgY29sdW1uIGhlYWRlciB0ZW1wbGF0ZSAqL1xuICAgIGhlYWRlcj86IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNyVGl0bGUgJiYgdGhpcy5rZXkgPT09ICckdGh1bWJuYWlsJykge1xuICAgICAgICAgICAgdGhpcy5zclRpdGxlID0gJ1RodW1ibmFpbCc7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=