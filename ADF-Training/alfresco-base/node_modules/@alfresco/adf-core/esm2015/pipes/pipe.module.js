/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FileSizePipe } from './file-size.pipe';
import { MimeTypeIconPipe } from './mime-type-icon.pipe';
import { NodeNameTooltipPipe } from './node-name-tooltip.pipe';
import { HighlightPipe } from './text-highlight.pipe';
import { TimeAgoPipe } from './time-ago.pipe';
import { InitialUsernamePipe } from './user-initial.pipe';
import { FullNamePipe } from './full-name.pipe';
import { FormatSpacePipe } from './format-space.pipe';
import { FileTypePipe } from './file-type.pipe';
import { MultiValuePipe } from './multi-value.pipe';
import { LocalizedDatePipe } from './localized-date.pipe';
import { DecimalNumberPipe } from './decimal-number.pipe';
import { LocalizedRolePipe } from './localized-role.pipe';
import { TranslateModule } from '@ngx-translate/core';
import { MomentDatePipe } from './moment-date.pipe';
import { MomentDateTimePipe } from './moment-datetime.pipe';
import * as ɵngcc0 from '@angular/core';
export class PipeModule {
}
PipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PipeModule });
PipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PipeModule_Factory(t) { return new (t || PipeModule)(); }, providers: [
        FileSizePipe,
        HighlightPipe,
        TimeAgoPipe,
        MimeTypeIconPipe,
        InitialUsernamePipe,
        NodeNameTooltipPipe,
        FormatSpacePipe,
        FileTypePipe,
        MultiValuePipe,
        LocalizedDatePipe,
        DecimalNumberPipe,
        LocalizedRolePipe,
        MomentDatePipe,
        MomentDateTimePipe
    ], imports: [[
            CommonModule,
            TranslateModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PipeModule, { declarations: function () { return [FileSizePipe,
        HighlightPipe,
        TimeAgoPipe,
        MimeTypeIconPipe,
        InitialUsernamePipe,
        FullNamePipe,
        NodeNameTooltipPipe,
        FormatSpacePipe,
        FileTypePipe,
        MultiValuePipe,
        LocalizedDatePipe,
        DecimalNumberPipe,
        LocalizedRolePipe,
        MomentDatePipe,
        MomentDateTimePipe]; }, imports: function () { return [CommonModule,
        TranslateModule]; }, exports: function () { return [FileSizePipe,
        HighlightPipe,
        TimeAgoPipe,
        MimeTypeIconPipe,
        InitialUsernamePipe,
        FullNamePipe,
        NodeNameTooltipPipe,
        FormatSpacePipe,
        FileTypePipe,
        MultiValuePipe,
        LocalizedDatePipe,
        DecimalNumberPipe,
        LocalizedRolePipe,
        MomentDatePipe,
        MomentDateTimePipe]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PipeModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    TranslateModule
                ],
                declarations: [
                    FileSizePipe,
                    HighlightPipe,
                    TimeAgoPipe,
                    MimeTypeIconPipe,
                    InitialUsernamePipe,
                    FullNamePipe,
                    NodeNameTooltipPipe,
                    FormatSpacePipe,
                    FileTypePipe,
                    MultiValuePipe,
                    LocalizedDatePipe,
                    DecimalNumberPipe,
                    LocalizedRolePipe,
                    MomentDatePipe,
                    MomentDateTimePipe
                ],
                providers: [
                    FileSizePipe,
                    HighlightPipe,
                    TimeAgoPipe,
                    MimeTypeIconPipe,
                    InitialUsernamePipe,
                    NodeNameTooltipPipe,
                    FormatSpacePipe,
                    FileTypePipe,
                    MultiValuePipe,
                    LocalizedDatePipe,
                    DecimalNumberPipe,
                    LocalizedRolePipe,
                    MomentDatePipe,
                    MomentDateTimePipe
                ],
                exports: [
                    FileSizePipe,
                    HighlightPipe,
                    TimeAgoPipe,
                    MimeTypeIconPipe,
                    InitialUsernamePipe,
                    FullNamePipe,
                    NodeNameTooltipPipe,
                    FormatSpacePipe,
                    FileTypePipe,
                    MultiValuePipe,
                    LocalizedDatePipe,
                    DecimalNumberPipe,
                    LocalizedRolePipe,
                    MomentDatePipe,
                    MomentDateTimePipe
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlwZS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlL3BpcGVzL3BpcGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDekQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUEwRDVELE1BQU0sT0FBTyxVQUFVO0FBQ3ZCO3NDQXpEQyxRQUFRLFNBQUM7UUFDTixPQUFPLEVBQUUsc0JBQ0wsWUFBWSxzQkFDWixlQUFlLGtCQUNsQixrQkFDRDtFQUFZLEVBQUU7SUFDVixZQUFZO2VBQ1o7T0FBYTtHQUNiLFdBQVc7T0FDWCxnQkFBZ0I7Z0JBQ2hCO1VBQW1CO1VBQ25CLFlBQVk7b0JBQ1o7WUFBbUI7T0FDbkIsZUFBZTtpQkFDZjtLQUFZO0FBQ1osY0FBYztpQkFDZDtRQUFpQjtFQUNqQjtJQUFpQixzQkFDakIsaUJBQWlCLHNCQUNqQixjQUFjLHNCQUNkLGtCQUFrQixrQkFDckIsa0JBQ0Q7UUFBUyxFQUFFO1NBQ1A7QUFBWSxzQkFDWjtTQUFhO0VBQ2IsV0FBVzthQUNYO0FBQWdCLHNCQUNoQjtnQkFBbUI7Z0JBQ25CO1dBQW1CO01BQ25CLGVBQWU7Z0JBQ2Y7Q0FBWSxzQkFDWjthQUFjLHNCQUNkLGlCQUFpQixzQkFDakI7Y0FBaUIsc0JBQ2pCLGlCQUFpQjtDQUNqQixjQUFjO2NBQ2Q7V0FBa0I7R0FDckIsa0JBQ0QsT0FBTztDQUFFO0NBQ0wsWUFBWTtNQUNaLGFBQWE7Z0JBQ2I7S0FBVztHQUNYLGdCQUFnQjtjQUNoQjtNQUFtQjtDQUNuQixZQUFZO1dBQ1osbUJBQW1CO1dBQ25CLGVBQWUsc0JBQ2YsWUFBWTthQUNaO0dBQWM7UUFDZCxpQkFBaUI7b0JBQ2pCO0dBQWlCLHNCQUNqQjtNQUFpQjtTQUNqQixjQUFjO2FBQ2Qsa0JBQWtCO2VBQ3JCLGNBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBGaWxlU2l6ZVBpcGUgfSBmcm9tICcuL2ZpbGUtc2l6ZS5waXBlJztcbmltcG9ydCB7IE1pbWVUeXBlSWNvblBpcGUgfSBmcm9tICcuL21pbWUtdHlwZS1pY29uLnBpcGUnO1xuaW1wb3J0IHsgTm9kZU5hbWVUb29sdGlwUGlwZSB9IGZyb20gJy4vbm9kZS1uYW1lLXRvb2x0aXAucGlwZSc7XG5pbXBvcnQgeyBIaWdobGlnaHRQaXBlIH0gZnJvbSAnLi90ZXh0LWhpZ2hsaWdodC5waXBlJztcbmltcG9ydCB7IFRpbWVBZ29QaXBlIH0gZnJvbSAnLi90aW1lLWFnby5waXBlJztcbmltcG9ydCB7IEluaXRpYWxVc2VybmFtZVBpcGUgfSBmcm9tICcuL3VzZXItaW5pdGlhbC5waXBlJztcbmltcG9ydCB7IEZ1bGxOYW1lUGlwZSB9IGZyb20gJy4vZnVsbC1uYW1lLnBpcGUnO1xuaW1wb3J0IHsgRm9ybWF0U3BhY2VQaXBlIH0gZnJvbSAnLi9mb3JtYXQtc3BhY2UucGlwZSc7XG5pbXBvcnQgeyBGaWxlVHlwZVBpcGUgfSBmcm9tICcuL2ZpbGUtdHlwZS5waXBlJztcbmltcG9ydCB7IE11bHRpVmFsdWVQaXBlIH0gZnJvbSAnLi9tdWx0aS12YWx1ZS5waXBlJztcbmltcG9ydCB7IExvY2FsaXplZERhdGVQaXBlIH0gZnJvbSAnLi9sb2NhbGl6ZWQtZGF0ZS5waXBlJztcbmltcG9ydCB7IERlY2ltYWxOdW1iZXJQaXBlIH0gZnJvbSAnLi9kZWNpbWFsLW51bWJlci5waXBlJztcbmltcG9ydCB7IExvY2FsaXplZFJvbGVQaXBlIH0gZnJvbSAnLi9sb2NhbGl6ZWQtcm9sZS5waXBlJztcbmltcG9ydCB7IFRyYW5zbGF0ZU1vZHVsZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgTW9tZW50RGF0ZVBpcGUgfSBmcm9tICcuL21vbWVudC1kYXRlLnBpcGUnO1xuaW1wb3J0IHsgTW9tZW50RGF0ZVRpbWVQaXBlIH0gZnJvbSAnLi9tb21lbnQtZGF0ZXRpbWUucGlwZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIFRyYW5zbGF0ZU1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIEZpbGVTaXplUGlwZSxcbiAgICAgICAgSGlnaGxpZ2h0UGlwZSxcbiAgICAgICAgVGltZUFnb1BpcGUsXG4gICAgICAgIE1pbWVUeXBlSWNvblBpcGUsXG4gICAgICAgIEluaXRpYWxVc2VybmFtZVBpcGUsXG4gICAgICAgIEZ1bGxOYW1lUGlwZSxcbiAgICAgICAgTm9kZU5hbWVUb29sdGlwUGlwZSxcbiAgICAgICAgRm9ybWF0U3BhY2VQaXBlLFxuICAgICAgICBGaWxlVHlwZVBpcGUsXG4gICAgICAgIE11bHRpVmFsdWVQaXBlLFxuICAgICAgICBMb2NhbGl6ZWREYXRlUGlwZSxcbiAgICAgICAgRGVjaW1hbE51bWJlclBpcGUsXG4gICAgICAgIExvY2FsaXplZFJvbGVQaXBlLFxuICAgICAgICBNb21lbnREYXRlUGlwZSxcbiAgICAgICAgTW9tZW50RGF0ZVRpbWVQaXBlXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgRmlsZVNpemVQaXBlLFxuICAgICAgICBIaWdobGlnaHRQaXBlLFxuICAgICAgICBUaW1lQWdvUGlwZSxcbiAgICAgICAgTWltZVR5cGVJY29uUGlwZSxcbiAgICAgICAgSW5pdGlhbFVzZXJuYW1lUGlwZSxcbiAgICAgICAgTm9kZU5hbWVUb29sdGlwUGlwZSxcbiAgICAgICAgRm9ybWF0U3BhY2VQaXBlLFxuICAgICAgICBGaWxlVHlwZVBpcGUsXG4gICAgICAgIE11bHRpVmFsdWVQaXBlLFxuICAgICAgICBMb2NhbGl6ZWREYXRlUGlwZSxcbiAgICAgICAgRGVjaW1hbE51bWJlclBpcGUsXG4gICAgICAgIExvY2FsaXplZFJvbGVQaXBlLFxuICAgICAgICBNb21lbnREYXRlUGlwZSxcbiAgICAgICAgTW9tZW50RGF0ZVRpbWVQaXBlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEZpbGVTaXplUGlwZSxcbiAgICAgICAgSGlnaGxpZ2h0UGlwZSxcbiAgICAgICAgVGltZUFnb1BpcGUsXG4gICAgICAgIE1pbWVUeXBlSWNvblBpcGUsXG4gICAgICAgIEluaXRpYWxVc2VybmFtZVBpcGUsXG4gICAgICAgIEZ1bGxOYW1lUGlwZSxcbiAgICAgICAgTm9kZU5hbWVUb29sdGlwUGlwZSxcbiAgICAgICAgRm9ybWF0U3BhY2VQaXBlLFxuICAgICAgICBGaWxlVHlwZVBpcGUsXG4gICAgICAgIE11bHRpVmFsdWVQaXBlLFxuICAgICAgICBMb2NhbGl6ZWREYXRlUGlwZSxcbiAgICAgICAgRGVjaW1hbE51bWJlclBpcGUsXG4gICAgICAgIExvY2FsaXplZFJvbGVQaXBlLFxuICAgICAgICBNb21lbnREYXRlUGlwZSxcbiAgICAgICAgTW9tZW50RGF0ZVRpbWVQaXBlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBQaXBlTW9kdWxlIHtcbn1cbiJdfQ==