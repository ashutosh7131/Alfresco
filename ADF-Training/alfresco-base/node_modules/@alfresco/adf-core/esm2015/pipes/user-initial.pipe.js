/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Pipe } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
export class InitialUsernamePipe {
    constructor(sanitized) {
        this.sanitized = sanitized;
    }
    transform(user, className = '', delimiter = '') {
        let safeHtml = '';
        if (user) {
            const initialResult = this.getInitialUserName(user.firstName || user.displayName, user.lastName, delimiter);
            safeHtml = this.sanitized.bypassSecurityTrustHtml(`<div id="user-initials-image" class="${className}">${initialResult}</div>`);
        }
        return safeHtml;
    }
    getInitialUserName(firstName, lastName, delimiter) {
        firstName = (firstName ? firstName[0] : '');
        lastName = (lastName ? lastName[0] : '');
        return firstName + delimiter + lastName;
    }
}
InitialUsernamePipe.ɵfac = function InitialUsernamePipe_Factory(t) { return new (t || InitialUsernamePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
InitialUsernamePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "usernameInitials", type: InitialUsernamePipe, pure: true });
InitialUsernamePipe.ctorParameters = () => [
    { type: DomSanitizer }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InitialUsernamePipe, [{
        type: Pipe,
        args: [{
                name: 'usernameInitials'
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1pbml0aWFsLnBpcGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlL3BpcGVzL3VzZXItaW5pdGlhbC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUFZLE1BQU0sMkJBQTJCLENBQUM7OztBQVVuRSxNQUFNLE9BQU8sbUJBQW1CO0FBQUcsSUFFL0IsWUFBb0IsU0FBdUI7QUFDL0MsUUFEd0IsY0FBUyxHQUFULFNBQVMsQ0FBYztBQUFDLElBQzVDLENBQUM7QUFDTCxJQUNJLFNBQVMsQ0FBQyxJQUFVLEVBQUUsWUFBb0IsRUFBRSxFQUFFLFlBQW9CLEVBQUU7QUFBSSxRQUNwRSxJQUFJLFFBQVEsR0FBYSxFQUFFLENBQUM7QUFDcEMsUUFBUSxJQUFJLElBQUksRUFBRTtBQUNsQixZQUFZLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUN4SCxZQUFZLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLHdDQUF3QyxTQUFTLEtBQUssYUFBYSxRQUFRLENBQUMsQ0FBQztBQUMzSSxTQUFTO0FBQ1QsUUFBUSxPQUFPLFFBQVEsQ0FBQztBQUN4QixJQUFJLENBQUM7QUFDTCxJQUNJLGtCQUFrQixDQUFDLFNBQWlCLEVBQUUsUUFBZ0IsRUFBRSxTQUFpQjtBQUFJLFFBQ3pFLFNBQVMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNwRCxRQUFRLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNqRCxRQUFRLE9BQU8sU0FBUyxHQUFHLFNBQVMsR0FBRyxRQUFRLENBQUM7QUFDaEQsSUFBSSxDQUFDO0FBQ0w7K0NBdEJDLElBQUksU0FBQyxrQkFDRixJQUFJLEVBQUUsa0JBQWtCLGNBQzNCO3FIQUNJO0FBQUM7QUFBNkMsWUFWMUMsWUFBWTtBQUFHOzs7Ozs7NkVBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZUh0bWwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IFVzZXJQcm9jZXNzTW9kZWwgfSBmcm9tICcuLi9tb2RlbHMvdXNlci1wcm9jZXNzLm1vZGVsJztcbmltcG9ydCB7IEVjbVVzZXJNb2RlbCB9IGZyb20gJy4uL21vZGVscy9lY20tdXNlci5tb2RlbCc7XG5pbXBvcnQgeyBJZGVudGl0eVVzZXJNb2RlbCB9IGZyb20gJy4uL21vZGVscy9pZGVudGl0eS11c2VyLm1vZGVsJztcblxuZXhwb3J0IHR5cGUgVXNlciA9IChFY21Vc2VyTW9kZWwgfCBVc2VyUHJvY2Vzc01vZGVsICB8IElkZW50aXR5VXNlck1vZGVsKSAmIHsgZGlzcGxheU5hbWU/OiBzdHJpbmcgfTtcblxuQFBpcGUoe1xuICAgIG5hbWU6ICd1c2VybmFtZUluaXRpYWxzJ1xufSlcbmV4cG9ydCBjbGFzcyBJbml0aWFsVXNlcm5hbWVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNhbml0aXplZDogRG9tU2FuaXRpemVyKSB7XG4gICAgfVxuXG4gICAgdHJhbnNmb3JtKHVzZXI6IFVzZXIsIGNsYXNzTmFtZTogc3RyaW5nID0gJycsIGRlbGltaXRlcjogc3RyaW5nID0gJycpOiBTYWZlSHRtbCB7XG4gICAgICAgIGxldCBzYWZlSHRtbDogU2FmZUh0bWwgPSAnJztcbiAgICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGluaXRpYWxSZXN1bHQgPSB0aGlzLmdldEluaXRpYWxVc2VyTmFtZSh1c2VyLmZpcnN0TmFtZSB8fCB1c2VyLmRpc3BsYXlOYW1lLCB1c2VyLmxhc3ROYW1lLCBkZWxpbWl0ZXIpO1xuICAgICAgICAgICAgc2FmZUh0bWwgPSB0aGlzLnNhbml0aXplZC5ieXBhc3NTZWN1cml0eVRydXN0SHRtbChgPGRpdiBpZD1cInVzZXItaW5pdGlhbHMtaW1hZ2VcIiBjbGFzcz1cIiR7Y2xhc3NOYW1lfVwiPiR7aW5pdGlhbFJlc3VsdH08L2Rpdj5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2FmZUh0bWw7XG4gICAgfVxuXG4gICAgZ2V0SW5pdGlhbFVzZXJOYW1lKGZpcnN0TmFtZTogc3RyaW5nLCBsYXN0TmFtZTogc3RyaW5nLCBkZWxpbWl0ZXI6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgICAgIGZpcnN0TmFtZSA9IChmaXJzdE5hbWUgPyBmaXJzdE5hbWVbMF0gOiAnJyk7XG4gICAgICAgIGxhc3ROYW1lID0gKGxhc3ROYW1lID8gbGFzdE5hbWVbMF0gOiAnJyk7XG4gICAgICAgIHJldHVybiBmaXJzdE5hbWUgKyBkZWxpbWl0ZXIgKyBsYXN0TmFtZTtcbiAgICB9XG59XG4iXX0=