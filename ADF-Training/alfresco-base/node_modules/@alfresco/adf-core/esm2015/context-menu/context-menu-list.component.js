/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation, HostListener, Optional, Inject, QueryList, ViewChildren } from '@angular/core';
import { trigger } from '@angular/animations';
import { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';
import { FocusKeyManager } from '@angular/cdk/a11y';
import { MatMenuItem } from '@angular/material/menu';
import { ContextMenuOverlayRef } from './context-menu-overlay';
import { contextMenuAnimation } from './animations';
import { CONTEXT_MENU_DATA } from './context-menu.tokens';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/material/menu';
import * as ɵngcc3 from '@angular/material/icon';
import * as ɵngcc4 from '@ngx-translate/core';
import * as ɵngcc5 from './context-menu-overlay';

function ContextMenuListComponent_ng_container_2_button_1_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(link_r1.model.icon);
} }
function ContextMenuListComponent_ng_container_2_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 4);
    ɵngcc0.ɵɵlistener("click", function ContextMenuListComponent_ng_container_2_button_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const link_r1 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onMenuItemClick($event, link_r1); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, ContextMenuListComponent_ng_container_2_button_1_mat_icon_2_Template, 2, 1, "mat-icon", 5);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("disabled", link_r1.model == null ? null : link_r1.model.disabled);
    ɵngcc0.ɵɵattribute("data-automation-id", "context-" + ɵngcc0.ɵɵpipeBind1(1, 4, link_r1.title || (link_r1.model == null ? null : link_r1.model.title)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", link_r1.model == null ? null : link_r1.model.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 6, link_r1.title || (link_r1.model == null ? null : link_r1.model.title)));
} }
function ContextMenuListComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ContextMenuListComponent_ng_container_2_button_1_Template, 6, 8, "button", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const link_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", link_r1.model == null ? null : link_r1.model.visible);
} }
export class ContextMenuListComponent {
    constructor(contextMenuOverlayRef, data) {
        this.contextMenuOverlayRef = contextMenuOverlayRef;
        this.data = data;
        this.links = this.data;
    }
    handleKeydownEscape(event) {
        if (event) {
            this.contextMenuOverlayRef.close();
        }
    }
    handleKeydownEvent(event) {
        if (event) {
            const keyCode = event.keyCode;
            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {
                this.keyManager.onKeydown(event);
            }
        }
    }
    onMenuItemClick(event, menuItem) {
        if (menuItem && menuItem.model && menuItem.model.disabled) {
            event.preventDefault();
            event.stopImmediatePropagation();
            return;
        }
        menuItem.subject.next(menuItem);
        this.contextMenuOverlayRef.close();
    }
    ngAfterViewInit() {
        this.keyManager = new FocusKeyManager(this.items);
        this.keyManager.setFirstItemActive();
    }
}
ContextMenuListComponent.ɵfac = function ContextMenuListComponent_Factory(t) { return new (t || ContextMenuListComponent)(ɵngcc0.ɵɵdirectiveInject(ContextMenuOverlayRef), ɵngcc0.ɵɵdirectiveInject(CONTEXT_MENU_DATA, 8)); };
ContextMenuListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ContextMenuListComponent, selectors: [["adf-context-menu"]], viewQuery: function ContextMenuListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(MatMenuItem, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);
    } }, hostAttrs: ["role", "menu", 1, "adf-context-menu"], hostBindings: function ContextMenuListComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown.Escape", function ContextMenuListComponent_keydown_Escape_HostBindingHandler($event) { return ctx.handleKeydownEscape($event); }, false, ɵngcc0.ɵɵresolveDocument)("keydown", function ContextMenuListComponent_keydown_HostBindingHandler($event) { return ctx.handleKeydownEvent($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, decls: 3, vars: 2, consts: [["mat-menu", "", 1, "mat-menu-panel"], ["id", "adf-context-menu-content", 1, "mat-menu-content"], [4, "ngFor", "ngForOf"], ["mat-menu-item", "", 3, "disabled", "click", 4, "ngIf"], ["mat-menu-item", "", 3, "disabled", "click"], [4, "ngIf"]], template: function ContextMenuListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, ContextMenuListComponent_ng_container_2_Template, 2, 1, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("@panelAnimation", undefined);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.links);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc2.MatMenuItem, ɵngcc3.MatIcon], pipes: [ɵngcc4.TranslatePipe], encapsulation: 2, data: { animation: [
            trigger('panelAnimation', contextMenuAnimation)
        ] } });
ContextMenuListComponent.ctorParameters = () => [
    { type: ContextMenuOverlayRef, decorators: [{ type: Inject, args: [ContextMenuOverlayRef,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CONTEXT_MENU_DATA,] }] }
];
ContextMenuListComponent.propDecorators = {
    items: [{ type: ViewChildren, args: [MatMenuItem,] }],
    handleKeydownEscape: [{ type: HostListener, args: ['document:keydown.Escape', ['$event'],] }],
    handleKeydownEvent: [{ type: HostListener, args: ['document:keydown', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContextMenuListComponent, [{
        type: Component,
        args: [{
                selector: 'adf-context-menu',
                template: `
        <div mat-menu class="mat-menu-panel" @panelAnimation>
            <div id="adf-context-menu-content" class="mat-menu-content">
                <ng-container *ngFor="let link of links">
                    <button *ngIf="link.model?.visible"
                            [attr.data-automation-id]="'context-'+((link.title || link.model?.title) | translate)"
                            mat-menu-item
                            [disabled]="link.model?.disabled"
                            (click)="onMenuItemClick($event, link)">
                        <mat-icon *ngIf="link.model?.icon">{{ link.model.icon }}</mat-icon>
                        <span>{{ (link.title || link.model?.title) | translate }}</span>
                    </button>
                </ng-container>
            </div>
        </div>
    `,
                host: {
                    role: 'menu',
                    class: 'adf-context-menu'
                },
                encapsulation: ViewEncapsulation.None,
                animations: [
                    trigger('panelAnimation', contextMenuAnimation)
                ]
            }]
    }], function () { return [{ type: ɵngcc5.ContextMenuOverlayRef, decorators: [{
                type: Inject,
                args: [ContextMenuOverlayRef]
            }] }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [CONTEXT_MENU_DATA]
            }] }]; }, { handleKeydownEscape: [{
            type: HostListener,
            args: ['document:keydown.Escape', ['$event']]
        }], handleKeydownEvent: [{
            type: HostListener,
            args: ['document:keydown', ['$event']]
        }], items: [{
            type: ViewChildren,
            args: [MatMenuItem]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,