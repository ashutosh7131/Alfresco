/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ContentChildren, EventEmitter, HostListener, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './info-drawer-layout.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/material/tabs';
import * as ɵngcc4 from '@angular/material/icon';
import * as ɵngcc5 from '@ngx-translate/core';

function InfoDrawerTabComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
const _c0 = ["*"];
function InfoDrawerComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.title));
} }
function InfoDrawerComponent_ng_content_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 1, ["*ngIf", "!title", "info-drawer-title", ""]);
} }
function InfoDrawerComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 7);
} }
function InfoDrawerComponent_ng_template_5_mat_tab_1_ng_template_2_mat_icon_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const contentBlock_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(contentBlock_r8.icon);
} }
function InfoDrawerComponent_ng_template_5_mat_tab_1_ng_template_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const contentBlock_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, contentBlock_r8.label));
} }
function InfoDrawerComponent_ng_template_5_mat_tab_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, InfoDrawerComponent_ng_template_5_mat_tab_1_ng_template_2_mat_icon_0_Template, 2, 1, "mat-icon", 2);
    ɵngcc0.ɵɵtemplate(1, InfoDrawerComponent_ng_template_5_mat_tab_1_ng_template_2_span_1_Template, 3, 3, "span", 2);
} if (rf & 2) {
    const contentBlock_r8 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngIf", contentBlock_r8.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", contentBlock_r8.label);
} }
function InfoDrawerComponent_ng_template_5_mat_tab_1_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function InfoDrawerComponent_ng_template_5_mat_tab_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-tab", 10);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, InfoDrawerComponent_ng_template_5_mat_tab_1_ng_template_2_Template, 2, 2, "ng-template", 11);
    ɵngcc0.ɵɵtemplate(3, InfoDrawerComponent_ng_template_5_mat_tab_1_ng_container_3_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const contentBlock_r8 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, contentBlock_r8.label));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", contentBlock_r8.content);
} }
function InfoDrawerComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-tab-group", 8);
    ɵngcc0.ɵɵlistener("selectedIndexChange", function InfoDrawerComponent_ng_template_5_Template_mat_tab_group_selectedIndexChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.selectedIndex = $event; })("selectedTabChange", function InfoDrawerComponent_ng_template_5_Template_mat_tab_group_selectedTabChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onTabChange($event); });
    ɵngcc0.ɵɵtemplate(1, InfoDrawerComponent_ng_template_5_mat_tab_1_Template, 4, 4, "mat-tab", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("selectedIndex", ctx_r4.selectedIndex);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r4.contentBlocks);
} }
function InfoDrawerComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 2);
} }
const _c1 = [[["", "info-drawer-buttons", ""]], [["", "info-drawer-title", ""]], [["", "info-drawer-content", ""]]];
const _c2 = ["[info-drawer-buttons]", "[info-drawer-title]", "[info-drawer-content]"];
export class InfoDrawerTabComponent {
    constructor() {
        this.label = '';
        this.icon = null;
    }
}
InfoDrawerTabComponent.ɵfac = function InfoDrawerTabComponent_Factory(t) { return new (t || InfoDrawerTabComponent)(); };
InfoDrawerTabComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InfoDrawerTabComponent, selectors: [["adf-info-drawer-tab"]], viewQuery: function InfoDrawerTabComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, inputs: { label: "label", icon: "icon" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function InfoDrawerTabComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, InfoDrawerTabComponent_ng_template_0_Template, 1, 0, "ng-template");
    } }, encapsulation: 2 });
InfoDrawerTabComponent.propDecorators = {
    label: [{ type: Input }],
    icon: [{ type: Input }],
    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InfoDrawerTabComponent, [{
        type: Component,
        args: [{
                selector: 'adf-info-drawer-tab',
                template: '<ng-template><ng-content></ng-content></ng-template>',
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return []; }, { label: [{
            type: Input
        }], icon: [{
            type: Input
        }], content: [{
            type: ViewChild,
            args: [TemplateRef, { static: true }]
        }] }); })();
export class InfoDrawerComponent {
    constructor() {
        this.title = null;
        this.selectedIndex = 0;
        this.showHeader = true;
        this.currentTab = new EventEmitter();
    }
    onKeyDown(event) {
        event.cancelBubble = true;
    }
    onKeyUp(event) {
        event.cancelBubble = true;
    }
    showTabLayout() {
        return this.contentBlocks.length > 0;
    }
    onTabChange(event) {
        this.currentTab.emit(event.index);
    }
}
InfoDrawerComponent.ɵfac = function InfoDrawerComponent_Factory(t) { return new (t || InfoDrawerComponent)(); };
InfoDrawerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InfoDrawerComponent, selectors: [["adf-info-drawer"]], contentQueries: function InfoDrawerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, InfoDrawerTabComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentBlocks = _t);
    } }, hostAttrs: [1, "adf-info-drawer"], hostBindings: function InfoDrawerComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown", function InfoDrawerComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); })("keyup", function InfoDrawerComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); });
    } }, inputs: { title: "title", selectedIndex: "selectedIndex", showHeader: "showHeader" }, outputs: { currentTab: "currentTab" }, ngContentSelectors: _c2, decls: 9, vars: 6, consts: [[3, "showHeader"], ["role", "heading", "aria-level", "1", "info-drawer-title", "", 4, "ngIf"], [4, "ngIf"], ["info-drawer-content", "", 4, "ngIf", "ngIfThen", "ngIfElse"], ["tabLayout", ""], ["singleLayout", ""], ["role", "heading", "aria-level", "1", "info-drawer-title", ""], ["info-drawer-content", ""], [1, "adf-info-drawer-tabs", 3, "selectedIndex", "selectedIndexChange", "selectedTabChange"], ["class", "adf-info-drawer-tab", 3, "label", 4, "ngFor", "ngForOf"], [1, "adf-info-drawer-tab", 3, "label"], ["mat-tab-label", ""], [4, "ngTemplateOutlet"]], template: function InfoDrawerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵelementStart(0, "adf-info-drawer-layout", 0);
        ɵngcc0.ɵɵtemplate(1, InfoDrawerComponent_div_1_Template, 3, 3, "div", 1);
        ɵngcc0.ɵɵtemplate(2, InfoDrawerComponent_ng_content_2_Template, 1, 0, "ng-content", 2);
        ɵngcc0.ɵɵprojection(3, 0, ["info-drawer-buttons", ""]);
        ɵngcc0.ɵɵtemplate(4, InfoDrawerComponent_ng_container_4_Template, 1, 0, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(5, InfoDrawerComponent_ng_template_5_Template, 2, 2, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(7, InfoDrawerComponent_ng_template_7_Template, 1, 0, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r3 = ɵngcc0.ɵɵreference(6);
        const _r5 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵproperty("showHeader", ctx.showHeader);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showTabLayout())("ngIfThen", _r3)("ngIfElse", _r5);
    } }, directives: [ɵngcc1.InfoDrawerLayoutComponent, ɵngcc2.NgIf, ɵngcc1.InfoDrawerTitleDirective, ɵngcc1.InfoDrawerContentDirective, ɵngcc3.MatTabGroup, ɵngcc2.NgForOf, ɵngcc3.MatTab, ɵngcc3.MatTabLabel, ɵngcc2.NgTemplateOutlet, ɵngcc4.MatIcon], pipes: [ɵngcc5.TranslatePipe], styles: [".adf-info-drawer{display:block}.adf-info-drawer .mat-tab-label{min-width:0}.adf-info-drawer .adf-info-drawer-layout-content{padding:0}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs){padding:10px}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs)>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>:last-child{margin-bottom:0}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label{flex-grow:1}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label .mat-icon+span{padding-left:5px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-ink-bar{height:4px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body{padding:10px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content{overflow:initial}"], encapsulation: 2 });
InfoDrawerComponent.propDecorators = {
    title: [{ type: Input }],
    selectedIndex: [{ type: Input }],
    showHeader: [{ type: Input }],
    currentTab: [{ type: Output }],
    contentBlocks: [{ type: ContentChildren, args: [InfoDrawerTabComponent,] }],
    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],
    onKeyUp: [{ type: HostListener, args: ['keyup', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InfoDrawerComponent, [{
        type: Component,
        args: [{
                selector: 'adf-info-drawer',
                template: "<adf-info-drawer-layout [showHeader]=\"showHeader\">\n    <div role=\"heading\" aria-level=\"1\" *ngIf=\"title\" info-drawer-title>{{ title | translate }}</div>\n    <ng-content *ngIf=\"!title\" info-drawer-title select=\"[info-drawer-title]\"></ng-content>\n\n    <ng-content info-drawer-buttons select=\"[info-drawer-buttons]\"></ng-content>\n\n    <ng-container info-drawer-content *ngIf=\"showTabLayout(); then tabLayout else singleLayout\"></ng-container>\n\n    <ng-template #tabLayout>\n        <mat-tab-group [(selectedIndex)]=\"selectedIndex\" class=\"adf-info-drawer-tabs\" (selectedTabChange)=\"onTabChange($event)\">\n            <mat-tab *ngFor=\"let contentBlock of contentBlocks\"\n                [label]=\"contentBlock.label | translate\"\n                class=\"adf-info-drawer-tab\">\n\n                <ng-template mat-tab-label>\n                    <mat-icon *ngIf=\"contentBlock.icon\">{{ contentBlock.icon }}</mat-icon>\n                    <span *ngIf=\"contentBlock.label\">{{ contentBlock.label | translate }}</span>\n                </ng-template>\n\n                <ng-container *ngTemplateOutlet=\"contentBlock.content\"></ng-container>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-template>\n\n    <ng-template #singleLayout>\n        <ng-content select=\"[info-drawer-content]\"></ng-content>\n    </ng-template>\n</adf-info-drawer-layout>\n",
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-info-drawer' },
                styles: [".adf-info-drawer{display:block}.adf-info-drawer .mat-tab-label{min-width:0}.adf-info-drawer .adf-info-drawer-layout-content{padding:0}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs){padding:10px}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs)>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>:last-child{margin-bottom:0}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label{flex-grow:1}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label .mat-icon+span{padding-left:5px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-ink-bar{height:4px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body{padding:10px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content{overflow:initial}"]
            }]
    }], function () { return []; }, { title: [{
            type: Input
        }], selectedIndex: [{
            type: Input
        }], showHeader: [{
            type: Input
        }], currentTab: [{
            type: Output
        }], onKeyDown: [{
            type: HostListener,
            args: ['keydown', ['$event']]
        }], onKeyUp: [{
            type: HostListener,
            args: ['keyup', ['$event']]
        }], contentBlocks: [{
            type: ContentChildren,
            args: [InfoDrawerTabComponent]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mby1kcmF3ZXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9pbmZvLWRyYXdlci9pbmZvLWRyYXdlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU81SixNQUFNLE9BQU8sc0JBQXNCO0FBQ25DLElBTkE7QUFDRyxRQU9DLFVBQUssR0FBVyxFQUFFLENBQUM7QUFDdkIsUUFHSSxTQUFJLEdBQVcsSUFBSSxDQUFDO0FBQ3hCLElBR0EsQ0FBQztBQUNEO2tEQWpCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHFCQUFxQjthQUMvQixRQUFRLEVBQUUsc0RBQXNELGtCQUNoRSxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxjQUN4Qzs7Ozs7Ozs7NkJBQ0k7QUFBQztBQUNJLG9CQUNMLEtBQUs7QUFDUixtQkFHRyxLQUFLO0FBQ1Isc0JBRUcsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFDeEM7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQVVOLE1BQU0sT0FBTyxtQkFBbUI7QUFDaEMsSUFSQTtBQUNHLFFBU0MsVUFBSyxHQUFnQixJQUFJLENBQUM7QUFDOUIsUUFHSSxrQkFBYSxHQUFXLENBQUMsQ0FBQztBQUM5QixRQUdJLGVBQVUsR0FBWSxJQUFJLENBQUM7QUFDL0IsUUFHSSxlQUFVLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7QUFDbEUsSUFxQkEsQ0FBQztBQUNELElBakJJLFNBQVMsQ0FBQyxLQUFvQjtBQUNsQyxRQUFRLEtBQUssQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0FBQ2xDLElBQUksQ0FBQztBQUNMLElBRUksT0FBTyxDQUFDLEtBQW9CO0FBQ2hDLFFBQVEsS0FBSyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7QUFDbEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxhQUFhO0FBQUssUUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUM3QyxJQUFJLENBQUM7QUFDTCxJQUNJLFdBQVcsQ0FBQyxLQUF3QjtBQUN4QyxRQUFRLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMxQyxJQUFJLENBQUM7QUFDTDsrQ0E1Q0MsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxpQkFBaUI7ZUFDM0I7Ozs7Ozs7dW9CQUEyQyxrQkFFM0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksa0JBQ3JDLElBQUksRUFBRSxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUN2QzsyNENBQ0k7QUFBQztBQUNJLG9CQUNMLEtBQUs7QUFDUiw0QkFHRyxLQUFLO0FBQ1IseUJBR0csS0FBSztBQUNSLHlCQUdHLE1BQU07QUFDVCw0QkFFRyxlQUFlLFNBQUMsc0JBQXNCO0FBQ3RDLHdCQUVBLFlBQVksU0FBQyxTQUFTLEVBQUUsQ0FBQyxRQUFRLENBQUM7QUFDbEMsc0JBSUEsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQztBQUNqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIsIElucHV0LCBPdXRwdXQsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdFRhYkNoYW5nZUV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFicyc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1pbmZvLWRyYXdlci10YWInLFxuICAgIHRlbXBsYXRlOiAnPG5nLXRlbXBsYXRlPjxuZy1jb250ZW50PjwvbmctY29udGVudD48L25nLXRlbXBsYXRlPicsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBJbmZvRHJhd2VyVGFiQ29tcG9uZW50IHtcbiAgICAvKiogVGhlIHRpdGxlIG9mIHRoZSB0YWIgKHN0cmluZyBvciB0cmFuc2xhdGlvbiBrZXkpLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgbGFiZWw6IHN0cmluZyA9ICcnO1xuXG4gICAgLyoqIEljb24gdG8gcmVuZGVyIGZvciB0aGUgdGFiLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgaWNvbjogc3RyaW5nID0gbnVsbDtcblxuICAgIEBWaWV3Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiB0cnVlIH0pXG4gICAgY29udGVudDogVGVtcGxhdGVSZWY8YW55Pjtcbn1cblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtaW5mby1kcmF3ZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9pbmZvLWRyYXdlci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vaW5mby1kcmF3ZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHsgJ2NsYXNzJzogJ2FkZi1pbmZvLWRyYXdlcicgfVxufSlcbmV4cG9ydCBjbGFzcyBJbmZvRHJhd2VyQ29tcG9uZW50IHtcbiAgICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbmZvIGRyYXdlciAoc3RyaW5nIG9yIHRyYW5zbGF0aW9uIGtleSkuICovXG4gICAgQElucHV0KClcbiAgICB0aXRsZTogc3RyaW5nfG51bGwgPSBudWxsO1xuXG4gICAgLyoqIFRoZSBzZWxlY3RlZCBpbmRleCB0YWIuICovXG4gICAgQElucHV0KClcbiAgICBzZWxlY3RlZEluZGV4OiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIFRoZSB2aXNpYmlsaXR5IG9mIHRoZSBoZWFkZXIuICovXG4gICAgQElucHV0KClcbiAgICBzaG93SGVhZGVyOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBFbWl0dGVkIHdoZW4gdGhlIGN1cnJlbnRseSBhY3RpdmUgdGFiIGNoYW5nZXMuICovXG4gICAgQE91dHB1dCgpXG4gICAgY3VycmVudFRhYjogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcblxuICAgIEBDb250ZW50Q2hpbGRyZW4oSW5mb0RyYXdlclRhYkNvbXBvbmVudClcbiAgICBjb250ZW50QmxvY2tzOiBRdWVyeUxpc3Q8SW5mb0RyYXdlclRhYkNvbXBvbmVudD47XG5cbiAgICBASG9zdExpc3RlbmVyKCdrZXlkb3duJywgWyckZXZlbnQnXSlcbiAgICBvbktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICAgICAgZXZlbnQuY2FuY2VsQnViYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCdrZXl1cCcsIFsnJGV2ZW50J10pXG4gICAgb25LZXlVcChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICBldmVudC5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgIH1cblxuICAgIHNob3dUYWJMYXlvdXQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRlbnRCbG9ja3MubGVuZ3RoID4gMDtcbiAgICB9XG5cbiAgICBvblRhYkNoYW5nZShldmVudDogTWF0VGFiQ2hhbmdlRXZlbnQpIHtcbiAgICAgICAgdGhpcy5jdXJyZW50VGFiLmVtaXQoZXZlbnQuaW5kZXgpO1xuICAgIH1cbn1cbiJdfQ==