/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MaterialModule } from '../material.module';
import { InfoDrawerLayoutComponent, InfoDrawerTitleDirective, InfoDrawerButtonsDirective, InfoDrawerContentDirective } from './info-drawer-layout.component';
import { InfoDrawerComponent, InfoDrawerTabComponent } from './info-drawer.component';
import { TranslateModule } from '@ngx-translate/core';
import * as ɵngcc0 from '@angular/core';
export class InfoDrawerModule {
}
InfoDrawerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InfoDrawerModule });
InfoDrawerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function InfoDrawerModule_Factory(t) { return new (t || InfoDrawerModule)(); }, imports: [[
            CommonModule,
            MaterialModule,
            TranslateModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InfoDrawerModule, { declarations: function () { return [InfoDrawerLayoutComponent,
        InfoDrawerTabComponent,
        InfoDrawerComponent,
        InfoDrawerTitleDirective,
        InfoDrawerButtonsDirective,
        InfoDrawerContentDirective]; }, imports: function () { return [CommonModule,
        MaterialModule,
        TranslateModule]; }, exports: function () { return [InfoDrawerLayoutComponent,
        InfoDrawerTabComponent,
        InfoDrawerComponent,
        InfoDrawerTitleDirective,
        InfoDrawerButtonsDirective,
        InfoDrawerContentDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InfoDrawerModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    MaterialModule,
                    TranslateModule
                ],
                declarations: [
                    InfoDrawerLayoutComponent,
                    InfoDrawerTabComponent,
                    InfoDrawerComponent,
                    InfoDrawerTitleDirective,
                    InfoDrawerButtonsDirective,
                    InfoDrawerContentDirective
                ],
                exports: [
                    InfoDrawerLayoutComponent,
                    InfoDrawerTabComponent,
                    InfoDrawerComponent,
                    InfoDrawerTitleDirective,
                    InfoDrawerButtonsDirective,
                    InfoDrawerContentDirective
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mby1kcmF3ZXIubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS9pbmZvLWRyYXdlci9pbmZvLWRyYXdlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVwRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsd0JBQXdCLEVBQUUsMEJBQTBCLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM3SixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7O0FBeUJ0RCxNQUFNLE9BQU8sZ0JBQWdCO0FBQUc7NENBdkIvQixRQUFRLFNBQUM7RUFDTixPQUFPLEVBQUUsc0JBQ0wsWUFBWSxzQkFDWixjQUFjLHNCQUNkLGVBQWUsa0JBQ2xCO0dBQ0QsWUFBWSxFQUFFO2FBQ1Y7VUFBeUI7SUFDekI7V0FBc0Isc0JBQ3RCLG1CQUFtQixzQkFDbkIsd0JBQXdCLHNCQUN4QiwwQkFBMEIsc0JBQzFCO21CQUEwQjtLQUM3QixrQkFDRDtDQUFPLEVBQUUsc0JBQ0w7Z0JBQXlCO0VBQ3pCLHNCQUFzQixzQkFDdEIsbUJBQW1CO0VBQ25CO0VBQXdCLHNCQUN4QiwwQkFBMEIsc0JBQzFCO1dBQTBCLGtCQUM3QjtXQUNKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRlcmlhbE1vZHVsZSB9IGZyb20gJy4uL21hdGVyaWFsLm1vZHVsZSc7XG5cbmltcG9ydCB7IEluZm9EcmF3ZXJMYXlvdXRDb21wb25lbnQsIEluZm9EcmF3ZXJUaXRsZURpcmVjdGl2ZSwgSW5mb0RyYXdlckJ1dHRvbnNEaXJlY3RpdmUsIEluZm9EcmF3ZXJDb250ZW50RGlyZWN0aXZlIH0gZnJvbSAnLi9pbmZvLWRyYXdlci1sYXlvdXQuY29tcG9uZW50JztcbmltcG9ydCB7IEluZm9EcmF3ZXJDb21wb25lbnQsIEluZm9EcmF3ZXJUYWJDb21wb25lbnQgfSBmcm9tICcuL2luZm8tZHJhd2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgTWF0ZXJpYWxNb2R1bGUsXG4gICAgICAgIFRyYW5zbGF0ZU1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIEluZm9EcmF3ZXJMYXlvdXRDb21wb25lbnQsXG4gICAgICAgIEluZm9EcmF3ZXJUYWJDb21wb25lbnQsXG4gICAgICAgIEluZm9EcmF3ZXJDb21wb25lbnQsXG4gICAgICAgIEluZm9EcmF3ZXJUaXRsZURpcmVjdGl2ZSxcbiAgICAgICAgSW5mb0RyYXdlckJ1dHRvbnNEaXJlY3RpdmUsXG4gICAgICAgIEluZm9EcmF3ZXJDb250ZW50RGlyZWN0aXZlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEluZm9EcmF3ZXJMYXlvdXRDb21wb25lbnQsXG4gICAgICAgIEluZm9EcmF3ZXJUYWJDb21wb25lbnQsXG4gICAgICAgIEluZm9EcmF3ZXJDb21wb25lbnQsXG4gICAgICAgIEluZm9EcmF3ZXJUaXRsZURpcmVjdGl2ZSxcbiAgICAgICAgSW5mb0RyYXdlckJ1dHRvbnNEaXJlY3RpdmUsXG4gICAgICAgIEluZm9EcmF3ZXJDb250ZW50RGlyZWN0aXZlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBJbmZvRHJhd2VyTW9kdWxlIHt9XG4iXX0=