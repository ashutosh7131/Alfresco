/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ContentChildren, EventEmitter, HostListener, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';
export class InfoDrawerTabComponent {
    constructor() {
        this.label = '';
        this.icon = null;
    }
}
InfoDrawerTabComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-info-drawer-tab',
                template: '<ng-template><ng-content></ng-content></ng-template>',
                encapsulation: ViewEncapsulation.None
            },] }
];
InfoDrawerTabComponent.propDecorators = {
    label: [{ type: Input }],
    icon: [{ type: Input }],
    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }]
};
export class InfoDrawerComponent {
    constructor() {
        this.title = null;
        this.selectedIndex = 0;
        this.showHeader = true;
        this.currentTab = new EventEmitter();
    }
    onKeyDown(event) {
        event.cancelBubble = true;
    }
    onKeyUp(event) {
        event.cancelBubble = true;
    }
    showTabLayout() {
        return this.contentBlocks.length > 0;
    }
    onTabChange(event) {
        this.currentTab.emit(event.index);
    }
}
InfoDrawerComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-info-drawer',
                template: "<adf-info-drawer-layout [showHeader]=\"showHeader\">\n    <div role=\"heading\" aria-level=\"1\" *ngIf=\"title\" info-drawer-title>{{ title | translate }}</div>\n    <ng-content *ngIf=\"!title\" info-drawer-title select=\"[info-drawer-title]\"></ng-content>\n\n    <ng-content info-drawer-buttons select=\"[info-drawer-buttons]\"></ng-content>\n\n    <ng-container info-drawer-content *ngIf=\"showTabLayout(); then tabLayout else singleLayout\"></ng-container>\n\n    <ng-template #tabLayout>\n        <mat-tab-group [(selectedIndex)]=\"selectedIndex\" class=\"adf-info-drawer-tabs\" (selectedTabChange)=\"onTabChange($event)\">\n            <mat-tab *ngFor=\"let contentBlock of contentBlocks\"\n                [label]=\"contentBlock.label | translate\"\n                class=\"adf-info-drawer-tab\">\n\n                <ng-template mat-tab-label>\n                    <mat-icon *ngIf=\"contentBlock.icon\">{{ contentBlock.icon }}</mat-icon>\n                    <span *ngIf=\"contentBlock.label\">{{ contentBlock.label | translate }}</span>\n                </ng-template>\n\n                <ng-container *ngTemplateOutlet=\"contentBlock.content\"></ng-container>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-template>\n\n    <ng-template #singleLayout>\n        <ng-content select=\"[info-drawer-content]\"></ng-content>\n    </ng-template>\n</adf-info-drawer-layout>\n",
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-info-drawer' },
                styles: [".adf-info-drawer{display:block}.adf-info-drawer .mat-tab-label{min-width:0}.adf-info-drawer .adf-info-drawer-layout-content{padding:0}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs){padding:10px}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs)>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>:last-child{margin-bottom:0}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label{flex-grow:1}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label .mat-icon+span{padding-left:5px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-ink-bar{height:4px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body{padding:10px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content{overflow:initial}"]
            },] }
];
InfoDrawerComponent.propDecorators = {
    title: [{ type: Input }],
    selectedIndex: [{ type: Input }],
    showHeader: [{ type: Input }],
    currentTab: [{ type: Output }],
    contentBlocks: [{ type: ContentChildren, args: [InfoDrawerTabComponent,] }],
    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],
    onKeyUp: [{ type: HostListener, args: ['keyup', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mby1kcmF3ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS8iLCJzb3VyY2VzIjpbImluZm8tZHJhd2VyL2luZm8tZHJhd2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPNUosTUFBTSxPQUFPLHNCQUFzQjtJQUxuQztRQVFJLFVBQUssR0FBVyxFQUFFLENBQUM7UUFJbkIsU0FBSSxHQUFXLElBQUksQ0FBQztJQUl4QixDQUFDOzs7WUFoQkEsU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLFFBQVEsRUFBRSxzREFBc0Q7Z0JBQ2hFLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2FBQ3hDOzs7b0JBR0ksS0FBSzttQkFJTCxLQUFLO3NCQUdMLFNBQVMsU0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOztBQVc1QyxNQUFNLE9BQU8sbUJBQW1CO0lBUGhDO1FBVUksVUFBSyxHQUFnQixJQUFJLENBQUM7UUFJMUIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFJMUIsZUFBVSxHQUFZLElBQUksQ0FBQztRQUkzQixlQUFVLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7SUFzQmxFLENBQUM7SUFoQkcsU0FBUyxDQUFDLEtBQW9CO1FBQzFCLEtBQUssQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFHRCxPQUFPLENBQUMsS0FBb0I7UUFDeEIsS0FBSyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7SUFDOUIsQ0FBQztJQUVELGFBQWE7UUFDVCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQXdCO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QyxDQUFDOzs7WUEzQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLDAzQ0FBMkM7Z0JBRTNDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dCQUNyQyxJQUFJLEVBQUUsRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUU7O2FBQ3ZDOzs7b0JBR0ksS0FBSzs0QkFJTCxLQUFLO3lCQUlMLEtBQUs7eUJBSUwsTUFBTTs0QkFHTixlQUFlLFNBQUMsc0JBQXNCO3dCQUd0QyxZQUFZLFNBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDO3NCQUtsQyxZQUFZLFNBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGRyZW4sIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyLCBJbnB1dCwgT3V0cHV0LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRUYWJDaGFuZ2VFdmVudCB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3RhYnMnO1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtaW5mby1kcmF3ZXItdGFiJyxcbiAgICB0ZW1wbGF0ZTogJzxuZy10ZW1wbGF0ZT48bmctY29udGVudD48L25nLWNvbnRlbnQ+PC9uZy10ZW1wbGF0ZT4nLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgSW5mb0RyYXdlclRhYkNvbXBvbmVudCB7XG4gICAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgdGFiIChzdHJpbmcgb3IgdHJhbnNsYXRpb24ga2V5KS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGxhYmVsOiBzdHJpbmcgPSAnJztcblxuICAgIC8qKiBJY29uIHRvIHJlbmRlciBmb3IgdGhlIHRhYi4gKi9cbiAgICBASW5wdXQoKVxuICAgIGljb246IHN0cmluZyA9IG51bGw7XG5cbiAgICBAVmlld0NoaWxkKFRlbXBsYXRlUmVmLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICAgIGNvbnRlbnQ6IFRlbXBsYXRlUmVmPGFueT47XG59XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWluZm8tZHJhd2VyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vaW5mby1kcmF3ZXIuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2luZm8tZHJhd2VyLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7ICdjbGFzcyc6ICdhZGYtaW5mby1kcmF3ZXInIH1cbn0pXG5leHBvcnQgY2xhc3MgSW5mb0RyYXdlckNvbXBvbmVudCB7XG4gICAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgaW5mbyBkcmF3ZXIgKHN0cmluZyBvciB0cmFuc2xhdGlvbiBrZXkpLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdGl0bGU6IHN0cmluZ3xudWxsID0gbnVsbDtcblxuICAgIC8qKiBUaGUgc2VsZWN0ZWQgaW5kZXggdGFiLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2VsZWN0ZWRJbmRleDogbnVtYmVyID0gMDtcblxuICAgIC8qKiBUaGUgdmlzaWJpbGl0eSBvZiB0aGUgaGVhZGVyLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2hvd0hlYWRlcjogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBjdXJyZW50bHkgYWN0aXZlIHRhYiBjaGFuZ2VzLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGN1cnJlbnRUYWI6IEV2ZW50RW1pdHRlcjxudW1iZXI+ID0gbmV3IEV2ZW50RW1pdHRlcjxudW1iZXI+KCk7XG5cbiAgICBAQ29udGVudENoaWxkcmVuKEluZm9EcmF3ZXJUYWJDb21wb25lbnQpXG4gICAgY29udGVudEJsb2NrczogUXVlcnlMaXN0PEluZm9EcmF3ZXJUYWJDb21wb25lbnQ+O1xuXG4gICAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bicsIFsnJGV2ZW50J10pXG4gICAgb25LZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgICAgIGV2ZW50LmNhbmNlbEJ1YmJsZSA9IHRydWU7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcigna2V5dXAnLCBbJyRldmVudCddKVxuICAgIG9uS2V5VXAoZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICAgICAgZXZlbnQuY2FuY2VsQnViYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBzaG93VGFiTGF5b3V0KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50QmxvY2tzLmxlbmd0aCA+IDA7XG4gICAgfVxuXG4gICAgb25UYWJDaGFuZ2UoZXZlbnQ6IE1hdFRhYkNoYW5nZUV2ZW50KSB7XG4gICAgICAgIHRoaXMuY3VycmVudFRhYi5lbWl0KGV2ZW50LmluZGV4KTtcbiAgICB9XG59XG4iXX0=