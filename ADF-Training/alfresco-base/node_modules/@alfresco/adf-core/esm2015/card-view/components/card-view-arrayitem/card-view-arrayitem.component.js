/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { CardViewUpdateService } from '../../services/card-view-update.service';
import { BaseCardView } from '../base-card-view';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/card-view-update.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/material/menu';
import * as ɵngcc4 from '@angular/material/card';
import * as ɵngcc5 from '@angular/material/chips';
import * as ɵngcc6 from '@angular/material/icon';
import * as ɵngcc7 from '@angular/material/button';
import * as ɵngcc8 from '@ngx-translate/core';

function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_mat_chip_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r13 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r13.icon);
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_mat_chip_1_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 12);
    ɵngcc0.ɵɵlistener("click", function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_mat_chip_1_Template_mat_chip_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(4); return ctx_r16.clicked(); });
    ɵngcc0.ɵɵtemplate(1, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_mat_chip_1_mat_icon_1_Template, 2, 1, "mat-icon", 13);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r13 = ctx.$implicit;
    ɵngcc0.ɵɵattribute("data-automation-id", "card-arrayitem-chip-" + item_r13.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r13 == null ? null : item_r13.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r13 == null ? null : item_r13.value);
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_mat_chip_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 15);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const items_r4 = ɵngcc0.ɵɵnextContext(3).ngIf;
    const _r6 = ɵngcc0.ɵɵreference(3);
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r6);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2("", items_r4.length - ctx_r12.displayCount(), " ", ɵngcc0.ɵɵpipeBind1(3, 3, "CORE.CARDVIEW.MORE"), "");
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_mat_chip_1_Template, 4, 3, "mat-chip", 8);
    ɵngcc0.ɵɵtemplate(2, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_mat_chip_2_Template, 4, 5, "mat-chip", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const items_r4 = ɵngcc0.ɵɵnextContext(2).ngIf;
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", items_r4.slice(0, ctx_r8.displayCount()));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", items_r4.length > ctx_r8.displayCount());
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_template_2_mat_chip_0_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r21 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r21.icon);
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_template_2_mat_chip_0_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 12);
    ɵngcc0.ɵɵlistener("click", function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_template_2_mat_chip_0_Template_mat_chip_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(4); return ctx_r24.clicked(); });
    ɵngcc0.ɵɵtemplate(1, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_template_2_mat_chip_0_mat_icon_1_Template, 2, 1, "mat-icon", 13);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r21 = ctx.$implicit;
    ɵngcc0.ɵɵattribute("data-automation-id", "card-arrayitem-chip-" + item_r21.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r21 == null ? null : item_r21.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r21 == null ? null : item_r21.value);
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_template_2_mat_chip_0_Template, 4, 3, "mat-chip", 8);
} if (rf & 2) {
    const items_r4 = ɵngcc0.ɵɵnextContext(2).ngIf;
    ɵngcc0.ɵɵproperty("ngForOf", items_r4);
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-chip-list", 9);
    ɵngcc0.ɵɵtemplate(1, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_container_1_Template, 3, 2, "ng-container", 2);
    ɵngcc0.ɵɵtemplate(2, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_ng_template_2_Template, 1, 1, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r9 = ɵngcc0.ɵɵreference(3);
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.displayCount() > 0)("ngIfElse", _r9);
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_7_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r27.icon);
} }
function CardViewArrayItemComponent_ng_container_4_mat_chip_7_Template(rf, ctx) { if (rf & 1) {
    const _r31 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 12);
    ɵngcc0.ɵɵlistener("click", function CardViewArrayItemComponent_ng_container_4_mat_chip_7_Template_mat_chip_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r31); const ctx_r30 = ɵngcc0.ɵɵnextContext(2); return ctx_r30.clicked(); });
    ɵngcc0.ɵɵtemplate(1, CardViewArrayItemComponent_ng_container_4_mat_chip_7_mat_icon_1_Template, 2, 1, "mat-icon", 13);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ctx.$implicit;
    ɵngcc0.ɵɵattribute("data-automation-id", "card-arrayitem-chip-" + item_r27.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r27 == null ? null : item_r27.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r27 == null ? null : item_r27.value);
} }
function CardViewArrayItemComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CardViewArrayItemComponent_ng_container_4_mat_chip_list_1_Template, 4, 2, "mat-chip-list", 5);
    ɵngcc0.ɵɵelementStart(2, "mat-menu", null, 6);
    ɵngcc0.ɵɵelementStart(4, "mat-card", 7);
    ɵngcc0.ɵɵelementStart(5, "mat-card-content");
    ɵngcc0.ɵɵelementStart(6, "mat-chip-list");
    ɵngcc0.ɵɵtemplate(7, CardViewArrayItemComponent_ng_container_4_mat_chip_7_Template, 4, 3, "mat-chip", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const items_r4 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    const _r1 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", items_r4.length > 0)("ngIfElse", _r1);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngForOf", items_r4.slice(ctx_r0.displayCount(), items_r4.length));
} }
function CardViewArrayItemComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r2.property == null ? null : ctx_r2.property.default));
} }
function CardViewArrayItemComponent_button_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon", 14);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 4, "CORE.METADATA.ACTIONS.EDIT"))("title", ɵngcc0.ɵɵpipeBind1(2, 6, "CORE.METADATA.ACTIONS.EDIT"))("data-automation-id", "card-array-item-clickable-icon-" + ctx_r3.property.key);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.property.icon);
} }
export class CardViewArrayItemComponent extends BaseCardView {
    constructor(cardViewUpdateService) {
        super(cardViewUpdateService);
    }
    clicked() {
        if (this.isClickable()) {
            this.cardViewUpdateService.clicked(this.property);
        }
    }
    showClickableIcon() {
        return this.hasIcon() && this.isClickable();
    }
    hasIcon() {
        return !!this.property.icon;
    }
    displayCount() {
        return this.property.noOfItemsToDisplay ? this.property.noOfItemsToDisplay : 0;
    }
    isClickable() {
        return !!this.property.clickable;
    }
}
CardViewArrayItemComponent.ɵfac = function CardViewArrayItemComponent_Factory(t) { return new (t || CardViewArrayItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CardViewUpdateService)); };
CardViewArrayItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardViewArrayItemComponent, selectors: [["adf-card-view-arrayitem"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 9, consts: [[1, "adf-property-label"], [1, "adf-property-value", "adf-card-view-array-item-container", 3, "click"], [4, "ngIf", "ngIfElse"], ["elseEmptyValueBlock", ""], ["mat-icon-button", "", "class", "adf-array-item-action", 4, "ngIf"], ["data-automation-id", "card-arrayitem-chip-list-container", 4, "ngIf", "ngIfElse"], ["menu", "matMenu"], [1, "adf-array-item-more-chip-container"], [3, "click", 4, "ngFor", "ngForOf"], ["data-automation-id", "card-arrayitem-chip-list-container"], ["withOutDisplayCount", ""], ["data-automation-id", "card-arrayitem-more-chip", 3, "matMenuTriggerFor", 4, "ngIf"], [3, "click"], ["class", "adf-array-item-icon", 4, "ngIf"], [1, "adf-array-item-icon"], ["data-automation-id", "card-arrayitem-more-chip", 3, "matMenuTriggerFor"], ["data-automation-id", "card-arrayitem-default", 1, "adf-card-array-item-default"], ["mat-icon-button", "", 1, "adf-array-item-action"]], template: function CardViewArrayItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵlistener("click", function CardViewArrayItemComponent_Template_div_click_3_listener() { return ctx.clicked(); });
        ɵngcc0.ɵɵtemplate(4, CardViewArrayItemComponent_ng_container_4_Template, 8, 3, "ng-container", 2);
        ɵngcc0.ɵɵpipe(5, "async");
        ɵngcc0.ɵɵtemplate(6, CardViewArrayItemComponent_ng_template_6_Template, 3, 3, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, CardViewArrayItemComponent_button_8_Template, 5, 8, "button", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(7);
        ɵngcc0.ɵɵattribute("data-automation-id", "card-array-label-" + ctx.property.key);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 5, ctx.property.label));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(5, 7, ctx.property.displayValue))("ngIfElse", _r1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showClickableIcon());
    } }, directives: [ɵngcc2.NgIf, ɵngcc3._MatMenu, ɵngcc4.MatCard, ɵngcc4.MatCardContent, ɵngcc5.MatChipList, ɵngcc2.NgForOf, ɵngcc5.MatChip, ɵngcc6.MatIcon, ɵngcc3.MatMenuTrigger, ɵngcc7.MatButton], pipes: [ɵngcc8.TranslatePipe, ɵngcc2.AsyncPipe], styles: [".adf-array-item-icon{font-size:16px;padding-top:8px}.adf-array-item-action{color:var(--adf-card-view-text-color)}.adf-array-item-action:focus,.adf-array-item-action:hover{color:var(--theme-text-fg-color)}.adf-card-array-item-default{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.adf-array-item-more-chip-container.mat-card{box-shadow:none;max-height:300px;overflow-y:auto}.adf-array-item-more-chip-container .mat-chip{cursor:pointer}.adf-property-value .mat-chip-list{cursor:pointer;padding-top:6px;width:100%}.adf-property-value .mat-chip{cursor:pointer}.adf-card-view-array-item-container{align-items:center;box-sizing:border-box;display:flex;flex-direction:row;place-content:center space-between}"], encapsulation: 2 });
CardViewArrayItemComponent.ctorParameters = () => [
    { type: CardViewUpdateService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CardViewArrayItemComponent, [{
        type: Component,
        args: [{
                selector: 'adf-card-view-arrayitem',
                template: "<div [attr.data-automation-id]=\"'card-array-label-' + property.key\" class=\"adf-property-label\">{{ property.label | translate }}</div>\n<div class=\"adf-property-value adf-card-view-array-item-container\" (click)=\"clicked()\">\n    <ng-container *ngIf=\"(property.displayValue | async) as items; else elseEmptyValueBlock\">\n        <mat-chip-list *ngIf=\"items.length > 0; else elseEmptyValueBlock\" data-automation-id=\"card-arrayitem-chip-list-container\">\n            <ng-container *ngIf=\"displayCount() > 0; else withOutDisplayCount\" >\n                <mat-chip\n                    *ngFor=\"let item of items.slice(0, displayCount())\"\n                    (click)=\"clicked()\"\n                    [attr.data-automation-id]=\"'card-arrayitem-chip-' + item.value\">\n                    <mat-icon *ngIf=\"item?.icon\" class=\"adf-array-item-icon\">{{item.icon}}</mat-icon>\n                    <span>{{item?.value}}</span>\n                </mat-chip>\n                <mat-chip\n                    *ngIf=\"items.length > displayCount()\"\n                    data-automation-id=\"card-arrayitem-more-chip\"\n                    [matMenuTriggerFor]=\"menu\">\n                    <span>{{items.length - displayCount()}} {{'CORE.CARDVIEW.MORE' | translate}}</span>\n                </mat-chip>\n            </ng-container>\n            <ng-template #withOutDisplayCount>\n                <mat-chip\n                    *ngFor=\"let item of items\"\n                    (click)=\"clicked()\"\n                    [attr.data-automation-id]=\"'card-arrayitem-chip-' + item.value\">\n                    <mat-icon *ngIf=\"item?.icon\" class=\"adf-array-item-icon\">{{item.icon}}</mat-icon>\n                    <span>{{item?.value}}</span>\n                </mat-chip>\n            </ng-template>\n        </mat-chip-list>\n        <mat-menu #menu=\"matMenu\">\n            <mat-card class=\"adf-array-item-more-chip-container\">\n                <mat-card-content>\n                    <mat-chip-list>\n                        <mat-chip (click)=\"clicked()\"\n                            *ngFor=\"let item of items.slice(displayCount(), items.length)\"\n                            [attr.data-automation-id]=\"'card-arrayitem-chip-' + item.value\">\n                        <mat-icon *ngIf=\"item?.icon\" class=\"adf-array-item-icon\">{{item.icon}}</mat-icon>\n                        <span>{{item?.value}}</span>\n                        </mat-chip>\n                    </mat-chip-list>\n                </mat-card-content>\n            </mat-card>\n        </mat-menu>\n    </ng-container>\n    <ng-template #elseEmptyValueBlock>\n        <span class=\"adf-card-array-item-default\" data-automation-id=\"card-arrayitem-default\">{{ property?.default | translate }}</span>\n    </ng-template>\n    <button mat-icon-button *ngIf=\"showClickableIcon()\"\n        class=\"adf-array-item-action\"\n        [attr.aria-label]=\"'CORE.METADATA.ACTIONS.EDIT' | translate\"\n        [attr.title]=\"'CORE.METADATA.ACTIONS.EDIT' | translate\"\n        [attr.data-automation-id]=\"'card-array-item-clickable-icon-' + property.key\">\n        <mat-icon class=\"adf-array-item-icon\">{{property.icon}}</mat-icon>\n    </button>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-array-item-icon{font-size:16px;padding-top:8px}.adf-array-item-action{color:var(--adf-card-view-text-color)}.adf-array-item-action:focus,.adf-array-item-action:hover{color:var(--theme-text-fg-color)}.adf-card-array-item-default{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.adf-array-item-more-chip-container.mat-card{box-shadow:none;max-height:300px;overflow-y:auto}.adf-array-item-more-chip-container .mat-chip{cursor:pointer}.adf-property-value .mat-chip-list{cursor:pointer;padding-top:6px;width:100%}.adf-property-value .mat-chip{cursor:pointer}.adf-card-view-array-item-container{align-items:center;box-sizing:border-box;display:flex;flex-direction:row;place-content:center space-between}"]
            }]
    }], function () { return [{ type: ɵngcc1.CardViewUpdateService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12aWV3LWFycmF5aXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlL2NhcmQtdmlldy9jb21wb25lbnRzL2NhcmQtdmlldy1hcnJheWl0ZW0vY2FyZC12aWV3LWFycmF5aXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDaEYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRakQsTUFBTSxPQUFPLDBCQUEyQixTQUFRLFlBQW9DO0FBQ3BGLElBQ0ksWUFBWSxxQkFBNEM7QUFDNUQsUUFBUSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUNyQyxJQUFJLENBQUM7QUFDTCxJQUNJLE9BQU87QUFBSyxRQUNSLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFO0FBQ2hDLFlBQVksSUFBSSxDQUFDLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDOUQsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ0ksaUJBQWlCO0FBQUssUUFDbEIsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3BELElBQUksQ0FBQztBQUNMLElBQ0ksT0FBTztBQUFLLFFBQ1IsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7QUFDcEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxZQUFZO0FBQUssUUFDYixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RixJQUFJLENBQUM7QUFDTCxJQUNJLFdBQVc7QUFBSyxRQUNaLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDO0FBQ3pDLElBQUksQ0FBQztBQUNMO3NEQWpDQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLHlCQUF5QixrQkFDbkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eXlCQUFtRCxrQkFFbkQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksa0pBRWxDO0FBQUM7QUFBb0QsWUFUakQscUJBQXFCO0FBQUc7Ozs7O2dXQVFoQzs7OztzRkFSa0M7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcmRWaWV3QXJyYXlJdGVtTW9kZWwgfSBmcm9tICcuLi8uLi9tb2RlbHMvY2FyZC12aWV3LWFycmF5aXRlbS5tb2RlbCc7XG5pbXBvcnQgeyBDYXJkVmlld1VwZGF0ZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9jYXJkLXZpZXctdXBkYXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmFzZUNhcmRWaWV3IH0gZnJvbSAnLi4vYmFzZS1jYXJkLXZpZXcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhZGYtY2FyZC12aWV3LWFycmF5aXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9jYXJkLXZpZXctYXJyYXlpdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY2FyZC12aWV3LWFycmF5aXRlbS5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIENhcmRWaWV3QXJyYXlJdGVtQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNhcmRWaWV3PENhcmRWaWV3QXJyYXlJdGVtTW9kZWw+IHtcblxuICAgIGNvbnN0cnVjdG9yKGNhcmRWaWV3VXBkYXRlU2VydmljZTogQ2FyZFZpZXdVcGRhdGVTZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKGNhcmRWaWV3VXBkYXRlU2VydmljZSk7XG4gICAgfVxuXG4gICAgY2xpY2tlZCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuaXNDbGlja2FibGUoKSkge1xuICAgICAgICAgICAgdGhpcy5jYXJkVmlld1VwZGF0ZVNlcnZpY2UuY2xpY2tlZCh0aGlzLnByb3BlcnR5KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNob3dDbGlja2FibGVJY29uKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5oYXNJY29uKCkgJiYgdGhpcy5pc0NsaWNrYWJsZSgpO1xuICAgIH1cblxuICAgIGhhc0ljb24oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXRoaXMucHJvcGVydHkuaWNvbjtcbiAgICB9XG5cbiAgICBkaXNwbGF5Q291bnQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcGVydHkubm9PZkl0ZW1zVG9EaXNwbGF5ID8gdGhpcy5wcm9wZXJ0eS5ub09mSXRlbXNUb0Rpc3BsYXkgOiAwO1xuICAgIH1cblxuICAgIGlzQ2xpY2thYmxlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gISF0aGlzLnByb3BlcnR5LmNsaWNrYWJsZTtcbiAgICB9XG59XG4iXX0=