/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { DEFAULT_SEPARATOR } from '../card-view-textitem/card-view-textitem.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../card-view-item-dispatcher/card-view-item-dispatcher.component';

function CardViewComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelement(2, "adf-card-view-item-dispatcher", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const property_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("data-automation-id", "header-" + property_r1.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("property", property_r1)("editable", ctx_r0.editable)("displayEmpty", ctx_r0.displayEmpty)("displayNoneOption", property_r1["displayNoneOption"] !== undefined ? property_r1["displayNoneOption"] : ctx_r0.displayNoneOption)("displayClearAction", ctx_r0.displayClearAction)("copyToClipboardAction", ctx_r0.copyToClipboardAction)("useChipsForMultiValueProperty", ctx_r0.useChipsForMultiValueProperty)("multiValueSeparator", ctx_r0.multiValueSeparator);
} }
export class CardViewComponent {
    constructor() {
        this.displayEmpty = true;
        this.displayNoneOption = true;
        this.displayClearAction = true;
        this.copyToClipboardAction = true;
        this.useChipsForMultiValueProperty = true;
        this.multiValueSeparator = DEFAULT_SEPARATOR;
    }
}
CardViewComponent.ɵfac = function CardViewComponent_Factory(t) { return new (t || CardViewComponent)(); };
CardViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardViewComponent, selectors: [["adf-card-view"]], inputs: { displayEmpty: "displayEmpty", displayNoneOption: "displayNoneOption", displayClearAction: "displayClearAction", copyToClipboardAction: "copyToClipboardAction", useChipsForMultiValueProperty: "useChipsForMultiValueProperty", multiValueSeparator: "multiValueSeparator", properties: "properties", editable: "editable" }, decls: 2, vars: 1, consts: [[1, "adf-property-list"], [4, "ngFor", "ngForOf"], [1, "adf-property"], [3, "property", "editable", "displayEmpty", "displayNoneOption", "displayClearAction", "copyToClipboardAction", "useChipsForMultiValueProperty", "multiValueSeparator"]], template: function CardViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, CardViewComponent_div_1_Template, 3, 9, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.properties);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.CardViewItemDispatcherComponent], styles: [".adf-property-list .adf-property{margin-bottom:20px}.adf-property-list .adf-property .adf-property-value-padding-top{margin-top:6px}.adf-property-list .adf-property .adf-property-field{margin-bottom:-25px;width:100%}.adf-property-list .adf-property .adf-property-field .mat-form-field-infix{border-top-width:0}.adf-property-list .adf-property .adf-property-field .mat-form-field-label{margin-top:6px}.adf-property-list .adf-property .adf-property-field .adf-property-read-only .mat-form-field-underline,.adf-property-list .adf-property .adf-property-read-only .mat-form-field-underline{display:none}.adf-property-list .adf-property .adf-property-label{color:var(--theme-text-color);font-size:12px;word-wrap:break-word}.adf-property-list .adf-property .adf-property-value,.adf-property-list .adf-property .mat-form-field-label{color:var(--theme-text-bold-color);font-size:14px}"], encapsulation: 2 });
CardViewComponent.propDecorators = {
    properties: [{ type: Input }],
    editable: [{ type: Input }],
    displayEmpty: [{ type: Input }],
    displayNoneOption: [{ type: Input }],
    displayClearAction: [{ type: Input }],
    copyToClipboardAction: [{ type: Input }],
    useChipsForMultiValueProperty: [{ type: Input }],
    multiValueSeparator: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CardViewComponent, [{
        type: Component,
        args: [{
                selector: 'adf-card-view',
                template: "<div class=\"adf-property-list\">\n    <div *ngFor=\"let property of properties\">\n        <div [attr.data-automation-id]=\"'header-'+property.key\" class=\"adf-property\">\n            <adf-card-view-item-dispatcher\n                [property]=\"property\"\n                [editable]=\"editable\"\n                [displayEmpty]=\"displayEmpty\"\n                [displayNoneOption]=\"property['displayNoneOption'] !== undefined ? property['displayNoneOption'] : displayNoneOption\"\n                [displayClearAction]=\"displayClearAction\"\n                [copyToClipboardAction]=\"copyToClipboardAction\"\n                [useChipsForMultiValueProperty]=\"useChipsForMultiValueProperty\"\n                [multiValueSeparator]=\"multiValueSeparator\">\n            </adf-card-view-item-dispatcher>\n        </div>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-property-list .adf-property{margin-bottom:20px}.adf-property-list .adf-property .adf-property-value-padding-top{margin-top:6px}.adf-property-list .adf-property .adf-property-field{margin-bottom:-25px;width:100%}.adf-property-list .adf-property .adf-property-field .mat-form-field-infix{border-top-width:0}.adf-property-list .adf-property .adf-property-field .mat-form-field-label{margin-top:6px}.adf-property-list .adf-property .adf-property-field .adf-property-read-only .mat-form-field-underline,.adf-property-list .adf-property .adf-property-read-only .mat-form-field-underline{display:none}.adf-property-list .adf-property .adf-property-label{color:var(--theme-text-color);font-size:12px;word-wrap:break-word}.adf-property-list .adf-property .adf-property-value,.adf-property-list .adf-property .mat-form-field-label{color:var(--theme-text-bold-color);font-size:14px}"]
            }]
    }], function () { return []; }, { displayEmpty: [{
            type: Input
        }], displayNoneOption: [{
            type: Input
        }], displayClearAction: [{
            type: Input
        }], copyToClipboardAction: [{
            type: Input
        }], useChipsForMultiValueProperty: [{
            type: Input
        }], multiValueSeparator: [{
            type: Input
        }], properties: [{
            type: Input
        }], editable: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvY2FyZC12aWV3L2NvbXBvbmVudHMvY2FyZC12aWV3L2NhcmQtdmlldy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXBFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9EQUFvRCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUXZGLE1BQU0sT0FBTyxpQkFBaUI7QUFDOUIsSUFQQTtBQUNHLFFBZ0JDLGlCQUFZLEdBQVksSUFBSSxDQUFDO0FBQ2pDLFFBR0ksc0JBQWlCLEdBQVksSUFBSSxDQUFDO0FBQ3RDLFFBR0ksdUJBQWtCLEdBQVksSUFBSSxDQUFDO0FBQ3ZDLFFBR0ksMEJBQXFCLEdBQVksSUFBSSxDQUFDO0FBQzFDLFFBR0ksa0NBQTZCLEdBQVksSUFBSSxDQUFDO0FBQ2xELFFBR0ksd0JBQW1CLEdBQVcsaUJBQWlCLENBQUM7QUFDcEQsSUFBQSxDQUFDO0FBQ0Q7NkNBdkNDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsZUFBZTtpQkFDekI7O21EQUF5QyxrQkFFekM7RUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Ozs7NHlCQUN4QyxpTEFDSTtBQUFDO0FBQ0kseUJBQ0wsS0FBSztBQUNSLHVCQUdHLEtBQUs7QUFDUiwyQkFHRyxLQUFLO0FBQ1IsZ0NBR0csS0FBSztBQUNSLGlDQUdHLEtBQUs7QUFDUixvQ0FHRyxLQUFLO0FBQ1IsNENBR0csS0FBSztBQUNSLGtDQUdHLEtBQUs7QUFDVDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcmRWaWV3SXRlbSB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvY2FyZC12aWV3LWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IERFRkFVTFRfU0VQQVJBVE9SIH0gZnJvbSAnLi4vY2FyZC12aWV3LXRleHRpdGVtL2NhcmQtdmlldy10ZXh0aXRlbS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1jYXJkLXZpZXcnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9jYXJkLXZpZXcuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2NhcmQtdmlldy5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgQ2FyZFZpZXdDb21wb25lbnQge1xuICAgIC8qKiAoKipyZXF1aXJlZCoqKSBJdGVtcyB0byBzaG93IGluIHRoZSBjYXJkIHZpZXcuICovXG4gICAgQElucHV0KClcbiAgICBwcm9wZXJ0aWVzOiBDYXJkVmlld0l0ZW0gW107XG5cbiAgICAvKiogVG9nZ2xlcyB3aGV0aGVyIG9yIG5vdCB0aGUgaXRlbXMgY2FuIGJlIGVkaXRlZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGVkaXRhYmxlOiBib29sZWFuO1xuXG4gICAgLyoqIFRvZ2dsZXMgd2hldGhlciBvciBub3QgdG8gc2hvdyBlbXB0eSBpdGVtcyBpbiBub24tZWRpdGFibGUgbW9kZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGRpc3BsYXlFbXB0eTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogVG9nZ2xlcyB3aGV0aGVyIG9yIG5vdCB0byBkaXNwbGF5IG5vbmUgb3B0aW9uLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgZGlzcGxheU5vbmVPcHRpb246IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFRvZ2dsZXMgd2hldGhlciBvciBub3QgdG8gZGlzcGxheSBjbGVhciBhY3Rpb24uICovXG4gICAgQElucHV0KClcbiAgICBkaXNwbGF5Q2xlYXJBY3Rpb246IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFRvZ2dsZXMgd2hldGhlciBvciBub3QgdG8gZW5hYmxlIGNvcHkgdG8gY2xpcGJvYXJkIGFjdGlvbi4gKi9cbiAgICBASW5wdXQoKVxuICAgIGNvcHlUb0NsaXBib2FyZEFjdGlvbjogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogVG9nZ2xlcyB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgY2hpcHMgZm9yIG11bHRpdmFsdWVkIHByb3BlcnRpZXMuICovXG4gICAgQElucHV0KClcbiAgICB1c2VDaGlwc0Zvck11bHRpVmFsdWVQcm9wZXJ0eTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogU3RyaW5nIHNlcGFyYXRvciBiZXR3ZWVuIG11bHRpLXZhbHVlIHByb3BlcnR5IGl0ZW1zLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgbXVsdGlWYWx1ZVNlcGFyYXRvcjogc3RyaW5nID0gREVGQVVMVF9TRVBBUkFUT1I7XG59XG4iXX0=