/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input } from '@angular/core';
import { CardViewUpdateService } from '../../services/card-view-update.service';
import { BaseCardView } from '../base-card-view';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/card-view-update.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/material/checkbox';
import * as ɵngcc4 from '@ngx-translate/core';

function CardViewBoolItemComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "mat-checkbox", 2);
    ɵngcc0.ɵɵlistener("change", function CardViewBoolItemComponent_ng_container_0_Template_mat_checkbox_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.changed($event); });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "div", 3);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("checked", ctx_r0.property.displayValue)("disabled", !ctx_r0.isEditable());
    ɵngcc0.ɵɵattribute("data-automation-id", "card-boolean-" + ctx_r0.property.key)("title", ɵngcc0.ɵɵpipeBind1(3, 6, "CORE.METADATA.ACTIONS.TOGGLE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵattribute("data-automation-id", "card-boolean-label-" + ctx_r0.property.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 8, ctx_r0.property.label));
} }
export class CardViewBoolItemComponent extends BaseCardView {
    constructor(cardViewUpdateService) {
        super(cardViewUpdateService);
    }
    isEditable() {
        return this.editable && this.property.editable;
    }
    changed(change) {
        this.cardViewUpdateService.update(Object.assign({}, this.property), change.checked);
        this.property.value = change.checked;
    }
}
CardViewBoolItemComponent.ɵfac = function CardViewBoolItemComponent_Factory(t) { return new (t || CardViewBoolItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CardViewUpdateService)); };
CardViewBoolItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardViewBoolItemComponent, selectors: [["adf-card-view-boolitem"]], inputs: { editable: "editable" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[4, "ngIf"], [1, "adf-property-value"], ["color", "primary", 3, "checked", "disabled", "change"], [1, "adf-property-label"]], template: function CardViewBoolItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CardViewBoolItemComponent_ng_container_0_Template, 7, 10, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.property.isEmpty() || ctx.isEditable());
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.MatCheckbox], pipes: [ɵngcc4.TranslatePipe], encapsulation: 2 });
CardViewBoolItemComponent.ctorParameters = () => [
    { type: CardViewUpdateService }
];
CardViewBoolItemComponent.propDecorators = {
    editable: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CardViewBoolItemComponent, [{
        type: Component,
        args: [{
                selector: 'adf-card-view-boolitem',
                template: "<ng-container *ngIf=\"!property.isEmpty() || isEditable()\">\n    <div class=\"adf-property-value\">\n        <mat-checkbox [attr.data-automation-id]=\"'card-boolean-' + property.key\"\n                      [attr.title]=\"'CORE.METADATA.ACTIONS.TOGGLE' | translate\"\n                      [checked]=\"property.displayValue\"\n                      [disabled]=\"!isEditable()\"\n                      color=\"primary\"\n                      (change)=\"changed($event)\">\n            <div [attr.data-automation-id]=\"'card-boolean-label-' + property.key\"\n                 class=\"adf-property-label\">{{ property.label | translate }}</div>\n        </mat-checkbox>\n    </div>\n</ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc1.CardViewUpdateService }]; }, { editable: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12aWV3LWJvb2xpdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvY2FyZC12aWV3L2NvbXBvbmVudHMvY2FyZC12aWV3LWJvb2xpdGVtL2NhcmQtdmlldy1ib29saXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR2pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9qRCxNQUFNLE9BQU8seUJBQTBCLFNBQVEsWUFBbUM7QUFDbEYsSUFJSSxZQUFZLHFCQUE0QztBQUM1RCxRQUFRLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQ3JDLElBQUksQ0FBQztBQUNMLElBQ0ksVUFBVTtBQUNkLFFBQVEsT0FBTyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO0FBQ3ZELElBQUksQ0FBQztBQUNMLElBQ0ksT0FBTyxDQUFDLE1BQXlCO0FBQ3JDLFFBQVEsSUFBSSxDQUFDLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxrQkFBNkIsSUFBSSxDQUFDLFFBQVEsQ0FBRSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUUsQ0FBQztBQUN6RyxRQUFRLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFDN0MsSUFBSSxDQUFDO0FBQ0w7cURBdEJDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsd0JBQXdCLGtCQUNsQzs7Ozs7WUFBa0QsY0FDckQsaUZBRUc7QUFBQztBQUFtRCxZQVIvQyxxQkFBcUI7QUFBRztBQUFHO0FBQ3BDLHVCQVNLLEtBQUs7QUFDVDs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRDaGVja2JveENoYW5nZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NoZWNrYm94JztcbmltcG9ydCB7IENhcmRWaWV3Qm9vbEl0ZW1Nb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscy9jYXJkLXZpZXctYm9vbGl0ZW0ubW9kZWwnO1xuaW1wb3J0IHsgQ2FyZFZpZXdVcGRhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY2FyZC12aWV3LXVwZGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IEJhc2VDYXJkVmlldyB9IGZyb20gJy4uL2Jhc2UtY2FyZC12aWV3JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtY2FyZC12aWV3LWJvb2xpdGVtJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY2FyZC12aWV3LWJvb2xpdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcblxuZXhwb3J0IGNsYXNzIENhcmRWaWV3Qm9vbEl0ZW1Db21wb25lbnQgZXh0ZW5kcyBCYXNlQ2FyZFZpZXc8Q2FyZFZpZXdCb29sSXRlbU1vZGVsPiB7XG5cbiAgICBASW5wdXQoKVxuICAgIGVkaXRhYmxlOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IoY2FyZFZpZXdVcGRhdGVTZXJ2aWNlOiBDYXJkVmlld1VwZGF0ZVNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoY2FyZFZpZXdVcGRhdGVTZXJ2aWNlKTtcbiAgICB9XG5cbiAgICBpc0VkaXRhYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lZGl0YWJsZSAmJiB0aGlzLnByb3BlcnR5LmVkaXRhYmxlO1xuICAgIH1cblxuICAgIGNoYW5nZWQoY2hhbmdlOiBNYXRDaGVja2JveENoYW5nZSkge1xuICAgICAgICB0aGlzLmNhcmRWaWV3VXBkYXRlU2VydmljZS51cGRhdGUoPENhcmRWaWV3Qm9vbEl0ZW1Nb2RlbD4geyAuLi50aGlzLnByb3BlcnR5IH0sIGNoYW5nZS5jaGVja2VkICk7XG4gICAgICAgIHRoaXMucHJvcGVydHkudmFsdWUgPSBjaGFuZ2UuY2hlY2tlZDtcbiAgICB9XG59XG4iXX0=