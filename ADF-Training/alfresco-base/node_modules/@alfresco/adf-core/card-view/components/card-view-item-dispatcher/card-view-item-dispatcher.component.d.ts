/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ComponentFactoryResolver, OnChanges, SimpleChanges } from '@angular/core';
import { CardViewItem } from '../../interfaces/card-view-item.interface';
import { CardItemTypeService } from '../../services/card-item-types.service';
import * as ɵngcc0 from '@angular/core';
export declare class CardViewItemDispatcherComponent implements OnChanges {
    private cardItemTypeService;
    private resolver;
    property: CardViewItem;
    editable: boolean;
    displayEmpty: boolean;
    displayNoneOption: boolean;
    displayClearAction: boolean;
    copyToClipboardAction: boolean;
    useChipsForMultiValueProperty: boolean;
    multiValueSeparator: string;
    private content;
    private loaded;
    private componentReference;
    ngOnInit: any;
    ngDoCheck: any;
    constructor(cardItemTypeService: CardItemTypeService, resolver: ComponentFactoryResolver);
    ngOnChanges(changes: SimpleChanges): void;
    private loadComponent;
    private proxy;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CardViewItemDispatcherComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CardViewItemDispatcherComponent, "adf-card-view-item-dispatcher", never, { "displayEmpty": "displayEmpty"; "displayNoneOption": "displayNoneOption"; "displayClearAction": "displayClearAction"; "copyToClipboardAction": "copyToClipboardAction"; "useChipsForMultiValueProperty": "useChipsForMultiValueProperty"; "multiValueSeparator": "multiValueSeparator"; "property": "property"; "editable": "editable"; }, {}, never, never>;
}

//# sourceMappingURL=card-view-item-dispatcher.component.d.ts.map