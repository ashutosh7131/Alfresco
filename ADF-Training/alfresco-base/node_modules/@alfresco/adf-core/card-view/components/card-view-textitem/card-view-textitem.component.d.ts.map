{"version":3,"file":"card-view-textitem.component.d.ts","sources":["card-view-textitem.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { BaseCardView } from '../base-card-view';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ClipboardService } from '../../../clipboard/clipboard.service';\nimport { TranslationService } from '../../../services/translation.service';\nimport { CardViewItemValidator } from '../../interfaces/card-view-item-validator.interface';\nimport { FormControl } from '@angular/forms';\nexport declare const DEFAULT_SEPARATOR = \", \";\nexport declare class CardViewTextItemComponent extends BaseCardView<CardViewTextItemModel> implements OnChanges {\n    private clipboardService;\n    private translateService;\n    private cd;\n    editable: boolean;\n    displayEmpty: boolean;\n    copyToClipboardAction: boolean;\n    useChipsForMultiValueProperty: boolean;\n    multiValueSeparator: string;\n    editedValue: string | string[];\n    errors: CardViewItemValidator[];\n    templateType: string;\n    textInput: FormControl;\n    private onDestroy$;\n    constructor(cardViewUpdateService: CardViewUpdateService, clipboardService: ClipboardService, translateService: TranslationService, cd: ChangeDetectorRef);\n    ngOnChanges(changes: SimpleChanges): void;\n    private setTemplateType;\n    resetValue(): void;\n    private resetErrorMessages;\n    update(): void;\n    prepareValueForUpload(property: CardViewTextItemModel, value: string | string[]): string | string[];\n    removeValueFromList(itemIndex: number): void;\n    addValueToList(newListItem: MatChipInputEvent): void;\n    clicked(): void;\n    clearValue(): void;\n    copyToClipboard(valueToCopy: string): void;\n    ngOnDestroy(): void;\n    get showProperty(): boolean;\n    get showClickableIcon(): boolean;\n    get isEditable(): boolean;\n    get isClickable(): boolean;\n    get hasIcon(): boolean;\n    get hasErrors(): boolean;\n    get isChipViewEnabled(): boolean;\n}\n"]}