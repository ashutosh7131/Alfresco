/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';
import { CardViewTextItemModel } from '../../models/card-view-textitem.model';
import { CardViewUpdateService } from '../../services/card-view-update.service';
import { BaseCardView } from '../base-card-view';
import { MatChipInputEvent } from '@angular/material/chips';
import { ClipboardService } from '../../../clipboard/clipboard.service';
import { TranslationService } from '../../../services/translation.service';
import { CardViewItemValidator } from '../../interfaces/card-view-item-validator.interface';
import { FormControl } from '@angular/forms';
export declare const DEFAULT_SEPARATOR = ", ";
export declare class CardViewTextItemComponent extends BaseCardView<CardViewTextItemModel> implements OnChanges {
    private clipboardService;
    private translateService;
    private cd;
    editable: boolean;
    displayEmpty: boolean;
    copyToClipboardAction: boolean;
    useChipsForMultiValueProperty: boolean;
    multiValueSeparator: string;
    editedValue: string | string[];
    errors: CardViewItemValidator[];
    templateType: string;
    textInput: FormControl;
    private onDestroy$;
    constructor(cardViewUpdateService: CardViewUpdateService, clipboardService: ClipboardService, translateService: TranslationService, cd: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    private setTemplateType;
    resetValue(): void;
    private resetErrorMessages;
    update(): void;
    prepareValueForUpload(property: CardViewTextItemModel, value: string | string[]): string | string[];
    removeValueFromList(itemIndex: number): void;
    addValueToList(newListItem: MatChipInputEvent): void;
    clicked(): void;
    clearValue(): void;
    copyToClipboard(valueToCopy: string): void;
    ngOnDestroy(): void;
    get showProperty(): boolean;
    get showClickableIcon(): boolean;
    get isEditable(): boolean;
    get isClickable(): boolean;
    get hasIcon(): boolean;
    get hasErrors(): boolean;
    get isChipViewEnabled(): boolean;
}
