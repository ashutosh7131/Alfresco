/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnChanges, OnDestroy } from '@angular/core';
import { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';
import { CardViewUpdateService } from '../../services/card-view-update.service';
import { BehaviorSubject, Observable } from 'rxjs';
import { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';
import { MatSelectChange } from '@angular/material/select';
import { BaseCardView } from '../base-card-view';
import { AppConfigService } from '../../../app-config/app-config.service';
export declare class CardViewSelectItemComponent extends BaseCardView<CardViewSelectItemModel<string | number>> implements OnChanges, OnDestroy {
    private appConfig;
    static HIDE_FILTER_LIMIT: number;
    editable: boolean;
    options$: Observable<CardViewSelectItemOption<string | number>[]>;
    displayNoneOption: boolean;
    displayEmpty: boolean;
    value: string | number;
    filter$: BehaviorSubject<string>;
    showInputFilter: boolean;
    private onDestroy$;
    list$: Observable<CardViewSelectItemOption<string | number>[]>;
    constructor(cardViewUpdateService: CardViewUpdateService, appConfig: AppConfigService);
    ngOnChanges(): void;
    ngOnInit(): void;
    onFilterInputChange(value: string): void;
    isEditable(): boolean;
    getOptions(): Observable<CardViewSelectItemOption<string | number>[]>;
    getList(): Observable<CardViewSelectItemOption<string | number>[]>;
    onChange(event: MatSelectChange): void;
    showNoneOption(): boolean;
    get showProperty(): boolean;
    ngOnDestroy(): void;
    private get optionsLimit();
}
