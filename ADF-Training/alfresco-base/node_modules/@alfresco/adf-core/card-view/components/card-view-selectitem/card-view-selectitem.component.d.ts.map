{"version":3,"file":"card-view-selectitem.component.d.ts","sources":["card-view-selectitem.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnChanges, OnDestroy } from '@angular/core';\nimport { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';\nimport { MatSelectChange } from '@angular/material/select';\nimport { BaseCardView } from '../base-card-view';\nimport { AppConfigService } from '../../../app-config/app-config.service';\nexport declare class CardViewSelectItemComponent extends BaseCardView<CardViewSelectItemModel<string | number>> implements OnChanges, OnDestroy {\n    private appConfig;\n    static HIDE_FILTER_LIMIT: number;\n    editable: boolean;\n    options$: Observable<CardViewSelectItemOption<string | number>[]>;\n    displayNoneOption: boolean;\n    displayEmpty: boolean;\n    value: string | number;\n    filter$: BehaviorSubject<string>;\n    showInputFilter: boolean;\n    private onDestroy$;\n    list$: Observable<CardViewSelectItemOption<string | number>[]>;\n    constructor(cardViewUpdateService: CardViewUpdateService, appConfig: AppConfigService);\n    ngOnChanges(): void;\n    ngOnInit(): void;\n    onFilterInputChange(value: string): void;\n    isEditable(): boolean;\n    getOptions(): Observable<CardViewSelectItemOption<string | number>[]>;\n    getList(): Observable<CardViewSelectItemOption<string | number>[]>;\n    onChange(event: MatSelectChange): void;\n    showNoneOption(): boolean;\n    get showProperty(): boolean;\n    ngOnDestroy(): void;\n    private get optionsLimit();\n}\n"]}