{"version":3,"file":"content-node-dialog.service.d.ts","sources":["content-node-dialog.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventEmitter } from '@angular/core';\nimport { ContentService, ThumbnailService, SitesService, TranslationService } from '@alfresco/adf-core';\nimport { Subject, Observable } from 'rxjs';\nimport { Node } from '@alfresco/js-api';\nimport { DocumentListService } from '../document-list/services/document-list.service';\nimport { NodeAction } from '../document-list/models/node-action.enum';\nexport declare class ContentNodeDialogService {\n    private dialog;\n    private contentService;\n    private documentListService;\n    private siteService;\n    private translation;\n    private thumbnailService;\n    static nonDocumentSiteContent: string[];\n    error: EventEmitter<any>;\n    constructor(dialog: MatDialog, contentService: ContentService, documentListService: DocumentListService, siteService: SitesService, translation: TranslationService, thumbnailService: ThumbnailService);\n    openFileBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]>;\n    openLockNodeDialog(contentEntry: Node): Subject<string>;\n    openFileBrowseDialogBySite(): Observable<Node[]>;\n    openFileBrowseDialogByDefaultLocation(): Observable<Node[]>;\n    openFolderBrowseDialogBySite(): Observable<Node[]>;\n    openFolderBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]>;\n    openCopyMoveDialog(action: NodeAction, contentEntry: Node, permission?: string, excludeSiteContent?: string[]): Observable<Node[]>;\n    getTitleTranslation(action: string, name: string): string;\n    openUploadFolderDialog(action: NodeAction, contentEntry: Node): Observable<Node[]>;\n    openUploadFileDialog(action: NodeAction, contentEntry: Node, showFilesInResult?: boolean): Observable<Node[]>;\n    private openContentNodeDialog;\n    private imageResolver;\n    private hasAllowableOperationsOnNodeFolder;\n    private isNodeFolder;\n    private isCopyMoveSelectionValid;\n    private hasEntityCreatePermission;\n    private isSite;\n}\n"]}