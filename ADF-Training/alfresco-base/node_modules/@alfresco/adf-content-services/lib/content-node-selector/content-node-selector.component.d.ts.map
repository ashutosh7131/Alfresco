{"version":3,"file":"content-node-selector.component.d.ts","sources":["content-node-selector.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TranslationService, NotificationService, ContentService, UploadService } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeEntryEvent } from '../document-list/components/node.event';\nimport { NodeAction } from '../document-list/models/node-action.enum';\nexport declare class ContentNodeSelectorComponent implements OnInit {\n    private translation;\n    private contentService;\n    private notificationService;\n    private uploadService;\n    private dialog;\n    data: ContentNodeSelectorComponentData;\n    title: string;\n    action: NodeAction;\n    buttonActionName: string;\n    chosenNode: Node[];\n    currentDirectoryId: string;\n    showingSearch: boolean;\n    hasAllowableOperations: boolean;\n    isLoading: boolean;\n    selectedTabIndex: number;\n    uploadStarted: boolean;\n    emptyFolderImageUrl: string;\n    breadcrumbFolderNode: Node;\n    constructor(translation: TranslationService, contentService: ContentService, notificationService: NotificationService, uploadService: UploadService, dialog: MatDialogRef<ContentNodeSelectorComponent>, data: ContentNodeSelectorComponentData);\n    ngOnInit(): void;\n    close(): void;\n    onSelect(nodeList: Node[]): void;\n    onSiteChange(siteTitle: string): void;\n    onNavigationChange(pathElement: NodeEntryEvent): void;\n    onClick(): void;\n    updateTitle(siteTitle: string): void;\n    getTitleTranslation(action: NodeAction, name: string): string;\n    getSelectedCount(): number;\n    isCounterVisible(): boolean;\n    isMultipleSelection(): boolean;\n    onError(error: any): void;\n    isChooseButtonDisabled(): boolean;\n    hasNodeSelected(): boolean;\n    onShowingSearch(value: boolean): void;\n    onCurrentFolder(currentFolder: Node): void;\n    isNotAllowedToUpload(): boolean;\n    onFolderLoaded(): void;\n    onTabSelectionChange(tabIndex: number): void;\n    isFileServerTabSelected(): boolean;\n    isLocalUploadTabSelected(): boolean;\n    isUploadEnabled(): boolean;\n    canPerformLocalUpload(): boolean;\n    getWarningMessage(): string;\n    hasNoPermissionToUpload(): boolean;\n    hasUploadError(): boolean;\n}\n"]}