{"version":3,"file":"content-type-property.service.d.ts","sources":["content-type-property.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MatDialog } from '@angular/material/dialog';\nimport { CardViewItem, VersionCompatibilityService } from '@alfresco/adf-core';\nimport { Observable } from 'rxjs';\nimport { ContentTypeService } from '../../content-type/content-type.service';\nimport { Node, Property } from '@alfresco/js-api';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\nexport declare class ContentTypePropertiesService {\n    private contentTypeService;\n    private dialog;\n    private versionCompatibilityService;\n    private propertyGroupTranslatorService;\n    constructor(contentTypeService: ContentTypeService, dialog: MatDialog, versionCompatibilityService: VersionCompatibilityService, propertyGroupTranslatorService: PropertyGroupTranslatorService);\n    getContentTypeCardItem(node: Node): Observable<CardViewItem[]>;\n    buildCardItemsFromPropertyList(properties: Property[], currentProperties: any): CardViewItem[];\n    private buildCardItemFromProperty;\n    private getContentTypeSpecificProperties;\n    private buildContentTypeTextCardModel;\n    private buildContentTypeSelectCardModel;\n    private getContentTypesAsSelectOption;\n    private appendCurrentType;\n    openContentTypeDialogConfirm(nodeType: any): Observable<boolean>;\n    close(): void;\n    private openDialog;\n}\n"]}