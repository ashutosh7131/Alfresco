/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Node } from '@alfresco/js-api';
import { BasicPropertiesService } from './basic-properties.service';
import { Observable, Subject } from 'rxjs';
import { PropertyGroupTranslatorService } from './property-groups-translator.service';
import { CardViewItem } from '@alfresco/adf-core';
import { CardViewGroup, OrganisedPropertyGroup, PresetConfig } from '../interfaces/content-metadata.interfaces';
import { ContentMetadataConfigFactory } from './config/content-metadata-config.factory';
import { PropertyDescriptorsService } from './property-descriptors.service';
import { ContentTypePropertiesService } from './content-type-property.service';
import * as ɵngcc0 from '@angular/core';
export declare class ContentMetadataService {
    private basicPropertiesService;
    private contentMetadataConfigFactory;
    private propertyGroupTranslatorService;
    private propertyDescriptorsService;
    private contentTypePropertyService;
    error: Subject<{
        statusCode: number;
        message: string;
    }>;
    constructor(basicPropertiesService: BasicPropertiesService, contentMetadataConfigFactory: ContentMetadataConfigFactory, propertyGroupTranslatorService: PropertyGroupTranslatorService, propertyDescriptorsService: PropertyDescriptorsService, contentTypePropertyService: ContentTypePropertiesService);
    getBasicProperties(node: Node): Observable<CardViewItem[]>;
    getContentTypeProperty(node: Node): Observable<CardViewItem[]>;
    openConfirmDialog(changedProperties: any): Observable<any>;
    getGroupedProperties(node: Node, preset?: string | PresetConfig): Observable<CardViewGroup[]>;
    setTitleToNameIfNotSet(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[];
    filterEmptyPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ContentMetadataService, never>;
}

//# sourceMappingURL=content-metadata.service.d.ts.map