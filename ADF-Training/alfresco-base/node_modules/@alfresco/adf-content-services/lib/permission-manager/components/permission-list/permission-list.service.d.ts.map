{"version":3,"file":"permission-list.service.d.ts","sources":["permission-list.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContentService, NodesApiService, NotificationService } from '@alfresco/adf-core';\nimport { Node, PermissionElement } from '@alfresco/js-api';\nimport { EventEmitter } from '@angular/core';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { RoleModel } from '../../models/role.model';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { NodePermissionsModel } from '../../models/member.model';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { NodePermissionDialogService } from '../../services/node-permission-dialog.service';\nexport declare class PermissionListService {\n    private nodeService;\n    private nodePermissionService;\n    private nodePermissionDialogService;\n    private contentService;\n    private notificationService;\n    updated: EventEmitter<PermissionDisplayModel>;\n    errored: EventEmitter<PermissionDisplayModel>;\n    loading$: BehaviorSubject<boolean>;\n    error$: Subject<boolean>;\n    nodeWithRoles$: Subject<{\n        node: Node;\n        roles: RoleModel[];\n    }>;\n    data$: Observable<NodePermissionsModel>;\n    private node;\n    private roles;\n    private SITE_MANAGER_ROLE;\n    constructor(nodeService: NodesApiService, nodePermissionService: NodePermissionService, nodePermissionDialogService: NodePermissionDialogService, contentService: ContentService, notificationService: NotificationService);\n    fetchPermission(nodeId: string): void;\n    toggleInherited(change: MatSlideToggleChange): void;\n    updateNodePermissionByDialog(): void;\n    deletePermissions(permissions: PermissionElement[]): void;\n    updateRole(role: string, permission: PermissionDisplayModel): void;\n    bulkRoleUpdate(role: string): void;\n    deletePermission(permission: PermissionDisplayModel): void;\n    private buildUpdatedPermission;\n    private reloadNode;\n    getManagerAuthority(node: Node): string;\n    updateReadOnlyPermission(node: Node, permissions: PermissionDisplayModel[]): PermissionDisplayModel[];\n    canUpdateThePermission(node: Node, permission: PermissionElement): boolean;\n    private isGroup;\n}\n"]}