{"version":3,"file":"content-node-share.dialog.d.ts","sources":["content-node-share.dialog.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnInit, OnDestroy } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { SharedLinksApiService, NodesApiService, ContentService, RenditionsService, AppConfigService } from '@alfresco/adf-core';\nimport moment from 'moment-es6';\nimport { ContentNodeShareSettings } from './content-node-share.settings';\ndeclare type DatePickerType = 'date' | 'time' | 'month' | 'datetime';\nexport declare class ShareDialogComponent implements OnInit, OnDestroy {\n    private appConfigService;\n    private sharedLinksApiService;\n    private dialogRef;\n    private dialog;\n    private nodesApiService;\n    private contentService;\n    private renditionService;\n    data: ContentNodeShareSettings;\n    minDate: moment.Moment;\n    sharedId: string;\n    fileName: string;\n    baseShareUrl: string;\n    isFileShared: boolean;\n    isDisabled: boolean;\n    form: FormGroup;\n    type: DatePickerType;\n    maxDebounceTime: number;\n    slideToggleExpirationDate: any;\n    dateTimePickerInput: any;\n    private onDestroy$;\n    constructor(appConfigService: AppConfigService, sharedLinksApiService: SharedLinksApiService, dialogRef: MatDialogRef<ShareDialogComponent>, dialog: MatDialog, nodesApiService: NodesApiService, contentService: ContentService, renditionService: RenditionsService, data: ContentNodeShareSettings);\n    ngOnInit(): void;\n    onTimeChanged(date: moment.Moment): void;\n    get time(): AbstractControl;\n    ngOnDestroy(): void;\n    onSlideShareChange(event: MatSlideToggleChange): void;\n    get canUpdate(): boolean;\n    onToggleExpirationDate(slideToggle: MatSlideToggleChange): void;\n    onDatetimepickerClosed(): void;\n    private openConfirmationDialog;\n    private createSharedLinks;\n    deleteSharedLink(sharedId: string): void;\n    private handleError;\n    private updateForm;\n    private updateNode;\n    private updateEntryExpiryDate;\n}\nexport {};\n"]}