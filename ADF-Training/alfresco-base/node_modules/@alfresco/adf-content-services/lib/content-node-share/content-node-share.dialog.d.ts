/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnInit, OnDestroy } from '@angular/core';
import { MatDialogRef, MatDialog } from '@angular/material/dialog';
import { MatSlideToggleChange } from '@angular/material/slide-toggle';
import { FormGroup, AbstractControl } from '@angular/forms';
import { SharedLinksApiService, NodesApiService, ContentService, RenditionsService, AppConfigService } from '@alfresco/adf-core';
import moment from 'moment-es6';
import { ContentNodeShareSettings } from './content-node-share.settings';
import * as ɵngcc0 from '@angular/core';
declare type DatePickerType = 'date' | 'time' | 'month' | 'datetime';
export declare class ShareDialogComponent implements OnInit, OnDestroy {
    private appConfigService;
    private sharedLinksApiService;
    private dialogRef;
    private dialog;
    private nodesApiService;
    private contentService;
    private renditionService;
    data: ContentNodeShareSettings;
    minDate: moment.Moment;
    sharedId: string;
    fileName: string;
    baseShareUrl: string;
    isFileShared: boolean;
    isDisabled: boolean;
    form: FormGroup;
    type: DatePickerType;
    maxDebounceTime: number;
    slideToggleExpirationDate: any;
    dateTimePickerInput: any;
    private onDestroy$;
    constructor(appConfigService: AppConfigService, sharedLinksApiService: SharedLinksApiService, dialogRef: MatDialogRef<ShareDialogComponent>, dialog: MatDialog, nodesApiService: NodesApiService, contentService: ContentService, renditionService: RenditionsService, data: ContentNodeShareSettings);
    ngOnInit(): void;
    onTimeChanged(date: moment.Moment): void;
    get time(): AbstractControl;
    ngOnDestroy(): void;
    onSlideShareChange(event: MatSlideToggleChange): void;
    get canUpdate(): boolean;
    onToggleExpirationDate(slideToggle: MatSlideToggleChange): void;
    onDatetimepickerClosed(): void;
    private openConfirmationDialog;
    private createSharedLinks;
    deleteSharedLink(sharedId: string): void;
    private handleError;
    private updateForm;
    private updateNode;
    private updateEntryExpiryDate;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ShareDialogComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ShareDialogComponent, "adf-share-dialog", never, {}, {}, never, never>;
}
export {};

//# sourceMappingURL=content-node-share.dialog.d.ts.map