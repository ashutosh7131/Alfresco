{"version":3,"file":"upload-base.d.ts","sources":["upload-base.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FileModel, FileInfo, UploadService, TranslationService, FileUploadErrorEvent } from '@alfresco/adf-core';\nimport { EventEmitter, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { UploadFilesEvent } from '../upload-files.event';\nexport declare abstract class UploadBase implements OnInit, OnDestroy {\n    protected uploadService: UploadService;\n    protected translationService: TranslationService;\n    protected ngZone: NgZone;\n    maxFilesSize: number;\n    rootFolderId: string;\n    disabled: boolean;\n    acceptedFilesType: string;\n    versioning: boolean;\n    majorVersion: boolean;\n    comment: string;\n    nodeType: string;\n    success: EventEmitter<any>;\n    error: EventEmitter<FileUploadErrorEvent>;\n    beginUpload: EventEmitter<UploadFilesEvent>;\n    updateFileVersion: EventEmitter<CustomEvent<any>>;\n    protected onDestroy$: Subject<boolean>;\n    constructor(uploadService: UploadService, translationService: TranslationService, ngZone: NgZone);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    uploadFiles(files: File[]): void;\n    uploadFilesInfo(files: FileInfo[]): void;\n    private uploadQueue;\n    protected isFileAcceptable(file: FileModel): boolean;\n    protected createFileModel(file: File, parentId: string, path: string, id?: string): FileModel;\n    protected isFileSizeAllowed(file: FileModel): boolean;\n    protected isMaxFileSizeDefined(): boolean;\n    protected isFileSizeCorrect(file: FileModel): boolean;\n    private isFileSizeAcceptable;\n}\n"]}