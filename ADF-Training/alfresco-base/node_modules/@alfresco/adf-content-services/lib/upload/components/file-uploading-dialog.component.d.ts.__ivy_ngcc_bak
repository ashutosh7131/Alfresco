/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileModel, UploadService, UserPreferencesService } from '@alfresco/adf-core';
import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit, ElementRef } from '@angular/core';
import { FileUploadingListComponent } from './file-uploading-list.component';
export declare class FileUploadingDialogComponent implements OnInit, OnDestroy {
    private uploadService;
    private changeDetector;
    private userPreferencesService;
    private elementRef;
    private direction;
    private onDestroy$;
    uploadList: FileUploadingListComponent;
    position: string;
    alwaysVisible: boolean;
    error: EventEmitter<any>;
    get isPositionRight(): boolean;
    get isPositionLeft(): boolean;
    filesUploadingList: FileModel[];
    isDialogActive: boolean;
    totalCompleted: number;
    totalErrors: number;
    isDialogMinimized: boolean;
    isConfirmation: boolean;
    private listSubscription;
    private counterSubscription;
    private fileUploadSubscription;
    private errorSubscription;
    private dialogActive;
    constructor(uploadService: UploadService, changeDetector: ChangeDetectorRef, userPreferencesService: UserPreferencesService, elementRef: ElementRef);
    ngOnInit(): void;
    toggleConfirmation(): void;
    cancelAllUploads(): void;
    toggleMinimized(): void;
    close(): void;
    ngOnDestroy(): void;
    canShowDialog(): boolean;
    canShowCancelAll(): boolean;
    canCloseDialog(): boolean;
    hasUploadInProgress(): boolean;
}
