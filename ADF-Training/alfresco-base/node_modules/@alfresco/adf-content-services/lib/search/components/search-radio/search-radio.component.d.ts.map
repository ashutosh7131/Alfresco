{"version":3,"file":"search-radio.component.d.ts","sources":["search-radio.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnInit } from '@angular/core';\nimport { MatRadioChange } from '@angular/material/radio';\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { SearchFilterList } from '../../models/search-filter-list.model';\nimport { Subject } from 'rxjs';\nexport interface SearchRadioOption {\n    name: string;\n    value: string;\n}\nexport declare class SearchRadioComponent implements SearchWidget, OnInit {\n    value: string;\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    options: SearchFilterList<SearchRadioOption>;\n    pageSize: number;\n    isActive: boolean;\n    startValue: any;\n    enableChangeUpdate: boolean;\n    displayValue$: Subject<string>;\n    constructor();\n    ngOnInit(): void;\n    private getSelectedValue;\n    submitValues(): void;\n    hasValidValue(): boolean;\n    setValue(newValue: string): void;\n    getCurrentValue(): string;\n    updateDisplayValue(): void;\n    changeHandler(event: MatRadioChange): void;\n    clear(): void;\n    reset(): void;\n}\n"]}