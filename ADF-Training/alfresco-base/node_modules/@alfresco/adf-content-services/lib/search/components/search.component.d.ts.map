{"version":3,"file":"search.component.d.ts","sources":["search.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SearchService, SearchComponentInterface } from '@alfresco/adf-core';\nimport { AfterContentInit, ElementRef, EventEmitter, OnChanges, TemplateRef, OnDestroy } from '@angular/core';\nimport { NodePaging, ResultSetPaging } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nexport declare class SearchComponent implements SearchComponentInterface, AfterContentInit, OnChanges, OnDestroy {\n    private searchService;\n    private _elementRef;\n    panel: ElementRef;\n    template: TemplateRef<any>;\n    displayWith: ((value: any) => string) | null;\n    maxResults: number;\n    skipResults: number;\n    searchTerm: string;\n    set classList(classList: string);\n    resultLoaded: EventEmitter<NodePaging>;\n    error: EventEmitter<any>;\n    showPanel: boolean;\n    results: NodePaging;\n    get isOpen(): boolean;\n    set isOpen(value: boolean);\n    _isOpen: boolean;\n    keyPressedStream: Subject<string>;\n    _classList: {\n        [key: string]: boolean;\n    };\n    private onDestroy$;\n    constructor(searchService: SearchService, _elementRef: ElementRef);\n    ngAfterContentInit(): void;\n    ngOnChanges(changes: any): void;\n    ngOnDestroy(): void;\n    resetResults(): void;\n    reload(): void;\n    private cleanResults;\n    private loadSearchResults;\n    onSearchDataLoaded(resultSetPaging: ResultSetPaging): void;\n    onSearchDataError(error: any): void;\n    hidePanel(): void;\n    setVisibility(): void;\n}\n"]}