{"version":3,"file":"search-datetime-range.component.d.ts","sources":["search-datetime-range.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { UserPreferencesService } from '@alfresco/adf-core';\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Moment } from 'moment';\nimport { Subject } from 'rxjs';\nimport { DatetimeAdapter } from '@mat-datetimepicker/core';\nexport interface DatetimeRangeValue {\n    from: string;\n    to: string;\n}\nexport declare class SearchDatetimeRangeComponent implements SearchWidget, OnInit, OnDestroy {\n    private dateAdapter;\n    private userPreferencesService;\n    from: FormControl;\n    to: FormControl;\n    form: FormGroup;\n    matcher: LiveErrorStateMatcher;\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    datetimePickerFormat: string;\n    maxDatetime: any;\n    fromMaxDatetime: any;\n    isActive: boolean;\n    startValue: any;\n    enableChangeUpdate: boolean;\n    displayValue$: Subject<string>;\n    private onDestroy$;\n    constructor(dateAdapter: DatetimeAdapter<Moment>, userPreferencesService: UserPreferencesService);\n    getFromValidationMessage(): string;\n    getToValidationMessage(): string;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    apply(model: {\n        from: string;\n        to: string;\n    }, isValid: boolean): void;\n    submitValues(): void;\n    hasValidValue(): boolean;\n    getCurrentValue(): DatetimeRangeValue;\n    updateDisplayValue(): void;\n    setValue(parsedDate: string): void;\n    clear(): void;\n    reset(): void;\n    private updateQuery;\n    onChangedHandler(event: any, formControl: FormControl): void;\n    setLocale(locale: any): void;\n    hasParseError(formControl: any): boolean;\n    forcePlaceholder(event: any): void;\n    setFromMaxDatetime(): void;\n}\n"]}