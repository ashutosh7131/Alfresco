/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnInit, EventEmitter, OnDestroy, ElementRef } from '@angular/core';
import { ConfigurableFocusTrapFactory, ConfigurableFocusTrap } from '@angular/cdk/a11y';
import { DataColumn, TranslationService } from '@alfresco/adf-core';
import { SearchWidgetContainerComponent } from '../search-widget-container/search-widget-container.component';
import { SearchHeaderQueryBuilderService } from '../../services/search-header-query-builder.service';
import { SearchCategory } from '../../models/search-category.interface';
import { MatMenuTrigger } from '@angular/material/menu';
import * as ɵngcc0 from '@angular/core';
export declare class SearchFilterContainerComponent implements OnInit, OnDestroy {
    private searchFilterQueryBuilder;
    private translationService;
    private focusTrapFactory;
    col: DataColumn;
    value: any;
    filterChange: EventEmitter<any>;
    widgetContainer: SearchWidgetContainerComponent;
    filterContainer: ElementRef;
    category: SearchCategory;
    focusTrap: ConfigurableFocusTrap;
    initialValue: any;
    private onDestroy$;
    constructor(searchFilterQueryBuilder: SearchHeaderQueryBuilderService, translationService: TranslationService, focusTrapFactory: ConfigurableFocusTrapFactory);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onKeyPressed(event: KeyboardEvent, menuTrigger: MatMenuTrigger): void;
    onApply(): void;
    onClearButtonClick(event: Event): void;
    resetSearchFilter(): void;
    getTooltipTranslation(columnTitle: string): string;
    isActive(): boolean;
    onMenuOpen(): void;
    onClosed(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SearchFilterContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SearchFilterContainerComponent, "adf-search-filter-container", never, { "col": "col"; "value": "value"; }, { "filterChange": "filterChange"; }, never, never>;
}

//# sourceMappingURL=search-filter-container.component.d.ts.map