/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FacetField } from '../../models/facet-field.interface';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { FacetFieldBucket } from '../../models/facet-field-bucket.interface';
import { SearchQueryBuilderService } from '../../services/search-query-builder.service';
import { SearchFacetFiltersService } from '../../services/search-facet-filters.service';
import { FacetWidget } from '../../models/facet-widget.interface';
import { TranslationService } from '@alfresco/adf-core';
import { Subject } from 'rxjs';
export declare class SearchFacetFieldComponent implements FacetWidget {
    queryBuilder: SearchQueryBuilderService;
    private searchFacetFiltersService;
    private translationService;
    field: FacetField;
    displayValue$: Subject<string>;
    constructor(queryBuilder: SearchQueryBuilderService, searchFacetFiltersService: SearchFacetFiltersService, translationService: TranslationService);
    get canUpdateOnChange(): boolean;
    onToggleBucket(event: MatCheckboxChange, field: FacetField, bucket: FacetFieldBucket): void;
    selectFacetBucket(field: FacetField, bucket: FacetFieldBucket): void;
    unselectFacetBucket(field: FacetField, bucket: FacetFieldBucket): void;
    canResetSelectedBuckets(field: FacetField): boolean;
    resetSelectedBuckets(field: FacetField): void;
    getBucketCountDisplay(bucket: FacetFieldBucket): string;
    updateDisplayValue(): void;
    reset(): void;
    submitValues(): void;
}
