{"version":3,"file":"version-upload.component.d.ts","sources":["version-upload.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { Node, Version } from '@alfresco/js-api';\nimport { ContentService, FileUploadErrorEvent, FileUploadEvent, UploadService } from '@alfresco/adf-core';\nimport { Subject } from 'rxjs';\nexport declare class VersionUploadComponent implements OnInit, OnDestroy {\n    private contentService;\n    private uploadService;\n    semanticVersion: string;\n    comment: string;\n    uploadVersion: boolean;\n    disabled: boolean;\n    onDestroy$: Subject<unknown>;\n    majorVersion: string;\n    minorVersion: string;\n    node: Node;\n    newFileVersion: File;\n    showUploadButton: boolean;\n    showCancelButton: boolean;\n    set currentVersion(version: Version);\n    success: EventEmitter<any>;\n    error: EventEmitter<FileUploadErrorEvent>;\n    cancel: EventEmitter<any>;\n    versionChanged: EventEmitter<boolean>;\n    commentChanged: EventEmitter<string>;\n    uploadStarted: EventEmitter<FileUploadEvent>;\n    constructor(contentService: ContentService, uploadService: UploadService);\n    ngOnInit(): void;\n    canUpload(): boolean;\n    isMajorVersion(): boolean;\n    cancelUpload(): void;\n    onVersionChange(): void;\n    onCommentChange(): void;\n    onSuccess(event: any): void;\n    onError(event: FileUploadErrorEvent): void;\n    ngOnDestroy(): void;\n    getNextMinorVersion(version: string): string;\n    getNextMajorVersion(version: string): string;\n    private getParsedVersion;\n}\n"]}