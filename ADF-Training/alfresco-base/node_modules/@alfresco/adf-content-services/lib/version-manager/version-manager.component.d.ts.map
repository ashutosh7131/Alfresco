{"version":3,"file":"version-manager.component.d.ts","sources":["version-manager.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { VersionListComponent } from './version-list.component';\nimport { ContentService, AlfrescoApiService, FileUploadErrorEvent } from '@alfresco/adf-core';\nexport declare class VersionManagerComponent implements OnInit {\n    private contentService;\n    private alfrescoApiService;\n    node: Node;\n    newFileVersion: File;\n    showComments: boolean;\n    showVersionComparison: boolean;\n    allowDownload: boolean;\n    uploadSuccess: EventEmitter<Node>;\n    uploadError: EventEmitter<FileUploadErrorEvent>;\n    uploadCancel: EventEmitter<boolean>;\n    viewVersion: EventEmitter<string>;\n    versionListComponent: VersionListComponent;\n    uploadState: string;\n    constructor(contentService: ContentService, alfrescoApiService: AlfrescoApiService);\n    ngOnInit(): void;\n    refresh(node: Node): void;\n    onUploadSuccess(event: any): void;\n    onUploadError(event: FileUploadErrorEvent): void;\n    onUploadCancel(): void;\n    onViewVersion(versionId: string): void;\n    toggleNewVersion(): void;\n    canUpdate(): boolean;\n}\n"]}