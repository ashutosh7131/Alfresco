/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit } from '@angular/core';
import { Node } from '@alfresco/js-api';
import { VersionListComponent } from './version-list.component';
import { ContentService, AlfrescoApiService, FileUploadErrorEvent } from '@alfresco/adf-core';
import * as ɵngcc0 from '@angular/core';
export declare class VersionManagerComponent implements OnInit {
    private contentService;
    private alfrescoApiService;
    node: Node;
    newFileVersion: File;
    showComments: boolean;
    showVersionComparison: boolean;
    allowDownload: boolean;
    uploadSuccess: EventEmitter<Node>;
    uploadError: EventEmitter<FileUploadErrorEvent>;
    uploadCancel: EventEmitter<boolean>;
    viewVersion: EventEmitter<string>;
    versionListComponent: VersionListComponent;
    uploadState: string;
    constructor(contentService: ContentService, alfrescoApiService: AlfrescoApiService);
    ngOnInit(): void;
    refresh(node: Node): void;
    onUploadSuccess(event: any): void;
    onUploadError(event: FileUploadErrorEvent): void;
    onUploadCancel(): void;
    onViewVersion(versionId: string): void;
    toggleNewVersion(): void;
    canUpdate(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<VersionManagerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<VersionManagerComponent, "adf-version-manager", never, { "showComments": "showComments"; "showVersionComparison": "showVersionComparison"; "allowDownload": "allowDownload"; "newFileVersion": "newFileVersion"; "node": "node"; }, { "uploadSuccess": "uploadSuccess"; "uploadError": "uploadError"; "uploadCancel": "uploadCancel"; "viewVersion": "viewVersion"; }, never, never>;
}

//# sourceMappingURL=version-manager.component.d.ts.map