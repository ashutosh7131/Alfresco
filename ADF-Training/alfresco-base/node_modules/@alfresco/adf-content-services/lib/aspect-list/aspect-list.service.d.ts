/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { MatDialog } from '@angular/material/dialog';
import { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';
import { Observable } from 'rxjs';
import { AspectEntry, AspectsApi } from '@alfresco/js-api';
import * as ɵngcc0 from '@angular/core';
export declare class AspectListService {
    private alfrescoApiService;
    private appConfigService;
    private dialog;
    private logService;
    _aspectsApi: AspectsApi;
    get aspectsApi(): AspectsApi;
    constructor(alfrescoApiService: AlfrescoApiService, appConfigService: AppConfigService, dialog: MatDialog, logService: LogService);
    getAspects(): Observable<AspectEntry[]>;
    getStandardAspects(whiteList: string[]): Observable<AspectEntry[]>;
    getCustomAspects(): Observable<AspectEntry[]>;
    private filterAspectByConfig;
    getVisibleAspects(): string[];
    openAspectListDialog(nodeId?: string): Observable<string[]>;
    private openDialog;
    close(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AspectListService, never>;
}

//# sourceMappingURL=aspect-list.service.d.ts.map