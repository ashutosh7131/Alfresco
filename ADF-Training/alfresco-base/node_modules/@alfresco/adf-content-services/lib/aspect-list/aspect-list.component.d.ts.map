{"version":3,"file":"aspect-list.component.d.ts","sources":["aspect-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Observable } from 'rxjs';\nimport { AspectListService } from './aspect-list.service';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { AspectEntry } from '@alfresco/js-api';\nexport declare class AspectListComponent implements OnInit, OnDestroy {\n    private aspectListService;\n    private nodeApiService;\n    nodeId: string;\n    valueChanged: EventEmitter<string[]>;\n    propertyColumns: string[];\n    aspects$: Observable<AspectEntry[]>;\n    nodeAspects: string[];\n    nodeAspectStatus: string[];\n    hasEqualAspect: boolean;\n    private onDestroy$;\n    constructor(aspectListService: AspectListService, nodeApiService: NodesApiService);\n    ngOnDestroy(): void;\n    ngOnInit(): void;\n    onCheckBoxClick(event: Event): void;\n    onChange(change: MatCheckboxChange, prefixedName: string): void;\n    reset(): void;\n    clear(): void;\n    getId(aspect: any): string;\n    getTitle(aspect: any): string;\n    private updateEqualityOfAspectList;\n}\n"]}