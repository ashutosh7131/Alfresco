/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { NodesApiService } from '@alfresco/adf-core';
import { Observable } from 'rxjs';
import { AspectListService } from './aspect-list.service';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { AspectEntry } from '@alfresco/js-api';
import * as ɵngcc0 from '@angular/core';
export declare class AspectListComponent implements OnInit, OnDestroy {
    private aspectListService;
    private nodeApiService;
    nodeId: string;
    valueChanged: EventEmitter<string[]>;
    propertyColumns: string[];
    aspects$: Observable<AspectEntry[]>;
    nodeAspects: string[];
    nodeAspectStatus: string[];
    hasEqualAspect: boolean;
    private onDestroy$;
    constructor(aspectListService: AspectListService, nodeApiService: NodesApiService);
    ngOnDestroy(): void;
    ngOnInit(): void;
    onCheckBoxClick(event: Event): void;
    onChange(change: MatCheckboxChange, prefixedName: string): void;
    reset(): void;
    clear(): void;
    getId(aspect: any): string;
    getTitle(aspect: any): string;
    private updateEqualityOfAspectList;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AspectListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AspectListComponent, "adf-aspect-list", never, { "nodeId": "nodeId"; }, { "valueChanged": "valueChanged"; }, never, never>;
}

//# sourceMappingURL=aspect-list.component.d.ts.map