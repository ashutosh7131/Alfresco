/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class ContentActionModel {
    constructor(obj) {
        this.disableWithNoPermission = false;
        this.disabled = false;
        this.visible = true;
        if (obj) {
            this.icon = obj.icon;
            this.title = obj.title;
            this.handler = obj.handler;
            this.execute = obj.execute;
            this.target = obj.target;
            this.permission = obj.permission;
            this.disableWithNoPermission = obj.disableWithNoPermission;
            if (obj.hasOwnProperty('disabled')) {
                this.disabled = obj.disabled;
            }
            if (obj.hasOwnProperty('visible')) {
                this.visible = obj.visible;
            }
        }
    }
}
export var ContentActionTarget;
(function (ContentActionTarget) {
    ContentActionTarget["Document"] = "document";
    ContentActionTarget["Folder"] = "folder";
    ContentActionTarget["All"] = "all";
})(ContentActionTarget || (ContentActionTarget = {}));
export class DocumentActionModel extends ContentActionModel {
    constructor(json) {
        super(json);
        this.target = 'document';
    }
}
export class FolderActionModel extends ContentActionModel {
    constructor(json) {
        super(json);
        this.target = 'folder';
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1hY3Rpb24ubW9kZWwuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb250ZW50LXNlcnZpY2VzL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9kb2N1bWVudC1saXN0L21vZGVscy9jb250ZW50LWFjdGlvbi5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxNQUFNLE9BQU8sa0JBQWtCO0lBVzNCLFlBQVksR0FBUztRQUpyQiw0QkFBdUIsR0FBWSxLQUFLLENBQUM7UUFDekMsYUFBUSxHQUF1QixLQUFLLENBQUM7UUFDckMsWUFBTyxHQUF1QixJQUFJLENBQUM7UUFHL0IsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztZQUMzQixJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7WUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztZQUNqQyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsR0FBRyxDQUFDLHVCQUF1QixDQUFDO1lBRTNELElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO2FBQ2hDO1lBRUQsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxFQUFFO2dCQUMvQixJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7YUFDOUI7U0FDSjtJQUNMLENBQUM7Q0FDSjtBQUVELE1BQU0sQ0FBTixJQUFZLG1CQUlYO0FBSkQsV0FBWSxtQkFBbUI7SUFDM0IsNENBQXFCLENBQUE7SUFDckIsd0NBQWlCLENBQUE7SUFDakIsa0NBQVcsQ0FBQTtBQUNmLENBQUMsRUFKVyxtQkFBbUIsS0FBbkIsbUJBQW1CLFFBSTlCO0FBSUQsTUFBTSxPQUFPLG1CQUFvQixTQUFRLGtCQUFrQjtJQUN2RCxZQUFZLElBQVU7UUFDbEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1osSUFBSSxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQUM7SUFDN0IsQ0FBQztDQUNKO0FBRUQsTUFBTSxPQUFPLGlCQUFrQixTQUFTLGtCQUFrQjtJQUN0RCxZQUFZLElBQVU7UUFDbEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1osSUFBSSxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUM7SUFDM0IsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuZXhwb3J0IGNsYXNzIENvbnRlbnRBY3Rpb25Nb2RlbCB7XG4gICAgaWNvbjogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgaGFuZGxlcjogQ29udGVudEFjdGlvbkhhbmRsZXI7XG4gICAgZXhlY3V0ZTogRnVuY3Rpb247XG4gICAgdGFyZ2V0OiBzdHJpbmc7XG4gICAgcGVybWlzc2lvbjogc3RyaW5nO1xuICAgIGRpc2FibGVXaXRoTm9QZXJtaXNzaW9uOiBib29sZWFuID0gZmFsc2U7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW4gfCBGdW5jdGlvbiA9IGZhbHNlO1xuICAgIHZpc2libGU6IGJvb2xlYW4gfCBGdW5jdGlvbiA9IHRydWU7XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgaWYgKG9iaikge1xuICAgICAgICAgICAgdGhpcy5pY29uID0gb2JqLmljb247XG4gICAgICAgICAgICB0aGlzLnRpdGxlID0gb2JqLnRpdGxlO1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVyID0gb2JqLmhhbmRsZXI7XG4gICAgICAgICAgICB0aGlzLmV4ZWN1dGUgPSBvYmouZXhlY3V0ZTtcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0ID0gb2JqLnRhcmdldDtcbiAgICAgICAgICAgIHRoaXMucGVybWlzc2lvbiA9IG9iai5wZXJtaXNzaW9uO1xuICAgICAgICAgICAgdGhpcy5kaXNhYmxlV2l0aE5vUGVybWlzc2lvbiA9IG9iai5kaXNhYmxlV2l0aE5vUGVybWlzc2lvbjtcblxuICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eSgnZGlzYWJsZWQnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZWQgPSBvYmouZGlzYWJsZWQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoJ3Zpc2libGUnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMudmlzaWJsZSA9IG9iai52aXNpYmxlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZW51bSBDb250ZW50QWN0aW9uVGFyZ2V0IHtcbiAgICBEb2N1bWVudCA9ICdkb2N1bWVudCcsXG4gICAgRm9sZGVyID0gJ2ZvbGRlcicsXG4gICAgQWxsID0gJ2FsbCdcbn1cblxuZXhwb3J0IHR5cGUgQ29udGVudEFjdGlvbkhhbmRsZXIgPSAob2JqOiBhbnksIHRhcmdldD86IGFueSwgcGVybWlzc2lvbj86IHN0cmluZykgPT4gYW55O1xuXG5leHBvcnQgY2xhc3MgRG9jdW1lbnRBY3Rpb25Nb2RlbCBleHRlbmRzIENvbnRlbnRBY3Rpb25Nb2RlbCB7XG4gICAgY29uc3RydWN0b3IoanNvbj86IGFueSkgIHtcbiAgICAgICAgc3VwZXIoanNvbik7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gJ2RvY3VtZW50JztcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBGb2xkZXJBY3Rpb25Nb2RlbCBleHRlbmRzICBDb250ZW50QWN0aW9uTW9kZWwge1xuICAgIGNvbnN0cnVjdG9yKGpzb24/OiBhbnkpICB7XG4gICAgICAgIHN1cGVyKGpzb24pO1xuICAgICAgICB0aGlzLnRhcmdldCA9ICdmb2xkZXInO1xuICAgIH1cbn1cbiJdfQ==