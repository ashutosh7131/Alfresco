/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { RatingService } from './services/rating.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './services/rating.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/material/icon';

function LikeComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtext(1, "Like");
    ɵngcc0.ɵɵelementEnd();
} }
function LikeComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtext(1, "Likes");
    ɵngcc0.ɵɵelementEnd();
} }
const _c0 = function (a0, a1) { return { "adf-like-select": a0, "adf-like-grey": a1 }; };
export class LikeComponent {
    constructor(ratingService) {
        this.ratingService = ratingService;
        this.changeVote = new EventEmitter();
        this.likesCounter = 0;
        this.ratingType = 'likes';
        this.isLike = false;
    }
    ngOnChanges() {
        this.clean();
        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe((ratingEntry) => {
            if (ratingEntry.entry.aggregate) {
                this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;
                if (ratingEntry.entry.ratedAt) {
                    this.isLike = true;
                }
            }
        });
    }
    likeClick() {
        if (this.isLike) {
            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(() => {
                this.likesCounter -= 1;
                this.isLike = false;
                this.changeVote.emit(this.likesCounter);
            });
        }
        else {
            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe((ratingEntry) => {
                this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;
                this.isLike = true;
                this.changeVote.emit(this.likesCounter);
            });
        }
    }
    clean() {
        this.isLike = false;
        this.likesCounter = 0;
    }
}
LikeComponent.ɵfac = function LikeComponent_Factory(t) { return new (t || LikeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RatingService)); };
LikeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LikeComponent, selectors: [["adf-like"]], inputs: { nodeId: "nodeId" }, outputs: { changeVote: "changeVote" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 10, vars: 8, consts: [["id", "adf-like-container", 1, "adf-like-container"], [1, "adf-like"], [3, "id", "ngClass", "click"], [1, "adf-like-counter-container"], ["id", "adf-like-counter", 1, "adf-like-counter"], ["class", "adf-left", 4, "ngIf"], [1, "adf-left"]], template: function LikeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "span", 2);
        ɵngcc0.ɵɵlistener("click", function LikeComponent_Template_span_click_2_listener() { return ctx.likeClick(); });
        ɵngcc0.ɵɵelementStart(3, "mat-icon");
        ɵngcc0.ɵɵtext(4, "thumb_up");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵelementStart(6, "div", 4);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, LikeComponent_div_8_Template, 2, 0, "div", 5);
        ɵngcc0.ɵɵtemplate(9, LikeComponent_div_9_Template, 2, 0, "div", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-like-", ctx.nodeId, "");
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c0, ctx.isLike, !ctx.isLike));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ctx.likesCounter);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.likesCounter <= 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.likesCounter > 1);
    } }, directives: [ɵngcc2.NgClass, ɵngcc3.MatIcon, ɵngcc2.NgIf], styles: [".adf-like-container{align-items:center;display:flex;margin-top:13px;overflow:hidden;width:100%}.adf-like-container .adf-like-counter-container{display:inherit;padding:0 6px}.adf-like-container .adf-left{padding:0 6px}.adf-like-container .adf-like-select{color:#2196f3;cursor:pointer}.adf-like-container .adf-like-select:hover{color:grey}.adf-like-container .adf-like-grey{color:grey;cursor:pointer}.adf-like-container .adf-like-grey:hover{color:#2196f3}"], encapsulation: 2 });
LikeComponent.ctorParameters = () => [
    { type: RatingService }
];
LikeComponent.propDecorators = {
    nodeId: [{ type: Input }],
    changeVote: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LikeComponent, [{
        type: Component,
        args: [{
                selector: 'adf-like',
                template: "<div id=\"adf-like-container\" class=\"adf-like-container\">\n    <div class=\"adf-like\">\n        <span id=\"adf-like-{{nodeId}}\" [ngClass]=\"{'adf-like-select': isLike ,'adf-like-grey': !isLike  }\"\n              (click)=\"likeClick()\">\n            <mat-icon>thumb_up</mat-icon>\n        </span>\n    </div>\n    <div class=\"adf-like-counter-container\">\n        <div id=\"adf-like-counter\" class=\"adf-like-counter\">{{likesCounter}}</div>\n        <div class=\"adf-left\" *ngIf=\"likesCounter<=1\">Like</div>\n        <div class=\"adf-left\" *ngIf=\"likesCounter>1\">Likes</div>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-like-container{align-items:center;display:flex;margin-top:13px;overflow:hidden;width:100%}.adf-like-container .adf-like-counter-container{display:inherit;padding:0 6px}.adf-like-container .adf-left{padding:0 6px}.adf-like-container .adf-like-select{color:#2196f3;cursor:pointer}.adf-like-container .adf-like-select:hover{color:grey}.adf-like-container .adf-like-grey{color:grey;cursor:pointer}.adf-like-container .adf-like-grey:hover{color:#2196f3}"]
            }]
    }], function () { return [{ type: ɵngcc1.RatingService }]; }, { changeVote: [{
            type: Output
        }], nodeId: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlrZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb250ZW50LXNlcnZpY2VzL3NyYy9saWIvc29jaWFsL2xpa2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JHLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTMUQsTUFBTSxPQUFPLGFBQWE7QUFBRyxJQWF6QixZQUFvQixhQUE0QjtBQUNwRCxRQUR3QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtBQUFDLFFBTmpELGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3BDLFFBQ0ksaUJBQVksR0FBVyxDQUFDLENBQUM7QUFDN0IsUUFBSSxlQUFVLEdBQVcsT0FBTyxDQUFDO0FBQ2pDLFFBQUksV0FBTSxHQUFZLEtBQUssQ0FBQztBQUM1QixJQUVJLENBQUM7QUFDTCxJQUNJLFdBQVc7QUFDZixRQUFRLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNyQixRQUNRLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFNBQVMsQ0FDaEUsQ0FBQyxXQUF3QixFQUFFLEVBQUU7QUFDekMsWUFBZ0IsSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRTtBQUNqRCxnQkFBb0IsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUM7QUFDcEYsZ0JBQW9CLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUU7QUFDbkQsb0JBQXdCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0FBQzNDLGlCQUFxQjtBQUNyQixhQUFpQjtBQUNqQixRQUFZLENBQUMsQ0FDSixDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0wsSUFDSSxTQUFTO0FBQ2IsUUFBUSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7QUFDekIsWUFBWSxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxTQUFTLENBQ25FLEdBQUcsRUFBRTtBQUNyQixnQkFBb0IsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLENBQUM7QUFDM0MsZ0JBQW9CLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0FBQ3hDLGdCQUFvQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDNUQsWUFBZ0IsQ0FBQyxDQUNKLENBQUM7QUFDZCxTQUFTO0FBQUMsYUFBSztBQUNmLFlBQVksSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FDdkUsQ0FBQyxXQUF3QixFQUFFLEVBQUU7QUFDN0MsZ0JBQW9CLElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDO0FBQ3BGLGdCQUFvQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztBQUN2QyxnQkFBb0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzVELFlBQWdCLENBQUMsQ0FDSixDQUFDO0FBQ2QsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ0ksS0FBSztBQUNULFFBQVEsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7QUFDNUIsUUFBUSxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztBQUM5QixJQUFJLENBQUM7QUFDTDt5Q0E3REMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxVQUFVLGtCQUVwQjs7O1dBQW9DLGtCQUNwQyxhQUFhO0FBQUUsaUJBQWlCLENBQUMsSUFBSTs7Ozs7Ozs7Ozs7K0JBQ3hDOzs7Ozs7Ozs7Ozs7OzsyaUJBQ0k7QUFBQztBQUF1QyxZQVRwQyxhQUFhO0FBQUc7QUFBRztBQUMxQixxQkFVRyxLQUFLO0FBQ1IseUJBR0csTUFBTTtBQUNWOzs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uQ2hhbmdlcywgT3V0cHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmF0aW5nU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcmF0aW5nLnNlcnZpY2UnO1xuaW1wb3J0IHsgUmF0aW5nRW50cnkgfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtbGlrZScsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGlrZS5jb21wb25lbnQuc2NzcyddLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9saWtlLmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIExpa2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIC8qKiBJZGVudGlmaWVyIG9mIGEgbm9kZSB0byBhcHBseSBsaWtlcyB0by4gKi9cbiAgICBASW5wdXQoKVxuICAgIG5vZGVJZDogc3RyaW5nO1xuXG4gICAgLyoqIEVtaXR0ZWQgd2hlbiB0aGUgXCJ2b3RlXCIgZ2V0cyBjaGFuZ2VkLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGNoYW5nZVZvdGUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBsaWtlc0NvdW50ZXI6IG51bWJlciA9IDA7XG4gICAgcmF0aW5nVHlwZTogc3RyaW5nID0gJ2xpa2VzJztcbiAgICBpc0xpa2U6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmF0aW5nU2VydmljZTogUmF0aW5nU2VydmljZSkge1xuICAgIH1cblxuICAgIG5nT25DaGFuZ2VzKCkge1xuICAgICAgICB0aGlzLmNsZWFuKCk7XG5cbiAgICAgICAgdGhpcy5yYXRpbmdTZXJ2aWNlLmdldFJhdGluZyh0aGlzLm5vZGVJZCwgdGhpcy5yYXRpbmdUeXBlKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAocmF0aW5nRW50cnk6IFJhdGluZ0VudHJ5KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJhdGluZ0VudHJ5LmVudHJ5LmFnZ3JlZ2F0ZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxpa2VzQ291bnRlciA9IHJhdGluZ0VudHJ5LmVudHJ5LmFnZ3JlZ2F0ZS5udW1iZXJPZlJhdGluZ3M7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyYXRpbmdFbnRyeS5lbnRyeS5yYXRlZEF0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlzTGlrZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgbGlrZUNsaWNrKCkge1xuICAgICAgICBpZiAodGhpcy5pc0xpa2UpIHtcbiAgICAgICAgICAgIHRoaXMucmF0aW5nU2VydmljZS5kZWxldGVSYXRpbmcodGhpcy5ub2RlSWQsIHRoaXMucmF0aW5nVHlwZSkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5saWtlc0NvdW50ZXIgLT0gMTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc0xpa2UgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VWb3RlLmVtaXQodGhpcy5saWtlc0NvdW50ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJhdGluZ1NlcnZpY2UucG9zdFJhdGluZyh0aGlzLm5vZGVJZCwgdGhpcy5yYXRpbmdUeXBlLCB0cnVlKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKHJhdGluZ0VudHJ5OiBSYXRpbmdFbnRyeSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxpa2VzQ291bnRlciA9IHJhdGluZ0VudHJ5LmVudHJ5LmFnZ3JlZ2F0ZS5udW1iZXJPZlJhdGluZ3M7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNMaWtlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VWb3RlLmVtaXQodGhpcy5saWtlc0NvdW50ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjbGVhbigpIHtcbiAgICAgICAgdGhpcy5pc0xpa2UgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5saWtlc0NvdW50ZXIgPSAwO1xuICAgIH1cbn1cbiJdfQ==