/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { RatingService } from './services/rating.service';
import { takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './services/rating.service';
import * as ɵngcc2 from '@angular/material/list';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/icon';

const _c0 = function (a0) { return { "adf-average-star": a0 }; };
function RatingComponent_mat_list_item_1_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 9);
    ɵngcc0.ɵɵlistener("click", function RatingComponent_mat_list_item_1_mat_icon_2_Template_mat_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const idx_r4 = ɵngcc0.ɵɵnextContext().index; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.updateVote(idx_r4 + 1); });
    ɵngcc0.ɵɵtext(1, "star_rate ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const idx_r4 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-colored-star-", idx_r4, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c0, !ctx_r5.ratingValue));
} }
function RatingComponent_mat_list_item_1_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 10);
    ɵngcc0.ɵɵlistener("click", function RatingComponent_mat_list_item_1_mat_icon_3_Template_mat_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const idx_r4 = ɵngcc0.ɵɵnextContext().index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.updateVote(idx_r4 + 1); });
    ɵngcc0.ɵɵtext(1, "star_border ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const idx_r4 = ɵngcc0.ɵɵnextContext().index;
    ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-grey-star-", idx_r4, "");
} }
function RatingComponent_mat_list_item_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 5);
    ɵngcc0.ɵɵelementStart(1, "span", 6);
    ɵngcc0.ɵɵtemplate(2, RatingComponent_mat_list_item_1_mat_icon_2_Template, 2, 4, "mat-icon", 7);
    ɵngcc0.ɵɵtemplate(3, RatingComponent_mat_list_item_1_mat_icon_3_Template, 2, 1, "mat-icon", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const currentRate_r3 = ctx.$implicit;
    const idx_r4 = ctx.index;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-rate-", idx_r4, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", currentRate_r3.fill);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !currentRate_r3.fill);
} }
function RatingComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtext(1, "Rating");
    ɵngcc0.ɵɵelementEnd();
} }
function RatingComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtext(1, "Ratings");
    ɵngcc0.ɵɵelementEnd();
} }
export class RatingComponent {
    constructor(ratingService) {
        this.ratingService = ratingService;
        this.average = 0;
        this.ratingsCounter = 0;
        this.ratingType = 'fiveStar';
        this.changeVote = new EventEmitter();
        this.stars = [];
        this.onDestroy$ = new Subject();
    }
    ngOnChanges() {
        this.ratingService.getRating(this.nodeId, this.ratingType)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((ratingEntry) => {
            this.refreshRating(ratingEntry);
        });
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    calculateStars() {
        this.stars = [];
        const roundedAverage = Math.round(this.average);
        for (let i = 0; i < 5; i++) {
            if (i < roundedAverage) {
                this.stars.push({ fill: true });
            }
            else {
                this.stars.push({ fill: false });
            }
        }
    }
    updateVote(vote) {
        if (this.ratingValue === vote) {
            this.unRateItem();
        }
        else {
            this.rateItem(vote);
        }
    }
    rateItem(vote) {
        this.ratingService.postRating(this.nodeId, this.ratingType, vote)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((ratingEntry) => {
            this.refreshRating(ratingEntry);
        });
    }
    unRateItem() {
        this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(() => {
            this.ratingService.getRating(this.nodeId, this.ratingType)
                .pipe(takeUntil(this.onDestroy$))
                .subscribe((ratingEntry) => {
                this.refreshRating(ratingEntry);
            });
        });
    }
    refreshRating(ratingEntry) {
        this.ratingValue = Number.parseFloat(ratingEntry.entry.myRating);
        this.average = ratingEntry.entry.aggregate.average;
        this.ratingsCounter = ratingEntry.entry.aggregate.numberOfRatings;
        this.calculateStars();
        this.changeVote.emit(this.average);
    }
}
RatingComponent.ɵfac = function RatingComponent_Factory(t) { return new (t || RatingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RatingService)); };
RatingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RatingComponent, selectors: [["adf-rating"]], inputs: { nodeId: "nodeId" }, outputs: { changeVote: "changeVote" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 4, consts: [["id", "adf-rating-container", 1, "adf-rating-container"], ["class", "adf-rating-star", 4, "ngFor", "ngForOf"], [1, "adf-rating-counter-container"], ["id", "adf-rating-counter", 1, "adf-rating-counter"], ["class", "adf-rating-left", 4, "ngIf"], [1, "adf-rating-star"], [3, "id"], ["class", "adf-colored-star", 3, "id", "ngClass", "click", 4, "ngIf"], ["class", "adf-grey-star", 3, "id", "click", 4, "ngIf"], [1, "adf-colored-star", 3, "id", "ngClass", "click"], [1, "adf-grey-star", 3, "id", "click"], [1, "adf-rating-left"]], template: function RatingComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-list", 0);
        ɵngcc0.ɵɵtemplate(1, RatingComponent_mat_list_item_1_Template, 4, 3, "mat-list-item", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, RatingComponent_div_5_Template, 2, 0, "div", 4);
        ɵngcc0.ɵɵtemplate(6, RatingComponent_div_6_Template, 2, 0, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.stars);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.ratingsCounter);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.ratingsCounter <= 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.ratingsCounter > 1);
    } }, directives: [ɵngcc2.MatList, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc2.MatListItem, ɵngcc4.MatIcon, ɵngcc3.NgClass], styles: [".adf-rating-container{display:flex;overflow:hidden;width:100%}.adf-rating-container .adf-rating-counter-container{align-items:center;display:flex;padding:0 6px}.adf-rating-container .adf-rating-left{padding:0 6px}.adf-rating-container .adf-rating-star{cursor:pointer;display:flex;justify-content:center;transition:all .3s;width:25px}.adf-rating-container .adf-rating-star .mat-list-item-content{padding:0!important}.adf-rating-container .adf-rating-star:hover{transform:rotate(13deg) scale(1.2)}.adf-rating-container .adf-colored-star{color:#ffe944}.adf-rating-container .adf-average-star,.adf-rating-container .adf-grey-star{color:grey!important}[dir=rtl] .adf-rating-container .adf-rating-star{transform:rotate(145deg)}[dir=rtl] .adf-rating-container .adf-rating-star:hover{transform:rotate(158deg) scale(1.2)}"], encapsulation: 2 });
RatingComponent.ctorParameters = () => [
    { type: RatingService }
];
RatingComponent.propDecorators = {
    nodeId: [{ type: Input }],
    changeVote: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RatingComponent, [{
        type: Component,
        args: [{
                selector: 'adf-rating',
                template: "<mat-list id=\"adf-rating-container\" class=\"adf-rating-container\">\n    <mat-list-item class=\"adf-rating-star\" *ngFor=\"let currentRate of stars; let idx = index;\">\n            <span id=\"adf-rate-{{idx}}\">\n                <mat-icon id=\"adf-colored-star-{{idx}}\" *ngIf=\"currentRate.fill\" class=\"adf-colored-star\"\n                          [ngClass]=\"{'adf-average-star': !ratingValue}\"\n                          (click)=\"updateVote(idx + 1)\">star_rate\n                </mat-icon>\n                <mat-icon id=\"adf-grey-star-{{idx}}\" *ngIf=\"!currentRate.fill\" class=\"adf-grey-star\"\n                          (click)=\"updateVote(idx + 1)\">star_border\n                </mat-icon>\n            </span>\n    </mat-list-item>\n    <div class=\"adf-rating-counter-container\">\n    <div id=\"adf-rating-counter\" class=\"adf-rating-counter\">{{ratingsCounter}}</div>\n    <div class=\"adf-rating-left\" *ngIf=\"ratingsCounter<=1\">Rating</div>\n    <div class=\"adf-rating-left\" *ngIf=\"ratingsCounter>1\">Ratings</div>\n    </div>\n</mat-list>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-rating-container{display:flex;overflow:hidden;width:100%}.adf-rating-container .adf-rating-counter-container{align-items:center;display:flex;padding:0 6px}.adf-rating-container .adf-rating-left{padding:0 6px}.adf-rating-container .adf-rating-star{cursor:pointer;display:flex;justify-content:center;transition:all .3s;width:25px}.adf-rating-container .adf-rating-star .mat-list-item-content{padding:0!important}.adf-rating-container .adf-rating-star:hover{transform:rotate(13deg) scale(1.2)}.adf-rating-container .adf-colored-star{color:#ffe944}.adf-rating-container .adf-average-star,.adf-rating-container .adf-grey-star{color:grey!important}[dir=rtl] .adf-rating-container .adf-rating-star{transform:rotate(145deg)}[dir=rtl] .adf-rating-container .adf-rating-star:hover{transform:rotate(158deg) scale(1.2)}"]
            }]
    }], function () { return [{ type: ɵngcc1.RatingService }]; }, { changeVote: [{
            type: Output
        }], nodeId: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,