/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { ContentNodeSelectorPanelService } from '../../../content-node-selector/content-node-selector-panel.service';
import { SearchQueryBuilderService } from '../../services/search-query-builder.service';
import { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../content-node-selector/content-node-selector-panel.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../search-filter/search-filter.component';
import * as ɵngcc4 from '../../services/search-query-builder.service';

function SearchPanelComponent_adf_search_filter_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-search-filter", 2);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("showContextFacets", false);
} }
export class SearchPanelComponent {
    constructor(contentNodeSelectorPanelService, queryBuilderService) {
        this.contentNodeSelectorPanelService = contentNodeSelectorPanelService;
        this.queryBuilderService = queryBuilderService;
    }
    ngOnInit() {
        this.queryBuilderService.categories = this.contentNodeSelectorPanelService.convertCustomModelPropertiesToSearchCategories();
    }
    hasCustomModels() {
        var _a, _b;
        return ((_b = (_a = this.contentNodeSelectorPanelService) === null || _a === void 0 ? void 0 : _a.customModels) === null || _b === void 0 ? void 0 : _b.length) > 0;
    }
}
SearchPanelComponent.ɵfac = function SearchPanelComponent_Factory(t) { return new (t || SearchPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ContentNodeSelectorPanelService), ɵngcc0.ɵɵdirectiveInject(SEARCH_QUERY_SERVICE_TOKEN)); };
SearchPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchPanelComponent, selectors: [["adf-search-panel"]], hostAttrs: [1, "adf-search-panel"], decls: 2, vars: 1, consts: [["data-automation-id", "adf-search-panel-container", 1, "adf-search-panel-scrollable"], ["class", "app-search-settings", 3, "showContextFacets", 4, "ngIf"], [1, "app-search-settings", 3, "showContextFacets"]], template: function SearchPanelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SearchPanelComponent_adf_search_filter_1_Template, 1, 1, "adf-search-filter", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasCustomModels());
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.SearchFilterComponent], styles: [".adf-search-panel-scrollable{max-height:349px;overflow:scroll}"], encapsulation: 2 });
SearchPanelComponent.ctorParameters = () => [
    { type: ContentNodeSelectorPanelService },
    { type: SearchQueryBuilderService, decorators: [{ type: Inject, args: [SEARCH_QUERY_SERVICE_TOKEN,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchPanelComponent, [{
        type: Component,
        args: [{
                selector: 'adf-search-panel',
                template: "<div class=\"adf-search-panel-scrollable\" data-automation-id=\"adf-search-panel-container\">\n    <adf-search-filter *ngIf=\"hasCustomModels()\"\n                       class=\"app-search-settings\"\n                       [showContextFacets]=\"false\">\n    </adf-search-filter>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-search-panel' },
                styles: [".adf-search-panel-scrollable{max-height:349px;overflow:scroll}"]
            }]
    }], function () { return [{ type: ɵngcc1.ContentNodeSelectorPanelService }, { type: ɵngcc4.SearchQueryBuilderService, decorators: [{
                type: Inject,
                args: [SEARCH_QUERY_SERVICE_TOKEN]
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjL2xpYi9zZWFyY2gvY29tcG9uZW50cy9zZWFyY2gtcGFuZWwvc2VhcmNoLXBhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sb0VBQW9FLENBQUM7QUFDckgsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDeEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7Ozs7Ozs7Ozs7OztBQVU5RSxNQUFNLE9BQU8sb0JBQW9CO0FBQUcsSUFFaEMsWUFBb0IsK0JBQWdFLEVBQzVCLG1CQUE4QztBQUMxRyxRQUZ3QixvQ0FBK0IsR0FBL0IsK0JBQStCLENBQWlDO0FBQUMsUUFDN0Isd0JBQW1CLEdBQW5CLG1CQUFtQixDQUEyQjtBQUFDLElBQ3ZHLENBQUM7QUFDTCxJQUNJLFFBQVE7QUFBSyxRQUNULElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLCtCQUErQixDQUFDLDhDQUE4QyxFQUFFLENBQUM7QUFDcEksSUFBSSxDQUFDO0FBQ0wsSUFDSSxlQUFlO0FBQUs7QUFDYixRQUFILE9BQU8sYUFBQSxJQUFJLENBQUMsK0JBQStCLDBDQUFFLFlBQVksMENBQUUsTUFBTSxJQUFHLENBQUMsQ0FBQztBQUM5RSxJQUFJLENBQUM7QUFDTDtnREFyQkMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxrQkFBa0Isa0JBQzVCO3NNQUE0QyxrQkFFNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksa0JBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxrQkFBa0IsRUFBRSwwR0FFdEM7Ozs7Ozs7a0tBQ0k7QUFBQztBQUE4QyxZQVozQywrQkFBK0I7QUFBSSxZQUNuQyx5QkFBeUIsdUJBY2pCLE1BQU0sU0FBQywwQkFBMEI7QUFBUTs7Ozs7Ozs7Ozs7OztrQ0FBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRlbnROb2RlU2VsZWN0b3JQYW5lbFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9jb250ZW50LW5vZGUtc2VsZWN0b3IvY29udGVudC1ub2RlLXNlbGVjdG9yLXBhbmVsLnNlcnZpY2UnO1xuaW1wb3J0IHsgU2VhcmNoUXVlcnlCdWlsZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3NlYXJjaC1xdWVyeS1idWlsZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgU0VBUkNIX1FVRVJZX1NFUlZJQ0VfVE9LRU4gfSBmcm9tICcuLi8uLi9zZWFyY2gtcXVlcnktc2VydmljZS50b2tlbic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXNlYXJjaC1wYW5lbCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NlYXJjaC1wYW5lbC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2VhcmNoLXBhbmVsLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7IGNsYXNzOiAnYWRmLXNlYXJjaC1wYW5lbCcgfVxuXG59KVxuZXhwb3J0IGNsYXNzIFNlYXJjaFBhbmVsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgY29udGVudE5vZGVTZWxlY3RvclBhbmVsU2VydmljZTogQ29udGVudE5vZGVTZWxlY3RvclBhbmVsU2VydmljZSxcbiAgICAgICAgICAgICAgICBASW5qZWN0KFNFQVJDSF9RVUVSWV9TRVJWSUNFX1RPS0VOKSBwcml2YXRlIHF1ZXJ5QnVpbGRlclNlcnZpY2U6IFNlYXJjaFF1ZXJ5QnVpbGRlclNlcnZpY2UpIHtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5xdWVyeUJ1aWxkZXJTZXJ2aWNlLmNhdGVnb3JpZXMgPSB0aGlzLmNvbnRlbnROb2RlU2VsZWN0b3JQYW5lbFNlcnZpY2UuY29udmVydEN1c3RvbU1vZGVsUHJvcGVydGllc1RvU2VhcmNoQ2F0ZWdvcmllcygpO1xuICAgIH1cblxuICAgIGhhc0N1c3RvbU1vZGVscygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGVudE5vZGVTZWxlY3RvclBhbmVsU2VydmljZT8uY3VzdG9tTW9kZWxzPy5sZW5ndGggPiAwO1xuICAgIH1cbn1cbiJdfQ==