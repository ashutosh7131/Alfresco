/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const DEFAULT_PAGE_SIZE = 5;
export class SearchFilterList {
    constructor(items = [], pageSize) {
        this.filteredItems = [];
        this._filterText = '';
        this.items = [];
        this.pageSize = DEFAULT_PAGE_SIZE;
        this.currentPageSize = DEFAULT_PAGE_SIZE;
        this._filter = () => true;
        this.items = items;
        this.filteredItems = items;
        this.pageSize = pageSize || DEFAULT_PAGE_SIZE;
        this.currentPageSize = pageSize || DEFAULT_PAGE_SIZE;
    }
    get filterText() {
        return this._filterText;
    }
    set filterText(value) {
        this._filterText = value;
        this.applyFilter();
    }
    get filter() {
        return this._filter;
    }
    set filter(value) {
        this._filter = value;
        this.applyFilter();
    }
    applyFilter() {
        if (this.filter) {
            this.filteredItems = this.items.filter(this.filter);
        }
        else {
            this.filteredItems = this.items;
        }
        this.currentPageSize = this.pageSize;
    }
    get visibleItems() {
        return this.filteredItems.slice(0, this.currentPageSize);
    }
    get length() {
        return this.items.length;
    }
    get canShowMoreItems() {
        return this.filteredItems.length > this.currentPageSize;
    }
    get canShowLessItems() {
        return this.currentPageSize > this.pageSize;
    }
    get fitsPage() {
        return this.pageSize >= this.filteredItems.length;
    }
    showMoreItems() {
        if (this.canShowMoreItems) {
            this.currentPageSize += this.pageSize;
        }
    }
    showLessItems() {
        if (this.canShowLessItems) {
            this.currentPageSize -= this.pageSize;
        }
    }
    clear() {
        this.currentPageSize = this.pageSize;
        this.items = [];
        this.filteredItems = [];
        this.filterText = '';
    }
    addItem(item) {
        if (!item) {
            return;
        }
        this.items.push(item);
        this.applyFilter();
    }
    deleteItem(item) {
        const removeIndex = this.items.indexOf(item);
        if (removeIndex > -1) {
            this.items.splice(removeIndex, 1);
            this.filteredItems.splice(removeIndex, 1);
        }
    }
    [Symbol.iterator]() {
        let pointer = 0;
        const items = this.visibleItems;
        return {
            next() {
                if (pointer < items.length) {
                    return {
                        done: false,
                        value: items[pointer++]
                    };
                }
                else {
                    return {
                        done: true,
                        value: null
                    };
                }
            }
        };
    }
}
//# sourceMappingURL=data:application/json;base64,