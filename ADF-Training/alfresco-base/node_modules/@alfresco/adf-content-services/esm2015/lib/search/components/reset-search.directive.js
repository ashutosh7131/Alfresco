/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Directive, HostListener } from '@angular/core';
import { SearchFacetFiltersService } from '../services/search-facet-filters.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../services/search-facet-filters.service';
export class ResetSearchDirective {
    constructor(filterService) {
        this.filterService = filterService;
    }
    onClick() {
        this.filterService.reset();
    }
}
ResetSearchDirective.ɵfac = function ResetSearchDirective_Factory(t) { return new (t || ResetSearchDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SearchFacetFiltersService)); };
ResetSearchDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ResetSearchDirective, selectors: [["", "adf-reset-search", ""]], hostBindings: function ResetSearchDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ResetSearchDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } } });
ResetSearchDirective.ctorParameters = () => [
    { type: SearchFacetFiltersService }
];
ResetSearchDirective.propDecorators = {
    onClick: [{ type: HostListener, args: ['click',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ResetSearchDirective, [{
        type: Directive,
        args: [{
                selector: '[adf-reset-search]'
            }]
    }], function () { return [{ type: ɵngcc1.SearchFacetFiltersService }]; }, { onClick: [{
            type: HostListener,
            args: ['click']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzZXQtc2VhcmNoLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjL2xpYi9zZWFyY2gvY29tcG9uZW50cy9yZXNldC1zZWFyY2guZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQzs7O0FBS3JGLE1BQU0sT0FBTyxvQkFBb0I7QUFDakMsSUFLSSxZQUFvQixhQUF3QztBQUFJLFFBQTVDLGtCQUFhLEdBQWIsYUFBYSxDQUEyQjtBQUFDLElBQUcsQ0FBQztBQUNyRSxJQUxJLE9BQU87QUFDWCxRQUFRLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDbkMsSUFBSSxDQUFDO0FBQ0w7Z0RBUkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxvQkFBb0IsY0FDL0I7OztXQUNJO0FBQUM7QUFDVSxZQU5QLHlCQUF5QjtBQUFHO0FBQUc7QUFBd0Msc0JBTTNFLFlBQVksU0FBQyxPQUFPO0FBQ3JCOzs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTZWFyY2hGYWNldEZpbHRlcnNTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvc2VhcmNoLWZhY2V0LWZpbHRlcnMuc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1thZGYtcmVzZXQtc2VhcmNoXSdcbn0pXG5leHBvcnQgY2xhc3MgUmVzZXRTZWFyY2hEaXJlY3RpdmUge1xuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgICBvbkNsaWNrKCkge1xuICAgICAgICB0aGlzLmZpbHRlclNlcnZpY2UucmVzZXQoKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZpbHRlclNlcnZpY2U6IFNlYXJjaEZhY2V0RmlsdGVyc1NlcnZpY2UpIHsgfVxufVxuIl19