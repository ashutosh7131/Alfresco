/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, Output, EventEmitter, ViewEncapsulation, ViewChild, Inject, ElementRef } from '@angular/core';
import { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';
import { TranslationService } from '@alfresco/adf-core';
import { SearchWidgetContainerComponent } from '../search-widget-container/search-widget-container.component';
import { SearchHeaderQueryBuilderService } from '../../services/search-header-query-builder.service';
import { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/cdk/a11y';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/button';
import * as ɵngcc5 from '@angular/material/menu';
import * as ɵngcc6 from '@angular/material/tooltip';
import * as ɵngcc7 from '@angular/material/badge';
import * as ɵngcc8 from '../search-widget-container/search-widget-container.component';
import * as ɵngcc9 from '@angular/material/dialog';
import * as ɵngcc10 from '@ngx-translate/core';
import * as ɵngcc11 from '../../services/search-header-query-builder.service';

const _c0 = ["filterContainer"];
const _c1 = function (a0) { return { "adf-icon-active": a0 }; };
function SearchFilterContainerComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "button", 2, 3);
    ɵngcc0.ɵɵlistener("click", function SearchFilterContainerComponent_div_0_Template_button_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); return $event.stopPropagation(); })("menuOpened", function SearchFilterContainerComponent_div_0_Template_button_menuOpened_1_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onMenuOpen(); })("keyup.enter", function SearchFilterContainerComponent_div_0_Template_button_keyup_enter_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); return $event.stopPropagation(); });
    ɵngcc0.ɵɵelement(3, "adf-icon", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "mat-menu", 5, 6);
    ɵngcc0.ɵɵlistener("closed", function SearchFilterContainerComponent_div_0_Template_mat_menu_closed_4_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onClosed(); });
    ɵngcc0.ɵɵelementStart(6, "div", 7, 8);
    ɵngcc0.ɵɵlistener("keydown.tab", function SearchFilterContainerComponent_div_0_Template_div_keydown_tab_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(8, "div", 9);
    ɵngcc0.ɵɵlistener("click", function SearchFilterContainerComponent_div_0_Template_div_click_8_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(9, "div", 10);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "adf-search-widget-container", 11);
    ɵngcc0.ɵɵlistener("keypress", function SearchFilterContainerComponent_div_0_Template_adf_search_widget_container_keypress_12_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const _r1 = ɵngcc0.ɵɵreference(2); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onKeyPressed($event, _r1); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "mat-dialog-actions", 12);
    ɵngcc0.ɵɵelementStart(14, "button", 13);
    ɵngcc0.ɵɵlistener("click", function SearchFilterContainerComponent_div_0_Template_button_click_14_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onClearButtonClick($event); });
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "uppercase");
    ɵngcc0.ɵɵpipe(17, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(18, "button", 14);
    ɵngcc0.ɵɵlistener("click", function SearchFilterContainerComponent_div_0_Template_button_click_18_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onApply(); });
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "uppercase");
    ɵngcc0.ɵɵpipe(21, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r1 = ɵngcc0.ɵɵreference(2);
    const _r2 = ɵngcc0.ɵɵreference(5);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r2)("matTooltip", ctx_r0.getTooltipTranslation(ctx_r0.col == null ? null : ctx_r0.col.title));
    ɵngcc0.ɵɵattribute("aria-label", ctx_r0.getTooltipTranslation(ctx_r0.col == null ? null : ctx_r0.col.title));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(22, _c1, ctx_r0.isActive() || _r1.menuOpen))("matBadgeHidden", !ctx_r0.isActive());
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 12, ctx_r0.category == null ? null : ctx_r0.category.name));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("id", ctx_r0.category == null ? null : ctx_r0.category.id)("selector", ctx_r0.category == null ? null : ctx_r0.category.component == null ? null : ctx_r0.category.component.selector)("settings", ctx_r0.category == null ? null : ctx_r0.category.component == null ? null : ctx_r0.category.component.settings)("value", ctx_r0.initialValue);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(16, 14, ɵngcc0.ɵɵpipeBind1(17, 16, "SEARCH.SEARCH_HEADER.CLEAR")), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(20, 18, ɵngcc0.ɵɵpipeBind1(21, 20, "SEARCH.SEARCH_HEADER.APPLY")), " ");
} }
export class SearchFilterContainerComponent {
    constructor(searchFilterQueryBuilder, translationService, focusTrapFactory) {
        this.searchFilterQueryBuilder = searchFilterQueryBuilder;
        this.translationService = translationService;
        this.focusTrapFactory = focusTrapFactory;
        this.filterChange = new EventEmitter();
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        this.category = this.searchFilterQueryBuilder.getCategoryForColumn(this.col.key);
        this.initialValue = this.value && this.value[this.col.key] ? this.value[this.col.key] : undefined;
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    onKeyPressed(event, menuTrigger) {
        if (event.key === 'Enter' && this.widgetContainer.selector !== 'check-list') {
            this.onApply();
            menuTrigger.closeMenu();
        }
    }
    onApply() {
        if (this.widgetContainer.hasValueSelected()) {
            this.searchFilterQueryBuilder.setActiveFilter(this.category.columnKey, this.widgetContainer.getCurrentValue());
            this.filterChange.emit();
            this.widgetContainer.applyInnerWidget();
        }
        else {
            this.resetSearchFilter();
        }
    }
    onClearButtonClick(event) {
        event.stopPropagation();
        this.resetSearchFilter();
    }
    resetSearchFilter() {
        this.widgetContainer.resetInnerWidget();
        this.searchFilterQueryBuilder.removeActiveFilter(this.category.columnKey);
        this.filterChange.emit();
    }
    getTooltipTranslation(columnTitle) {
        if (!columnTitle) {
            columnTitle = 'SEARCH.SEARCH_HEADER.TYPE';
        }
        return this.translationService.instant('SEARCH.SEARCH_HEADER.FILTER_BY', { category: this.translationService.instant(columnTitle) });
    }
    isActive() {
        return this.widgetContainer && this.widgetContainer.componentRef && this.widgetContainer.componentRef.instance.isActive;
    }
    onMenuOpen() {
        if (this.filterContainer && !this.focusTrap) {
            this.focusTrap = this.focusTrapFactory.create(this.filterContainer.nativeElement);
            this.focusTrap.focusInitialElement();
        }
    }
    onClosed() {
        this.focusTrap.destroy();
        this.focusTrap = null;
    }
}
SearchFilterContainerComponent.ɵfac = function SearchFilterContainerComponent_Factory(t) { return new (t || SearchFilterContainerComponent)(ɵngcc0.ɵɵdirectiveInject(SEARCH_QUERY_SERVICE_TOKEN), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ConfigurableFocusTrapFactory)); };
SearchFilterContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchFilterContainerComponent, selectors: [["adf-search-filter-container"]], viewQuery: function SearchFilterContainerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(SearchWidgetContainerComponent, true);
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.widgetContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterContainer = _t.first);
    } }, inputs: { col: "col", value: "value" }, outputs: { filterChange: "filterChange" }, decls: 1, vars: 1, consts: [["class", "adf-filter", 4, "ngIf"], [1, "adf-filter"], ["mat-icon-button", "", "id", "filter-menu-button", 1, "adf-filter-button", 3, "matMenuTriggerFor", "matTooltip", "click", "menuOpened", "keyup.enter"], ["menuTrigger", "matMenuTrigger"], ["value", "adf:filter", "matBadge", "filter", "matBadgeColor", "warn", 3, "ngClass", "matBadgeHidden"], [1, "adf-filter-menu", 3, "closed"], ["filter", "matMenu"], [3, "keydown.tab"], ["filterContainer", ""], [1, "adf-filter-container", 3, "click"], [1, "adf-filter-title"], [3, "id", "selector", "settings", "value", "keypress"], [1, "adf-filter-actions"], ["mat-button", "", "id", "clear-filter-button", 3, "click"], ["mat-button", "", "color", "primary", "id", "apply-filter-button", 1, "adf-filter-apply-button", 3, "click"]], template: function SearchFilterContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SearchFilterContainerComponent_div_0_Template, 22, 24, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.category);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.MatButton, ɵngcc5.MatMenuTrigger, ɵngcc6.MatTooltip, ɵngcc1.IconComponent, ɵngcc7.MatBadge, ɵngcc3.NgClass, ɵngcc5._MatMenu, ɵngcc8.SearchWidgetContainerComponent, ɵngcc9.MatDialogActions], pipes: [ɵngcc10.TranslatePipe, ɵngcc3.UpperCasePipe], styles: [".adf-filter-button{margin-left:-7px!important}.adf-filter-button .adf-icon{color:var(--theme-icon-fg-color);opacity:1}.adf-filter-button .adf-icon-active{color:var(--theme-primary-color)}.adf-filter-button .adf-icon .mat-badge-active{border:2px solid var(--theme-card-bg-color)!important}.adf-filter-button .mat-icon{height:18px;width:18px}.adf-filter-button .mat-badge-content{height:10px;right:-6px!important;top:-3px!important;width:10px}.adf-filter-container{color:var(--theme-text-bold-color)!important;display:flex;flex-direction:column;padding:15px 15px 10px}.adf-filter-container .adf-facet-buttons{display:none}.adf-filter-container .adf-search-check-list{padding:5px 0}.adf-filter-container input{background:2px solid var(--theme-card-bg-color)!important}.adf-filter-title{color:var(--theme-text-bold-color);font-size:1.1em;padding-bottom:5px}.adf-filter-actions{background-color:var(--theme-hover-bg-color);display:flex;justify-content:flex-end;padding:15px}.adf-filter-actions>button{color:var(--theme-text-bold-color);font-size:.9em}.mat-menu-panel.adf-filter-menu .mat-menu-content{min-width:260px;padding:0}"], encapsulation: 2 });
SearchFilterContainerComponent.ctorParameters = () => [
    { type: SearchHeaderQueryBuilderService, decorators: [{ type: Inject, args: [SEARCH_QUERY_SERVICE_TOKEN,] }] },
    { type: TranslationService },
    { type: ConfigurableFocusTrapFactory }
];
SearchFilterContainerComponent.propDecorators = {
    col: [{ type: Input }],
    value: [{ type: Input }],
    filterChange: [{ type: Output }],
    widgetContainer: [{ type: ViewChild, args: [SearchWidgetContainerComponent,] }],
    filterContainer: [{ type: ViewChild, args: ['filterContainer',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchFilterContainerComponent, [{
        type: Component,
        args: [{
                selector: 'adf-search-filter-container',
                template: "<div *ngIf=\"!!category\"\n     class=\"adf-filter\">\n    <button mat-icon-button\n            [matMenuTriggerFor]=\"filter\"\n            id=\"filter-menu-button\"\n            #menuTrigger=\"matMenuTrigger\"\n            (click)=\"$event.stopPropagation()\"\n            (menuOpened)=\"onMenuOpen()\"\n            (keyup.enter)=\"$event.stopPropagation()\"\n            class=\"adf-filter-button\"\n            [attr.aria-label]=\"getTooltipTranslation(col?.title)\"\n            [matTooltip]=\"getTooltipTranslation(col?.title)\">\n        <adf-icon value=\"adf:filter\"\n                  [ngClass]=\"{ 'adf-icon-active': isActive() || menuTrigger.menuOpen }\"\n                  matBadge=\"filter\"\n                  matBadgeColor=\"warn\"\n                  [matBadgeHidden]=\"!isActive()\">\n        </adf-icon>\n    </button>\n\n    <mat-menu #filter=\"matMenu\"\n              class=\"adf-filter-menu\"\n              (closed)=\"onClosed()\">\n        <div #filterContainer\n             (keydown.tab)=\"$event.stopPropagation();\">\n            <div (click)=\"$event.stopPropagation()\"\n                 class=\"adf-filter-container\">\n                <div class=\"adf-filter-title\">{{ category?.name | translate }}</div>\n                <adf-search-widget-container (keypress)=\"onKeyPressed($event, menuTrigger)\"\n                                             [id]=\"category?.id\"\n                                             [selector]=\"category?.component?.selector\"\n                                             [settings]=\"category?.component?.settings\"\n                                             [value]=\"initialValue\">\n                </adf-search-widget-container>\n            </div>\n            <mat-dialog-actions class=\"adf-filter-actions\">\n                <button mat-button\n                        id=\"clear-filter-button\"\n                        (click)=\"onClearButtonClick($event)\">{{ 'SEARCH.SEARCH_HEADER.CLEAR' | translate | uppercase }}\n                </button>\n                <button mat-button\n                        color=\"primary\"\n                        id=\"apply-filter-button\"\n                        class=\"adf-filter-apply-button\"\n                        (click)=\"onApply()\">{{ 'SEARCH.SEARCH_HEADER.APPLY' | translate | uppercase }}\n                </button>\n            </mat-dialog-actions>\n        </div>\n    </mat-menu>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-filter-button{margin-left:-7px!important}.adf-filter-button .adf-icon{color:var(--theme-icon-fg-color);opacity:1}.adf-filter-button .adf-icon-active{color:var(--theme-primary-color)}.adf-filter-button .adf-icon .mat-badge-active{border:2px solid var(--theme-card-bg-color)!important}.adf-filter-button .mat-icon{height:18px;width:18px}.adf-filter-button .mat-badge-content{height:10px;right:-6px!important;top:-3px!important;width:10px}.adf-filter-container{color:var(--theme-text-bold-color)!important;display:flex;flex-direction:column;padding:15px 15px 10px}.adf-filter-container .adf-facet-buttons{display:none}.adf-filter-container .adf-search-check-list{padding:5px 0}.adf-filter-container input{background:2px solid var(--theme-card-bg-color)!important}.adf-filter-title{color:var(--theme-text-bold-color);font-size:1.1em;padding-bottom:5px}.adf-filter-actions{background-color:var(--theme-hover-bg-color);display:flex;justify-content:flex-end;padding:15px}.adf-filter-actions>button{color:var(--theme-text-bold-color);font-size:.9em}.mat-menu-panel.adf-filter-menu .mat-menu-content{min-width:260px;padding:0}"]
            }]
    }], function () { return [{ type: ɵngcc11.SearchHeaderQueryBuilderService, decorators: [{
                type: Inject,
                args: [SEARCH_QUERY_SERVICE_TOKEN]
            }] }, { type: ɵngcc1.TranslationService }, { type: ɵngcc2.ConfigurableFocusTrapFactory }]; }, { filterChange: [{
            type: Output
        }], col: [{
            type: Input
        }], value: [{
            type: Input
        }], widgetContainer: [{
            type: ViewChild,
            args: [SearchWidgetContainerComponent]
        }], filterContainer: [{
            type: ViewChild,
            args: ['filterContainer']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,