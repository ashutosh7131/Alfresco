/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AuthenticationService, ThumbnailService, SearchTextInputComponent } from '@alfresco/adf-core';
import { Component, EventEmitter, Input, Output, QueryList, ViewEncapsulation, ViewChild, ViewChildren, ContentChild } from '@angular/core';
import { Subject } from 'rxjs';
import { SearchComponent } from './search.component';
import { MatListItem } from '@angular/material/list';
import { EmptySearchResultComponent } from './empty-search-result.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from './search.component';
import * as ɵngcc4 from '@angular/material/list';
import * as ɵngcc5 from '@angular/material/icon';
import * as ɵngcc6 from '@angular/material/core';
import * as ɵngcc7 from '@ngx-translate/core';

const _c0 = ["searchTextInput"];
const _c1 = ["search"];
function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_h4_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h4", 15);
    ɵngcc0.ɵɵpipe(1, "highlight");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext();
    const idx_r10 = ctx_r14.index;
    const item_r9 = ctx_r14.$implicit;
    const ctx_r11 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "result_name_", idx_r10, "");
    ɵngcc0.ɵɵproperty("innerHtml", ɵngcc0.ɵɵpipeBind2(1, 3, item_r9.entry.name, ctx_r11.searchTerm), ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r9 == null ? null : item_r9.entry.name, " ");
} }
function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "h4", 15);
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext();
    const idx_r10 = ctx_r15.index;
    const item_r9 = ctx_r15.$implicit;
    ɵngcc0.ɵɵpropertyInterpolate1("id", "result_name_", idx_r10, "");
    ɵngcc0.ɵɵproperty("innerHtml", item_r9.entry.name, ɵngcc0.ɵɵsanitizeHtml);
} }
function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 9);
    ɵngcc0.ɵɵlistener("blur", function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template_mat_list_item_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(4); return ctx_r16.onBlur($event); })("keyup.arrowdown", function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template_mat_list_item_keyup_arrowdown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(4); return ctx_r18.onRowArrowDown($event); })("keyup.arrowup", function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template_mat_list_item_keyup_arrowup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r19 = ɵngcc0.ɵɵnextContext(4); return ctx_r19.onRowArrowUp($event); })("click", function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template_mat_list_item_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const item_r9 = ctx.$implicit; const ctx_r20 = ɵngcc0.ɵɵnextContext(4); return ctx_r20.elementClicked(item_r9); })("keyup.enter", function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template_mat_list_item_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const item_r9 = ctx.$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(4); return ctx_r21.elementClicked(item_r9); })("touchend", function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template_mat_list_item_touchend_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const item_r9 = ctx.$implicit; const ctx_r22 = ɵngcc0.ɵɵnextContext(4); return ctx_r22.elementClicked(item_r9); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 10);
    ɵngcc0.ɵɵelement(2, "img", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_h4_3_Template, 3, 6, "h4", 12);
    ɵngcc0.ɵɵtemplate(4, SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_ng_template_4_Template, 1, 2, "ng-template", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementStart(6, "p", 14);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r9 = ctx.$implicit;
    const idx_r10 = ctx.index;
    const _r12 = ɵngcc0.ɵɵreference(5);
    const ctx_r7 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "result_option_", idx_r10, "");
    ɵngcc0.ɵɵproperty("tabindex", 0);
    ɵngcc0.ɵɵattribute("data-automation-id", "autocomplete_for_" + item_r9.entry.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("alt", ctx_r7.getMimeType(item_r9))("src", ctx_r7.getMimeTypeIcon(item_r9), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.highlight)("ngIfElse", _r12);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r9 == null ? null : item_r9.entry.createdByUser.displayName, " ");
} }
function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_2_ng_content_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["selector", "adf-empty-search-result", "*ngIf", "isNoSearchTemplatePresent() else defaultNoResult"]);
} }
const _c2 = function (a0) { return { searchTerm: a0 }; };
function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r25 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, "SEARCH.RESULTS.NONE", ɵngcc0.ɵɵpureFunction1(4, _c2, ctx_r25.searchTerm)));
} }
function SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 16);
    ɵngcc0.ɵɵtemplate(1, SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_2_ng_content_1_Template, 1, 0, "ng-content", 17);
    ɵngcc0.ɵɵtemplate(2, SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_2_ng_template_2_Template, 3, 6, "ng-template", null, 18, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r24 = ɵngcc0.ɵɵreference(3);
    const ctx_r8 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.isNoSearchTemplatePresent())("ngIfElse", _r24);
} }
function SearchControlComponent_div_0_ng_template_6_mat_list_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list", 6);
    ɵngcc0.ɵɵtemplate(1, SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_1_Template, 8, 8, "mat-list-item", 7);
    ɵngcc0.ɵɵtemplate(2, SearchControlComponent_div_0_ng_template_6_mat_list_0_mat_list_item_2_Template, 4, 2, "mat-list-item", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const data_r5 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", data_r5 == null ? null : data_r5.list == null ? null : data_r5.list.entries);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (data_r5 == null ? null : data_r5.list == null ? null : data_r5.list.entries.length) === 0);
} }
function SearchControlComponent_div_0_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SearchControlComponent_div_0_ng_template_6_mat_list_0_Template, 3, 2, "mat-list", 5);
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r1 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵproperty("ngIf", _r1 == null ? null : _r1.isSearchBarActive());
} }
function SearchControlComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "adf-search-text-input", 1, 2);
    ɵngcc0.ɵɵlistener("searchChange", function SearchControlComponent_div_0_Template_adf_search_text_input_searchChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.inputChange($event); })("reset", function SearchControlComponent_div_0_Template_adf_search_text_input_reset_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.onReset($event); })("selectResult", function SearchControlComponent_div_0_Template_adf_search_text_input_selectResult_1_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.onSelectFirstResult(); })("submit", function SearchControlComponent_div_0_Template_adf_search_text_input_submit_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.submit.emit($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "adf-search", 3, 4);
    ɵngcc0.ɵɵtemplate(6, SearchControlComponent_div_0_ng_template_6_Template, 1, 1, "ng-template");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r3 = ɵngcc0.ɵɵreference(5);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("searchTerm", ctx_r0.searchTerm)("expandable", ctx_r0.expandable)("autocomplete", ctx_r0.autocomplete)("liveSearchEnabled", ctx_r0.liveSearchEnabled)("focusListener", ctx_r0.focusSubject.asObservable())("searchAutocomplete", _r3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("maxResults", ctx_r0.liveSearchMaxResults);
} }
const _c3 = ["*"];
export class SearchControlComponent {
    constructor(authService, thumbnailService) {
        this.authService = authService;
        this.thumbnailService = thumbnailService;
        this.highlight = false;
        this.inputType = 'text';
        this.liveSearchEnabled = true;
        this.autocomplete = false;
        this.expandable = true;
        this.liveSearchMaxResults = 5;
        this.submit = new EventEmitter();
        this.searchChange = new EventEmitter();
        this.optionClicked = new EventEmitter();
        this.focusSubject = new Subject();
        this.noSearchResultTemplate = null;
        this.searchTerm = '';
        this.onDestroy$ = new Subject();
    }
    isNoSearchTemplatePresent() {
        return !!this.emptySearchTemplate;
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    isLoggedIn() {
        return this.authService.isEcmLoggedIn();
    }
    inputChange(value) {
        this.searchTerm = value;
        this.searchChange.emit(value);
    }
    getMimeTypeIcon(node) {
        const mimeType = this.getMimeType(node);
        return this.thumbnailService.getMimeTypeIcon(mimeType);
    }
    getMimeType(node) {
        let mimeType;
        if (node.entry.content && node.entry.content.mimeType) {
            mimeType = node.entry.content.mimeType;
        }
        if (node.entry.isFolder) {
            mimeType = 'folder';
        }
        return mimeType;
    }
    elementClicked(item) {
        if (item.entry) {
            this.optionClicked.next(item);
            this.focusSubject.next(new FocusEvent('blur'));
        }
    }
    onFocus(event) {
        this.focusSubject.next(event);
    }
    onBlur(event) {
        const nextElement = this.getNextElementSibling(event.target);
        if (!nextElement && !this.isListElement(event)) {
            this.focusSubject.next(event);
        }
    }
    onSelectFirstResult() {
        if (this.listResultElement && this.listResultElement.length > 0) {
            const firstElement = this.listResultElement.first;
            firstElement._getHostElement().focus();
        }
    }
    onRowArrowDown(event) {
        const nextElement = this.getNextElementSibling(event.target);
        if (nextElement) {
            nextElement.focus();
        }
    }
    onRowArrowUp(event) {
        const previousElement = this.getPreviousElementSibling(event.target);
        if (previousElement) {
            previousElement.focus();
        }
        else {
            this.focusSubject.next(new FocusEvent('focus'));
        }
    }
    onReset(status) {
        if (status) {
            this.searchAutocomplete.resetResults();
        }
    }
    isListElement(event) {
        return event.relatedTarget && event.relatedTarget.children[0] && event.relatedTarget.children[0].className === 'mat-list-item-content';
    }
    getNextElementSibling(node) {
        return node.nextElementSibling;
    }
    getPreviousElementSibling(node) {
        return node.previousElementSibling;
    }
}
SearchControlComponent.ɵfac = function SearchControlComponent_Factory(t) { return new (t || SearchControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AuthenticationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThumbnailService)); };
SearchControlComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchControlComponent, selectors: [["adf-search-control"]], contentQueries: function SearchControlComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, EmptySearchResultComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.emptySearchTemplate = _t.first);
    } }, viewQuery: function SearchControlComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
        ɵngcc0.ɵɵviewQuery(MatListItem, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchTextInput = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchAutocomplete = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listResultElement = _t);
    } }, hostAttrs: [1, "adf-search-control"], inputs: { highlight: "highlight", inputType: "inputType", liveSearchEnabled: "liveSearchEnabled", autocomplete: "autocomplete", expandable: "expandable", liveSearchMaxResults: "liveSearchMaxResults" }, outputs: { submit: "submit", searchChange: "searchChange", optionClicked: "optionClicked" }, ngContentSelectors: _c3, decls: 1, vars: 1, consts: [[4, "ngIf"], [3, "searchTerm", "expandable", "autocomplete", "liveSearchEnabled", "focusListener", "searchAutocomplete", "searchChange", "reset", "selectResult", "submit"], ["searchTextInput", ""], [1, "adf-search-result-autocomplete", 3, "maxResults"], ["search", "", "auto", "searchAutocomplete"], ["id", "autocomplete-search-result-list", 4, "ngIf"], ["id", "autocomplete-search-result-list"], ["class", "adf-search-autocomplete-item", 3, "id", "tabindex", "blur", "keyup.arrowdown", "keyup.arrowup", "click", "keyup.enter", "touchend", 4, "ngFor", "ngForOf"], ["id", "search_no_result", "data-automation-id", "search_no_result_found", 4, "ngIf"], [1, "adf-search-autocomplete-item", 3, "id", "tabindex", "blur", "keyup.arrowdown", "keyup.arrowup", "click", "keyup.enter", "touchend"], ["mat-list-icon", ""], [3, "alt", "src"], ["mat-line", "", "class", "adf-search-fixed-text", 3, "id", "innerHtml", 4, "ngIf", "ngIfElse"], ["elseBlock", ""], ["mat-line", "", 1, "adf-search-fixed-text"], ["mat-line", "", 1, "adf-search-fixed-text", 3, "id", "innerHtml"], ["id", "search_no_result", "data-automation-id", "search_no_result_found"], [4, "ngIf", "ngIfElse"], ["defaultNoResult", ""]], template: function SearchControlComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, SearchControlComponent_div_0_Template, 7, 7, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoggedIn());
    } }, directives: [ɵngcc2.NgIf, ɵngcc1.SearchTextInputComponent, ɵngcc3.SearchComponent, ɵngcc4.MatList, ɵngcc2.NgForOf, ɵngcc4.MatListItem, ɵngcc5.MatIcon, ɵngcc4.MatListIconCssMatStyler, ɵngcc6.MatLine], pipes: [ɵngcc1.HighlightPipe, ɵngcc7.TranslatePipe], styles: [".adf-search-result-autocomplete{-webkit-overflow-scrolling:touch;background-color:var(--theme-card-bg-color);border-radius:2px;color:var(--theme-text-fg-color);font-size:15px;margin-left:45px;margin-top:-22px;max-height:400px;max-width:280px;min-width:112px;overflow:auto;position:absolute;transform:translateX(-40px);transform-origin:top left;z-index:5}.adf-search-result-autocomplete:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (max-width:959px){.adf-search-result-autocomplete{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}.adf-search-autocomplete-item:hover{background-color:var(--theme-bg-hover-color);opacity:1}"], encapsulation: 2 });
SearchControlComponent.ctorParameters = () => [
    { type: AuthenticationService },
    { type: ThumbnailService }
];
SearchControlComponent.propDecorators = {
    highlight: [{ type: Input }],
    inputType: [{ type: Input }],
    liveSearchEnabled: [{ type: Input }],
    autocomplete: [{ type: Input }],
    expandable: [{ type: Input }],
    liveSearchMaxResults: [{ type: Input }],
    submit: [{ type: Output }],
    searchChange: [{ type: Output }],
    optionClicked: [{ type: Output }],
    searchTextInput: [{ type: ViewChild, args: ['searchTextInput',] }],
    searchAutocomplete: [{ type: ViewChild, args: ['search',] }],
    listResultElement: [{ type: ViewChildren, args: [MatListItem,] }],
    emptySearchTemplate: [{ type: ContentChild, args: [EmptySearchResultComponent,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchControlComponent, [{
        type: Component,
        args: [{
                selector: 'adf-search-control',
                template: "<div *ngIf=\"isLoggedIn()\">\n    <adf-search-text-input  #searchTextInput\n                            [searchTerm]= \"searchTerm\"\n                            [expandable]=\"expandable\"\n                            [autocomplete]=\"autocomplete\"\n                            [liveSearchEnabled]=\"liveSearchEnabled\"\n                            [focusListener]=\"focusSubject.asObservable()\"\n                            [searchAutocomplete]=\"auto\"\n                            (searchChange)=\"inputChange($event)\"\n                            (reset)=\"onReset($event)\"\n                            (selectResult)=\"onSelectFirstResult()\"\n                            (submit)=\"submit.emit($event)\"></adf-search-text-input>\n\n    <adf-search #search\n                #auto=\"searchAutocomplete\"\n                class=\"adf-search-result-autocomplete\"\n                [maxResults]=\"liveSearchMaxResults\">\n        <ng-template let-data>\n            <mat-list *ngIf=\"searchTextInput?.isSearchBarActive()\" id=\"autocomplete-search-result-list\">\n                <mat-list-item\n                    *ngFor=\"let item of data?.list?.entries; let idx = index\"\n                    id=\"result_option_{{idx}}\"\n                    [attr.data-automation-id]=\"'autocomplete_for_' + item.entry.name\"\n                    [tabindex]=\"0\"\n                    (blur)=\"onBlur($event)\"\n                    (keyup.arrowdown)=\"onRowArrowDown($event)\"\n                    (keyup.arrowup)=\"onRowArrowUp($event)\"\n                    class=\"adf-search-autocomplete-item\"\n                    (click)=\"elementClicked(item)\"\n                    (keyup.enter)=\"elementClicked(item)\"\n                    (touchend)=\"elementClicked(item)\">\n                    <!-- This is a comment -->\n                    <mat-icon mat-list-icon>\n                        <img [alt]=\"getMimeType(item)\" [src]=\"getMimeTypeIcon(item)\"/>\n                    </mat-icon>\n                    <h4 mat-line id=\"result_name_{{idx}}\"\n                        *ngIf=\"highlight; else elseBlock\"\n                        class=\"adf-search-fixed-text\"\n                        [innerHtml]=\"item.entry.name | highlight: searchTerm\">\n                        {{ item?.entry.name }}\n                    </h4>\n                    <ng-template #elseBlock>\n                        <h4 class=\"adf-search-fixed-text\" mat-line id=\"result_name_{{idx}}\"\n                            [innerHtml]=\"item.entry.name\"></h4>\n                    </ng-template>\n                    <p mat-line class=\"adf-search-fixed-text\"> {{item?.entry.createdByUser.displayName}} </p>\n                </mat-list-item>\n                <mat-list-item id=\"search_no_result\"\n                            data-automation-id=\"search_no_result_found\"\n                            *ngIf=\"data?.list?.entries.length === 0\">\n                    <ng-content\n                        selector=\"adf-empty-search-result\"\n                        *ngIf=\"isNoSearchTemplatePresent() else defaultNoResult\">\n                    </ng-content>\n                    <ng-template #defaultNoResult>\n                        <p mat-line class=\"adf-search-fixed-text\">{{ 'SEARCH.RESULTS.NONE' | translate:{searchTerm:\n                            searchTerm} }}</p>\n                    </ng-template>\n                </mat-list-item>\n            </mat-list>\n        </ng-template>\n    </adf-search>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-search-control' },
                styles: [".adf-search-result-autocomplete{-webkit-overflow-scrolling:touch;background-color:var(--theme-card-bg-color);border-radius:2px;color:var(--theme-text-fg-color);font-size:15px;margin-left:45px;margin-top:-22px;max-height:400px;max-width:280px;min-width:112px;overflow:auto;position:absolute;transform:translateX(-40px);transform-origin:top left;z-index:5}.adf-search-result-autocomplete:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (max-width:959px){.adf-search-result-autocomplete{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}.adf-search-autocomplete-item:hover{background-color:var(--theme-bg-hover-color);opacity:1}"]
            }]
    }], function () { return [{ type: ɵngcc1.AuthenticationService }, { type: ɵngcc1.ThumbnailService }]; }, { highlight: [{
            type: Input
        }], inputType: [{
            type: Input
        }], liveSearchEnabled: [{
            type: Input
        }], autocomplete: [{
            type: Input
        }], expandable: [{
            type: Input
        }], liveSearchMaxResults: [{
            type: Input
        }], submit: [{
            type: Output
        }], searchChange: [{
            type: Output
        }], optionClicked: [{
            type: Output
        }], searchTextInput: [{
            type: ViewChild,
            args: ['searchTextInput']
        }], searchAutocomplete: [{
            type: ViewChild,
            args: ['search']
        }], listResultElement: [{
            type: ViewChildren,
            args: [MatListItem]
        }], emptySearchTemplate: [{
            type: ContentChild,
            args: [EmptySearchResultComponent]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,