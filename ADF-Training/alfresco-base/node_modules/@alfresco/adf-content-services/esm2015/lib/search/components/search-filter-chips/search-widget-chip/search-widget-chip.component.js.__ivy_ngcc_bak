/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';
import { MatMenuTrigger } from '@angular/material/menu';
import { SearchWidgetContainerComponent } from '../../search-widget-container/search-widget-container.component';
export class SearchWidgetChipComponent {
    constructor(focusTrapFactory) {
        this.focusTrapFactory = focusTrapFactory;
    }
    onMenuOpen() {
        if (this.menuContainer && !this.focusTrap) {
            this.focusTrap = this.focusTrapFactory.create(this.menuContainer.nativeElement);
            this.focusTrap.focusInitialElement();
        }
    }
    onClosed() {
        this.focusTrap.destroy();
        this.focusTrap = null;
    }
    onRemove() {
        this.widgetContainerComponent.resetInnerWidget();
        this.menuTrigger.closeMenu();
    }
    onApply() {
        this.widgetContainerComponent.applyInnerWidget();
        this.menuTrigger.closeMenu();
    }
}
SearchWidgetChipComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-search-widget-chip',
                template: "<mat-chip [attr.data-automation-id]=\"'search-filter-chip-' + category.name\"\n          disableRipple\n          class=\"adf-search-filter-chip\"\n          [class.adf-search-toggle-chip]=\"(widget.getDisplayValue() | async) || menuTrigger.menuOpen\"\n          [matMenuTriggerFor]=\"menu\"\n          (onMenuOpen)=\"onMenuOpen()\"\n          [attr.title]=\"widget.getDisplayValue() | async\"\n          #menuTrigger=\"matMenuTrigger\">\n    <span class=\"adf-search-filter-placeholder\">\n        <span class=\"adf-search-filter-ellipsis\">{{ category.name | translate }}</span>\n        <ng-container *ngIf=\"widget.getDisplayValue() | async\">:</ng-container>\n    </span>\n    <span class=\"adf-search-filter-ellipsis\" *ngIf=\"widget.getDisplayValue() | async as displayValue\">\n        &nbsp;{{ displayValue | translate }}\n    </span>\n    <mat-icon>keyboard_arrow_down</mat-icon>\n</mat-chip>\n\n<mat-menu #menu=\"matMenu\" backdropClass=\"adf-search-filter-chip-menu\" (closed)=\"onClosed()\">\n    <div #menuContainer [attr.data-automation-id]=\"'search-field-' + category.name\">\n        <adf-search-filter-menu-card (click)=\"$event.stopPropagation()\"\n                                     (keydown.tab)=\"$event.stopPropagation();\"\n                                     (close)=\"menuTrigger.closeMenu()\">\n\n            <ng-container ngProjectAs=\"filter-title\">\n                {{ category.name | translate }} <ng-container *ngIf=\"category.component.settings.unit\">({{category.component.settings.unit}})</ng-container>\n            </ng-container>\n\n            <ng-container ngProjectAs=\"filter-content\">\n                <adf-search-widget-container #widget\n                                             [id]=\"category.id\"\n                                             [selector]=\"category.component.selector\"\n                                             [settings]=\"category.component.settings\">\n                </adf-search-widget-container>\n            </ng-container>\n\n            <ng-container ngProjectAs=\"filter-actions\">\n                <button mat-flat-button class=\"adf-search-action-button\" color=\"accent\" (click)=\"onRemove()\" id=\"cancel-filter-button\">\n                    {{ 'SEARCH.FILTER.BUTTONS.REMOVE' | translate }}\n                </button>\n                <button mat-flat-button class=\"adf-search-action-button\" color=\"primary\" (click)=\"onApply()\" id=\"apply-filter-button\">\n                    {{ 'SEARCH.FILTER.BUTTONS.APPLY' | translate }}\n                </button>\n            </ng-container>\n        </adf-search-filter-menu-card>\n    </div>\n</mat-menu>\n",
                encapsulation: ViewEncapsulation.None
            },] }
];
SearchWidgetChipComponent.ctorParameters = () => [
    { type: ConfigurableFocusTrapFactory }
];
SearchWidgetChipComponent.propDecorators = {
    category: [{ type: Input }],
    menuContainer: [{ type: ViewChild, args: ['menuContainer', { static: false },] }],
    menuTrigger: [{ type: ViewChild, args: ['menuTrigger', { static: false },] }],
    widgetContainerComponent: [{ type: ViewChild, args: [SearchWidgetContainerComponent, { static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXdpZGdldC1jaGlwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjLyIsInNvdXJjZXMiOlsibGliL3NlYXJjaC9jb21wb25lbnRzL3NlYXJjaC1maWx0ZXItY2hpcHMvc2VhcmNoLXdpZGdldC1jaGlwL3NlYXJjaC13aWRnZXQtY2hpcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzRixPQUFPLEVBQXlCLDRCQUE0QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLGlFQUFpRSxDQUFDO0FBT2pILE1BQU0sT0FBTyx5QkFBeUI7SUFnQmxDLFlBQW9CLGdCQUE4QztRQUE5QyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQThCO0lBQUcsQ0FBQztJQUV0RSxVQUFVO1FBQ04sSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUN2QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUNoRixJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixFQUFFLENBQUM7U0FDeEM7SUFDTCxDQUFDO0lBRUQsUUFBUTtRQUNKLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7SUFDMUIsQ0FBQztJQUVELFFBQVE7UUFDSixJQUFJLENBQUMsd0JBQXdCLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUNqRCxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxPQUFPO1FBQ0gsSUFBSSxDQUFDLHdCQUF3QixDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDakQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzs7WUEzQ0osU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLHFtRkFBa0Q7Z0JBQ2xELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2FBQ3RDOzs7WUFSK0IsNEJBQTRCOzs7dUJBV3ZELEtBQUs7NEJBR0wsU0FBUyxTQUFDLGVBQWUsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7MEJBRzVDLFNBQVMsU0FBQyxhQUFhLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO3VDQUcxQyxTQUFTLFNBQUMsOEJBQThCLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2VhcmNoQ2F0ZWdvcnkgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvc2VhcmNoLWNhdGVnb3J5LmludGVyZmFjZSc7XG5pbXBvcnQgeyBDb25maWd1cmFibGVGb2N1c1RyYXAsIENvbmZpZ3VyYWJsZUZvY3VzVHJhcEZhY3RvcnkgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5pbXBvcnQgeyBNYXRNZW51VHJpZ2dlciB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL21lbnUnO1xuaW1wb3J0IHsgU2VhcmNoV2lkZ2V0Q29udGFpbmVyQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vc2VhcmNoLXdpZGdldC1jb250YWluZXIvc2VhcmNoLXdpZGdldC1jb250YWluZXIuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYWRmLXNlYXJjaC13aWRnZXQtY2hpcCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWFyY2gtd2lkZ2V0LWNoaXAuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFNlYXJjaFdpZGdldENoaXBDb21wb25lbnQgIHtcblxuICAgIEBJbnB1dCgpXG4gICAgY2F0ZWdvcnk6IFNlYXJjaENhdGVnb3J5O1xuXG4gICAgQFZpZXdDaGlsZCgnbWVudUNvbnRhaW5lcicsIHsgc3RhdGljOiBmYWxzZSB9KVxuICAgIG1lbnVDb250YWluZXI6IEVsZW1lbnRSZWY7XG5cbiAgICBAVmlld0NoaWxkKCdtZW51VHJpZ2dlcicsIHsgc3RhdGljOiBmYWxzZSB9KVxuICAgIG1lbnVUcmlnZ2VyOiBNYXRNZW51VHJpZ2dlcjtcblxuICAgIEBWaWV3Q2hpbGQoU2VhcmNoV2lkZ2V0Q29udGFpbmVyQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgICB3aWRnZXRDb250YWluZXJDb21wb25lbnQ6IFNlYXJjaFdpZGdldENvbnRhaW5lckNvbXBvbmVudDtcblxuICAgIGZvY3VzVHJhcDogQ29uZmlndXJhYmxlRm9jdXNUcmFwO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBmb2N1c1RyYXBGYWN0b3J5OiBDb25maWd1cmFibGVGb2N1c1RyYXBGYWN0b3J5KSB7fVxuXG4gICAgb25NZW51T3BlbigpIHtcbiAgICAgICAgaWYgKHRoaXMubWVudUNvbnRhaW5lciAmJiAhdGhpcy5mb2N1c1RyYXApIHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNUcmFwID0gdGhpcy5mb2N1c1RyYXBGYWN0b3J5LmNyZWF0ZSh0aGlzLm1lbnVDb250YWluZXIubmF0aXZlRWxlbWVudCk7XG4gICAgICAgICAgICB0aGlzLmZvY3VzVHJhcC5mb2N1c0luaXRpYWxFbGVtZW50KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbkNsb3NlZCgpIHtcbiAgICAgICAgdGhpcy5mb2N1c1RyYXAuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmZvY3VzVHJhcCA9IG51bGw7XG4gICAgfVxuXG4gICAgb25SZW1vdmUoKSB7XG4gICAgICAgIHRoaXMud2lkZ2V0Q29udGFpbmVyQ29tcG9uZW50LnJlc2V0SW5uZXJXaWRnZXQoKTtcbiAgICAgICAgdGhpcy5tZW51VHJpZ2dlci5jbG9zZU1lbnUoKTtcbiAgICB9XG5cbiAgICBvbkFwcGx5KCkge1xuICAgICAgICB0aGlzLndpZGdldENvbnRhaW5lckNvbXBvbmVudC5hcHBseUlubmVyV2lkZ2V0KCk7XG4gICAgICAgIHRoaXMubWVudVRyaWdnZXIuY2xvc2VNZW51KCk7XG4gICAgfVxufVxuIl19