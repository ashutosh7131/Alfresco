/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/slider';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/material/button';
import * as ɵngcc4 from '@ngx-translate/core';

function SearchSliderComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "button", 3);
    ɵngcc0.ɵɵlistener("click", function SearchSliderComponent_div_1_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.clear(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "SEARCH.FILTER.ACTIONS.CLEAR"), " ");
} }
export class SearchSliderComponent {
    constructor() {
        this.thumbLabel = false;
        this.displayValue$ = new Subject();
    }
    ngOnInit() {
        var _a;
        if (this.settings) {
            if (this.settings.hasOwnProperty('min')) {
                this.min = this.settings['min'];
            }
            if (this.settings.hasOwnProperty('max')) {
                this.max = this.settings['max'];
            }
            if (this.settings.hasOwnProperty('step')) {
                this.step = this.settings['step'];
            }
            this.thumbLabel = this.settings['thumbLabel'] ? true : false;
            this.enableChangeUpdate = (_a = this.settings.allowUpdateOnChange) !== null && _a !== void 0 ? _a : true;
        }
        if (this.startValue) {
            this.setValue(this.startValue);
        }
    }
    clear() {
        this.value = this.min || 0;
        if (this.enableChangeUpdate) {
            this.updateQuery(null);
        }
    }
    reset() {
        this.value = this.min || 0;
        this.updateQuery(null);
    }
    onChangedHandler(event) {
        this.value = event.value;
        if (this.enableChangeUpdate) {
            this.updateQuery(this.value);
        }
    }
    submitValues() {
        this.updateQuery(this.value);
    }
    hasValidValue() {
        return !!this.value;
    }
    getCurrentValue() {
        return this.value;
    }
    setValue(value) {
        this.value = value;
        this.submitValues();
    }
    updateQuery(value) {
        var _a;
        this.displayValue$.next(this.value ? `${this.value} ${(_a = this.settings.unit) !== null && _a !== void 0 ? _a : ''}` : '');
        if (this.id && this.context && this.settings && this.settings.field) {
            if (value === null) {
                this.context.queryFragments[this.id] = '';
            }
            else {
                this.context.queryFragments[this.id] = `${this.settings.field}:[0 TO ${value}]`;
            }
            this.context.update();
        }
    }
}
SearchSliderComponent.ɵfac = function SearchSliderComponent_Factory(t) { return new (t || SearchSliderComponent)(); };
SearchSliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchSliderComponent, selectors: [["adf-search-slider"]], hostAttrs: [1, "adf-search-slider"], inputs: { value: "value" }, decls: 2, vars: 6, consts: [["data-automation-id", "slider-range", 3, "value", "min", "max", "step", "thumbLabel", "valueChange", "change"], ["class", "adf-facet-buttons", 4, "ngIf"], [1, "adf-facet-buttons"], ["mat-button", "", "color", "primary", "data-automation-id", "slider-btn-clear", 3, "click"]], template: function SearchSliderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-slider", 0);
        ɵngcc0.ɵɵlistener("valueChange", function SearchSliderComponent_Template_mat_slider_valueChange_0_listener($event) { return ctx.value = $event; })("change", function SearchSliderComponent_Template_mat_slider_change_0_listener($event) { return ctx.onChangedHandler($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(1, SearchSliderComponent_div_1_Template, 4, 3, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("value", ctx.value)("min", ctx.min)("max", ctx.max)("step", ctx.step)("thumbLabel", ctx.thumbLabel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !(ctx.settings == null ? null : ctx.settings.hideDefaultAction));
    } }, directives: [ɵngcc1.MatSlider, ɵngcc2.NgIf, ɵngcc3.MatButton], pipes: [ɵngcc4.TranslatePipe], styles: [".adf-search-slider .mat-slider{width:100%}"], encapsulation: 2 });
SearchSliderComponent.propDecorators = {
    value: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchSliderComponent, [{
        type: Component,
        args: [{
                selector: 'adf-search-slider',
                template: "<mat-slider\n    [(value)]=\"value\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [thumbLabel]=\"thumbLabel\"\n    (change)=\"onChangedHandler($event)\"\n    data-automation-id=\"slider-range\">\n</mat-slider>\n\n<div class=\"adf-facet-buttons\" *ngIf=\"!settings?.hideDefaultAction\">\n    <button mat-button color=\"primary\" (click)=\"clear()\" data-automation-id=\"slider-btn-clear\">\n        {{ 'SEARCH.FILTER.ACTIONS.CLEAR' | translate }}\n    </button>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-search-slider' },
                styles: [".adf-search-slider .mat-slider{width:100%}"]
            }]
    }], function () { return []; }, { value: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,