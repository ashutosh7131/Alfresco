/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation, Input } from '@angular/core';
import { SearchFilterComponent } from '../../components/search-filter/search-filter.component';
import { SearchFacetFiltersService } from '../../services/search-facet-filters.service';
export class SearchChipListComponent {
    constructor(facetFiltersService) {
        this.facetFiltersService = facetFiltersService;
        this.clearAll = false;
    }
}
SearchChipListComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-search-chip-list',
                template: "<mat-chip-list>\n    <ng-container *ngIf=\"facetFiltersService.selectedBuckets.length\">\n        <mat-chip *ngIf=\"clearAll && facetFiltersService.selectedBuckets.length > 1\"\n            data-automation-id=\"reset-filter\"\n            color=\"primary\"\n            selected\n            matTooltip=\"{{ 'SEARCH.FILTER.BUTTONS.CLEAR-ALL.TOOLTIP' | translate }}\"\n            matTooltipPosition=\"right\"\n            (click)=\"facetFiltersService.resetAllSelectedBuckets()\">\n            {{ 'SEARCH.FILTER.BUTTONS.CLEAR-ALL.LABEL' | translate }}\n        </mat-chip>\n\n        <mat-chip\n            data-automation-id=\"chip-list-entry\"\n            *ngFor=\"let selection of facetFiltersService.selectedBuckets\"\n            [removable]=\"true\"\n            (removed)=\"facetFiltersService.unselectFacetBucket(selection.field, selection.bucket)\">\n            {{ (selection.bucket.display || selection.bucket.label) | translate }}\n            <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n    </ng-container>\n</mat-chip-list>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-search-chip-list' },
                styles: [".mat-chip:focus{background-color:var(--theme-accent-color);color:var(--theme-accent-color-default-contrast)}.mat-chip:focus .mat-chip-remove{color:var(--theme-accent-color-default-contrast);opacity:1}"]
            },] }
];
SearchChipListComponent.ctorParameters = () => [
    { type: SearchFacetFiltersService }
];
SearchChipListComponent.propDecorators = {
    searchFilter: [{ type: Input }],
    clearAll: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWNoaXAtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb250ZW50LXNlcnZpY2VzL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9zZWFyY2gvY29tcG9uZW50cy9zZWFyY2gtY2hpcC1saXN0L3NlYXJjaC1jaGlwLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQy9GLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBU3hGLE1BQU0sT0FBTyx1QkFBdUI7SUFVaEMsWUFBbUIsbUJBQThDO1FBQTlDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBMkI7UUFGakUsYUFBUSxHQUFZLEtBQUssQ0FBQztJQUUwQyxDQUFDOzs7WUFqQnhFLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxnakNBQWdEO2dCQUVoRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtnQkFDckMsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLHNCQUFzQixFQUFFOzthQUMxQzs7O1lBUlEseUJBQXlCOzs7MkJBVzdCLEtBQUs7dUJBS0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTZWFyY2hGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NlYXJjaC1maWx0ZXIvc2VhcmNoLWZpbHRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VhcmNoRmFjZXRGaWx0ZXJzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3NlYXJjaC1mYWNldC1maWx0ZXJzLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1zZWFyY2gtY2hpcC1saXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2VhcmNoLWNoaXAtbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2VhcmNoLWNoaXAtbGlzdC5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyBjbGFzczogJ2FkZi1zZWFyY2gtY2hpcC1saXN0JyB9XG59KVxuZXhwb3J0IGNsYXNzIFNlYXJjaENoaXBMaXN0Q29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpXG4gICAgLyoqIEBkZXByZWNhdGVkIFRoaXMgaXMgbm90IHJlcXVpcmVkIHNpbmNlIEFERiA0LjUuMCAqL1xuICAgIHNlYXJjaEZpbHRlcjogU2VhcmNoRmlsdGVyQ29tcG9uZW50O1xuXG4gICAgLyoqIEZsYWcgdXNlZCB0byBlbmFibGUgdGhlIGRpc3BsYXkgb2YgYSBjbGVhci1hbGwtZmlsdGVycyBidXR0b24uICovXG4gICAgQElucHV0KClcbiAgICBjbGVhckFsbDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGZhY2V0RmlsdGVyc1NlcnZpY2U6IFNlYXJjaEZhY2V0RmlsdGVyc1NlcnZpY2UpIHt9XG59XG4iXX0=