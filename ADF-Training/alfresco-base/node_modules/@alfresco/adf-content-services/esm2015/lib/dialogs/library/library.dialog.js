/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { __awaiter } from "tslib";
import { Subject } from 'rxjs';
import { Component, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { MatDialogRef } from '@angular/material/dialog';
import { QueriesApi } from '@alfresco/js-api';
import { AlfrescoApiService, SitesService } from '@alfresco/adf-core';
import { debounceTime, finalize, mergeMap, takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/material/dialog';
import * as ɵngcc4 from '@angular/material/form-field';
import * as ɵngcc5 from '@angular/material/input';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from '@angular/material/radio';
import * as ɵngcc8 from '@angular/material/button';
import * as ɵngcc9 from '@ngx-translate/core';

function LibraryDialogComponent_mat_hint_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "LIBRARY.HINTS.SITE_TITLE_EXISTS"));
} }
function LibraryDialogComponent_mat_error_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-error");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "LIBRARY.ERRORS.TITLE_TOO_LONG"), " ");
} }
function LibraryDialogComponent_mat_error_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-error");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "LIBRARY.ERRORS.TITLE_TOO_SHORT"), " ");
} }
function LibraryDialogComponent_mat_error_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-error");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r3.form.controls["title"].errors == null ? null : ctx_r3.form.controls["title"].errors.message), " ");
} }
function LibraryDialogComponent_mat_error_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-error");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r4.form.controls["id"].errors == null ? null : ctx_r4.form.controls["id"].errors.message), " ");
} }
function LibraryDialogComponent_mat_error_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-error");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "LIBRARY.ERRORS.ID_TOO_LONG"), " ");
} }
function LibraryDialogComponent_mat_error_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-error");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "LIBRARY.ERRORS.DESCRIPTION_TOO_LONG"), " ");
} }
function LibraryDialogComponent_mat_radio_button_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-radio-button", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r8 = ctx.$implicit;
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", option_r8.disabled)("value", option_r8.value)("checked", ctx_r7.visibilityOption.value === option_r8.value);
    ɵngcc0.ɵɵattribute("data-automation-id", option_r8.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 5, option_r8.label), " ");
} }
const _c0 = function () { return { standalone: true }; };
export class LibraryDialogComponent {
    constructor(alfrescoApiService, sitesService, formBuilder, dialog) {
        this.alfrescoApiService = alfrescoApiService;
        this.sitesService = sitesService;
        this.formBuilder = formBuilder;
        this.dialog = dialog;
        this.error = new EventEmitter();
        this.success = new EventEmitter();
        this.onDestroy$ = new Subject();
        this.createTitle = 'LIBRARY.DIALOG.CREATE_TITLE';
        this.libraryTitleExists = false;
        this.visibilityOptions = [
            { value: 'PUBLIC', label: 'LIBRARY.VISIBILITY.PUBLIC', disabled: false },
            { value: 'PRIVATE', label: 'LIBRARY.VISIBILITY.PRIVATE', disabled: false },
            {
                value: 'MODERATED',
                label: 'LIBRARY.VISIBILITY.MODERATED',
                disabled: false
            }
        ];
        this.disableCreateButton = false;
    }
    get queriesApi() {
        var _a;
        this._queriesApi = (_a = this._queriesApi) !== null && _a !== void 0 ? _a : new QueriesApi(this.alfrescoApiService.getInstance());
        return this._queriesApi;
    }
    ngOnInit() {
        const validators = {
            id: [
                Validators.required,
                Validators.maxLength(72),
                this.forbidSpecialCharacters
            ],
            title: [
                Validators.required,
                this.forbidOnlySpaces,
                Validators.minLength(2),
                Validators.maxLength(256)
            ],
            description: [Validators.maxLength(512)]
        };
        this.form = this.formBuilder.group({
            title: [null, validators.title],
            id: [null, validators.id, this.createSiteIdValidator()],
            description: ['', validators.description]
        });
        this.visibilityOption = this.visibilityOptions[0].value;
        this.form.controls['title'].valueChanges
            .pipe(debounceTime(500), mergeMap((title) => this.checkLibraryNameExists(title), (title) => title), takeUntil(this.onDestroy$))
            .subscribe((title) => {
            if (!this.form.controls['id'].dirty && this.canGenerateId(title)) {
                this.form.patchValue({ id: this.sanitize(title.trim()) });
                this.form.controls['id'].markAsTouched();
            }
        });
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    get title() {
        const { title } = this.form.value;
        return (title || '').trim();
    }
    get id() {
        const { id } = this.form.value;
        return (id || '').trim();
    }
    get description() {
        const { description } = this.form.value;
        return (description || '').trim();
    }
    get visibility() {
        return this.visibilityOption || '';
    }
    submit() {
        const { form, dialog } = this;
        if (!form.valid) {
            return;
        }
        this.disableCreateButton = true;
        this.create().pipe(finalize(() => this.disableCreateButton = false)).subscribe((node) => {
            this.success.emit(node);
            dialog.close(node);
        }, (error) => this.handleError(error));
    }
    visibilityChangeHandler(event) {
        this.visibilityOption = event.value;
    }
    create() {
        const { title, id, description, visibility } = this;
        const siteBody = {
            id,
            title,
            description,
            visibility
        };
        return this.sitesService.createSite(siteBody);
    }
    sanitize(input) {
        return input.replace(/[\s\s]+/g, '-').replace(/[^A-Za-z0-9-]/g, '');
    }
    canGenerateId(title) {
        return Boolean(title.replace(/[^A-Za-z0-9-]/g, '').length);
    }
    handleError(error) {
        try {
            const { error: { statusCode } } = JSON.parse(error.message);
            if (statusCode === 409) {
                this.form.controls['id'].setErrors({
                    message: 'LIBRARY.ERRORS.CONFLICT'
                });
            }
        }
        catch (error) {
        }
        return error;
    }
    checkLibraryNameExists(libraryTitle) {
        return __awaiter(this, void 0, void 0, function* () {
            let entries = [];
            try {
                entries = (yield this.findLibraryByTitle(libraryTitle)).list.entries;
            }
            catch (_a) {
                entries = [];
            }
            if (entries.length) {
                this.libraryTitleExists = entries[0].entry.title.toLowerCase() === libraryTitle.toLowerCase();
            }
            else {
                this.libraryTitleExists = false;
            }
        });
    }
    findLibraryByTitle(libraryTitle) {
        return this.queriesApi.findSites(libraryTitle, {
            maxItems: 1,
            fields: ['title']
        });
    }
    forbidSpecialCharacters({ value }) {
        if (value === null || value.length === 0) {
            return null;
        }
        const validCharacters = /[^A-Za-z0-9-]/;
        const isValid = !validCharacters.test(value);
        return isValid
            ? null
            : {
                message: 'LIBRARY.ERRORS.ILLEGAL_CHARACTERS'
            };
    }
    forbidOnlySpaces({ value }) {
        if (value === null || value.length === 0) {
            return null;
        }
        const isValid = !!(value || '').trim();
        return isValid
            ? null
            : {
                message: 'LIBRARY.ERRORS.ONLY_SPACES'
            };
    }
    createSiteIdValidator() {
        let timer;
        return (control) => {
            if (timer) {
                clearTimeout(timer);
            }
            return new Promise((resolve) => {
                timer = setTimeout(() => {
                    return this.sitesService.getSite(control.value).subscribe(() => resolve({ message: 'LIBRARY.ERRORS.EXISTENT_SITE' }), () => resolve(null));
                }, 300);
            });
        };
    }
}
LibraryDialogComponent.ɵfac = function LibraryDialogComponent_Factory(t) { return new (t || LibraryDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlfrescoApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SitesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.MatDialogRef)); };
LibraryDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LibraryDialogComponent, selectors: [["adf-library-dialog"]], hostAttrs: [1, "adf-library-dialog"], outputs: { error: "error", success: "success" }, decls: 30, vars: 31, consts: [["mat-dialog-title", ""], ["novalidate", "", 3, "formGroup", "submit"], ["required", "", "matInput", "", "autofocus", "", "formControlName", "title", "autocomplete", "off", 3, "placeholder"], [4, "ngIf"], ["required", "", "matInput", "", "formControlName", "id", "autocomplete", "off", 3, "placeholder"], ["matInput", "", "rows", "3", "formControlName", "description", 3, "placeholder"], [3, "ngModelOptions", "ngModel", "ngModelChange", "change"], ["color", "primary", 3, "disabled", "value", "checked", 4, "ngFor", "ngForOf"], [1, "adf-action-buttons"], ["mat-button", "", "mat-dialog-close", "", "data-automation-id", "cancel-library-id"], ["color", "primary", "mat-button", "", "data-automation-id", "create-library-id", 3, "disabled", "click"], ["color", "primary", 3, "disabled", "value", "checked"]], template: function LibraryDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "h2", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "mat-dialog-content");
        ɵngcc0.ɵɵelementStart(4, "form", 1);
        ɵngcc0.ɵɵlistener("submit", function LibraryDialogComponent_Template_form_submit_4_listener() { return ctx.submit(); });
        ɵngcc0.ɵɵelementStart(5, "mat-form-field");
        ɵngcc0.ɵɵelement(6, "input", 2);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵtemplate(8, LibraryDialogComponent_mat_hint_8_Template, 3, 3, "mat-hint", 3);
        ɵngcc0.ɵɵtemplate(9, LibraryDialogComponent_mat_error_9_Template, 3, 3, "mat-error", 3);
        ɵngcc0.ɵɵtemplate(10, LibraryDialogComponent_mat_error_10_Template, 3, 3, "mat-error", 3);
        ɵngcc0.ɵɵtemplate(11, LibraryDialogComponent_mat_error_11_Template, 3, 3, "mat-error", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "mat-form-field");
        ɵngcc0.ɵɵelement(13, "input", 4);
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵtemplate(15, LibraryDialogComponent_mat_error_15_Template, 3, 3, "mat-error", 3);
        ɵngcc0.ɵɵtemplate(16, LibraryDialogComponent_mat_error_16_Template, 3, 3, "mat-error", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "mat-form-field");
        ɵngcc0.ɵɵelement(18, "textarea", 5);
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵtemplate(20, LibraryDialogComponent_mat_error_20_Template, 3, 3, "mat-error", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "mat-radio-group", 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function LibraryDialogComponent_Template_mat_radio_group_ngModelChange_21_listener($event) { return ctx.visibilityOption = $event; })("change", function LibraryDialogComponent_Template_mat_radio_group_change_21_listener($event) { return ctx.visibilityChangeHandler($event); });
        ɵngcc0.ɵɵtemplate(22, LibraryDialogComponent_mat_radio_button_22_Template, 3, 7, "mat-radio-button", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(23, "mat-dialog-actions", 8);
        ɵngcc0.ɵɵelementStart(24, "button", 9);
        ɵngcc0.ɵɵtext(25);
        ɵngcc0.ɵɵpipe(26, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(27, "button", 10);
        ɵngcc0.ɵɵlistener("click", function LibraryDialogComponent_Template_button_click_27_listener() { return ctx.submit(); });
        ɵngcc0.ɵɵtext(28);
        ɵngcc0.ɵɵpipe(29, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 18, ctx.createTitle));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("formGroup", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(7, 20, "LIBRARY.DIALOG.FORM.NAME"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.libraryTitleExists);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form.controls["title"].hasError("maxlength"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form.controls["title"].hasError("minlength"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form.controls["title"].errors == null ? null : ctx.form.controls["title"].errors.message);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(14, 22, "LIBRARY.DIALOG.FORM.SITE_ID"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form.controls["id"].errors == null ? null : ctx.form.controls["id"].errors.message);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form.controls["id"].hasError("maxlength"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(19, 24, "LIBRARY.DIALOG.FORM.DESCRIPTION"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form.controls["description"].hasError("maxlength"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngModelOptions", ɵngcc0.ɵɵpureFunction0(30, _c0))("ngModel", ctx.visibilityOption);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.visibilityOptions);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(26, 26, "LIBRARY.DIALOG.CANCEL"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", !ctx.form.valid || ctx.disableCreateButton);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(29, 28, "LIBRARY.DIALOG.CREATE"), " ");
    } }, directives: [ɵngcc3.MatDialogTitle, ɵngcc3.MatDialogContent, ɵngcc2.ɵangular_packages_forms_forms_y, ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc4.MatFormField, ɵngcc5.MatInput, ɵngcc2.DefaultValueAccessor, ɵngcc2.RequiredValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlName, ɵngcc6.NgIf, ɵngcc7.MatRadioGroup, ɵngcc2.NgModel, ɵngcc6.NgForOf, ɵngcc3.MatDialogActions, ɵngcc8.MatButton, ɵngcc3.MatDialogClose, ɵngcc4.MatHint, ɵngcc4.MatError, ɵngcc7.MatRadioButton], pipes: [ɵngcc9.TranslatePipe], styles: [".adf-library-dialog .mat-radio-group{display:flex;flex-direction:column;margin:0 0 20px}.adf-library-dialog .mat-radio-group .mat-radio-button{margin:10px 0}.adf-library-dialog .mat-form-field{width:100%}.adf-library-dialog mat-form-field{padding-top:20px}.adf-library-dialog .adf-action-buttons{display:flex;flex-direction:row;justify-content:flex-end}.adf-library-dialog .adf-action-buttons .mat-button{text-transform:uppercase}"], encapsulation: 2 });
LibraryDialogComponent.ctorParameters = () => [
    { type: AlfrescoApiService },
    { type: SitesService },
    { type: FormBuilder },
    { type: MatDialogRef }
];
LibraryDialogComponent.propDecorators = {
    error: [{ type: Output }],
    success: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LibraryDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-library-dialog',
                template: "<h2 mat-dialog-title>{{ createTitle | translate }}</h2>\n\n<mat-dialog-content>\n  <form novalidate [formGroup]=\"form\" (submit)=\"submit()\">\n    <mat-form-field>\n      <input\n        placeholder=\"{{ 'LIBRARY.DIALOG.FORM.NAME' | translate }}\"\n        required\n        matInput\n        autofocus\n        formControlName=\"title\"\n        autocomplete=\"off\"\n      />\n\n      <mat-hint *ngIf=\"libraryTitleExists\">{{\n        'LIBRARY.HINTS.SITE_TITLE_EXISTS' | translate\n      }}</mat-hint>\n      <mat-error *ngIf=\"form.controls['title'].hasError('maxlength')\">\n        {{ 'LIBRARY.ERRORS.TITLE_TOO_LONG' | translate }}\n      </mat-error>\n\n      <mat-error *ngIf=\"form.controls['title'].hasError('minlength')\">\n        {{ 'LIBRARY.ERRORS.TITLE_TOO_SHORT' | translate }}\n      </mat-error>\n\n      <mat-error *ngIf=\"form.controls['title'].errors?.message\">\n        {{ form.controls['title'].errors?.message | translate }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        required\n        placeholder=\"{{ 'LIBRARY.DIALOG.FORM.SITE_ID' | translate }}\"\n        matInput\n        formControlName=\"id\"\n        autocomplete=\"off\"\n      />\n\n      <mat-error *ngIf=\"form.controls['id'].errors?.message\">\n        {{ form.controls['id'].errors?.message | translate }}\n      </mat-error>\n\n      <mat-error *ngIf=\"form.controls['id'].hasError('maxlength')\">\n        {{ 'LIBRARY.ERRORS.ID_TOO_LONG' | translate }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <textarea\n        matInput\n        placeholder=\"{{ 'LIBRARY.DIALOG.FORM.DESCRIPTION' | translate }}\"\n        rows=\"3\"\n        formControlName=\"description\"\n      ></textarea>\n\n      <mat-error *ngIf=\"form.controls['description'].hasError('maxlength')\">\n        {{ 'LIBRARY.ERRORS.DESCRIPTION_TOO_LONG' | translate }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-radio-group\n      [ngModelOptions]=\"{ standalone: true }\"\n      [(ngModel)]=\"visibilityOption\"\n      (change)=\"visibilityChangeHandler($event)\"\n    >\n      <mat-radio-button\n        color=\"primary\"\n        [disabled]=\"option.disabled\"\n        *ngFor=\"let option of visibilityOptions\"\n        [attr.data-automation-id]=\"option.value\"\n        [value]=\"option.value\"\n        [checked]=\"visibilityOption.value === option.value\"\n      >\n        {{ option.label | translate }}\n      </mat-radio-button>\n    </mat-radio-group>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"adf-action-buttons\">\n  <button mat-button mat-dialog-close data-automation-id=\"cancel-library-id\">\n    {{ 'LIBRARY.DIALOG.CANCEL' | translate }}\n  </button>\n\n  <button\n    color=\"primary\"\n    mat-button\n    (click)=\"submit()\"\n    [disabled]=\"!form.valid || disableCreateButton\"\n    data-automation-id=\"create-library-id\"\n  >\n    {{ 'LIBRARY.DIALOG.CREATE' | translate }}\n  </button>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-library-dialog' },
                styles: [".adf-library-dialog .mat-radio-group{display:flex;flex-direction:column;margin:0 0 20px}.adf-library-dialog .mat-radio-group .mat-radio-button{margin:10px 0}.adf-library-dialog .mat-form-field{width:100%}.adf-library-dialog mat-form-field{padding-top:20px}.adf-library-dialog .adf-action-buttons{display:flex;flex-direction:row;justify-content:flex-end}.adf-library-dialog .adf-action-buttons .mat-button{text-transform:uppercase}"]
            }]
    }], function () { return [{ type: ɵngcc1.AlfrescoApiService }, { type: ɵngcc1.SitesService }, { type: ɵngcc2.FormBuilder }, { type: ɵngcc3.MatDialogRef }]; }, { error: [{
            type: Output
        }], success: [{
            type: Output
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,