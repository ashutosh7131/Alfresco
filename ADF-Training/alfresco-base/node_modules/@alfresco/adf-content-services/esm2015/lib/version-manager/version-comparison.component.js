/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { Node } from '@alfresco/js-api';
import { ThumbnailService } from '@alfresco/adf-core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@ngx-translate/core';
import * as ɵngcc3 from '@angular/common';

const _c0 = function (a0) { return { type: a0 }; };
export class VersionComparisonComponent {
    constructor(thumbnailService) {
        this.thumbnailService = thumbnailService;
    }
}
VersionComparisonComponent.ɵfac = function VersionComparisonComponent_Factory(t) { return new (t || VersionComparisonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThumbnailService)); };
VersionComparisonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VersionComparisonComponent, selectors: [["adf-version-comparison"]], inputs: { node: "node", newFileVersion: "newFileVersion" }, decls: 33, vars: 60, consts: [[1, "adf-version-comparison-content"], [1, "adf-version-current"], [3, "src"], [1, "adf-version-comparison-node-name", 3, "title"], [1, "material-icons", "adf-version-arrow-icon"], [1, "adf-version-new"], [1, "adf-version-comparison-file-name", 3, "title"]], template: function VersionComparisonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "p");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "img", 2);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵpipe(8, "uppercase");
        ɵngcc0.ɵɵpipe(9, "fileType");
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵpipe(12, "uppercase");
        ɵngcc0.ɵɵpipe(13, "fileType");
        ɵngcc0.ɵɵelementStart(14, "p", 3);
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "span", 4);
        ɵngcc0.ɵɵtext(17, "keyboard_arrow_right");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", 5);
        ɵngcc0.ɵɵelementStart(19, "p");
        ɵngcc0.ɵɵtext(20);
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(22, "img", 2);
        ɵngcc0.ɵɵpipe(23, "translate");
        ɵngcc0.ɵɵpipe(24, "translate");
        ɵngcc0.ɵɵpipe(25, "uppercase");
        ɵngcc0.ɵɵpipe(26, "fileType");
        ɵngcc0.ɵɵpipe(27, "translate");
        ɵngcc0.ɵɵpipe(28, "translate");
        ɵngcc0.ɵɵpipe(29, "uppercase");
        ɵngcc0.ɵɵpipe(30, "fileType");
        ɵngcc0.ɵɵelementStart(31, "p", 6);
        ɵngcc0.ɵɵtext(32);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 12, "ADF_VERSION_COMPARISON.CURRENT_VERSION"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("src", ctx.thumbnailService.getMimeTypeIcon(ctx.node.content.mimeType), ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(6, 14, "ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT", ɵngcc0.ɵɵpureFunction1(52, _c0, ɵngcc0.ɵɵpipeBind1(7, 17, ɵngcc0.ɵɵpipeBind1(8, 19, ɵngcc0.ɵɵpipeBind1(9, 21, ctx.node.content.mimeType))))))("alt", ɵngcc0.ɵɵpipeBind2(10, 23, "ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT", ɵngcc0.ɵɵpureFunction1(54, _c0, ɵngcc0.ɵɵpipeBind1(11, 26, ɵngcc0.ɵɵpipeBind1(12, 28, ɵngcc0.ɵɵpipeBind1(13, 30, ctx.node.content.mimeType))))));
        ɵngcc0.ɵɵadvance(9);
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.node.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.node.name);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(21, 32, "ADF_VERSION_COMPARISON.NEW_VERSION"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("src", ctx.thumbnailService.getMimeTypeIcon(ctx.newFileVersion.type), ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(23, 34, "ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT", ɵngcc0.ɵɵpureFunction1(56, _c0, ɵngcc0.ɵɵpipeBind1(24, 37, ɵngcc0.ɵɵpipeBind1(25, 39, ɵngcc0.ɵɵpipeBind1(26, 41, ctx.newFileVersion.type))))))("alt", ɵngcc0.ɵɵpipeBind2(27, 43, "ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT", ɵngcc0.ɵɵpureFunction1(58, _c0, ɵngcc0.ɵɵpipeBind1(28, 46, ɵngcc0.ɵɵpipeBind1(29, 48, ɵngcc0.ɵɵpipeBind1(30, 50, ctx.newFileVersion.type))))));
        ɵngcc0.ɵɵadvance(9);
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.newFileVersion.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.newFileVersion.name);
    } }, pipes: [ɵngcc2.TranslatePipe, ɵngcc3.UpperCasePipe, ɵngcc1.FileTypePipe], styles: [".adf-version-comparison-content{align-content:center;align-items:center;display:flex;justify-content:space-around}.adf-version-current,.adf-version-new{align-items:center;display:flex;flex-direction:column}.adf-version-current img,.adf-version-new img{width:100px}.adf-version-arrow-icon{font-size:var(--theme-display-4-font-size)}.adf-version-comparison-file-name,.adf-version-comparison-node-name{overflow:hidden;text-align:center;text-overflow:ellipsis;white-space:nowrap;width:120px}"], encapsulation: 2 });
VersionComparisonComponent.ctorParameters = () => [
    { type: ThumbnailService }
];
VersionComparisonComponent.propDecorators = {
    node: [{ type: Input }],
    newFileVersion: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VersionComparisonComponent, [{
        type: Component,
        args: [{
                selector: 'adf-version-comparison',
                template: "<div class=\"adf-version-comparison-content\">\n    <div class=\"adf-version-current\">\n        <p>{{'ADF_VERSION_COMPARISON.CURRENT_VERSION'|translate }}</p>\n        <img [attr.aria-label]=\"'ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT' | translate:\n        { type: (node.content.mimeType | fileType | uppercase) | translate  }\"\n             [attr.alt]=\"'ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT' | translate:\n             { type: (node.content.mimeType | fileType | uppercase) | translate }\"\n             src=\"{{thumbnailService.getMimeTypeIcon(node.content.mimeType)}}\"/>\n        <p class=\"adf-version-comparison-node-name\" title=\"{{node.name}}\">{{node.name}}</p>\n    </div>\n    <span class=\"material-icons adf-version-arrow-icon\">keyboard_arrow_right</span>\n    <div class=\"adf-version-new\">\n        <p>{{'ADF_VERSION_COMPARISON.NEW_VERSION'|translate }}</p>\n        <img [attr.aria-label]=\"'ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT' | translate:\n        { type: (newFileVersion.type | fileType | uppercase) | translate  }\"\n             [attr.alt]=\"'ADF_VERSION_COMPARISON.ACCESSIBILITY.ICON_TEXT' | translate:\n             { type: (newFileVersion.type | fileType | uppercase) | translate }\"\n            src=\"{{thumbnailService.getMimeTypeIcon(newFileVersion.type)}}\"/>\n        <p class=\"adf-version-comparison-file-name\" title=\"{{newFileVersion.name}}\">{{newFileVersion.name}}</p>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-version-comparison-content{align-content:center;align-items:center;display:flex;justify-content:space-around}.adf-version-current,.adf-version-new{align-items:center;display:flex;flex-direction:column}.adf-version-current img,.adf-version-new img{width:100px}.adf-version-arrow-icon{font-size:var(--theme-display-4-font-size)}.adf-version-comparison-file-name,.adf-version-comparison-node-name{overflow:hidden;text-align:center;text-overflow:ellipsis;white-space:nowrap;width:120px}"]
            }]
    }], function () { return [{ type: ɵngcc1.ThumbnailService }]; }, { node: [{
            type: Input
        }], newFileVersion: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi1jb21wYXJpc29uLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjL2xpYi92ZXJzaW9uLW1hbmFnZXIvdmVyc2lvbi1jb21wYXJpc29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7Ozs7O0FBUXRELE1BQU0sT0FBTywwQkFBMEI7QUFDdkMsSUFTSSxZQUFtQixnQkFBa0M7QUFDekQsUUFEdUIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtBQUFDLElBQ3RELENBQUM7QUFDTDtzREFsQkMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSx3QkFBd0Isa0JBQ2xDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0NBQWtEO0tBRWxELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQztFQUFJOzs7Ozs7Ozs7Ozs7OztPQUN4Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0bEJBQ0k7QUFBQztBQUVTLFlBVk4sZ0JBQWdCO0FBQUc7QUFBRztBQUd2QixtQkFRSCxLQUFLO0FBQ1IsNkJBR0csS0FBSztBQUNUOzs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTm9kZSB9IGZyb20gJ0BhbGZyZXNjby9qcy1hcGknO1xuaW1wb3J0IHsgVGh1bWJuYWlsU2VydmljZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXZlcnNpb24tY29tcGFyaXNvbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3ZlcnNpb24tY29tcGFyaXNvbi5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vdmVyc2lvbi1jb21wYXJpc29uLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBWZXJzaW9uQ29tcGFyaXNvbkNvbXBvbmVudCB7XG5cbiAgICAvKiogVGFyZ2V0IG5vZGUuICovXG4gICAgQElucHV0KClcbiAgICBub2RlOiBOb2RlO1xuXG4gICAgLyoqIE5ldyBmaWxlIGZvciB1cGRhdGluZyBjdXJyZW50IHZlcnNpb24uICovXG4gICAgQElucHV0KClcbiAgICBuZXdGaWxlVmVyc2lvbjogRmlsZTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0aHVtYm5haWxTZXJ2aWNlOiBUaHVtYm5haWxTZXJ2aWNlKSB7XG4gICAgfVxuXG59XG4iXX0=