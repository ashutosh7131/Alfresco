/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EXTENDIBLE_COMPONENT, FileUtils, NotificationService, TranslationService, UploadService, ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';
import { Component, forwardRef, ViewEncapsulation, NgZone } from '@angular/core';
import { UploadBase } from './base-upload/upload-base';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '../directives/file-draggable.directive';

const _c0 = ["*"];
export class UploadDragAreaComponent extends UploadBase {
    constructor(uploadService, translationService, notificationService, contentService, ngZone) {
        super(uploadService, translationService, ngZone);
        this.uploadService = uploadService;
        this.translationService = translationService;
        this.notificationService = notificationService;
        this.contentService = contentService;
        this.ngZone = ngZone;
    }
    onFilesDropped(files) {
        if (!this.disabled && files.length) {
            this.uploadFiles(files);
        }
    }
    onFolderEntityDropped(folder) {
        if (!this.disabled && folder.isDirectory) {
            FileUtils.flatten(folder).then((filesInfo) => {
                this.uploadFilesInfo(filesInfo);
            });
        }
    }
    showUndoNotificationBar(latestFilesAdded) {
        let messageTranslate, actionTranslate;
        messageTranslate = this.translationService.get('FILE_UPLOAD.MESSAGES.PROGRESS');
        actionTranslate = this.translationService.get('FILE_UPLOAD.ACTION.UNDO');
        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {
            this.uploadService.cancelUpload(...latestFilesAdded);
        });
    }
    isDroppable() {
        return !this.disabled;
    }
    onUploadFiles(event) {
        event.stopPropagation();
        event.preventDefault();
        const isAllowed = this.isTargetNodeFolder(event) ?
            this.contentService.hasAllowableOperations(event.detail.data.obj.entry, AllowableOperationsEnum.CREATE)
            : this.contentService.hasAllowableOperations(event.detail.data.obj.entry, AllowableOperationsEnum.UPDATE);
        if (isAllowed) {
            if (!this.isTargetNodeFolder(event) && event.detail.files.length === 1) {
                this.updateFileVersion.emit(event);
            }
            else {
                const fileInfo = event.detail.files;
                if (this.isTargetNodeFolder(event)) {
                    const destinationFolderName = event.detail.data.obj.entry.name;
                    fileInfo.map((file) => file.relativeFolder = destinationFolderName ? destinationFolderName.concat(file.relativeFolder) : file.relativeFolder);
                }
                if (fileInfo && fileInfo.length > 0) {
                    this.uploadFilesInfo(fileInfo);
                }
            }
        }
    }
    isTargetNodeFolder(event) {
        return event.detail.data.obj && event.detail.data.obj.entry.isFolder;
    }
}
UploadDragAreaComponent.ɵfac = function UploadDragAreaComponent_Factory(t) { return new (t || UploadDragAreaComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UploadService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NotificationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
UploadDragAreaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: UploadDragAreaComponent, selectors: [["adf-upload-drag-area"]], hostAttrs: [1, "adf-upload-drag-area"], features: [ɵngcc0.ɵɵProvidersFeature([], [
            { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent) }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 3, vars: 1, consts: [["dropzone", "", "webkitdropzone", "*", 1, "adf-upload-border", 3, "adf-file-draggable", "filesDropped", "folderEntityDropped", "upload-files"], ["droparea", ""]], template: function UploadDragAreaComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵlistener("filesDropped", function UploadDragAreaComponent_Template_div_filesDropped_0_listener($event) { return ctx.onFilesDropped($event); })("folderEntityDropped", function UploadDragAreaComponent_Template_div_folderEntityDropped_0_listener($event) { return ctx.onFolderEntityDropped($event); })("upload-files", function UploadDragAreaComponent_Template_div_upload_files_0_listener($event) { return ctx.onUploadFiles($event); });
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("adf-file-draggable", ctx.isDroppable());
    } }, directives: [ɵngcc2.FileDraggableDirective], styles: ["adf-upload-drag-area{display:flex;flex:1;flex-direction:column;height:100%;min-height:0;overflow:hidden}adf-upload-drag-area .adf-upload-border{box-sizing:border-box;display:flex;flex-direction:column;height:100%;min-height:0;overflow:hidden;text-align:unset;vertical-align:unset;width:100%}adf-upload-drag-area .adf-file-draggable__input-focus{border:1px dashed #2196f3;color:#2196f3}adf-upload-drag-area .adf-file-draggable__input-focus adf-document-list{background:#e3f2fd}adf-upload-drag-area .adf-file-draggable__input-focus adf-document-list adf-datatable>table{background:inherit}adf-upload-drag-area .adf-upload__dragging{background:#e3f2fd;color:#2196f3}adf-upload-drag-area .adf-upload__dragging td{border-bottom:1px dashed #2196f3!important;border-top:1px dashed #2196f3!important}adf-upload-drag-area .adf-upload__dragging td:first-child{border-left:1px dashed #2196f3!important}adf-upload-drag-area .adf-upload__dragging td:last-child{border-right:1px dashed #2196f3!important}adf-upload-drag-area:first-child>div adf-upload-drag-area .adf-file-draggable__input-focus{border:1px dashed #2196f3!important;color:#2196f3;margin-left:0!important}adf-upload-drag-area:first-child .adf-upload-border{text-align:inherit!important;vertical-align:inherit!important}adf-upload-drag-area:first-child .adf-file-draggable__input-focus{border:1px dashed #2196f3!important;color:#2196f3!important;margin-left:0!important}adf-upload-drag-area:first-child .adf-file-draggable__input-focus adf-upload-drag-area>div{border:1px dashed #2196f3!important;color:#2196f3;margin-left:0!important}"], encapsulation: 2 });
UploadDragAreaComponent.ctorParameters = () => [
    { type: UploadService },
    { type: TranslationService },
    { type: NotificationService },
    { type: ContentService },
    { type: NgZone }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UploadDragAreaComponent, [{
        type: Component,
        args: [{
                selector: 'adf-upload-drag-area',
                template: "<div [adf-file-draggable]=\"isDroppable()\" class=\"adf-upload-border\"\n     (filesDropped)=\"onFilesDropped($event)\"\n     (folderEntityDropped)=\"onFolderEntityDropped($event)\"\n     (upload-files)=\"onUploadFiles($any($event))\"\n     dropzone=\"\" webkitdropzone=\"*\" #droparea>\n    <ng-content></ng-content>\n</div>\n",
                host: { 'class': 'adf-upload-drag-area' },
                viewProviders: [
                    { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent) }
                ],
                encapsulation: ViewEncapsulation.None,
                styles: ["adf-upload-drag-area{display:flex;flex:1;flex-direction:column;height:100%;min-height:0;overflow:hidden}adf-upload-drag-area .adf-upload-border{box-sizing:border-box;display:flex;flex-direction:column;height:100%;min-height:0;overflow:hidden;text-align:unset;vertical-align:unset;width:100%}adf-upload-drag-area .adf-file-draggable__input-focus{border:1px dashed #2196f3;color:#2196f3}adf-upload-drag-area .adf-file-draggable__input-focus adf-document-list{background:#e3f2fd}adf-upload-drag-area .adf-file-draggable__input-focus adf-document-list adf-datatable>table{background:inherit}adf-upload-drag-area .adf-upload__dragging{background:#e3f2fd;color:#2196f3}adf-upload-drag-area .adf-upload__dragging td{border-bottom:1px dashed #2196f3!important;border-top:1px dashed #2196f3!important}adf-upload-drag-area .adf-upload__dragging td:first-child{border-left:1px dashed #2196f3!important}adf-upload-drag-area .adf-upload__dragging td:last-child{border-right:1px dashed #2196f3!important}adf-upload-drag-area:first-child>div adf-upload-drag-area .adf-file-draggable__input-focus{border:1px dashed #2196f3!important;color:#2196f3;margin-left:0!important}adf-upload-drag-area:first-child .adf-upload-border{text-align:inherit!important;vertical-align:inherit!important}adf-upload-drag-area:first-child .adf-file-draggable__input-focus{border:1px dashed #2196f3!important;color:#2196f3!important;margin-left:0!important}adf-upload-drag-area:first-child .adf-file-draggable__input-focus adf-upload-drag-area>div{border:1px dashed #2196f3!important;color:#2196f3;margin-left:0!important}"]
            }]
    }], function () { return [{ type: ɵngcc1.UploadService }, { type: ɵngcc1.TranslationService }, { type: ɵngcc1.NotificationService }, { type: ɵngcc1.ContentService }, { type: ɵngcc0.NgZone }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,