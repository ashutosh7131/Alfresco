/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MaterialModule } from '../material.module';
import { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';
import { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';
import { FileUploadingListComponent } from './components/file-uploading-list.component';
import { UploadButtonComponent } from './components/upload-button.component';
import { UploadVersionButtonComponent } from './components/upload-version-button.component';
import { UploadDragAreaComponent } from './components/upload-drag-area.component';
import { FileUploadErrorPipe } from './pipes/file-upload-error.pipe';
import { CoreModule } from '@alfresco/adf-core';
import { FileDraggableDirective } from './directives/file-draggable.directive';
import { ToggleIconDirective } from './directives/toggle-icon.directive';
import { A11yModule } from '@angular/cdk/a11y';
import * as ɵngcc0 from '@angular/core';
export class UploadModule {
}
UploadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: UploadModule });
UploadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function UploadModule_Factory(t) { return new (t || UploadModule)(); }, imports: [[
            CoreModule,
            CommonModule,
            MaterialModule,
            A11yModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(UploadModule, { declarations: function () { return [FileDraggableDirective,
        UploadDragAreaComponent,
        UploadButtonComponent,
        UploadVersionButtonComponent,
        FileUploadingDialogComponent,
        FileUploadingListComponent,
        FileUploadingListRowComponent,
        FileUploadErrorPipe,
        ToggleIconDirective]; }, imports: function () { return [CoreModule,
        CommonModule,
        MaterialModule,
        A11yModule]; }, exports: function () { return [FileDraggableDirective,
        UploadDragAreaComponent,
        UploadButtonComponent,
        UploadVersionButtonComponent,
        FileUploadingDialogComponent,
        FileUploadingListComponent,
        FileUploadingListRowComponent,
        FileUploadErrorPipe,
        ToggleIconDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UploadModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CoreModule,
                    CommonModule,
                    MaterialModule,
                    A11yModule
                ],
                declarations: [
                    FileDraggableDirective,
                    UploadDragAreaComponent,
                    UploadButtonComponent,
                    UploadVersionButtonComponent,
                    FileUploadingDialogComponent,
                    FileUploadingListComponent,
                    FileUploadingListRowComponent,
                    FileUploadErrorPipe,
                    ToggleIconDirective
                ],
                exports: [
                    FileDraggableDirective,
                    UploadDragAreaComponent,
                    UploadButtonComponent,
                    UploadVersionButtonComponent,
                    FileUploadingDialogComponent,
                    FileUploadingListComponent,
                    FileUploadingListRowComponent,
                    FileUploadErrorPipe,
                    ToggleIconDirective
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjL2xpYi91cGxvYWQvdXBsb2FkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQzVGLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQy9GLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQzVGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBZ0MvQyxNQUFNLE9BQU8sWUFBWTtBQUFHO3dDQTlCM0IsUUFBUSxTQUFDO01BQ04sT0FBTyxFQUFFLHNCQUNMLFVBQVUsc0JBQ1YsWUFBWSxzQkFDWixjQUFjO0FBQ2QsVUFBVTtJQUNiLGtCQUNEO1FBQVksRUFBRTtJQUNWO0dBQXNCO1VBQ3RCLHVCQUF1QixzQkFDdkIscUJBQXFCLHNCQUNyQiw0QkFBNEIsc0JBQzVCO1FBQTRCLHNCQUM1Qjt1QkFBMEI7Y0FDMUI7S0FBNkIsc0JBQzdCO1FBQW1CLHNCQUNuQjthQUFtQixrQkFDdEI7VUFDRCxPQUFPLEVBQUU7WUFDTCxzQkFBc0Isc0JBQ3RCO0dBQXVCO0dBQ3ZCO0FBQXFCLHNCQUNyQiw0QkFBNEIsc0JBQzVCO3FCQUE0QjtVQUM1QjtLQUEwQixzQkFDMUI7a0JBQTZCO0VBQzdCLG1CQUFtQjtPQUNuQixtQkFBbUI7S0FDdEIsY0FDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRlcmlhbE1vZHVsZSB9IGZyb20gJy4uL21hdGVyaWFsLm1vZHVsZSc7XG5pbXBvcnQgeyBGaWxlVXBsb2FkaW5nRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZpbGUtdXBsb2FkaW5nLWRpYWxvZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmlsZVVwbG9hZGluZ0xpc3RSb3dDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IEZpbGVVcGxvYWRpbmdMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZpbGUtdXBsb2FkaW5nLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFVwbG9hZEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy91cGxvYWQtYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBVcGxvYWRWZXJzaW9uQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3VwbG9hZC12ZXJzaW9uLWJ1dHRvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgVXBsb2FkRHJhZ0FyZWFDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdXBsb2FkLWRyYWctYXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmlsZVVwbG9hZEVycm9yUGlwZSB9IGZyb20gJy4vcGlwZXMvZmlsZS11cGxvYWQtZXJyb3IucGlwZSc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IEZpbGVEcmFnZ2FibGVEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZmlsZS1kcmFnZ2FibGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRvZ2dsZUljb25EaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvdG9nZ2xlLWljb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IEExMXlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb3JlTW9kdWxlLFxuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIE1hdGVyaWFsTW9kdWxlLFxuICAgICAgICBBMTF5TW9kdWxlXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgRmlsZURyYWdnYWJsZURpcmVjdGl2ZSxcbiAgICAgICAgVXBsb2FkRHJhZ0FyZWFDb21wb25lbnQsXG4gICAgICAgIFVwbG9hZEJ1dHRvbkNvbXBvbmVudCxcbiAgICAgICAgVXBsb2FkVmVyc2lvbkJ1dHRvbkNvbXBvbmVudCxcbiAgICAgICAgRmlsZVVwbG9hZGluZ0RpYWxvZ0NvbXBvbmVudCxcbiAgICAgICAgRmlsZVVwbG9hZGluZ0xpc3RDb21wb25lbnQsXG4gICAgICAgIEZpbGVVcGxvYWRpbmdMaXN0Um93Q29tcG9uZW50LFxuICAgICAgICBGaWxlVXBsb2FkRXJyb3JQaXBlLFxuICAgICAgICBUb2dnbGVJY29uRGlyZWN0aXZlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEZpbGVEcmFnZ2FibGVEaXJlY3RpdmUsXG4gICAgICAgIFVwbG9hZERyYWdBcmVhQ29tcG9uZW50LFxuICAgICAgICBVcGxvYWRCdXR0b25Db21wb25lbnQsXG4gICAgICAgIFVwbG9hZFZlcnNpb25CdXR0b25Db21wb25lbnQsXG4gICAgICAgIEZpbGVVcGxvYWRpbmdEaWFsb2dDb21wb25lbnQsXG4gICAgICAgIEZpbGVVcGxvYWRpbmdMaXN0Q29tcG9uZW50LFxuICAgICAgICBGaWxlVXBsb2FkaW5nTGlzdFJvd0NvbXBvbmVudCxcbiAgICAgICAgRmlsZVVwbG9hZEVycm9yUGlwZSxcbiAgICAgICAgVG9nZ2xlSWNvbkRpcmVjdGl2ZVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgVXBsb2FkTW9kdWxlIHt9XG4iXX0=