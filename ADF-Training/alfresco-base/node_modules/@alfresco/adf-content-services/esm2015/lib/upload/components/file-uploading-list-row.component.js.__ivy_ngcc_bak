/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileModel, FileUploadStatus } from '@alfresco/adf-core';
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
export class FileUploadingListRowComponent {
    constructor() {
        this.cancel = new EventEmitter();
        this.remove = new EventEmitter();
        this.FileUploadStatus = FileUploadStatus;
    }
    onCancel(file) {
        this.cancel.emit(file);
    }
    onRemove(file) {
        this.remove.emit(file);
    }
    showCancelledStatus() {
        return this.file.status === FileUploadStatus.Cancelled ||
            this.file.status === FileUploadStatus.Aborted ||
            this.file.status === FileUploadStatus.Deleted;
    }
    get versionNumber() {
        return this.file.data.entry.properties['cm:versionLabel'];
    }
    get mimeType() {
        if (this.file && this.file.file && this.file.file.type) {
            return this.file.file.type;
        }
        return 'default';
    }
    isUploadVersion() {
        return (!!this.file.data &&
            this.file.options &&
            this.file.options.newVersion &&
            this.file.data.entry.properties &&
            this.file.data.entry.properties['cm:versionLabel']);
    }
}
FileUploadingListRowComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-file-uploading-list-row',
                template: "<div class=\"adf-file-uploading-row\">\n    <mat-icon *ngIf=\"mimeType === 'default'\" mat-list-icon class=\"adf-file-uploading-row__type\">\n        insert_drive_file\n    </mat-icon>\n\n    <adf-icon *ngIf=\"mimeType !== 'default'\" value=\"adf:{{ mimeType }}\"></adf-icon>\n\n    <span\n        tabindex=\"0\"\n        class=\"adf-file-uploading-row__name\"\n        title=\"{{ file.name }}\">\n        {{ file.name }}\n    </span>\n\n    <span *ngIf=\"isUploadVersion()\" class=\"adf-file-uploading-row__version\" tabindex=\"0\" >\n        <mat-chip color=\"primary\"\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.VERSION' | translate: { version:  versionNumber }\"\n            [title]=\"'version' + versionNumber\" disabled\n        >{{ versionNumber }}</mat-chip>\n    </span>\n\n    <div\n        tabindex=\"0\"\n        role=\"button\"\n        #toggleIcon=\"toggleIcon\"\n        adf-toggle-icon\n        (keyup.enter)=\"onCancel(file)\"\n        (click)=\"onCancel(file)\"\n        data-automation-id=\"cancel-upload-progress\"\n        *ngIf=\"file.status === FileUploadStatus.Progress || file.status === FileUploadStatus.Starting\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_FILE_UPLOAD' | translate: { file: file.name }\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\">\n\n        <span class=\"adf-file-uploading-row__status\" *ngIf=\"!toggleIcon.isToggled\">\n            {{ file.progress.loaded | adfFileSize }} / {{ file.progress.total | adfFileSize }}\n        </span>\n\n        <mat-icon *ngIf=\"toggleIcon.isToggled\"\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--cancel\">\n            clear\n        </mat-icon>\n    </div>\n\n    <button mat-icon-button\n        adf-toggle-icon\n        #toggleIcon=\"toggleIcon\"\n        *ngIf=\"file.status === FileUploadStatus.Complete && !isUploadVersion()\"\n        (click)=\"onRemove(file)\"\n        class=\"adf-file-uploading-row__group\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.REMOVE_FILE' | translate: { file: file.name }\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE' | translate }}\">\n\n        <mat-icon *ngIf=\"!toggleIcon.isToggled\"\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--done\">\n            check_circle\n        </mat-icon>\n\n        <mat-icon *ngIf=\"toggleIcon.isToggled\"\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </button>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Complete && isUploadVersion()\"\n        class=\"adf-file-uploading-row__file-version\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.STATUS.FILE_DONE_STATUS' | translate\"\n        role=\"status\"\n        >\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__status--done\">\n            check_circle\n        </mat-icon>\n    </div>\n\n    <button\n        adf-toggle-icon\n        #toggleIconCancel=\"toggleIcon\"\n        mat-icon-button\n        *ngIf=\"file.status === FileUploadStatus.Pending\"\n        (click)=\"onCancel(file)\"\n        data-automation-id=\"cancel-upload-queue\"\n        class=\"adf-file-uploading-row__group\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_FILE' | translate: { file: file.name }\">\n        <mat-icon\n            *ngIf=\"!toggleIconCancel.isToggled\"\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--pending\">\n            schedule\n        </mat-icon>\n\n        <mat-icon\n            *ngIf=\"toggleIconCancel.isToggled\"\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </button>\n\n    <div\n        tabindex=\"0\"\n        role=\"status\"\n        *ngIf=\"file.status === FileUploadStatus.Error\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--error\">\n        <mat-icon mat-list-icon\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.UPLOAD_FILE_ERROR' | translate: { error: file.errorCode | adfFileUploadError }\"\n            [matTooltip]=\"file.errorCode | adfFileUploadError\">\n            report_problem\n        </mat-icon>\n    </div>\n\n    <div\n        tabindex=\"0\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate\"\n        role=\"status\"\n        *ngIf=\"showCancelledStatus()\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--cancelled\">\n        {{ 'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate }}\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: ["adf-file-uploading-list-row:not(:first-child){border-top:1px solid var(--adf-upload-border-color);display:block}.adf-file-uploading-row{align-items:center;cursor:default;display:flex;padding:.3em 1em}.adf-file-uploading-row:hover{background:#eee}.adf-file-uploading-row__name{flex:1 1 auto;overflow:hidden;padding:0 1em 0 .5em;text-overflow:ellipsis;white-space:nowrap}.adf-file-uploading-row__block,.adf-file-uploading-row__file-version,.adf-file-uploading-row__group{align-items:center;display:flex!important;height:40px;justify-content:flex-end;line-height:40px;min-width:100px}.adf-file-uploading-row__group--toggle{align-items:center;cursor:pointer;display:flex;height:40px;line-height:40px}.adf-file-uploading-row__status--done{color:var(--theme-accent-color)}.adf-file-uploading-row__action--cancel,.adf-file-uploading-row__action--remove,.adf-file-uploading-row__status--error{color:var(--theme-warn-color)}"]
            },] }
];
FileUploadingListRowComponent.propDecorators = {
    file: [{ type: Input }],
    cancel: [{ type: Output }],
    remove: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29udGVudC1zZXJ2aWNlcy9zcmMvIiwic291cmNlcyI6WyJsaWIvdXBsb2FkL2NvbXBvbmVudHMvZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUTFGLE1BQU0sT0FBTyw2QkFBNkI7SUFOMUM7UUFXSSxXQUFNLEdBQTRCLElBQUksWUFBWSxFQUFhLENBQUM7UUFHaEUsV0FBTSxHQUE0QixJQUFJLFlBQVksRUFBYSxDQUFDO1FBRWhFLHFCQUFnQixHQUFHLGdCQUFnQixDQUFDO0lBcUN4QyxDQUFDO0lBbkNHLFFBQVEsQ0FBQyxJQUFlO1FBQ3BCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxRQUFRLENBQUMsSUFBZTtRQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsbUJBQW1CO1FBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxnQkFBZ0IsQ0FBQyxTQUFTO1lBQ2xELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLE9BQU87WUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssZ0JBQWdCLENBQUMsT0FBTyxDQUFDO0lBQ3RELENBQUM7SUFFRCxJQUFJLGFBQWE7UUFDYixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1IsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNwRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztTQUM5QjtRQUVELE9BQU8sU0FBUyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxlQUFlO1FBQ1gsT0FBTyxDQUNILENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7WUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVU7WUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVU7WUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUNyRCxDQUFDO0lBQ04sQ0FBQzs7O1lBcERKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QyxxMEpBQXVEO2dCQUV2RCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDeEM7OzttQkFFSSxLQUFLO3FCQUdMLE1BQU07cUJBR04sTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEZpbGVNb2RlbCwgRmlsZVVwbG9hZFN0YXR1cyB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtZmlsZS11cGxvYWRpbmctbGlzdC1yb3cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9maWxlLXVwbG9hZGluZy1saXN0LXJvdy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEZpbGVVcGxvYWRpbmdMaXN0Um93Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIGZpbGU6IEZpbGVNb2RlbDtcblxuICAgIEBPdXRwdXQoKVxuICAgIGNhbmNlbDogRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4gPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4oKTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlbW92ZTogRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4gPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4oKTtcblxuICAgIEZpbGVVcGxvYWRTdGF0dXMgPSBGaWxlVXBsb2FkU3RhdHVzO1xuXG4gICAgb25DYW5jZWwoZmlsZTogRmlsZU1vZGVsKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY2FuY2VsLmVtaXQoZmlsZSk7XG4gICAgfVxuXG4gICAgb25SZW1vdmUoZmlsZTogRmlsZU1vZGVsKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVtb3ZlLmVtaXQoZmlsZSk7XG4gICAgfVxuXG4gICAgc2hvd0NhbmNlbGxlZFN0YXR1cygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZS5zdGF0dXMgPT09IEZpbGVVcGxvYWRTdGF0dXMuQ2FuY2VsbGVkIHx8XG4gICAgICAgICAgICB0aGlzLmZpbGUuc3RhdHVzID09PSBGaWxlVXBsb2FkU3RhdHVzLkFib3J0ZWQgfHxcbiAgICAgICAgICAgIHRoaXMuZmlsZS5zdGF0dXMgPT09IEZpbGVVcGxvYWRTdGF0dXMuRGVsZXRlZDtcbiAgICB9XG5cbiAgICBnZXQgdmVyc2lvbk51bWJlcigpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlLmRhdGEuZW50cnkucHJvcGVydGllc1snY206dmVyc2lvbkxhYmVsJ107XG4gICAgfVxuXG4gICAgZ2V0IG1pbWVUeXBlKCk6IHN0cmluZyB7XG4gICAgICAgIGlmICh0aGlzLmZpbGUgJiYgdGhpcy5maWxlLmZpbGUgJiYgdGhpcy5maWxlLmZpbGUudHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmlsZS5maWxlLnR5cGU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJ2RlZmF1bHQnO1xuICAgIH1cblxuICAgIGlzVXBsb2FkVmVyc2lvbigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICEhdGhpcy5maWxlLmRhdGEgJiZcbiAgICAgICAgICAgIHRoaXMuZmlsZS5vcHRpb25zICYmXG4gICAgICAgICAgICB0aGlzLmZpbGUub3B0aW9ucy5uZXdWZXJzaW9uICYmXG4gICAgICAgICAgICB0aGlzLmZpbGUuZGF0YS5lbnRyeS5wcm9wZXJ0aWVzICYmXG4gICAgICAgICAgICB0aGlzLmZpbGUuZGF0YS5lbnRyeS5wcm9wZXJ0aWVzWydjbTp2ZXJzaW9uTGFiZWwnXVxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==