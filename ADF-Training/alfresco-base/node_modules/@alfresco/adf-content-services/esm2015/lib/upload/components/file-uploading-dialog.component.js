/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileUploadStatus, UploadService, UserPreferencesService } from '@alfresco/adf-core';
import { ChangeDetectorRef, Component, Input, Output, EventEmitter, ViewChild, HostBinding, ElementRef, ViewEncapsulation } from '@angular/core';
import { merge, Subject } from 'rxjs';
import { FileUploadingListComponent } from './file-uploading-list.component';
import { takeUntil, delay } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/material/button';
import * as ɵngcc4 from '@angular/material/icon';
import * as ɵngcc5 from '@angular/material/list';
import * as ɵngcc6 from './file-uploading-list.component';
import * as ɵngcc7 from './file-uploading-list-row.component';
import * as ɵngcc8 from '@angular/cdk/a11y';
import * as ɵngcc9 from '@ngx-translate/core';

const _c0 = ["uploadList"];
const _c1 = function (a0, a1) { return { completed: a0, total: a1 }; };
function FileUploadingDialogComponent_div_0_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "FILE_UPLOAD.MESSAGES.UPLOAD_PROGRESS", ɵngcc0.ɵɵpureFunction2(4, _c1, ctx_r1.totalCompleted, ctx_r1.filesUploadingList.length)), " ");
} }
function FileUploadingDialogComponent_div_0_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "FILE_UPLOAD.MESSAGES.UPLOAD_CANCELED"), " ");
} }
const _c2 = function (a0) { return { total: a0 }; };
function FileUploadingDialogComponent_div_0_section_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "section", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r3.totalErrors > 1 ? "FILE_UPLOAD.MESSAGES.UPLOAD_ERRORS" : "FILE_UPLOAD.MESSAGES.UPLOAD_ERROR", ɵngcc0.ɵɵpureFunction1(4, _c2, ctx_r3.totalErrors)), " ");
} }
function FileUploadingDialogComponent_div_0_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-file-uploading-list-row", 17);
    ɵngcc0.ɵɵlistener("remove", function FileUploadingDialogComponent_div_0_ng_template_14_Template_adf_file_uploading_list_row_remove_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const file_r8 = ctx.$implicit; ɵngcc0.ɵɵnextContext(); const _r4 = ɵngcc0.ɵɵreference(13); return _r4.removeFile(file_r8); })("cancel", function FileUploadingDialogComponent_div_0_ng_template_14_Template_adf_file_uploading_list_row_cancel_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const file_r8 = ctx.$implicit; ɵngcc0.ɵɵnextContext(); const _r4 = ɵngcc0.ɵɵreference(13); return _r4.cancelFile(file_r8); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r8 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("file", file_r8);
} }
function FileUploadingDialogComponent_div_0_footer_22_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function FileUploadingDialogComponent_div_0_footer_22_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(3); return ctx_r14.toggleConfirmation(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_ALL"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "ADF_FILE_UPLOAD.BUTTON.CANCEL_ALL"));
} }
function FileUploadingDialogComponent_div_0_footer_22_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 22);
    ɵngcc0.ɵɵlistener("click", function FileUploadingDialogComponent_div_0_footer_22_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(3); return ctx_r16.close(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG_CLOSE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "ADF_FILE_UPLOAD.BUTTON.CLOSE"));
} }
function FileUploadingDialogComponent_div_0_footer_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "footer", 18);
    ɵngcc0.ɵɵtemplate(1, FileUploadingDialogComponent_div_0_footer_22_button_1_Template, 4, 6, "button", 19);
    ɵngcc0.ɵɵtemplate(2, FileUploadingDialogComponent_div_0_footer_22_button_2_Template, 4, 6, "button", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.canShowCancelAll());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.canCloseDialog());
} }
function FileUploadingDialogComponent_div_0_footer_23_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "footer", 23);
    ɵngcc0.ɵɵelementStart(1, "button", 24);
    ɵngcc0.ɵɵlistener("click", function FileUploadingDialogComponent_div_0_footer_23_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.cancelAllUploads(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "button", 25);
    ɵngcc0.ɵɵlistener("click", function FileUploadingDialogComponent_div_0_footer_23_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.toggleConfirmation(); });
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_FILE_UPLOAD.ARIA-LABEL.CONFIRMATION.CANCEL"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 6, "ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CANCEL"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(6, 8, "ADF_FILE_UPLOAD.ARIA-LABEL.CONFIRMATION.CONTINUE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 10, "ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CONTINUE"));
} }
function FileUploadingDialogComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "header", 2);
    ɵngcc0.ɵɵelementStart(3, "button", 3);
    ɵngcc0.ɵɵlistener("click", function FileUploadingDialogComponent_div_0_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.toggleMinimized(); });
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementStart(5, "mat-icon", 4);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, FileUploadingDialogComponent_div_0_span_8_Template, 3, 7, "span", 5);
    ɵngcc0.ɵɵtemplate(9, FileUploadingDialogComponent_div_0_span_9_Template, 3, 3, "span", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(10, FileUploadingDialogComponent_div_0_section_10_Template, 3, 6, "section", 6);
    ɵngcc0.ɵɵelementStart(11, "section", 7);
    ɵngcc0.ɵɵelementStart(12, "adf-file-uploading-list", 8, 9);
    ɵngcc0.ɵɵtemplate(14, FileUploadingDialogComponent_div_0_ng_template_14_Template, 1, 1, "ng-template");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "div", 10);
    ɵngcc0.ɵɵelementStart(16, "p", 11);
    ɵngcc0.ɵɵtext(17);
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(19, "p", 12);
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(22, FileUploadingDialogComponent_div_0_footer_22_Template, 3, 2, "footer", 13);
    ɵngcc0.ɵɵtemplate(23, FileUploadingDialogComponent_div_0_footer_23_Template, 9, 12, "footer", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r4 = ɵngcc0.ɵɵreference(13);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("adf-upload-dialog--minimized", ctx_r0.isDialogMinimized);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 22, "ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("disabled", ctx_r0.isConfirmation);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(4, 24, ctx_r0.isDialogMinimized ? "ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG_MAXIMIZE" : "ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG_MINIMIZE"))("aria-expanded", !ctx_r0.isDialogMinimized);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(6, 26, ctx_r0.isDialogMinimized ? "ADF_FILE_UPLOAD.BUTTON.MAXIMIZE" : "ADF_FILE_UPLOAD.BUTTON.MINIMIZE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.isDialogMinimized ? "keyboard_arrow_up" : "keyboard_arrow_down", " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !_r4.isUploadCancelled());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r4.isUploadCancelled());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.totalErrors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("adf-upload-dialog--padding", ctx_r0.isConfirmation);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("adf-upload-dialog--hide", ctx_r0.isConfirmation);
    ɵngcc0.ɵɵproperty("files", ctx_r0.filesUploadingList);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassProp("adf-upload-dialog--hide", !ctx_r0.isConfirmation);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(18, 28, "ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TITLE"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(21, 30, "ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TEXT"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.isConfirmation);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isConfirmation);
} }
export class FileUploadingDialogComponent {
    constructor(uploadService, changeDetector, userPreferencesService, elementRef) {
        this.uploadService = uploadService;
        this.changeDetector = changeDetector;
        this.userPreferencesService = userPreferencesService;
        this.elementRef = elementRef;
        this.direction = 'ltr';
        this.onDestroy$ = new Subject();
        this.position = 'right';
        this.alwaysVisible = false;
        this.error = new EventEmitter();
        this.filesUploadingList = [];
        this.isDialogActive = false;
        this.totalCompleted = 0;
        this.totalErrors = 0;
        this.isDialogMinimized = false;
        this.isConfirmation = false;
        this.dialogActive = new Subject();
    }
    get isPositionRight() {
        return (this.direction === 'ltr' && this.position === 'right')
            || (this.direction === 'rtl' && this.position === 'left')
            || null;
    }
    get isPositionLeft() {
        return (this.direction === 'ltr' && this.position === 'left')
            || (this.direction === 'rtl' && this.position === 'right')
            || null;
    }
    ngOnInit() {
        this.dialogActive
            .pipe(delay(100), takeUntil(this.onDestroy$))
            .subscribe(() => {
            const element = this.elementRef.nativeElement.querySelector('#upload-dialog');
            if (element) {
                element.focus();
            }
        });
        this.listSubscription = this.uploadService.queueChanged
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(fileList => {
            this.filesUploadingList = fileList;
            if (this.filesUploadingList.length && !this.isDialogActive) {
                this.isDialogActive = true;
                this.dialogActive.next();
            }
            else {
                this.dialogActive.next();
            }
        });
        this.counterSubscription = merge(this.uploadService.fileUploadComplete, this.uploadService.fileUploadDeleted)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((event) => {
            this.totalCompleted = event.totalComplete;
            this.changeDetector.detectChanges();
        });
        this.errorSubscription = this.uploadService.fileUploadError
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(event => {
            this.totalErrors = event.totalError;
            this.changeDetector.detectChanges();
        });
        this.fileUploadSubscription = this.uploadService.fileUpload
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(() => {
            this.changeDetector.detectChanges();
        });
        this.uploadService.fileDeleted
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(objId => {
            if (this.filesUploadingList) {
                const uploadedFile = this.filesUploadingList.find((file) => {
                    return file.data ? file.data.entry.id === objId : false;
                });
                if (uploadedFile) {
                    uploadedFile.status = FileUploadStatus.Cancelled;
                    this.changeDetector.detectChanges();
                }
            }
        });
        this.userPreferencesService.select('textOrientation')
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((textOrientation) => {
            this.direction = textOrientation;
        });
    }
    toggleConfirmation() {
        this.isConfirmation = !this.isConfirmation;
        if (!this.isConfirmation) {
            this.dialogActive.next();
        }
        if (this.isDialogMinimized) {
            this.isDialogMinimized = false;
        }
    }
    cancelAllUploads() {
        this.toggleConfirmation();
        this.dialogActive.next();
        this.uploadList.cancelAllFiles();
    }
    toggleMinimized() {
        this.isDialogMinimized = !this.isDialogMinimized;
        this.changeDetector.detectChanges();
    }
    close() {
        this.isConfirmation = false;
        this.totalCompleted = 0;
        this.totalErrors = 0;
        this.filesUploadingList = [];
        this.isDialogActive = false;
        this.isDialogMinimized = false;
        this.uploadService.clearQueue();
        this.changeDetector.detectChanges();
    }
    ngOnDestroy() {
        this.uploadService.clearQueue();
        this.listSubscription.unsubscribe();
        this.counterSubscription.unsubscribe();
        this.fileUploadSubscription.unsubscribe();
        this.errorSubscription.unsubscribe();
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    canShowDialog() {
        return this.isDialogActive || this.alwaysVisible;
    }
    canShowCancelAll() {
        var _a;
        return ((_a = this.filesUploadingList) === null || _a === void 0 ? void 0 : _a.length) && this.hasUploadInProgress();
    }
    canCloseDialog() {
        return !this.hasUploadInProgress() && !this.alwaysVisible;
    }
    hasUploadInProgress() {
        var _a, _b;
        return (!((_a = this.uploadList) === null || _a === void 0 ? void 0 : _a.isUploadCompleted()) && !((_b = this.uploadList) === null || _b === void 0 ? void 0 : _b.isUploadCancelled()));
    }
}
FileUploadingDialogComponent.ɵfac = function FileUploadingDialogComponent_Factory(t) { return new (t || FileUploadingDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UploadService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UserPreferencesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FileUploadingDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FileUploadingDialogComponent, selectors: [["adf-file-uploading-dialog"]], viewQuery: function FileUploadingDialogComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.uploadList = _t.first);
    } }, hostVars: 2, hostBindings: function FileUploadingDialogComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("adfUploadDialogRight", ctx.isPositionRight)("adfUploadDialogLeft", ctx.isPositionLeft);
    } }, inputs: { position: "position", alwaysVisible: "alwaysVisible" }, outputs: { error: "error" }, decls: 1, vars: 1, consts: [["role", "dialog", "tabindex", "0", "class", "adf-upload-dialog", "id", "upload-dialog", 3, "adf-upload-dialog--minimized", 4, "ngIf"], ["role", "dialog", "tabindex", "0", "id", "upload-dialog", 1, "adf-upload-dialog"], [1, "adf-upload-dialog__header"], ["mat-button", "", 3, "disabled", "click"], ["mat-list-icon", "", 3, "title"], ["tabindex", "0", "class", "adf-upload-dialog__title", 4, "ngIf"], ["class", "adf-upload-dialog__info", "tabindex", "0", 4, "ngIf"], [1, "adf-upload-dialog__content"], [3, "files"], ["uploadList", ""], ["aria-live", "polite", "aria-labelledby", "confirmationTitle", "aria-describedby", "confirmationDescription", 1, "adf-upload-dialog__confirmation"], ["role", "heading", "id", "confirmationTitle", 1, "adf-upload-dialog__confirmation--title"], ["id", "confirmationDescription", 1, "adf-upload-dialog__confirmation--text"], ["class", "adf-upload-dialog__actions", 4, "ngIf"], ["class", "adf-upload-dialog__actions", "cdkTrapFocus", "", "cdkTrapFocusAutoCapture", "", 4, "ngIf"], ["tabindex", "0", 1, "adf-upload-dialog__title"], ["tabindex", "0", 1, "adf-upload-dialog__info"], [3, "file", "remove", "cancel"], [1, "adf-upload-dialog__actions"], ["id", "adf-upload-dialog-cancel-all", "color", "primary", "mat-button", "", 3, "click", 4, "ngIf"], ["id", "adf-upload-dialog-close", "mat-button", "", "color", "primary", 3, "click", 4, "ngIf"], ["id", "adf-upload-dialog-cancel-all", "color", "primary", "mat-button", "", 3, "click"], ["id", "adf-upload-dialog-close", "mat-button", "", "color", "primary", 3, "click"], ["cdkTrapFocus", "", "cdkTrapFocusAutoCapture", "", 1, "adf-upload-dialog__actions"], ["id", "adf-upload-dialog-cancel", "mat-button", "", 3, "click"], ["id", "adf-upload-dialog-confirm", "mat-button", "", "color", "primary", 3, "click"]], template: function FileUploadingDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FileUploadingDialogComponent_div_0_Template, 24, 32, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.canShowDialog());
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.MatButton, ɵngcc4.MatIcon, ɵngcc5.MatListIconCssMatStyler, ɵngcc6.FileUploadingListComponent, ɵngcc7.FileUploadingListRowComponent, ɵngcc8.CdkTrapFocus], pipes: [ɵngcc9.TranslatePipe], styles: [".adf-upload-dialog{background:var(--theme-dialog-bg-color);bottom:20px;box-shadow:1px 5px 15px #888;color:var(--theme-text-color);position:fixed;width:40%;z-index:999}.adf-upload-dialog--padding{padding:1em}.adf-upload-dialog--hide{display:none!important}.adf-upload-dialog--minimized{width:20%}.adf-upload-dialog--minimized .adf-upload-dialog__content{display:none}.adf-upload-dialog__header{align-items:center;display:flex;padding:1em}.adf-upload-dialog__header button{color:var(--theme-text-color)!important;line-height:0;min-width:0;padding:0}.adf-upload-dialog__title{flex:1 1 auto;margin-left:.5em}.adf-upload-dialog__info{padding:0 1em 1em}.adf-upload-dialog__content{border-bottom:1px solid var(--adf-upload-border-color);border-top:1px solid var(--adf-upload-border-color);max-height:194px;overflow:auto}.adf-upload-dialog__confirmation{padding:0 .5em}.adf-upload-dialog__confirmation--title{color:var(--theme-text-bold-color);font-size:16px;letter-spacing:-.4px;line-height:1.5}.adf-upload-dialog__confirmation--text{margin-bottom:0}.adf-upload-dialog__actions{display:flex;justify-content:flex-end;padding:1em}.adf-upload-dialog__actions>button{text-transform:uppercase}[adfUploadDialogLeft] .adf-upload-dialog{left:25px}[adfUploadDialogRight] .adf-upload-dialog{right:25px}"], encapsulation: 2 });
FileUploadingDialogComponent.ctorParameters = () => [
    { type: UploadService },
    { type: ChangeDetectorRef },
    { type: UserPreferencesService },
    { type: ElementRef }
];
FileUploadingDialogComponent.propDecorators = {
    uploadList: [{ type: ViewChild, args: ['uploadList',] }],
    position: [{ type: Input }],
    alwaysVisible: [{ type: Input }],
    error: [{ type: Output }],
    isPositionRight: [{ type: HostBinding, args: ['attr.adfUploadDialogRight',] }],
    isPositionLeft: [{ type: HostBinding, args: ['attr.adfUploadDialogLeft',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileUploadingDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-file-uploading-dialog',
                template: "<div *ngIf=\"canShowDialog()\"\n     role=\"dialog\"\n     [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG'| translate\"\n     tabindex=\"0\"\n     class=\"adf-upload-dialog\"\n     id=\"upload-dialog\"\n     [class.adf-upload-dialog--minimized]=\"isDialogMinimized\">\n    <header class=\"adf-upload-dialog__header\">\n        <button\n            mat-button\n            [attr.aria-label]=\"(isDialogMinimized ?\n                'ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG_MAXIMIZE':\n                'ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG_MINIMIZE') | translate\"\n            [disabled]=\"isConfirmation\"\n            [attr.aria-expanded]=\"!isDialogMinimized\"\n            (click)=\"toggleMinimized()\">\n            <mat-icon\n                mat-list-icon\n                title=\"{{ (isDialogMinimized ? 'ADF_FILE_UPLOAD.BUTTON.MAXIMIZE': 'ADF_FILE_UPLOAD.BUTTON.MINIMIZE') | translate }}\">\n                    {{ isDialogMinimized ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}\n            </mat-icon>\n        </button>\n\n        <span\n            tabindex=\"0\"\n            class=\"adf-upload-dialog__title\"\n            *ngIf=\"!uploadList.isUploadCancelled()\">\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_PROGRESS'\n                | translate: {\n                    completed: totalCompleted,\n                    total: filesUploadingList.length\n                }\n            }}\n        </span>\n\n        <span\n            tabindex=\"0\"\n            class=\"adf-upload-dialog__title\"\n            *ngIf=\"uploadList.isUploadCancelled()\">\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_CANCELED' | translate }}\n        </span>\n    </header>\n\n    <section class=\"adf-upload-dialog__info\"\n        tabindex=\"0\"\n        *ngIf=\"totalErrors\">\n        {{\n            (totalErrors > 1\n                 ? 'FILE_UPLOAD.MESSAGES.UPLOAD_ERRORS'\n                 : 'FILE_UPLOAD.MESSAGES.UPLOAD_ERROR')\n                 | translate: { total: totalErrors }\n        }}\n    </section>\n\n    <section class=\"adf-upload-dialog__content\"\n        [class.adf-upload-dialog--padding]=\"isConfirmation\">\n        <adf-file-uploading-list\n            [class.adf-upload-dialog--hide]=\"isConfirmation\"\n            #uploadList\n            [files]=\"filesUploadingList\">\n                <ng-template let-file=\"$implicit\">\n                     <adf-file-uploading-list-row\n                        [file]=\"file\"\n                        (remove)=\"uploadList.removeFile(file)\"\n                        (cancel)=\"uploadList.cancelFile(file)\">\n                    </adf-file-uploading-list-row>\n                </ng-template>\n        </adf-file-uploading-list>\n\n        <div\n            aria-live=\"polite\"\n            aria-labelledby=\"confirmationTitle\"\n            aria-describedby=\"confirmationDescription\"\n            class=\"adf-upload-dialog__confirmation\"\n            [class.adf-upload-dialog--hide]=\"!isConfirmation\">\n                <p role=\"heading\" id=\"confirmationTitle\" class=\"adf-upload-dialog__confirmation--title\">\n                    {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TITLE' | translate }}\n                </p>\n                <p id=\"confirmationDescription\" class=\"adf-upload-dialog__confirmation--text\">\n                    {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TEXT' | translate }}\n                </p>\n        </div>\n    </section>\n\n    <footer class=\"adf-upload-dialog__actions\" *ngIf=\"!isConfirmation\">\n        <button\n            id=\"adf-upload-dialog-cancel-all\"\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_ALL' | translate\"\n            color=\"primary\"\n            mat-button\n            *ngIf=\"canShowCancelAll()\"\n            (click)=\"toggleConfirmation()\"\n        >{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_ALL' | translate }}</button>\n\n        <button\n            id=\"adf-upload-dialog-close\"\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.DIALOG_CLOSE' | translate\"\n            *ngIf=\"canCloseDialog()\"\n            mat-button\n            color=\"primary\"\n            (click)=\"close()\"\n        >{{ 'ADF_FILE_UPLOAD.BUTTON.CLOSE' | translate }}</button>\n    </footer>\n\n    <footer class=\"adf-upload-dialog__actions\"\n            *ngIf=\"isConfirmation\" cdkTrapFocus cdkTrapFocusAutoCapture>\n        <button\n            id=\"adf-upload-dialog-cancel\"\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.CONFIRMATION.CANCEL' | translate\"\n            mat-button\n            (click)=\"cancelAllUploads()\"\n        >{{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CANCEL' | translate }}</button>\n\n        <button\n            id=\"adf-upload-dialog-confirm\"\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.CONFIRMATION.CONTINUE' | translate\"\n            mat-button\n            color=\"primary\"\n            (click)=\"toggleConfirmation()\"\n        >{{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CONTINUE' | translate }}</button>\n    </footer>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-upload-dialog{background:var(--theme-dialog-bg-color);bottom:20px;box-shadow:1px 5px 15px #888;color:var(--theme-text-color);position:fixed;width:40%;z-index:999}.adf-upload-dialog--padding{padding:1em}.adf-upload-dialog--hide{display:none!important}.adf-upload-dialog--minimized{width:20%}.adf-upload-dialog--minimized .adf-upload-dialog__content{display:none}.adf-upload-dialog__header{align-items:center;display:flex;padding:1em}.adf-upload-dialog__header button{color:var(--theme-text-color)!important;line-height:0;min-width:0;padding:0}.adf-upload-dialog__title{flex:1 1 auto;margin-left:.5em}.adf-upload-dialog__info{padding:0 1em 1em}.adf-upload-dialog__content{border-bottom:1px solid var(--adf-upload-border-color);border-top:1px solid var(--adf-upload-border-color);max-height:194px;overflow:auto}.adf-upload-dialog__confirmation{padding:0 .5em}.adf-upload-dialog__confirmation--title{color:var(--theme-text-bold-color);font-size:16px;letter-spacing:-.4px;line-height:1.5}.adf-upload-dialog__confirmation--text{margin-bottom:0}.adf-upload-dialog__actions{display:flex;justify-content:flex-end;padding:1em}.adf-upload-dialog__actions>button{text-transform:uppercase}[adfUploadDialogLeft] .adf-upload-dialog{left:25px}[adfUploadDialogRight] .adf-upload-dialog{right:25px}"]
            }]
    }], function () { return [{ type: ɵngcc1.UploadService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UserPreferencesService }, { type: ɵngcc0.ElementRef }]; }, { position: [{
            type: Input
        }], alwaysVisible: [{
            type: Input
        }], error: [{
            type: Output
        }], isPositionRight: [{
            type: HostBinding,
            args: ['attr.adfUploadDialogRight']
        }], isPositionLeft: [{
            type: HostBinding,
            args: ['attr.adfUploadDialogLeft']
        }], uploadList: [{
            type: ViewChild,
            args: ['uploadList']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,