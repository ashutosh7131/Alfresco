/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AllowableOperationsEnum, EXTENDIBLE_COMPONENT } from '@alfresco/adf-core';
import { Component, forwardRef, Input, ViewEncapsulation } from '@angular/core';
import { Node } from '@alfresco/js-api';
import { UploadButtonComponent } from './upload-button.component';
export class UploadVersionButtonComponent extends UploadButtonComponent {
    createFileModel(file) {
        const fileModel = super.createFileModel(file, this.rootFolderId, (file.webkitRelativePath || '').replace(/\/[^\/]*$/, ''), this.node.id);
        if (!this.isFileAcceptable(fileModel)) {
            const message = this.translationService.instant('FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION');
            this.error.emit(message);
        }
        return fileModel;
    }
    ngOnInit() {
        super.ngOnInit();
        this.checkPermission();
    }
    checkPermission() {
        this.permissionValue.next(this.nodeHasPermission(this.node, AllowableOperationsEnum.UPDATE));
    }
}
UploadVersionButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-upload-version-button',
                template: "<form class=\"adf-upload-button-file-container\">\n    <!--Files Upload-->\n    <div *ngIf=\"!uploadFolders\">\n\n        <!--Single Files Upload-->\n        <button *ngIf=\"!multipleFiles\"\n            [disabled]=\"isButtonDisabled()\"\n            mat-button\n            (click)=\"uploadSingleFile.click()\">\n            <mat-icon>file_upload</mat-icon>\n            <span id=\"upload-single-file-label\"\n                *ngIf=\"!staticTitle\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</span>\n            <span id=\"upload-single-file-label-static\"\n                *ngIf=\"staticTitle\">{{ staticTitle }}</span>\n            <input #uploadSingleFile\n                id=\"upload-single-file\"\n                data-automation-id=\"upload-single-file\"\n                [type]=\"file ? 'button' : 'file'\"\n                name=\"uploadFiles\"\n                accept=\"{{acceptedFilesType}}\"\n                [attr.disabled]=\"isButtonDisabled()\"\n                [title]=\"tooltip\"\n                (change)=\"onFilesAdded($event)\"\n                (click)=\"onClickUploadButton()\">\n        </button>\n\n        <!--Multiple Files Upload-->\n        <button *ngIf=\"multipleFiles\"\n            [disabled]=\"isButtonDisabled()\"\n            mat-button\n            (click)=\"uploadMultipleFiles.click()\">\n            <mat-icon>file_upload</mat-icon>\n\n            <span id=\"upload-multiple-file-label\"\n                *ngIf=\"!staticTitle\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</span>\n            <span\n                id=\"upload-multiple-file-label-static\"\n                *ngIf=\"staticTitle\">{{ staticTitle }}</span>\n            <input #uploadMultipleFiles\n                id=\"upload-multiple-files\"\n                data-automation-id=\"upload-multiple-files\"\n                type=\"file\"\n                name=\"uploadFiles\"\n                multiple=\"multiple\"\n                accept=\"{{acceptedFilesType}}\"\n                [attr.disabled]=\"isButtonDisabled()\"\n                [title]=\"tooltip\"\n                (change)=\"onFilesAdded($event)\">\n        </button>\n    </div>\n\n    <!--Folders Upload-->\n    <div *ngIf=\"uploadFolders\">\n        <button\n            [disabled]=\"isButtonDisabled()\"\n            mat-button\n            (click)=\"uploadFolders.click()\">\n            <mat-icon>file_upload</mat-icon>\n            <span id=\"uploadFolder-label\"\n                *ngIf=\"!staticTitle\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FOLDER' | translate }}</span>\n            <span id=\"uploadFolder-label-static\"\n                *ngIf=\"staticTitle\">{{ staticTitle }}</span>\n            <input #uploadFolders\n                id=\"uploadFolder\"\n                data-automation-id=\"uploadFolder\"\n                type=\"file\"\n                name=\"uploadFiles\"\n                multiple=\"multiple\"\n                accept=\"{{acceptedFilesType}}\"\n                webkitdirectory directory\n                [attr.disabled]=\"isButtonDisabled()\"\n                [title]=\"tooltip\"\n                (change)=\"onDirectoryAdded($event)\">\n        </button>\n    </div>\n</form>\n",
                viewProviders: [
                    { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadVersionButtonComponent) }
                ],
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-upload-version-button' },
                styles: [".adf-upload-button-file-container input{display:none}"]
            },] }
];
UploadVersionButtonComponent.propDecorators = {
    node: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLXZlcnNpb24tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjLyIsInNvdXJjZXMiOlsibGliL3VwbG9hZC9jb21wb25lbnRzL3VwbG9hZC12ZXJzaW9uLWJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFFLHVCQUF1QixFQUFhLG9CQUFvQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDOUYsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFhLGlCQUFpQixFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25HLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN4QyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQVlsRSxNQUFNLE9BQU8sNEJBQTZCLFNBQVEscUJBQXFCO0lBTXpELGVBQWUsQ0FBQyxJQUFVO1FBQ2hDLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBUSxJQUFLLENBQUMsa0JBQWtCLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRWpKLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDbkMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxtREFBbUQsQ0FBQyxDQUFDO1lBQ3JHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO1FBRUQsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUVELFFBQVE7UUFDSixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRCxlQUFlO1FBQ1gsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsdUJBQXVCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNqRyxDQUFDOzs7WUFsQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLHNuR0FBNkM7Z0JBRTdDLGFBQWEsRUFBRTtvQkFDWCxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDRCQUE0QixDQUFDLEVBQUU7aUJBQ2pHO2dCQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dCQUNyQyxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsMkJBQTJCLEVBQUU7O2FBQy9DOzs7bUJBSUksS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEFsbG93YWJsZU9wZXJhdGlvbnNFbnVtLCBGaWxlTW9kZWwsIEVYVEVORElCTEVfQ09NUE9ORU5UIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5wdXQsIE9uQ2hhbmdlcywgVmlld0VuY2Fwc3VsYXRpb24sIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTm9kZSB9IGZyb20gJ0BhbGZyZXNjby9qcy1hcGknO1xuaW1wb3J0IHsgVXBsb2FkQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi91cGxvYWQtYnV0dG9uLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXVwbG9hZC12ZXJzaW9uLWJ1dHRvbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3VwbG9hZC1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3VwbG9hZC1idXR0b24uY29tcG9uZW50LnNjc3MnXSxcbiAgICB2aWV3UHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogRVhURU5ESUJMRV9DT01QT05FTlQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFVwbG9hZFZlcnNpb25CdXR0b25Db21wb25lbnQpIH1cbiAgICBdLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyBjbGFzczogJ2FkZi11cGxvYWQtdmVyc2lvbi1idXR0b24nIH1cbn0pXG5leHBvcnQgY2xhc3MgVXBsb2FkVmVyc2lvbkJ1dHRvbkNvbXBvbmVudCBleHRlbmRzIFVwbG9hZEJ1dHRvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0IHtcblxuICAgIC8qKiAoKipSZXF1aXJlZCoqKSBUaGUgbm9kZSB0byBiZSB2ZXJzaW9uZWQuICovXG4gICAgQElucHV0KClcbiAgICBub2RlOiBOb2RlO1xuXG4gICAgcHJvdGVjdGVkIGNyZWF0ZUZpbGVNb2RlbChmaWxlOiBGaWxlKTogRmlsZU1vZGVsIHtcbiAgICAgICAgY29uc3QgZmlsZU1vZGVsID0gc3VwZXIuY3JlYXRlRmlsZU1vZGVsKGZpbGUsIHRoaXMucm9vdEZvbGRlcklkLCAoKDxhbnk+IGZpbGUpLndlYmtpdFJlbGF0aXZlUGF0aCB8fCAnJykucmVwbGFjZSgvXFwvW15cXC9dKiQvLCAnJyksIHRoaXMubm9kZS5pZCk7XG5cbiAgICAgICAgaWYgKCF0aGlzLmlzRmlsZUFjY2VwdGFibGUoZmlsZU1vZGVsKSkge1xuICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLmluc3RhbnQoJ0ZJTEVfVVBMT0FELlZFUlNJT04uTUVTU0FHRVMuSU5DT01QQVRJQkxFX1ZFUlNJT04nKTtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IuZW1pdChtZXNzYWdlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmaWxlTW9kZWw7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgICAgIHRoaXMuY2hlY2tQZXJtaXNzaW9uKCk7XG4gICAgfVxuXG4gICAgY2hlY2tQZXJtaXNzaW9uKCkge1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25WYWx1ZS5uZXh0KHRoaXMubm9kZUhhc1Blcm1pc3Npb24odGhpcy5ub2RlLCBBbGxvd2FibGVPcGVyYXRpb25zRW51bS5VUERBVEUpKTtcbiAgICB9XG59XG4iXX0=