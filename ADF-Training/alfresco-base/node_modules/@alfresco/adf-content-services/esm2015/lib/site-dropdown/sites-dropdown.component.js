/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { SitesService, LogService, InfiniteSelectScrollDirective } from '@alfresco/adf-core';
import { SitePaging, SiteEntry } from '@alfresco/js-api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/material/form-field';
import * as ɵngcc3 from '@angular/material/select';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/material/core';
import * as ɵngcc6 from '@ngx-translate/core';

function DropdownSitesComponent_mat_option_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const site_r3 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", site_r3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, site_r3.entry.title), " ");
} }
function DropdownSitesComponent_mat_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "ADF_DROPDOWN.LOADING"), " ");
} }
export var Relations;
(function (Relations) {
    Relations["Members"] = "members";
    Relations["Containers"] = "containers";
})(Relations || (Relations = {}));
export class DropdownSitesComponent {
    constructor(sitesService, logService) {
        this.sitesService = sitesService;
        this.logService = logService;
        this.hideMyFiles = false;
        this.siteList = null;
        this.value = null;
        this.placeholder = 'DROPDOWN.PLACEHOLDER_LABEL';
        this.change = new EventEmitter();
        this.loading = true;
        this.skipCount = 0;
        this.selected = null;
        this.MY_FILES_VALUE = '-my-';
    }
    ngOnInit() {
        if (!this.siteList) {
            this.loadSiteList();
        }
    }
    loadAllOnScroll() {
        if (this.isInfiniteScrollingEnabled()) {
            this.loading = true;
            this.loadSiteList();
        }
    }
    selectedSite(event) {
        this.change.emit(event.value);
    }
    loadSiteList() {
        const extendedOptions = {
            skipCount: this.skipCount,
            maxItems: InfiniteSelectScrollDirective.MAX_ITEMS
        };
        this.skipCount += InfiniteSelectScrollDirective.MAX_ITEMS;
        if (this.relations) {
            extendedOptions.relations = [this.relations];
        }
        this.sitesService.getSites(extendedOptions).subscribe((sitePaging) => {
            if (!this.siteList) {
                this.siteList = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;
                if (!this.hideMyFiles) {
                    const siteEntry = new SiteEntry({
                        entry: {
                            id: this.MY_FILES_VALUE,
                            guid: this.MY_FILES_VALUE,
                            title: 'DROPDOWN.MY_FILES_OPTION'
                        }
                    });
                    this.siteList.list.entries.unshift(siteEntry);
                    if (!this.value) {
                        this.value = this.MY_FILES_VALUE;
                    }
                }
            }
            else {
                const siteList = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;
                this.siteList.list.entries = this.siteList.list.entries.concat(siteList.list.entries);
                this.siteList.list.pagination = sitePaging.list.pagination;
            }
            this.selected = this.siteList.list.entries.find((site) => site.entry.id === this.value);
            if (this.value && !this.selected && this.siteListHasMoreItems()) {
                this.loadSiteList();
            }
            this.loading = false;
        }, (error) => {
            this.logService.error(error);
        });
    }
    showLoading() {
        return this.loading && this.siteListHasMoreItems();
    }
    isInfiniteScrollingEnabled() {
        return !this.loading && this.siteListHasMoreItems();
    }
    siteListHasMoreItems() {
        return this.siteList && this.siteList.list.pagination && this.siteList.list.pagination.hasMoreItems;
    }
    filteredResultsByMember(sites) {
        const loggedUserName = this.sitesService.getEcmCurrentLoggedUserName();
        sites.list.entries = sites.list.entries.filter((site) => this.isCurrentUserMember(site, loggedUserName));
        return sites;
    }
    isCurrentUserMember(site, loggedUserName) {
        return site.entry.visibility === 'PUBLIC' ||
            !!site.relations.members.list.entries.find((member) => {
                return member.entry.id.toLowerCase() === loggedUserName.toLowerCase();
            });
    }
}
DropdownSitesComponent.ɵfac = function DropdownSitesComponent_Factory(t) { return new (t || DropdownSitesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SitesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LogService)); };
DropdownSitesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownSitesComponent, selectors: [["adf-sites-dropdown"]], hostAttrs: [1, "adf-sites-dropdown"], inputs: { hideMyFiles: "hideMyFiles", siteList: "siteList", value: "value", placeholder: "placeholder", relations: "relations" }, outputs: { change: "change" }, decls: 7, vars: 6, consts: [["id", "site-dropdown-container", 1, "adf-site-dropdown-container"], ["adf-infinite-select-scroll", "", "data-automation-id", "site-my-files-option", "id", "site-dropdown", "floatPlaceholder", "never", 1, "adf-site-dropdown-list-element", 3, "placeholder", "value", "scrollEnd", "valueChange", "selectionChange"], ["siteSelect", ""], [3, "value", 4, "ngFor", "ngForOf"], ["disabled", "true", "data-automation-id", "site-loading", 4, "ngIf"], [3, "value"], ["disabled", "true", "data-automation-id", "site-loading"]], template: function DropdownSitesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-form-field");
        ɵngcc0.ɵɵelementStart(2, "mat-select", 1, 2);
        ɵngcc0.ɵɵlistener("scrollEnd", function DropdownSitesComponent_Template_mat_select_scrollEnd_2_listener() { return ctx.loadAllOnScroll(); })("valueChange", function DropdownSitesComponent_Template_mat_select_valueChange_2_listener($event) { return ctx.selected = $event; })("selectionChange", function DropdownSitesComponent_Template_mat_select_selectionChange_2_listener($event) { return ctx.selectedSite($event); });
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, DropdownSitesComponent_mat_option_5_Template, 3, 4, "mat-option", 3);
        ɵngcc0.ɵɵtemplate(6, DropdownSitesComponent_mat_option_6_Template, 3, 3, "mat-option", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(4, 4, ctx.placeholder));
        ɵngcc0.ɵɵproperty("value", ctx.selected);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.siteList == null ? null : ctx.siteList.list.entries);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showLoading());
    } }, directives: [ɵngcc2.MatFormField, ɵngcc3.MatSelect, ɵngcc1.InfiniteSelectScrollDirective, ɵngcc4.NgForOf, ɵngcc4.NgIf, ɵngcc5.MatOption], pipes: [ɵngcc6.TranslatePipe], styles: [".adf-sites-dropdown.adf-full-width .mat-form-field{width:100%}"], encapsulation: 2 });
DropdownSitesComponent.ctorParameters = () => [
    { type: SitesService },
    { type: LogService }
];
DropdownSitesComponent.propDecorators = {
    hideMyFiles: [{ type: Input }],
    siteList: [{ type: Input }],
    value: [{ type: Input }],
    placeholder: [{ type: Input }],
    relations: [{ type: Input }],
    change: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownSitesComponent, [{
        type: Component,
        args: [{
                selector: 'adf-sites-dropdown',
                template: "<div id=\"site-dropdown-container\" class=\"adf-site-dropdown-container\">\n    <mat-form-field>\n        <mat-select\n            adf-infinite-select-scroll\n            (scrollEnd)=\"loadAllOnScroll()\"\n            #siteSelect\n            data-automation-id=\"site-my-files-option\"\n            class=\"adf-site-dropdown-list-element\"\n            id=\"site-dropdown\"\n            placeholder=\"{{placeholder | translate}}\"\n            floatPlaceholder=\"never\"\n            [(value)]=\"selected\"\n            (selectionChange)=\"selectedSite($event)\">\n            <mat-option *ngFor=\"let site of siteList?.list.entries;\" [value]=\"site\">\n                {{ site.entry.title | translate}}\n            </mat-option>\n            <mat-option *ngIf=\"showLoading()\" disabled=\"true\" data-automation-id=\"site-loading\">\n                {{ 'ADF_DROPDOWN.LOADING' | translate}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-sites-dropdown' },
                styles: [".adf-sites-dropdown.adf-full-width .mat-form-field{width:100%}"]
            }]
    }], function () { return [{ type: ɵngcc1.SitesService }, { type: ɵngcc1.LogService }]; }, { hideMyFiles: [{
            type: Input
        }], siteList: [{
            type: Input
        }], value: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], change: [{
            type: Output
        }], relations: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,