/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';
import { TagService } from './services/tag.service';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './services/tag.service';
import * as ɵngcc2 from '@angular/material/chips';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/button';
import * as ɵngcc5 from '@angular/material/icon';

function TagListComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "mat-chip");
    ɵngcc0.ɵɵelementStart(2, "span", 6);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const currentEntry_r3 = ctx.$implicit;
    const idx_r4 = ctx.index;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "tag_name_", idx_r4, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(currentEntry_r3.entry.tag);
} }
function TagListComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function TagListComponent_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.loadLessTags(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "keyboard_arrow_up");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.isLoading);
} }
function TagListComponent_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 8);
    ɵngcc0.ɵɵlistener("click", function TagListComponent_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.loadMoreTags(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "keyboard_arrow_down");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.isLoading);
} }
export class TagListComponent {
    constructor(tagService) {
        this.tagService = tagService;
        this.result = new EventEmitter();
        this.tagsEntries = [];
        this.size = 10;
        this.isLoading = false;
        this.isSizeMinimum = true;
        this.onDestroy$ = new Subject();
        this.defaultPagination = {
            skipCount: 0,
            maxItems: this.size,
            hasMoreItems: false
        };
        this.pagination = this.defaultPagination;
        this.tagService.refresh
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(() => {
            this.tagsEntries = [];
            this.refreshTag(this.defaultPagination);
        });
    }
    ngOnInit() {
        this.refreshTag(this.defaultPagination);
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    refreshTag(opts) {
        this.tagService.getAllTheTags(opts).subscribe((tags) => {
            this.tagsEntries = this.tagsEntries.concat(tags.list.entries);
            this.pagination = tags.list.pagination;
            this.result.emit(this.tagsEntries);
            this.isLoading = false;
        });
    }
    loadMoreTags() {
        if (this.pagination.hasMoreItems) {
            this.isLoading = true;
            this.isSizeMinimum = false;
            this.refreshTag({
                skipCount: this.pagination.skipCount + this.pagination.count,
                maxItems: this.size
            });
        }
    }
    loadLessTags() {
        this.isSizeMinimum = false;
        this.tagsEntries = this.tagsEntries.slice(0, this.tagsEntries.length - this.pagination.count);
        this.pagination.skipCount = this.pagination.skipCount - this.pagination.count;
        this.pagination.hasMoreItems = true;
        if (this.tagsEntries.length <= this.size) {
            this.isSizeMinimum = true;
        }
    }
}
TagListComponent.ɵfac = function TagListComponent_Factory(t) { return new (t || TagListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TagService)); };
TagListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TagListComponent, selectors: [["adf-tag-list"]], hostAttrs: [1, "adf-tag-list"], outputs: { result: "result" }, decls: 5, vars: 3, consts: [[1, "adf-tag-chips-list"], ["class", "adf-list-tag", 4, "ngFor", "ngForOf"], [1, "adf-tag-list-controls"], ["data-automation-id", "show-fewer-tags", "mat-icon-button", "", 3, "disabled", "click", 4, "ngIf"], ["data-automation-id", "show-more-tags", "mat-icon-button", "", 3, "disabled", "click", 4, "ngIf"], [1, "adf-list-tag"], [3, "id"], ["data-automation-id", "show-fewer-tags", "mat-icon-button", "", 3, "disabled", "click"], ["data-automation-id", "show-more-tags", "mat-icon-button", "", 3, "disabled", "click"]], template: function TagListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-chip-list", 0);
        ɵngcc0.ɵɵtemplate(1, TagListComponent_div_1_Template, 4, 2, "div", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, TagListComponent_button_3_Template, 3, 1, "button", 3);
        ɵngcc0.ɵɵtemplate(4, TagListComponent_button_4_Template, 3, 1, "button", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tagsEntries);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isSizeMinimum);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pagination.hasMoreItems);
    } }, directives: [ɵngcc2.MatChipList, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc2.MatChip, ɵngcc4.MatButton, ɵngcc5.MatIcon], styles: [".adf-tag-list .adf-tag-chips-list,.adf-tag-list .adf-tag-chips-list div{display:flex;flex-direction:column}.adf-tag-list .adf-tag-chips-list .adf-list-tag{display:block;font-size:16px}.adf-tag-list .adf-tag-chips-list .adf-list-tag .mat-chip{background-color:var(--theme-primary-color);color:var(--theme-primary-color-default-contrast)}.adf-tag-list .adf-tag-chips-list .adf-list-tag .mat-chip .mat-icon{color:var(--theme-primary-color-default-contrast)}.adf-tag-list .adf-tag-list-controls{display:flex;justify-content:center;margin-top:30px}"], encapsulation: 2 });
TagListComponent.ctorParameters = () => [
    { type: TagService }
];
TagListComponent.propDecorators = {
    result: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TagListComponent, [{
        type: Component,
        args: [{
                selector: 'adf-tag-list',
                template: "<mat-chip-list class=\"adf-tag-chips-list\">\n    <div class=\"adf-list-tag\" *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n        <mat-chip>\n            <span id=\"tag_name_{{idx}}\">{{currentEntry.entry.tag}}</span>\n        </mat-chip>\n    </div>\n</mat-chip-list>\n\n<div class=\"adf-tag-list-controls\">\n    <button\n        *ngIf=\"!isSizeMinimum\"\n        [disabled]=\"isLoading\"\n        data-automation-id=\"show-fewer-tags\"\n        mat-icon-button\n        (click)=\"loadLessTags()\">\n        <mat-icon>keyboard_arrow_up</mat-icon>\n    </button>\n    <button\n        *ngIf=\"pagination.hasMoreItems\"\n        [disabled]=\"isLoading\"\n        data-automation-id=\"show-more-tags\"\n        mat-icon-button\n        (click)=\"loadMoreTags()\">\n        <mat-icon>keyboard_arrow_down</mat-icon>\n    </button>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-tag-list' },
                styles: [".adf-tag-list .adf-tag-chips-list,.adf-tag-list .adf-tag-chips-list div{display:flex;flex-direction:column}.adf-tag-list .adf-tag-chips-list .adf-list-tag{display:block;font-size:16px}.adf-tag-list .adf-tag-chips-list .adf-list-tag .mat-chip{background-color:var(--theme-primary-color);color:var(--theme-primary-color-default-contrast)}.adf-tag-list .adf-tag-chips-list .adf-list-tag .mat-chip .mat-icon{color:var(--theme-primary-color-default-contrast)}.adf-tag-list .adf-tag-list-controls{display:flex;justify-content:center;margin-top:30px}"]
            }]
    }], function () { return [{ type: ɵngcc1.TagService }]; }, { result: [{
            type: Output
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,