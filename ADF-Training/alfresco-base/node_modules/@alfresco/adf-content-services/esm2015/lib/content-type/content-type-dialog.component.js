/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { ContentTypeService } from './content-type.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/dialog';
import * as ɵngcc2 from './content-type.service';
import * as ɵngcc3 from '@angular/material/expansion';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/material/button';
import * as ɵngcc6 from '@angular/material/table';
import * as ɵngcc7 from '@ngx-translate/core';

function ContentTypeDialogComponent_table_17_th_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "CORE.METADATA.CONTENT_TYPE.DIALOG.PROPERTY.NAME"), " ");
} }
function ContentTypeDialogComponent_table_17_td_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const property_r9 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", property_r9.id, " ");
} }
function ContentTypeDialogComponent_table_17_th_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "CORE.METADATA.CONTENT_TYPE.DIALOG.PROPERTY.DESCRIPTION"), " ");
} }
function ContentTypeDialogComponent_table_17_td_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const property_r10 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", property_r10.title, " ");
} }
function ContentTypeDialogComponent_table_17_th_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "CORE.METADATA.CONTENT_TYPE.DIALOG.PROPERTY.DATA_TYPE"), " ");
} }
function ContentTypeDialogComponent_table_17_td_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const property_r11 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", property_r11.dataType, " ");
} }
function ContentTypeDialogComponent_table_17_tr_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 20);
} }
function ContentTypeDialogComponent_table_17_tr_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 21);
} }
function ContentTypeDialogComponent_table_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "table", 10);
    ɵngcc0.ɵɵelementContainerStart(1, 11);
    ɵngcc0.ɵɵtemplate(2, ContentTypeDialogComponent_table_17_th_2_Template, 3, 3, "th", 12);
    ɵngcc0.ɵɵtemplate(3, ContentTypeDialogComponent_table_17_td_3_Template, 2, 1, "td", 13);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerStart(4, 14);
    ɵngcc0.ɵɵtemplate(5, ContentTypeDialogComponent_table_17_th_5_Template, 3, 3, "th", 12);
    ɵngcc0.ɵɵtemplate(6, ContentTypeDialogComponent_table_17_td_6_Template, 2, 1, "td", 13);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerStart(7, 15);
    ɵngcc0.ɵɵtemplate(8, ContentTypeDialogComponent_table_17_th_8_Template, 3, 3, "th", 12);
    ɵngcc0.ɵɵtemplate(9, ContentTypeDialogComponent_table_17_td_9_Template, 2, 1, "td", 13);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵtemplate(10, ContentTypeDialogComponent_table_17_tr_10_Template, 1, 0, "tr", 16);
    ɵngcc0.ɵɵtemplate(11, ContentTypeDialogComponent_table_17_tr_11_Template, 1, 0, "tr", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("dataSource", ctx_r0.typeProperties);
    ɵngcc0.ɵɵadvance(10);
    ɵngcc0.ɵɵproperty("matHeaderRowDef", ctx_r0.propertyColumns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ctx_r0.propertyColumns);
} }
export class ContentTypeDialogComponent {
    constructor(dialog, data, contentTypeService) {
        this.dialog = dialog;
        this.data = data;
        this.contentTypeService = contentTypeService;
        this.typeProperties = [];
        this.propertyColumns = ['name', 'title', 'dataType'];
        this.title = data.title;
        this.description = data.description;
        this.confirmMessage = data.confirmMessage;
        this.nodeType = data.nodeType;
        this.contentTypeService.getContentTypeByPrefix(this.nodeType).subscribe((contentTypeEntry) => {
            this.currentContentType = contentTypeEntry;
            this.typeProperties = this.currentContentType.entry.properties.filter((property) => property.id.startsWith(this.currentContentType.entry.model.namespacePrefix));
        });
    }
    ngOnInit() {
        this.dialog.backdropClick().subscribe(() => {
            this.close();
        });
    }
    close() {
        this.data.select.complete();
    }
    onCancel() {
        this.close();
    }
    onApply() {
        this.data.select.next(true);
        this.close();
    }
}
ContentTypeDialogComponent.ɵfac = function ContentTypeDialogComponent_Factory(t) { return new (t || ContentTypeDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentTypeService)); };
ContentTypeDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ContentTypeDialogComponent, selectors: [["adf-content-type-dialog"]], decls: 25, vars: 20, consts: [[1, "adf-content-type-dialog"], ["mat-dialog-title", "", "data-automation-id", "content-type-dialog-title", 1, "adf-content-type-dialog-title"], ["data-automation-id", "content-type-dialog-content", 1, "adf-content-type-dialog-content"], ["data-automation-id", "content-type-dialog-description"], ["data-automation-id", "content-type-dialog-confirm-message"], [1, "adf-content-type-accordion"], ["mat-table", "", "class", "adf-content-type-table", 3, "dataSource", 4, "ngIf"], ["align", "end"], ["mat-button", "", "mat-dialog-close", "", "id", "content-type-dialog-actions-cancel"], ["mat-button", "", "id", "content-type-dialog-apply-button", "cdkFocusInitial", "", 1, "adf-content-type-dialog-apply-button", 3, "mat-dialog-close", "click"], ["mat-table", "", 1, "adf-content-type-table", 3, "dataSource"], ["matColumnDef", "name"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "title"], ["matColumnDef", "dataType"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["mat-header-cell", ""], ["mat-cell", ""], ["mat-header-row", ""], ["mat-row", ""]], template: function ContentTypeDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "h2", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "mat-dialog-content", 2);
        ɵngcc0.ɵɵelementStart(5, "h4", 3);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "p", 4);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "mat-accordion");
        ɵngcc0.ɵɵelementStart(12, "mat-expansion-panel", 5);
        ɵngcc0.ɵɵelementStart(13, "mat-expansion-panel-header");
        ɵngcc0.ɵɵelementStart(14, "mat-panel-title");
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(17, ContentTypeDialogComponent_table_17_Template, 12, 3, "table", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "mat-dialog-actions", 7);
        ɵngcc0.ɵɵelementStart(19, "button", 8);
        ɵngcc0.ɵɵtext(20);
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "button", 9);
        ɵngcc0.ɵɵlistener("click", function ContentTypeDialogComponent_Template_button_click_22_listener() { return ctx.onApply(); });
        ɵngcc0.ɵɵtext(23);
        ɵngcc0.ɵɵpipe(24, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 8, ctx.title));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 10, ctx.description));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 12, ctx.confirmMessage));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(16, 14, "CORE.METADATA.CONTENT_TYPE.DIALOG.VIEW_DETAILS"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.typeProperties == null ? null : ctx.typeProperties.length) > 0);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(21, 16, "CORE.METADATA.CONTENT_TYPE.DIALOG.CANCEL"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("mat-dialog-close", true);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(24, 18, "CORE.METADATA.CONTENT_TYPE.DIALOG.APPLY"));
    } }, directives: [ɵngcc1.MatDialogTitle, ɵngcc1.MatDialogContent, ɵngcc3.MatAccordion, ɵngcc3.MatExpansionPanel, ɵngcc3.MatExpansionPanelHeader, ɵngcc3.MatExpansionPanelTitle, ɵngcc4.NgIf, ɵngcc1.MatDialogActions, ɵngcc5.MatButton, ɵngcc1.MatDialogClose, ɵngcc6.MatTable, ɵngcc6.MatColumnDef, ɵngcc6.MatHeaderCellDef, ɵngcc6.MatCellDef, ɵngcc6.MatHeaderRowDef, ɵngcc6.MatRowDef, ɵngcc6.MatHeaderCell, ɵngcc6.MatCell, ɵngcc6.MatHeaderRow, ɵngcc6.MatRow], pipes: [ɵngcc7.TranslatePipe], styles: [".adf-content-type-dialog .mat-expansion-panel{margin-bottom:10px}.adf-content-type-accordion{margin:10px}.adf-content-type-dialog-title{font-size:large;font-weight:200;margin-top:0}.adf-content-type-dialog-description{font-size:small;line-height:normal}.adf-content-type-table{width:100%}.adf-content-type-dialog-apply-button{color:var(--theme-primary-color)}"], encapsulation: 2 });
ContentTypeDialogComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },
    { type: ContentTypeService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentTypeDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-content-type-dialog',
                template: "<div class=\"adf-content-type-dialog\">\n    <h2 mat-dialog-title class=\"adf-content-type-dialog-title\" data-automation-id=\"content-type-dialog-title\">{{title |\n        translate}}</h2>\n    <mat-dialog-content class=\"mat-typography\" class=\"adf-content-type-dialog-content\"\n        data-automation-id=\"content-type-dialog-content\">\n        <h4 data-automation-id=\"content-type-dialog-description\">{{description | translate}}</h4>\n        <p data-automation-id=\"content-type-dialog-confirm-message\">{{confirmMessage | translate}}</p>\n        <mat-accordion>\n            <mat-expansion-panel class=\"adf-content-type-accordion\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{'CORE.METADATA.CONTENT_TYPE.DIALOG.VIEW_DETAILS' | translate}}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <table mat-table [dataSource]=\"typeProperties\"\n                    *ngIf=\"typeProperties?.length > 0\" class=\"adf-content-type-table\">\n                    <ng-container matColumnDef=\"name\">\n                        <th mat-header-cell *matHeaderCellDef> {{'CORE.METADATA.CONTENT_TYPE.DIALOG.PROPERTY.NAME' |\n                            translate}} </th>\n                        <td mat-cell *matCellDef=\"let property\"> {{property.id}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"title\">\n                        <th mat-header-cell *matHeaderCellDef>\n                            {{'CORE.METADATA.CONTENT_TYPE.DIALOG.PROPERTY.DESCRIPTION' | translate}} </th>\n                        <td mat-cell *matCellDef=\"let property\"> {{property.title}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"dataType\">\n                        <th mat-header-cell *matHeaderCellDef> {{'CORE.METADATA.CONTENT_TYPE.DIALOG.PROPERTY.DATA_TYPE'\n                            | translate}} </th>\n                        <td mat-cell *matCellDef=\"let property\"> {{property.dataType}} </td>\n                    </ng-container>\n                    <tr mat-header-row *matHeaderRowDef=\"propertyColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: propertyColumns;\"></tr>\n                </table>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button mat-dialog-close\n            id=\"content-type-dialog-actions-cancel\">{{'CORE.METADATA.CONTENT_TYPE.DIALOG.CANCEL' | translate }}</button>\n        <button mat-button class=\"adf-content-type-dialog-apply-button\" id=\"content-type-dialog-apply-button\"\n            [mat-dialog-close]=\"true\" cdkFocusInitial (click)=\"onApply()\">{{'CORE.METADATA.CONTENT_TYPE.DIALOG.APPLY' |\n            translate}}</button>\n    </mat-dialog-actions>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-content-type-dialog .mat-expansion-panel{margin-bottom:10px}.adf-content-type-accordion{margin:10px}.adf-content-type-dialog-title{font-size:large;font-weight:200;margin-top:0}.adf-content-type-dialog-description{font-size:small;line-height:normal}.adf-content-type-table{width:100%}.adf-content-type-dialog-apply-button{color:var(--theme-primary-color)}"]
            }]
    }], function () { return [{ type: ɵngcc1.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }, { type: ɵngcc2.ContentTypeService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC10eXBlLWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb250ZW50LXNlcnZpY2VzL3NyYy9saWIvY29udGVudC10eXBlL2NvbnRlbnQtdHlwZS1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFHSCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBVSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRXpFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVE1RCxNQUFNLE9BQU8sMEJBQTBCO0FBQUcsSUFZdEMsWUFBb0IsTUFBZ0QsRUFDeEIsSUFBb0MsRUFDNUQsa0JBQXNDO0FBQzlELFFBSHdCLFdBQU0sR0FBTixNQUFNLENBQTBDO0FBQUMsUUFDekIsU0FBSSxHQUFKLElBQUksQ0FBZ0M7QUFBQyxRQUM3RCx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0FBQUMsUUFOM0QsbUJBQWMsR0FBVSxFQUFFLENBQUM7QUFDL0IsUUFDSSxvQkFBZSxHQUFhLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztBQUM5RCxRQUlRLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztBQUNoQyxRQUFRLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztBQUM1QyxRQUFRLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztBQUNsRCxRQUFRLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztBQUN0QyxRQUNRLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsRUFBRTtBQUNyRyxZQUFZLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxnQkFBZ0IsQ0FBQztBQUN2RCxZQUFZLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0FBQzdLLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDWCxJQUFJLENBQUM7QUFDTCxJQUNJLFFBQVE7QUFDWixRQUFRLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtBQUNuRCxZQUFZLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN6QixRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ1gsSUFBSSxDQUFDO0FBQ0wsSUFDSSxLQUFLO0FBQ1QsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUNwQyxJQUFJLENBQUM7QUFDTCxJQUNJLFFBQVE7QUFDWixRQUFRLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNyQixJQUFJLENBQUM7QUFDTCxJQUNJLE9BQU87QUFDWCxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwQyxRQUFRLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNyQixJQUFJLENBQUM7QUFDTDtzREFsREMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSx5QkFBeUIsa0JBQ25DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FHQUFtRCxrQkFFbkQsYUFBYSxFQUFFO2dCQUFpQixDQUFDLElBQUk7Ozs7Ozs7Ozs7O1FBQ3hDOzs7Ozs7Ozs7OztrM0JBQ0k7QUFBQztBQUFvRCxZQVZoQyxZQUFZO0FBQUksNENBdUJ6QixNQUFNLFNBQUMsZUFBZTtBQUFTLFlBckJ2QyxrQkFBa0I7QUFBRzs7Ozs7Ozs7Ozs7O3VFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBUeXBlRW50cnkgfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEsIE1hdERpYWxvZ1JlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBDb250ZW50VHlwZURpYWxvZ0NvbXBvbmVudERhdGEgfSBmcm9tICcuL2NvbnRlbnQtdHlwZS1tZXRhZGF0YS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQ29udGVudFR5cGVTZXJ2aWNlIH0gZnJvbSAnLi9jb250ZW50LXR5cGUuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWNvbnRlbnQtdHlwZS1kaWFsb2cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9jb250ZW50LXR5cGUtZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9jb250ZW50LXR5cGUtZGlhbG9nLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBDb250ZW50VHlwZURpYWxvZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgbm9kZVR5cGU6IHN0cmluZztcbiAgICBjb25maXJtTWVzc2FnZTogc3RyaW5nO1xuXG4gICAgY3VycmVudENvbnRlbnRUeXBlOiBUeXBlRW50cnk7XG4gICAgdHlwZVByb3BlcnRpZXM6IGFueVtdID0gW107XG5cbiAgICBwcm9wZXJ0eUNvbHVtbnM6IHN0cmluZ1tdID0gWyduYW1lJywgJ3RpdGxlJywgJ2RhdGFUeXBlJ107XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRpYWxvZzogTWF0RGlhbG9nUmVmPENvbnRlbnRUeXBlRGlhbG9nQ29tcG9uZW50PixcbiAgICAgICAgICAgICAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IENvbnRlbnRUeXBlRGlhbG9nQ29tcG9uZW50RGF0YSxcbiAgICAgICAgICAgICAgICBwcml2YXRlIGNvbnRlbnRUeXBlU2VydmljZTogQ29udGVudFR5cGVTZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSBkYXRhLnRpdGxlO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGF0YS5kZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5jb25maXJtTWVzc2FnZSA9IGRhdGEuY29uZmlybU1lc3NhZ2U7XG4gICAgICAgIHRoaXMubm9kZVR5cGUgPSBkYXRhLm5vZGVUeXBlO1xuXG4gICAgICAgIHRoaXMuY29udGVudFR5cGVTZXJ2aWNlLmdldENvbnRlbnRUeXBlQnlQcmVmaXgodGhpcy5ub2RlVHlwZSkuc3Vic2NyaWJlKChjb250ZW50VHlwZUVudHJ5KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRDb250ZW50VHlwZSA9IGNvbnRlbnRUeXBlRW50cnk7XG4gICAgICAgICAgICB0aGlzLnR5cGVQcm9wZXJ0aWVzID0gdGhpcy5jdXJyZW50Q29udGVudFR5cGUuZW50cnkucHJvcGVydGllcy5maWx0ZXIoKHByb3BlcnR5KSA9PiBwcm9wZXJ0eS5pZC5zdGFydHNXaXRoKHRoaXMuY3VycmVudENvbnRlbnRUeXBlLmVudHJ5Lm1vZGVsLm5hbWVzcGFjZVByZWZpeCkpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5kaWFsb2cuYmFja2Ryb3BDbGljaygpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLmRhdGEuc2VsZWN0LmNvbXBsZXRlKCk7XG4gICAgfVxuXG4gICAgb25DYW5jZWwoKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG5cbiAgICBvbkFwcGx5KCkge1xuICAgICAgICB0aGlzLmRhdGEuc2VsZWN0Lm5leHQodHJ1ZSk7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG59XG4iXX0=