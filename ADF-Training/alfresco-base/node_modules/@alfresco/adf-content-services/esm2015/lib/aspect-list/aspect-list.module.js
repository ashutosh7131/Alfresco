/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { AspectListComponent } from './aspect-list.component';
import { MatTableModule } from '@angular/material/table';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { PipeModule } from '@alfresco/adf-core';
import { TranslateModule } from '@ngx-translate/core';
import { MatDialogModule } from '@angular/material/dialog';
import { AspectListDialogComponent } from './aspect-list-dialog.component';
import { MatButtonModule } from '@angular/material/button';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/cdk/bidi';
import * as ɵngcc3 from '@angular/material/table';
import * as ɵngcc4 from '@angular/material/expansion';
import * as ɵngcc5 from '@angular/material/checkbox';
import * as ɵngcc6 from '@ngx-translate/core';
import * as ɵngcc7 from '@angular/material/dialog';
import * as ɵngcc8 from '@angular/material/button';
import * as ɵngcc9 from '@angular/material/tooltip';
import * as ɵngcc10 from '@angular/cdk/scrolling';
import * as ɵngcc11 from '@angular/material/progress-spinner';
import * as ɵngcc12 from '@alfresco/adf-core';
export class AspectListModule {
}
AspectListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AspectListModule });
AspectListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AspectListModule_Factory(t) { return new (t || AspectListModule)(); }, imports: [[
            CommonModule,
            MatTableModule,
            MatExpansionModule,
            MatCheckboxModule,
            PipeModule,
            TranslateModule,
            MatDialogModule,
            MatButtonModule,
            MatTooltipModule,
            MatProgressSpinnerModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AspectListModule, { declarations: function () { return [AspectListComponent,
        AspectListDialogComponent]; }, imports: function () { return [CommonModule,
        MatTableModule,
        MatExpansionModule,
        MatCheckboxModule,
        PipeModule,
        TranslateModule,
        MatDialogModule,
        MatButtonModule,
        MatTooltipModule,
        MatProgressSpinnerModule]; }, exports: function () { return [AspectListComponent,
        AspectListDialogComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AspectListModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    MatTableModule,
                    MatExpansionModule,
                    MatCheckboxModule,
                    PipeModule,
                    TranslateModule,
                    MatDialogModule,
                    MatButtonModule,
                    MatTooltipModule,
                    MatProgressSpinnerModule
                ],
                exports: [
                    AspectListComponent,
                    AspectListDialogComponent
                ],
                declarations: [
                    AspectListComponent,
                    AspectListDialogComponent
                ]
            }]
    }], null, null); })();
ɵngcc0.ɵɵsetComponentScope(AspectListDialogComponent, [ɵngcc1.NgClass, ɵngcc1.NgComponentOutlet, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgStyle, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc1.NgPlural, ɵngcc1.NgPluralCase, ɵngcc2.Dir, ɵngcc3.MatTable, ɵngcc3.MatHeaderCellDef, ɵngcc3.MatHeaderRowDef, ɵngcc3.MatColumnDef, ɵngcc3.MatCellDef, ɵngcc3.MatRowDef, ɵngcc3.MatFooterCellDef, ɵngcc3.MatFooterRowDef, ɵngcc3.MatHeaderCell, ɵngcc3.MatCell, ɵngcc3.MatFooterCell, ɵngcc3.MatHeaderRow, ɵngcc3.MatRow, ɵngcc3.MatFooterRow, ɵngcc3.MatNoDataRow, ɵngcc3.MatTextColumn, ɵngcc4.MatAccordion, ɵngcc4.MatExpansionPanel, ɵngcc4.MatExpansionPanelActionRow, ɵngcc4.MatExpansionPanelHeader, ɵngcc4.MatExpansionPanelTitle, ɵngcc4.MatExpansionPanelDescription, ɵngcc4.MatExpansionPanelContent, ɵngcc5.MatCheckbox, ɵngcc5.MatCheckboxRequiredValidator, ɵngcc6.TranslateDirective, ɵngcc7.MatDialogContainer, ɵngcc7.MatDialogClose, ɵngcc7.MatDialogTitle, ɵngcc7.MatDialogContent, ɵngcc7.MatDialogActions, ɵngcc8.MatButton, ɵngcc8.MatAnchor, ɵngcc9.MatTooltip, ɵngcc9.TooltipComponent, ɵngcc10.CdkScrollable, ɵngcc11.MatProgressSpinner, ɵngcc11.MatSpinner, AspectListComponent,
    AspectListDialogComponent], [ɵngcc1.AsyncPipe, ɵngcc1.UpperCasePipe, ɵngcc1.LowerCasePipe, ɵngcc1.JsonPipe, ɵngcc1.SlicePipe, ɵngcc1.DecimalPipe, ɵngcc1.PercentPipe, ɵngcc1.TitleCasePipe, ɵngcc1.CurrencyPipe, ɵngcc1.DatePipe, ɵngcc1.I18nPluralPipe, ɵngcc1.I18nSelectPipe, ɵngcc1.KeyValuePipe, ɵngcc12.FileSizePipe, ɵngcc12.HighlightPipe, ɵngcc12.TimeAgoPipe, ɵngcc12.MimeTypeIconPipe, ɵngcc12.InitialUsernamePipe, ɵngcc12.FullNamePipe, ɵngcc12.NodeNameTooltipPipe, ɵngcc12.FormatSpacePipe, ɵngcc12.FileTypePipe, ɵngcc12.MultiValuePipe, ɵngcc12.LocalizedDatePipe, ɵngcc12.DecimalNumberPipe, ɵngcc12.LocalizedRolePipe, ɵngcc12.MomentDatePipe, ɵngcc12.MomentDateTimePipe, ɵngcc6.TranslatePipe]);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNwZWN0LWxpc3QubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29udGVudC1zZXJ2aWNlcy9zcmMvbGliL2FzcGVjdC1saXN0L2FzcGVjdC1saXN0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUF3QjlFLE1BQU0sT0FBTyxnQkFBZ0I7QUFBRzs0Q0F0Qi9CLFFBQVEsU0FBQztFQUNOLE9BQU8sRUFBRSxzQkFDTCxZQUFZLHNCQUNaLGNBQWMsc0JBQ2Qsa0JBQWtCLHNCQUNsQjtTQUFpQjtLQUNqQixVQUFVO1NBQ1YsZUFBZTtjQUNmLGVBQWU7b0JBQ2Y7V0FBZTtJQUNmLGdCQUFnQjthQUNoQjtRQUF3QixrQkFDM0I7Y0FDRCxPQUFPLEVBQUU7UUFDTDtZQUFtQixzQkFDbkIseUJBQXlCLGtCQUM1QixrQkFDRCxZQUFZLEVBQUUsc0JBQ1YsbUJBQW1CO0dBQ25CLHlCQUF5QixrQkFDNUIsY0FDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3ckJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXNwZWN0TGlzdENvbXBvbmVudCB9IGZyb20gJy4vYXNwZWN0LWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IE1hdFRhYmxlTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFibGUnO1xuaW1wb3J0IHsgTWF0RXhwYW5zaW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZXhwYW5zaW9uJztcbmltcG9ydCB7IE1hdENoZWNrYm94TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2hlY2tib3gnO1xuaW1wb3J0IHsgUGlwZU1vZHVsZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IE1hdERpYWxvZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBBc3BlY3RMaXN0RGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9hc3BlY3QtbGlzdC1kaWFsb2cuY29tcG9uZW50JztcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBNYXRUb29sdGlwTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdG9vbHRpcCc7XG5pbXBvcnQgeyBNYXRQcm9ncmVzc1NwaW5uZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9wcm9ncmVzcy1zcGlubmVyJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgTWF0VGFibGVNb2R1bGUsXG4gICAgICAgIE1hdEV4cGFuc2lvbk1vZHVsZSxcbiAgICAgICAgTWF0Q2hlY2tib3hNb2R1bGUsXG4gICAgICAgIFBpcGVNb2R1bGUsXG4gICAgICAgIFRyYW5zbGF0ZU1vZHVsZSxcbiAgICAgICAgTWF0RGlhbG9nTW9kdWxlLFxuICAgICAgICBNYXRCdXR0b25Nb2R1bGUsXG4gICAgICAgIE1hdFRvb2x0aXBNb2R1bGUsXG4gICAgICAgIE1hdFByb2dyZXNzU3Bpbm5lck1vZHVsZVxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBBc3BlY3RMaXN0Q29tcG9uZW50LFxuICAgICAgICBBc3BlY3RMaXN0RGlhbG9nQ29tcG9uZW50XG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgQXNwZWN0TGlzdENvbXBvbmVudCxcbiAgICAgICAgQXNwZWN0TGlzdERpYWxvZ0NvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgQXNwZWN0TGlzdE1vZHVsZSB7IH1cbiJdfQ==