/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
export class AspectListDialogComponent {
    constructor(dialog, data) {
        this.dialog = dialog;
        this.data = data;
        this.currentAspectSelection = [];
        this.title = data.title;
        this.description = data.description;
        this.overTableMessage = data.overTableMessage;
        this.currentNodeId = data.nodeId;
    }
    ngOnInit() {
        this.dialog.backdropClick().subscribe(() => {
            this.close();
        });
        this.dialog.keydownEvents().subscribe(event => {
            if (event.keyCode === 27) {
                event.preventDefault();
                event.stopImmediatePropagation();
                this.close();
            }
        });
    }
    onValueChanged(aspectList) {
        this.currentAspectSelection = aspectList;
    }
    close() {
        this.data.select.complete();
    }
    onCancel() {
        this.close();
    }
    onApply() {
        this.data.select.next(this.currentAspectSelection);
        this.close();
    }
}
AspectListDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-aspect-list-dialog',
                template: "<header mat-dialog-title data-automation-id=\"aspect-list-dialog-title\" class=\"adf-aspect-list-dialog\">\n    <h4 class=\"adf-aspect-list-dialog-title\">{{title | translate}}</h4>\n    <div class=\"adf-aspect-list-dialog-description\">{{description | translate}}</div>\n</header>\n\n<div class=\"adf-aspect-list-dialog-information\">\n    <p id=\"aspect-list-dialog-over-table-message\">{{overTableMessage | translate}}</p>\n    <p id=\"aspect-list-dialog-counter\">{{currentAspectSelection ? currentAspectSelection.length : 0}}\n        {{'ADF-ASPECT-LIST.DIALOG.SELECTED' | translate}}</p>\n</div>\n<mat-dialog-content class=\"adf-aspect-dialog-content\">\n    <adf-aspect-list #aspectList (valueChanged)=\"onValueChanged($event)\" [nodeId]=\"currentNodeId\">\n    </adf-aspect-list>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div>\n        <button mat-button (click)=\"aspectList.reset()\" id=\"aspect-list-dialog-actions-reset\"\n            data-automation-id=\"aspect-list-dialog-actions-reset\">{{\n            'ADF-ASPECT-LIST.DIALOG.RESET' | translate }}\n        </button>\n\n        <button mat-button (click)=\"aspectList.clear()\" id=\"aspect-list-dialog-actions-clear\"\n            data-automation-id=\"aspect-list-dialog-actions-clear\">{{\n            'ADF-ASPECT-LIST.DIALOG.CLEAR' | translate }}\n        </button>\n    </div>\n    <div>\n        <button mat-button (click)=\"onCancel()\" id=\"aspect-list-dialog-actions-cancel\"\n            data-automation-id=\"aspect-list-dialog-actions-cancel\">{{\n            'ADF-ASPECT-LIST.DIALOG.CANCEL' | translate }}\n        </button>\n\n        <button mat-button (click)=\"onApply()\" id=\"aspect-list-dialog-actions-apply\"\n            [disabled]=\"aspectList.hasEqualAspect\"\n            data-automation-id=\"aspect-list-dialog-actions-apply\">{{\n            'ADF-ASPECT-LIST.DIALOG.APPLY' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-aspect-list-dialog-title{font-size:large;font-weight:200;margin-top:0}.adf-aspect-list-dialog-description{font-size:small;line-height:normal}.adf-aspect-list-dialog-information{display:flex;font-size:small;justify-content:space-between;padding-left:5px;padding-right:5px}.adf-aspect-list-dialog .mat-dialog-actions{justify-content:space-between}.adf-aspect-dialog-content{padding-top:3px}.adf-aspect-dialog-content .adf-aspect-property-table .mat-cell{font-size:smaller}.adf-aspect-dialog-content .adf-aspect-property-table .mat-column-name{width:30%}"]
            },] }
];
AspectListDialogComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNwZWN0LWxpc3QtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjLyIsInNvdXJjZXMiOlsibGliL2FzcGVjdC1saXN0L2FzcGVjdC1saXN0LWRpYWxvZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQVF6RSxNQUFNLE9BQU8seUJBQXlCO0lBU2xDLFlBQW9CLE1BQStDLEVBQ3ZCLElBQW1DO1FBRDNELFdBQU0sR0FBTixNQUFNLENBQXlDO1FBQ3ZCLFNBQUksR0FBSixJQUFJLENBQStCO1FBSC9FLDJCQUFzQixHQUFhLEVBQUUsQ0FBQztRQUlsQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDeEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDOUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxRQUFRO1FBQ0osSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBRTFDLElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxFQUFFLEVBQUU7Z0JBQ3RCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDdkIsS0FBSyxDQUFDLHdCQUF3QixFQUFFLENBQUM7Z0JBQ2pDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUNoQjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGNBQWMsQ0FBQyxVQUFvQjtRQUNoQyxJQUFJLENBQUMsc0JBQXNCLEdBQUcsVUFBVSxDQUFDO0lBQzVDLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELFFBQVE7UUFDSixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVELE9BQU87UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2pCLENBQUM7OztZQXBESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMscTZEQUFrRDtnQkFFbEQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O2FBQ3hDOzs7WUFQeUIsWUFBWTs0Q0FrQnJCLE1BQU0sU0FBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1BVF9ESUFMT0dfREFUQSwgTWF0RGlhbG9nUmVmIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IEFzcGVjdExpc3REaWFsb2dDb21wb25lbnREYXRhIH0gZnJvbSAnLi9hc3BlY3QtbGlzdC1kaWFsb2ctZGF0YS5pbnRlcmZhY2UnO1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtYXNwZWN0LWxpc3QtZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYXNwZWN0LWxpc3QtZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9hc3BlY3QtbGlzdC1kaWFsb2cuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEFzcGVjdExpc3REaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIGN1cnJlbnROb2RlSWQ6IHN0cmluZztcbiAgICBvdmVyVGFibGVNZXNzYWdlOiBzdHJpbmc7XG5cbiAgICBjdXJyZW50QXNwZWN0U2VsZWN0aW9uOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBkaWFsb2c6IE1hdERpYWxvZ1JlZjxBc3BlY3RMaXN0RGlhbG9nQ29tcG9uZW50PixcbiAgICAgICAgICAgICAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IEFzcGVjdExpc3REaWFsb2dDb21wb25lbnREYXRhKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSBkYXRhLnRpdGxlO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGF0YS5kZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5vdmVyVGFibGVNZXNzYWdlID0gZGF0YS5vdmVyVGFibGVNZXNzYWdlO1xuICAgICAgICB0aGlzLmN1cnJlbnROb2RlSWQgPSBkYXRhLm5vZGVJZDtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5kaWFsb2cuYmFja2Ryb3BDbGljaygpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmRpYWxvZy5rZXlkb3duRXZlbnRzKCkuc3Vic2NyaWJlKGV2ZW50ID0+IHtcbiAgICAgICAgICAgIC8vIEVzY1xuICAgICAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDI3KSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uVmFsdWVDaGFuZ2VkKGFzcGVjdExpc3Q6IHN0cmluZ1tdKSB7XG4gICAgICAgdGhpcy5jdXJyZW50QXNwZWN0U2VsZWN0aW9uID0gYXNwZWN0TGlzdDtcbiAgICB9XG5cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdC5jb21wbGV0ZSgpO1xuICAgIH1cblxuICAgIG9uQ2FuY2VsKCkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuXG4gICAgb25BcHBseSgpIHtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdC5uZXh0KHRoaXMuY3VycmVudEFzcGVjdFNlbGVjdGlvbik7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG59XG4iXX0=