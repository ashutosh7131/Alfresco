/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/dialog';
export class AspectListDialogComponent {
    constructor(dialog, data) {
        this.dialog = dialog;
        this.data = data;
        this.currentAspectSelection = [];
        this.title = data.title;
        this.description = data.description;
        this.overTableMessage = data.overTableMessage;
        this.currentNodeId = data.nodeId;
    }
    ngOnInit() {
        this.dialog.backdropClick().subscribe(() => {
            this.close();
        });
        this.dialog.keydownEvents().subscribe(event => {
            if (event.keyCode === 27) {
                event.preventDefault();
                event.stopImmediatePropagation();
                this.close();
            }
        });
    }
    onValueChanged(aspectList) {
        this.currentAspectSelection = aspectList;
    }
    close() {
        this.data.select.complete();
    }
    onCancel() {
        this.close();
    }
    onApply() {
        this.data.select.next(this.currentAspectSelection);
        this.close();
    }
}
AspectListDialogComponent.ɵfac = function AspectListDialogComponent_Factory(t) { return new (t || AspectListDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };
AspectListDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AspectListDialogComponent, selectors: [["adf-aspect-list-dialog"]], decls: 32, vars: 27, consts: [["mat-dialog-title", "", "data-automation-id", "aspect-list-dialog-title", 1, "adf-aspect-list-dialog"], [1, "adf-aspect-list-dialog-title"], [1, "adf-aspect-list-dialog-description"], [1, "adf-aspect-list-dialog-information"], ["id", "aspect-list-dialog-over-table-message"], ["id", "aspect-list-dialog-counter"], [1, "adf-aspect-dialog-content"], [3, "nodeId", "valueChanged"], ["aspectList", ""], ["mat-button", "", "id", "aspect-list-dialog-actions-reset", "data-automation-id", "aspect-list-dialog-actions-reset", 3, "click"], ["mat-button", "", "id", "aspect-list-dialog-actions-clear", "data-automation-id", "aspect-list-dialog-actions-clear", 3, "click"], ["mat-button", "", "id", "aspect-list-dialog-actions-cancel", "data-automation-id", "aspect-list-dialog-actions-cancel", 3, "click"], ["mat-button", "", "id", "aspect-list-dialog-actions-apply", "data-automation-id", "aspect-list-dialog-actions-apply", 3, "disabled", "click"]], template: function AspectListDialogComponent_Template(rf, ctx) { if (rf & 1) {
        const _r1 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "header", 0);
        ɵngcc0.ɵɵelementStart(1, "h4", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 2);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 3);
        ɵngcc0.ɵɵelementStart(8, "p", 4);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "p", 5);
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "mat-dialog-content", 6);
        ɵngcc0.ɵɵelementStart(15, "adf-aspect-list", 7, 8);
        ɵngcc0.ɵɵlistener("valueChanged", function AspectListDialogComponent_Template_adf_aspect_list_valueChanged_15_listener($event) { return ctx.onValueChanged($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "mat-dialog-actions");
        ɵngcc0.ɵɵelementStart(18, "div");
        ɵngcc0.ɵɵelementStart(19, "button", 9);
        ɵngcc0.ɵɵlistener("click", function AspectListDialogComponent_Template_button_click_19_listener() { ɵngcc0.ɵɵrestoreView(_r1); const _r0 = ɵngcc0.ɵɵreference(16); return _r0.reset(); });
        ɵngcc0.ɵɵtext(20);
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "button", 10);
        ɵngcc0.ɵɵlistener("click", function AspectListDialogComponent_Template_button_click_22_listener() { ɵngcc0.ɵɵrestoreView(_r1); const _r0 = ɵngcc0.ɵɵreference(16); return _r0.clear(); });
        ɵngcc0.ɵɵtext(23);
        ɵngcc0.ɵɵpipe(24, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "div");
        ɵngcc0.ɵɵelementStart(26, "button", 11);
        ɵngcc0.ɵɵlistener("click", function AspectListDialogComponent_Template_button_click_26_listener() { return ctx.onCancel(); });
        ɵngcc0.ɵɵtext(27);
        ɵngcc0.ɵɵpipe(28, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(29, "button", 12);
        ɵngcc0.ɵɵlistener("click", function AspectListDialogComponent_Template_button_click_29_listener() { return ctx.onApply(); });
        ɵngcc0.ɵɵtext(30);
        ɵngcc0.ɵɵpipe(31, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(16);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 11, ctx.title));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 13, ctx.description));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 15, ctx.overTableMessage));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate2("", ctx.currentAspectSelection ? ctx.currentAspectSelection.length : 0, " ", ɵngcc0.ɵɵpipeBind1(13, 17, "ADF-ASPECT-LIST.DIALOG.SELECTED"), "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("nodeId", ctx.currentNodeId);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(21, 19, "ADF-ASPECT-LIST.DIALOG.RESET"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(24, 21, "ADF-ASPECT-LIST.DIALOG.CLEAR"), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(28, 23, "ADF-ASPECT-LIST.DIALOG.CANCEL"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", _r0.hasEqualAspect);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(31, 25, "ADF-ASPECT-LIST.DIALOG.APPLY"), " ");
    } }, styles: [".adf-aspect-list-dialog-title{font-size:large;font-weight:200;margin-top:0}.adf-aspect-list-dialog-description{font-size:small;line-height:normal}.adf-aspect-list-dialog-information{display:flex;font-size:small;justify-content:space-between;padding-left:5px;padding-right:5px}.adf-aspect-list-dialog .mat-dialog-actions{justify-content:space-between}.adf-aspect-dialog-content{padding-top:3px}.adf-aspect-dialog-content .adf-aspect-property-table .mat-cell{font-size:smaller}.adf-aspect-dialog-content .adf-aspect-property-table .mat-column-name{width:30%}"], encapsulation: 2 });
AspectListDialogComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AspectListDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-aspect-list-dialog',
                template: "<header mat-dialog-title data-automation-id=\"aspect-list-dialog-title\" class=\"adf-aspect-list-dialog\">\n    <h4 class=\"adf-aspect-list-dialog-title\">{{title | translate}}</h4>\n    <div class=\"adf-aspect-list-dialog-description\">{{description | translate}}</div>\n</header>\n\n<div class=\"adf-aspect-list-dialog-information\">\n    <p id=\"aspect-list-dialog-over-table-message\">{{overTableMessage | translate}}</p>\n    <p id=\"aspect-list-dialog-counter\">{{currentAspectSelection ? currentAspectSelection.length : 0}}\n        {{'ADF-ASPECT-LIST.DIALOG.SELECTED' | translate}}</p>\n</div>\n<mat-dialog-content class=\"adf-aspect-dialog-content\">\n    <adf-aspect-list #aspectList (valueChanged)=\"onValueChanged($event)\" [nodeId]=\"currentNodeId\">\n    </adf-aspect-list>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div>\n        <button mat-button (click)=\"aspectList.reset()\" id=\"aspect-list-dialog-actions-reset\"\n            data-automation-id=\"aspect-list-dialog-actions-reset\">{{\n            'ADF-ASPECT-LIST.DIALOG.RESET' | translate }}\n        </button>\n\n        <button mat-button (click)=\"aspectList.clear()\" id=\"aspect-list-dialog-actions-clear\"\n            data-automation-id=\"aspect-list-dialog-actions-clear\">{{\n            'ADF-ASPECT-LIST.DIALOG.CLEAR' | translate }}\n        </button>\n    </div>\n    <div>\n        <button mat-button (click)=\"onCancel()\" id=\"aspect-list-dialog-actions-cancel\"\n            data-automation-id=\"aspect-list-dialog-actions-cancel\">{{\n            'ADF-ASPECT-LIST.DIALOG.CANCEL' | translate }}\n        </button>\n\n        <button mat-button (click)=\"onApply()\" id=\"aspect-list-dialog-actions-apply\"\n            [disabled]=\"aspectList.hasEqualAspect\"\n            data-automation-id=\"aspect-list-dialog-actions-apply\">{{\n            'ADF-ASPECT-LIST.DIALOG.APPLY' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-aspect-list-dialog-title{font-size:large;font-weight:200;margin-top:0}.adf-aspect-list-dialog-description{font-size:small;line-height:normal}.adf-aspect-list-dialog-information{display:flex;font-size:small;justify-content:space-between;padding-left:5px;padding-right:5px}.adf-aspect-list-dialog .mat-dialog-actions{justify-content:space-between}.adf-aspect-dialog-content{padding-top:3px}.adf-aspect-dialog-content .adf-aspect-property-table .mat-cell{font-size:smaller}.adf-aspect-dialog-content .adf-aspect-property-table .mat-column-name{width:30%}"]
            }]
    }], function () { return [{ type: ɵngcc1.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNwZWN0LWxpc3QtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjL2xpYi9hc3BlY3QtbGlzdC9hc3BlY3QtbGlzdC1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBVSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDOzs7QUFRekUsTUFBTSxPQUFPLHlCQUF5QjtBQUFHLElBU3JDLFlBQW9CLE1BQStDLEVBQ3ZCLElBQW1DO0FBQ25GLFFBRndCLFdBQU0sR0FBTixNQUFNLENBQXlDO0FBQUMsUUFDeEIsU0FBSSxHQUFKLElBQUksQ0FBK0I7QUFBQyxRQUhoRiwyQkFBc0IsR0FBYSxFQUFFLENBQUM7QUFDMUMsUUFHUSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7QUFDaEMsUUFBUSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDNUMsUUFBUSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO0FBQ3RELFFBQVEsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQ3pDLElBQUksQ0FBQztBQUNMLElBQ0ksUUFBUTtBQUNaLFFBQVEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO0FBQ25ELFlBQVksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ3pCLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDWCxRQUFRLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ3RELFlBQ1ksSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLEVBQUUsRUFBRTtBQUN0QyxnQkFBZ0IsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO0FBQ3ZDLGdCQUFnQixLQUFLLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztBQUNqRCxnQkFBZ0IsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQzdCLGFBQWE7QUFDYixRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ1gsSUFBSSxDQUFDO0FBQ0wsSUFDSSxjQUFjLENBQUMsVUFBb0I7QUFDdkMsUUFBTyxJQUFJLENBQUMsc0JBQXNCLEdBQUcsVUFBVSxDQUFDO0FBQ2hELElBQUksQ0FBQztBQUNMLElBQ0ksS0FBSztBQUNULFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDcEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxRQUFRO0FBQ1osUUFBUSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDckIsSUFBSSxDQUFDO0FBQ0wsSUFDSSxPQUFPO0FBQ1gsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDM0QsUUFBUSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDckIsSUFBSSxDQUFDO0FBQ0w7cURBckRDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsd0JBQXdCLGtCQUNsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBQWtEO2NBRWxELGFBQWEsRUFBRTtlQUFpQixDQUFDLElBQUk7Ozs7Ozs7OztvRkFDeEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1bEJBQ0k7QUFBQztBQUFtRCxZQVIvQixZQUFZO0FBQUksNENBa0J6QixNQUFNLFNBQUMsZUFBZTtBQUFROzs7Ozs7Ozs7Ozs7a0NBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEsIE1hdERpYWxvZ1JlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBBc3BlY3RMaXN0RGlhbG9nQ29tcG9uZW50RGF0YSB9IGZyb20gJy4vYXNwZWN0LWxpc3QtZGlhbG9nLWRhdGEuaW50ZXJmYWNlJztcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWFzcGVjdC1saXN0LWRpYWxvZycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2FzcGVjdC1saXN0LWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYXNwZWN0LWxpc3QtZGlhbG9nLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBBc3BlY3RMaXN0RGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICBjdXJyZW50Tm9kZUlkOiBzdHJpbmc7XG4gICAgb3ZlclRhYmxlTWVzc2FnZTogc3RyaW5nO1xuXG4gICAgY3VycmVudEFzcGVjdFNlbGVjdGlvbjogc3RyaW5nW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGlhbG9nOiBNYXREaWFsb2dSZWY8QXNwZWN0TGlzdERpYWxvZ0NvbXBvbmVudD4sXG4gICAgICAgICAgICAgICAgQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiBBc3BlY3RMaXN0RGlhbG9nQ29tcG9uZW50RGF0YSkge1xuICAgICAgICB0aGlzLnRpdGxlID0gZGF0YS50aXRsZTtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRhdGEuZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMub3ZlclRhYmxlTWVzc2FnZSA9IGRhdGEub3ZlclRhYmxlTWVzc2FnZTtcbiAgICAgICAgdGhpcy5jdXJyZW50Tm9kZUlkID0gZGF0YS5ub2RlSWQ7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuZGlhbG9nLmJhY2tkcm9wQ2xpY2soKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5kaWFsb2cua2V5ZG93bkV2ZW50cygpLnN1YnNjcmliZShldmVudCA9PiB7XG4gICAgICAgICAgICAvLyBFc2NcbiAgICAgICAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSAyNykge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvblZhbHVlQ2hhbmdlZChhc3BlY3RMaXN0OiBzdHJpbmdbXSkge1xuICAgICAgIHRoaXMuY3VycmVudEFzcGVjdFNlbGVjdGlvbiA9IGFzcGVjdExpc3Q7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMuZGF0YS5zZWxlY3QuY29tcGxldGUoKTtcbiAgICB9XG5cbiAgICBvbkNhbmNlbCgpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cblxuICAgIG9uQXBwbHkoKSB7XG4gICAgICAgIHRoaXMuZGF0YS5zZWxlY3QubmV4dCh0aGlzLmN1cnJlbnRBc3BlY3RTZWxlY3Rpb24pO1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxufVxuIl19