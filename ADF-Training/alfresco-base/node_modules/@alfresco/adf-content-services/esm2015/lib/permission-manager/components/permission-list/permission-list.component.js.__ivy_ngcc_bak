/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { PermissionListService } from './permission-list.service';
export class PermissionListComponent {
    constructor(permissionList) {
        this.permissionList = permissionList;
        this.selectedPermissions = [];
        this.error = this.permissionList.errored;
        this.update = this.permissionList.updated;
    }
    ngOnInit() {
        this.permissionList.fetchPermission(this.nodeId);
    }
    openAddPermissionDialog() {
        this.permissionList.updateNodePermissionByDialog();
    }
    onSelect(selections) {
        this.selectedPermissions = selections.map((selection) => selection['obj']).filter((permission) => !permission.readonly);
    }
    deleteSelection() {
        this.permissionList.deletePermissions(this.selectedPermissions);
        this.selectedPermissions = [];
    }
    updatePermission({ role, permission }) {
        this.permissionList.updateRole(role, permission);
    }
    deletePermission(permission) {
        this.selectedPermissions = [];
        this.permissionList.deletePermission(permission);
    }
    updateAllPermission(role) {
        this.permissionList.bulkRoleUpdate(role);
        this.selectedPermissions = [];
    }
}
PermissionListComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-permission-list',
                template: "<mat-card class=\"adf-permission-card\" id=\"adf-permission-manager-card\">\n    <div *ngIf=\"!(permissionList.data$ | async) && permissionList.loading$ | async\" class=\"adf-permission-loader\">\n        <mat-progress-spinner [color]=\"'primary'\"\n                              [mode]=\"'indeterminate'\">\n        </mat-progress-spinner>\n    </div>\n\n    <ng-container *ngIf=\"permissionList.error$ | async\">\n        <div class=\"adf-no-permission__template\" id=\"adf-permission-manager-error\">\n            <mat-icon color=\"warn\">error</mat-icon>\n            <p class=\"adf-no-permission__template--text\">{{ 'PERMISSION_MANAGER.ERROR.NOT-FOUND'| translate }}</p>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"permissionList.data$ | async as model\">\n        <div class=\"adf-permission-container\" #target>\n\n            <div class=\"adf-permission-header\">\n                <span class=\"adf-inherit-container\">\n                    <h3 class=\"adf-inherit-container-header\">\n                        {{'PERMISSION_MANAGER.LABELS.INHERITED-PERMISSIONS' | translate }}\n\n                        {{ (model.node.permissions.isInheritanceEnabled ? \"PERMISSION_MANAGER.LABELS.ON\" : \"PERMISSION_MANAGER.LABELS.OFF\") | translate }}\n                    </h3>\n\n                    <mat-slide-toggle\n                        class=\"adf-inherit-toggle\"\n                        data-automation-id=\"adf-inherit-toggle-button\"\n                        [checked]=\"model.node.permissions.isInheritanceEnabled\"\n                        (change)=\"permissionList.toggleInherited($event)\">\n                    </mat-slide-toggle>\n                </span>\n\n                <span class=\"adf-inherit-subtitle\" title=\"total\">\n                    {{'PERMISSION_MANAGER.LABELS.INHERITED-SUBTITLE' | translate: { count: model.inheritedPermissions.length } }}\n                </span>\n            </div>\n\n            <button\n                mat-button\n                data-automation-id=\"permission-info-button\"\n                [adf-pop-over]=\"inheritedPermission\"\n                [target]=\"target\"\n                #popOver=\"adfPopOver\"\n                *ngIf=\"model.node.permissions.isInheritanceEnabled\">\n                {{ (popOver.open ? 'PERMISSION_MANAGER.LABELS.HIDE' : 'PERMISSION_MANAGER.LABELS.SHOW') | translate }}\n                <mat-icon *ngIf=\"popOver.open\"> keyboard_arrow_up </mat-icon>\n                <mat-icon *ngIf=\"!popOver.open\"> keyboard_arrow_down </mat-icon>\n            </button>\n        </div>\n\n        <ng-template #inheritedPermission>\n            <div class=\"adf-pop-over-card\">\n                <adf-permission-container\n                    data-automation-id=\"adf-inherited-permission\"\n                    [isReadOnly]=\"true\"\n                    [node]=\"model.node\"\n                    [permissions]=\"model.inheritedPermissions\"\n                    [showLocation]=\"true\"\n                    [selectionMode]=\"'none'\"\n                    [roles]=\"model.roles\">\n                </adf-permission-container>\n            </div>\n        </ng-template>\n\n        <mat-card-content class=\"adf-local-permission-container\">\n            <section class=\"adf-permission-content-header\">\n                <h3>{{'PERMISSION_MANAGER.LABELS.DIRECT-PERMISSIONS' | translate }}</h3>\n\n                <div class=\"adf-toolbar--spacer\"></div>\n\n                <button\n                    mat-button\n                    [matTooltip]=\"'PERMISSION_MANAGER.ACTION.ADD-PERMISSION' | translate\"\n                    (click)=\"openAddPermissionDialog()\"\n                    data-automation-id=\"adf-add-permission-button\">\n                    <mat-icon>person_add_outline</mat-icon>\n                </button>\n\n                <button\n                    mat-button\n                    [matTooltip]=\"'PERMISSION_MANAGER.ACTION.DELETE' | translate\"\n                    [disabled]=\"!selectedPermissions?.length\"\n                    (click)=\"deleteSelection()\"\n                    data-automation-id=\"adf-delete-selected-permission\">\n                    <mat-icon>delete_outline</mat-icon>\n                </button>\n            </section>\n\n            <adf-permission-container\n                class=\"adf-permission-list\"\n                data-automation-id=\"adf-locally-set-permission\"\n                [node]=\"model.node\"\n                [permissions]=\"model.localPermissions\"\n                (update)=\"updatePermission($event)\"\n                (delete)=\"deletePermission($event)\"\n                (updateAll)=\"updateAllPermission($event)\"\n                (row-select)=\"onSelect($any($event).detail.selection)\"\n                (row-unselect)=\"onSelect($any($event).detail.selection)\"\n                [roles]=\"model.roles\">\n            </adf-permission-container>\n\n        </mat-card-content>\n    </ng-container>\n</mat-card>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-permission-card{box-sizing:border-box;display:flex!important;flex-direction:column;height:100%;overflow:hidden}.adf-permission-loader{margin-left:45%;overflow:hidden}.adf-permission-container{border:1px solid var(--theme-border-color);justify-content:space-between;padding:10px 15px}.adf-inherit-container,.adf-permission-container{align-items:center;display:flex;flex-direction:row}.adf-inherit-container-header{margin-bottom:10px;margin-top:10px}.adf-inherit-toggle{padding-left:30px}.adf-inherit-subtitle{padding-bottom:5px}.adf-permission-content-header{align-items:center;display:flex;flex-direction:row;padding:5px 15px}.adf-permission-role-column-header{height:40px;position:relative!important}.adf-permission-role-column-header .mat-form-field-infix{border:none}.adf-permission-header{display:flex;flex:1;flex-direction:column;height:100%;min-height:0;overflow:hidden}.adf-permission-list{display:flex;height:calc(100% - 63px)}.adf-local-permission-container{flex:1 1 auto;overflow:hidden}[aria-sort=Ascending] adf-user-role-column,[aria-sort=Descending] adf-user-role-column{padding-left:10px;padding-right:10px}.adf-permission-pop-over{padding-right:15px;width:100%}.adf-permission-pop-over .adf-pop-over-card{box-shadow:0 8px 9px -5px var(--theme-fg-divider),0 15px 22px 2px var(--theme-fg-divider);overflow:hidden;width:100%}"]
            },] }
];
PermissionListComponent.ctorParameters = () => [
    { type: PermissionListService }
];
PermissionListComponent.propDecorators = {
    nodeId: [{ type: Input }],
    update: [{ type: Output }],
    error: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbi1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjLyIsInNvdXJjZXMiOlsibGliL3Blcm1pc3Npb24tbWFuYWdlci9jb21wb25lbnRzL3Blcm1pc3Npb24tbGlzdC9wZXJtaXNzaW9uLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFRbEUsTUFBTSxPQUFPLHVCQUF1QjtJQWVoQyxZQUE0QixjQUFxQztRQUFyQyxtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7UUFGakUsd0JBQW1CLEdBQTZCLEVBQUUsQ0FBQztRQUcvQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUM7SUFDOUMsQ0FBQztJQUVELFFBQVE7UUFDSixJQUFJLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELHVCQUF1QjtRQUNuQixJQUFJLENBQUMsY0FBYyxDQUFDLDRCQUE0QixFQUFFLENBQUM7SUFDdkQsQ0FBQztJQUVELFFBQVEsQ0FBQyxVQUEyQjtRQUNoQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM1SCxDQUFDO0lBRUQsZUFBZTtRQUNYLElBQUksQ0FBQyxjQUFjLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFDO1FBQy9CLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsVUFBa0M7UUFDL0MsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztRQUM5QixJQUFJLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxJQUFZO1FBQzVCLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxFQUFFLENBQUM7SUFDbEMsQ0FBQzs7O1lBdkRKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQiw0NEpBQStDO2dCQUUvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDeEM7OztZQVBRLHFCQUFxQjs7O3FCQVV6QixLQUFLO3FCQUlMLE1BQU07b0JBSU4sTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IE9iamVjdERhdGFSb3cgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuaW1wb3J0IHsgUGVybWlzc2lvbkVsZW1lbnQgfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGVybWlzc2lvbkRpc3BsYXlNb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscy9wZXJtaXNzaW9uLm1vZGVsJztcbmltcG9ydCB7IFBlcm1pc3Npb25MaXN0U2VydmljZSB9IGZyb20gJy4vcGVybWlzc2lvbi1saXN0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1wZXJtaXNzaW9uLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wZXJtaXNzaW9uLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3Blcm1pc3Npb24tbGlzdC5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgUGVybWlzc2lvbkxpc3RDb21wb25lbnQge1xuICAgIC8qKiBJRCBvZiB0aGUgbm9kZSB3aG9zZSBwZXJtaXNzaW9ucyB5b3Ugd2FudCB0byBzaG93LiAqL1xuICAgIEBJbnB1dCgpXG4gICAgbm9kZUlkOiBzdHJpbmc7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBwZXJtaXNzaW9uIGlzIHVwZGF0ZWQuICovXG4gICAgQE91dHB1dCgpXG4gICAgdXBkYXRlOiBFdmVudEVtaXR0ZXI8UGVybWlzc2lvbkVsZW1lbnQ+O1xuXG4gICAgLyoqIEVtaXR0ZWQgd2hlbiBhbiBlcnJvciBvY2N1cnMuICovXG4gICAgQE91dHB1dCgpXG4gICAgZXJyb3I6IEV2ZW50RW1pdHRlcjxhbnk+O1xuXG4gICAgc2VsZWN0ZWRQZXJtaXNzaW9uczogUGVybWlzc2lvbkRpc3BsYXlNb2RlbFtdID0gW107XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgcGVybWlzc2lvbkxpc3Q6IFBlcm1pc3Npb25MaXN0U2VydmljZSkge1xuICAgICAgICB0aGlzLmVycm9yID0gdGhpcy5wZXJtaXNzaW9uTGlzdC5lcnJvcmVkO1xuICAgICAgICB0aGlzLnVwZGF0ZSA9IHRoaXMucGVybWlzc2lvbkxpc3QudXBkYXRlZDtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wZXJtaXNzaW9uTGlzdC5mZXRjaFBlcm1pc3Npb24odGhpcy5ub2RlSWQpO1xuICAgIH1cblxuICAgIG9wZW5BZGRQZXJtaXNzaW9uRGlhbG9nKCkge1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25MaXN0LnVwZGF0ZU5vZGVQZXJtaXNzaW9uQnlEaWFsb2coKTtcbiAgICB9XG5cbiAgICBvblNlbGVjdChzZWxlY3Rpb25zOiBPYmplY3REYXRhUm93W10pIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZFBlcm1pc3Npb25zID0gc2VsZWN0aW9ucy5tYXAoKHNlbGVjdGlvbikgPT4gc2VsZWN0aW9uWydvYmonXSkuZmlsdGVyKChwZXJtaXNzaW9uKSA9PiAhcGVybWlzc2lvbi5yZWFkb25seSk7XG4gICAgfVxuXG4gICAgZGVsZXRlU2VsZWN0aW9uKCkge1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25MaXN0LmRlbGV0ZVBlcm1pc3Npb25zKHRoaXMuc2VsZWN0ZWRQZXJtaXNzaW9ucyk7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRQZXJtaXNzaW9ucyA9IFtdO1xuICAgIH1cblxuICAgIHVwZGF0ZVBlcm1pc3Npb24oe3JvbGUsIHBlcm1pc3Npb259KSB7XG4gICAgICAgIHRoaXMucGVybWlzc2lvbkxpc3QudXBkYXRlUm9sZShyb2xlLCBwZXJtaXNzaW9uKTtcbiAgICB9XG5cbiAgICBkZWxldGVQZXJtaXNzaW9uKHBlcm1pc3Npb246IFBlcm1pc3Npb25EaXNwbGF5TW9kZWwpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZFBlcm1pc3Npb25zID0gW107XG4gICAgICAgIHRoaXMucGVybWlzc2lvbkxpc3QuZGVsZXRlUGVybWlzc2lvbihwZXJtaXNzaW9uKTtcbiAgICB9XG5cbiAgICB1cGRhdGVBbGxQZXJtaXNzaW9uKHJvbGU6IHN0cmluZykge1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25MaXN0LmJ1bGtSb2xlVXBkYXRlKHJvbGUpO1xuICAgICAgICB0aGlzLnNlbGVjdGVkUGVybWlzc2lvbnMgPSBbXTtcbiAgICB9XG59XG4iXX0=