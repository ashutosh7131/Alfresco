/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { NodeEntry } from '@alfresco/js-api';
import { NodePermissionService } from '../../services/node-permission.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/node-permission.service';
import * as ɵngcc2 from '@angular/common';

function UserNameColumnComponent_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 3);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r0.subTitleText$));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r0.subTitleText$), " ");
} }
export class UserNameColumnComponent {
    constructor(nodePermissionService) {
        this.nodePermissionService = nodePermissionService;
        this.displayText$ = new BehaviorSubject('');
        this.subTitleText$ = new BehaviorSubject('');
    }
    ngOnInit() {
        var _a, _b;
        if (this.context != null) {
            const { person, group, authorityId } = (_b = (_a = this.context.row.obj) === null || _a === void 0 ? void 0 : _a.entry) !== null && _b !== void 0 ? _b : this.context.row.obj;
            const permissionGroup = authorityId ? { displayName: authorityId } : null;
            this.updatePerson(person);
            this.updateGroup(group || permissionGroup);
        }
        if (this.node) {
            const { person, group } = this.nodePermissionService.transformNodeToUserPerson(this.node.entry);
            this.updatePerson(person);
            this.updateGroup(group);
        }
    }
    updatePerson(person) {
        var _a, _b, _c;
        if (person) {
            this.displayText$.next(`${(_a = person.firstName) !== null && _a !== void 0 ? _a : ''} ${(_b = person.lastName) !== null && _b !== void 0 ? _b : ''}`);
            this.subTitleText$.next((_c = person.email) !== null && _c !== void 0 ? _c : '');
        }
    }
    updateGroup(group) {
        if (group) {
            this.displayText$.next(group.displayName);
        }
    }
}
UserNameColumnComponent.ɵfac = function UserNameColumnComponent_Factory(t) { return new (t || UserNameColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NodePermissionService)); };
UserNameColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: UserNameColumnComponent, selectors: [["adf-user-name-column"]], hostAttrs: [1, "adf-user-name-column", "adf-datatable-content-cell", "adf-expand-cell-5", "adf-ellipsis-cell"], inputs: { context: "context", node: "node" }, decls: 9, vars: 12, consts: [[1, "adf-ellipsis-cell"], [1, "adf-user-name-column", 3, "title"], ["class", "adf-user-email-column", 3, "title", 4, "ngIf"], [1, "adf-user-email-column", 3, "title"]], template: function UserNameColumnComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵelementStart(2, "span", 1);
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "br");
        ɵngcc0.ɵɵtemplate(7, UserNameColumnComponent_span_7_Template, 4, 6, "span", 2);
        ɵngcc0.ɵɵpipe(8, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("data-automation-id", ɵngcc0.ɵɵpipeBind1(1, 4, ctx.displayText$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 6, ctx.displayText$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 8, ctx.displayText$), "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(8, 10, ctx.subTitleText$));
    } }, directives: [ɵngcc2.NgIf], pipes: [ɵngcc2.AsyncPipe], styles: [".adf-user-name-column{font-size:14px;font-weight:600}.adf-user-email-column{color:var(--theme-foreground-text-color);font-size:14px;letter-spacing:-.2px;line-height:1.43}"], encapsulation: 2 });
UserNameColumnComponent.ctorParameters = () => [
    { type: NodePermissionService }
];
UserNameColumnComponent.propDecorators = {
    context: [{ type: Input }],
    node: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UserNameColumnComponent, [{
        type: Component,
        args: [{
                selector: 'adf-user-name-column',
                template: `
        <div class="adf-ellipsis-cell" [attr.data-automation-id]="displayText$ | async">
            <span class="adf-user-name-column" title="{{ displayText$ | async }}"> {{ displayText$ | async }}</span>
            <br/>
            <span class="adf-user-email-column" title="{{ subTitleText$ | async }}" *ngIf="subTitleText$ | async">
                {{ subTitleText$ | async }}
            </span>
        </div>
    `,
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-user-name-column adf-datatable-content-cell adf-expand-cell-5 adf-ellipsis-cell' },
                styles: [".adf-user-name-column{font-size:14px;font-weight:600}.adf-user-email-column{color:var(--theme-foreground-text-color);font-size:14px;letter-spacing:-.2px;line-height:1.43}"]
            }]
    }], function () { return [{ type: ɵngcc1.NodePermissionService }]; }, { context: [{
            type: Input
        }], node: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1uYW1lLWNvbHVtbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb250ZW50LXNlcnZpY2VzL3NyYy9saWIvcGVybWlzc2lvbi1tYW5hZ2VyL2NvbXBvbmVudHMvdXNlci1uYW1lLWNvbHVtbi91c2VyLW5hbWUtY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUN2QyxPQUFPLEVBQVMsU0FBUyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDcEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0IvRSxNQUFNLE9BQU8sdUJBQXVCO0FBQUcsSUFVbkMsWUFBb0IscUJBQTRDO0FBQUksUUFBaEQsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtBQUFDLFFBSGpFLGlCQUFZLEdBQUcsSUFBSSxlQUFlLENBQVMsRUFBRSxDQUFDLENBQUM7QUFDbkQsUUFBSSxrQkFBYSxHQUFHLElBQUksZUFBZSxDQUFTLEVBQUUsQ0FBQyxDQUFDO0FBQ3BELElBQ3VFLENBQUM7QUFDeEUsSUFDSSxRQUFRO0FBQ1o7QUFBb0IsUUFBWixJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxFQUFFO0FBQ2xDLFlBQVksTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLGVBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRywwQ0FBRSxLQUFLLG1DQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztBQUN2RyxZQUFZLE1BQU0sZUFBZSxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNoRyxZQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDdEMsWUFBWSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssSUFBSSxlQUFlLENBQUMsQ0FBQztBQUN2RCxTQUFTO0FBQ1QsUUFDUSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7QUFDdkIsWUFBWSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyx5QkFBeUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzVHLFlBQVksSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUN0QyxZQUFZLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDcEMsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ1ksWUFBWSxDQUFDLE1BQW9CO0FBQzdDO0FBQ0UsUUFETSxJQUFJLE1BQU0sRUFBRTtBQUNwQixZQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBQSxNQUFNLENBQUMsU0FBUyxtQ0FBSSxFQUFFLElBQUksTUFBQSxNQUFNLENBQUMsUUFBUSxtQ0FBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3pGLFlBQVksSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLE9BQUMsTUFBTSxDQUFDLEtBQUssbUNBQUksRUFBRSxDQUFDLENBQUM7QUFDeEQsU0FBUztBQUNULElBQUcsQ0FBQztBQUNKLElBQ1ksV0FBVyxDQUFDLEtBQVk7QUFDcEMsUUFBUSxJQUFJLEtBQUssRUFBRTtBQUNuQixZQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUN0RCxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0w7bURBdERDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsc0JBQXNCLGtCQUNoQyxRQUFRLEVBQUU7eVlBUVQsa0JBRUQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksa0JBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRTtLQUFxRixFQUFFOzs7Ozs7Q0FDekc7Ozs7Ozs7Ozs7Ozs7MlFBQ0k7QUFBQztBQUFpRCxZQWxCOUMscUJBQXFCO0FBQUc7QUFBRztBQUEyQyxzQkFtQjFFLEtBQUs7QUFDUixtQkFFRyxLQUFLO0FBQ1Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgR3JvdXAsIE5vZGVFbnRyeSB9IGZyb20gJ0BhbGZyZXNjby9qcy1hcGknO1xuaW1wb3J0IHsgTm9kZVBlcm1pc3Npb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbm9kZS1wZXJtaXNzaW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRWNtVXNlck1vZGVsIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtdXNlci1uYW1lLWNvbHVtbicsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImFkZi1lbGxpcHNpcy1jZWxsXCIgW2F0dHIuZGF0YS1hdXRvbWF0aW9uLWlkXT1cImRpc3BsYXlUZXh0JCB8IGFzeW5jXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImFkZi11c2VyLW5hbWUtY29sdW1uXCIgdGl0bGU9XCJ7eyBkaXNwbGF5VGV4dCQgfCBhc3luYyB9fVwiPiB7eyBkaXNwbGF5VGV4dCQgfCBhc3luYyB9fTwvc3Bhbj5cbiAgICAgICAgICAgIDxici8+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImFkZi11c2VyLWVtYWlsLWNvbHVtblwiIHRpdGxlPVwie3sgc3ViVGl0bGVUZXh0JCB8IGFzeW5jIH19XCIgKm5nSWY9XCJzdWJUaXRsZVRleHQkIHwgYXN5bmNcIj5cbiAgICAgICAgICAgICAgICB7eyBzdWJUaXRsZVRleHQkIHwgYXN5bmMgfX1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgYCxcbiAgICBzdHlsZVVybHM6IFsnLi91c2VyLW5hbWUtY29sdW1uLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7IGNsYXNzOiAnYWRmLXVzZXItbmFtZS1jb2x1bW4gYWRmLWRhdGF0YWJsZS1jb250ZW50LWNlbGwgYWRmLWV4cGFuZC1jZWxsLTUgYWRmLWVsbGlwc2lzLWNlbGwnIH1cbn0pXG5leHBvcnQgY2xhc3MgVXNlck5hbWVDb2x1bW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBJbnB1dCgpXG4gICAgY29udGV4dDogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBub2RlOiBOb2RlRW50cnk7XG5cbiAgICBkaXNwbGF5VGV4dCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PHN0cmluZz4oJycpO1xuICAgIHN1YlRpdGxlVGV4dCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PHN0cmluZz4oJycpO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBub2RlUGVybWlzc2lvblNlcnZpY2U6IE5vZGVQZXJtaXNzaW9uU2VydmljZSkge31cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZiAodGhpcy5jb250ZXh0ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcGVyc29uLCBncm91cCwgYXV0aG9yaXR5SWQgfSA9IHRoaXMuY29udGV4dC5yb3cub2JqPy5lbnRyeSA/PyB0aGlzLmNvbnRleHQucm93Lm9iajtcbiAgICAgICAgICAgIGNvbnN0IHBlcm1pc3Npb25Hcm91cCA9IGF1dGhvcml0eUlkID8geyBkaXNwbGF5TmFtZTogYXV0aG9yaXR5SWQgfSBhcyAgR3JvdXAgOiBudWxsO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVQZXJzb24ocGVyc29uKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlR3JvdXAoZ3JvdXAgfHwgcGVybWlzc2lvbkdyb3VwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLm5vZGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcGVyc29uLCBncm91cCB9ID0gdGhpcy5ub2RlUGVybWlzc2lvblNlcnZpY2UudHJhbnNmb3JtTm9kZVRvVXNlclBlcnNvbih0aGlzLm5vZGUuZW50cnkpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVQZXJzb24ocGVyc29uKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlR3JvdXAoZ3JvdXApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB1cGRhdGVQZXJzb24ocGVyc29uOiBFY21Vc2VyTW9kZWwpIHtcbiAgICAgICAgaWYgKHBlcnNvbikge1xuICAgICAgICAgICAgdGhpcy5kaXNwbGF5VGV4dCQubmV4dChgJHtwZXJzb24uZmlyc3ROYW1lID8/ICcnfSAke3BlcnNvbi5sYXN0TmFtZSA/PyAnJ31gKTtcbiAgICAgICAgICAgIHRoaXMuc3ViVGl0bGVUZXh0JC5uZXh0KHBlcnNvbi5lbWFpbCA/PyAnJyk7XG4gICAgICAgIH1cbiAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlR3JvdXAoZ3JvdXA6IEdyb3VwKSB7XG4gICAgICAgIGlmIChncm91cCkge1xuICAgICAgICAgICAgdGhpcy5kaXNwbGF5VGV4dCQubmV4dChncm91cC5kaXNwbGF5TmFtZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=