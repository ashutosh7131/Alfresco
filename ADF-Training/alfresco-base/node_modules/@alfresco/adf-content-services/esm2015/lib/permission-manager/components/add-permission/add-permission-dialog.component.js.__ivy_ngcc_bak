/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { MemberModel } from '../../models/member.model';
export class AddPermissionDialogComponent {
    constructor(data, dialogRef) {
        this.data = data;
        this.dialogRef = dialogRef;
        this.isSearchActive = true;
        this.selectedMembers = [];
        this.existingMembers = [];
        this.currentSelection = [];
        this.existingMembers = this.data.node.permissions.locallySet || [];
    }
    onSelect(items) {
        this.currentSelection = items;
    }
    onAddClicked() {
        const selection = this.selectedMembers.filter(member => !member.readonly).map(member => member.toPermissionElement());
        this.data.confirm.next(selection);
        this.data.confirm.complete();
    }
    onSearchAddClicked() {
        const newMembers = this.currentSelection.map(item => MemberModel.parseFromSearchResult(item))
            .filter(({ id }) => !this.selectedMembers.find((member) => member.id === id));
        this.selectedMembers = this.selectedMembers.concat(newMembers);
        this.selectedMembers.forEach((member) => {
            const existingMember = this.existingMembers.find(({ authorityId }) => authorityId === member.id);
            if (!!existingMember) {
                member.role = existingMember.name;
                member.accessStatus = existingMember.accessStatus;
                member.readonly = true;
            }
        });
        this.disableSearch();
    }
    canCloseDialog() {
        if (!!this.selectedMembers.length) {
            this.disableSearch();
        }
        else {
            this.dialogRef.close();
        }
    }
    enableSearch() {
        this.isSearchActive = true;
    }
    disableSearch() {
        this.isSearchActive = false;
    }
    onBulkUpdate(role) {
        this.selectedMembers.filter(member => !member.readonly)
            .forEach(member => (member.role = role));
    }
    onMemberDelete({ id }) {
        const index = this.selectedMembers.findIndex((member) => member.id === id);
        this.selectedMembers.splice(index, 1);
        if (this.selectedMembers.length === 0) {
            this.enableSearch();
            this.currentSelection = [];
        }
    }
    onMemberUpdate(role, member) {
        const _member = this.selectedMembers.find(({ id }) => id === member.id);
        _member.role = role;
    }
    isValid() {
        return this.selectedMembers.filter(({ readonly }) => !readonly).length && this.selectedMembers.every(({ role }) => !!role);
    }
}
AddPermissionDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-add-permission-dialog',
                template: "<h2 mat-dialog-title id=\"add-permission-dialog-title\">\n    {{ (data?.title ? data?.title : \"PERMISSION_MANAGER.ADD-PERMISSION.BASE-DIALOG-TITLE\") | translate }}\n</h2>\n\n<ng-container *ngIf=\"!isSearchActive\">\n    <mat-dialog-content>\n        <button mat-button (click)=\"enableSearch()\" class=\"adf-search-user-button\">\n            {{ \"PERMISSION_MANAGER.ADD-PERMISSION.SEARCH\" | translate }}\n            <span class=\"adf-toolbar--spacer\"></span>\n            <mat-icon>search</mat-icon>\n        </button>\n\n        <div class=\"adf-new-permission-table\">\n            <adf-datatable [rows]=\"selectedMembers\"\n                           class=\"adf-datatable-permission\"\n                           selectionMode=\"none\"\n                           [stickyHeader]=\"true\"\n                           data-automation-id=\"adf-user-role-selection-table\"\n                           *ngIf=\"selectedMembers.length\">\n                <data-columns>\n                    <data-column class=\"adf-datatable-cell--image adf-authority-icon-column\" key=\"$thumbunail\" [sortable]=\"false\">\n                        <ng-template let-context>\n                            <adf-user-icon-column [context]=\"context\"></adf-user-icon-column>\n                        </ng-template>\n                    </data-column>\n\n                    <data-column class=\"adf-ellipsis-cell adf-expand-cell-5 adf-authorityId-column\"\n                                 [title]=\"'PERMISSION_MANAGER.COLUMN.NAME' | translate:{count:selectedMembers.length}\"\n                                 key=\"id\">\n                        <ng-template let-context>\n                            <adf-user-name-column [context]=\"context\"></adf-user-name-column>\n                        </ng-template>\n                    </data-column>\n\n                    <data-column class=\"adf-ellipsis-cell adf-expand-cell-4\"\n                                 title=\"PERMISSION_MANAGER.PERMISSION_DISPLAY.ROLE\"\n                                 key=\"role\">\n                        <ng-template let-entry=\"$implicit\">\n                            <adf-user-role-column [readonly]=\"entry.row.obj.readonly\"\n                                                  [value]=\"entry.data.getValue(entry.row, entry.col)\"\n                                                  [roles]=\"data.roles\"\n                                                  id=\"adf-select-role-permission\"\n                                                  (roleChanged)=\"onMemberUpdate($event, entry.row.obj)\">\n                            </adf-user-role-column>\n                        </ng-template>\n\n                        <adf-data-column-header>\n                            <ng-template>\n                                <adf-user-role-column  class=\"adf-permission-role-column-header\"\n                                                       placeholder=\"PERMISSION_MANAGER.COLUMN.BULK-ROLE\"\n                                                       [roles]=\"data.roles\"\n                                                       id=\"adf-bulk-select-role-permission\"\n                                                       (roleChanged)=\"onBulkUpdate($event)\">\n                                </adf-user-role-column>\n                            </ng-template>\n                        </adf-data-column-header>\n                    </data-column>\n\n                    <data-column class=\"adf-datatable-cell adf-delete-permission-column\" key=\"\" [sortable]=\"false\">\n                        <ng-template let-entry=\"$implicit\">\n                            <button mat-icon-button\n                                    class=\"adf-add-member-action\"\n                                    [style.display]=\"entry.row.obj.readonly ? 'none': 'block'\"\n                                    (click)=\"onMemberDelete(entry.row.obj)\"\n                                    data-automation-id=\"adf-delete-permission-button\">\n                                <mat-icon>highlight_off</mat-icon>\n                            </button>\n                        </ng-template>\n                    </data-column>\n                </data-columns>\n            </adf-datatable>\n        </div>\n\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button mat-button\n                mat-dialog-close\n                data-automation-id=\"add-permission-dialog-close-button\">\n            {{ \"PERMISSION_MANAGER.ADD-PERMISSION.CLOSE-ACTION\" | translate }}\n        </button>\n        <button mat-button\n                data-automation-id=\"add-permission-dialog-confirm-button\"\n                [mat-dialog-close]=\"true\"\n                class=\"adf-choose-action\"\n                [disabled]=\"!isValid()\"\n                (click)=\"onAddClicked()\">\n            {{ \"PERMISSION_MANAGER.ADD-PERMISSION.ADD-ACTION\" | translate }}\n        </button>\n    </mat-dialog-actions>\n</ng-container>\n\n<ng-container *ngIf=\"isSearchActive\">\n    <mat-dialog-content>\n        <adf-add-permission-panel class=\"adf-search-container\" (select)=\"onSelect($event)\"></adf-add-permission-panel>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n            <button mat-button\n                    (click)=\"canCloseDialog()\"\n                    data-automation-id=\"add-permission-dialog-close-button\">\n                {{ \"PERMISSION_MANAGER.ADD-PERMISSION.CLOSE-ACTION\" | translate }}\n            </button>\n            <button mat-button\n                    data-automation-id=\"add-permission-dialog-confirm-button\"\n                    [disabled]=\"!currentSelection.length\"\n                    (click)=\"onSearchAddClicked()\">\n                {{ \"PERMISSION_MANAGER.ADD-PERMISSION.SELECT-ACTION\" | translate }}\n            </button>\n    </mat-dialog-actions>\n</ng-container>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-add-permission-dialog .mat-dialog-title{color:var(--theme-text-bold-color);font-size:20px;font-stretch:normal;font-style:normal;font-weight:600;letter-spacing:-.5px;line-height:1.6;margin-left:24px;margin-right:24px}.adf-add-permission-dialog .mat-dialog-container{padding-left:0;padding-right:0}.adf-add-permission-dialog .mat-dialog-content{flex-grow:1;height:80vh;margin:0;overflow:hidden}.adf-add-permission-dialog .mat-dialog-content .adf-new-permission-table{height:90%}.adf-add-permission-dialog .mat-dialog-content .adf-search-container{height:100%}.adf-add-permission-dialog .mat-dialog-actions{background-color:var(--theme-background-color);color:var(--theme-foreground-text-color);display:flex;justify-content:flex-end;padding:0 24px}.adf-add-permission-dialog .mat-dialog-actions button{font-weight:400;text-transform:uppercase}.adf-add-permission-dialog .mat-dialog-actions .adf-choose-action[disabled]{color:var(--theme-secondary-text-color)}.adf-add-permission-dialog .mat-dialog-actions .adf-choose-action:enabled{color:var(--theme-primary-color)}.adf-add-permission-dialog .adf-search-user-button{width:100%}.adf-add-permission-dialog .adf-search-user-button .mat-button-wrapper{align-items:center;display:flex}.adf-add-permission-dialog .adf-add-member-action{padding:0 15px}"]
            },] }
];
AddPermissionDialogComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },
    { type: MatDialogRef }
];
//# sourceMappingURL=data:application/json;base64,