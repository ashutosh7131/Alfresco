/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { WidgetComponent, FormService, LogService } from '@alfresco/adf-core';
import { FormCloudService } from '../../../services/form-cloud.service';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '../../../services/form-cloud.service';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/radio';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '@angular/material/tooltip';
import * as ɵngcc7 from '@ngx-translate/core';

function RadioButtonsCloudWidgetComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function RadioButtonsCloudWidgetComponent_mat_radio_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-radio-button", 8);
    ɵngcc0.ɵɵlistener("change", function RadioButtonsCloudWidgetComponent_mat_radio_button_7_Template_mat_radio_button_change_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const opt_r3 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onOptionClick(opt_r3.id); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const opt_r3 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("matTooltip", ctx_r1.field.tooltip)("id", ctx_r1.field.id + "-" + opt_r3.id)("name", ctx_r1.field.id)("value", opt_r3.id)("checked", ctx_r1.isChecked(opt_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", opt_r3.name, " ");
} }
function RadioButtonsCloudWidgetComponent_error_widget_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 9);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
export class RadioButtonsCloudWidgetComponent extends WidgetComponent {
    constructor(formService, formCloudService, logService) {
        super(formService);
        this.formService = formService;
        this.formCloudService = formCloudService;
        this.logService = logService;
        this.typeId = 'RadioButtonsCloudWidgetComponent';
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        if (this.field && this.field.restUrl) {
            this.getValuesFromRestApi();
        }
    }
    getValuesFromRestApi() {
        this.formCloudService.getRestWidgetData(this.field.form.id, this.field.id)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((result) => {
            this.field.options = result;
            this.field.updateForm();
        }, (err) => this.handleError(err));
    }
    onOptionClick(optionSelected) {
        this.field.value = optionSelected;
        this.fieldChanged.emit(this.field);
    }
    handleError(error) {
        this.logService.error(error);
    }
    isChecked(option) {
        var _a, _b;
        if (this.field.value && typeof this.field.value === 'object') {
            let id = 'id';
            let name = 'name';
            if (this.field.restUrl) {
                id = (_a = this.field.restIdProperty) !== null && _a !== void 0 ? _a : 'id';
                name = (_b = this.field.restLabelProperty) !== null && _b !== void 0 ? _b : 'name';
            }
            return this.field.value[id] === option.id || this.field.value[name] === option.name;
        }
        return this.field.value === option.id;
    }
}
RadioButtonsCloudWidgetComponent.ɵfac = function RadioButtonsCloudWidgetComponent_Factory(t) { return new (t || RadioButtonsCloudWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormCloudService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LogService)); };
RadioButtonsCloudWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadioButtonsCloudWidgetComponent, selectors: [["radio-buttons-cloud-widget"]], hostBindings: function RadioButtonsCloudWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function RadioButtonsCloudWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function RadioButtonsCloudWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function RadioButtonsCloudWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function RadioButtonsCloudWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function RadioButtonsCloudWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function RadioButtonsCloudWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function RadioButtonsCloudWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function RadioButtonsCloudWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function RadioButtonsCloudWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 18, consts: [[3, "id"], [1, "adf-radio-button-container"], [1, "adf-label"], [4, "ngIf"], [1, "adf-radio-group", 3, "ngModel", "disabled", "ngModelChange"], ["matTooltipPosition", "above", "matTooltipShowDelay", "1000", "color", "primary", "class", "adf-radio-button", 3, "matTooltip", "id", "name", "value", "checked", "change", 4, "ngFor", "ngForOf"], [3, "error"], [3, "required", 4, "ngIf"], ["matTooltipPosition", "above", "matTooltipShowDelay", "1000", "color", "primary", 1, "adf-radio-button", 3, "matTooltip", "id", "name", "value", "checked", "change"], [3, "required"]], template: function RadioButtonsCloudWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "label", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, RadioButtonsCloudWidgetComponent_span_5_Template, 2, 0, "span", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "mat-radio-group", 4);
        ɵngcc0.ɵɵlistener("ngModelChange", function RadioButtonsCloudWidgetComponent_Template_mat_radio_group_ngModelChange_6_listener($event) { return ctx.field.value = $event; });
        ɵngcc0.ɵɵtemplate(7, RadioButtonsCloudWidgetComponent_mat_radio_button_7_Template, 2, 6, "mat-radio-button", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(8, "error-widget", 6);
        ɵngcc0.ɵɵtemplate(9, RadioButtonsCloudWidgetComponent_error_widget_9_Template, 2, 3, "error-widget", 7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adf-radio-buttons-widget-cloud ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵproperty("id", ctx.field.id);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 16, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngModel", ctx.field.value)("disabled", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.field.options);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.MatRadioGroup, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc3.NgForOf, ɵngcc1.ErrorWidgetComponent, ɵngcc4.MatRadioButton, ɵngcc6.MatTooltip], pipes: [ɵngcc7.TranslatePipe], styles: [".adf-radio-button-container{display:flex;flex-direction:column;margin-bottom:15px}.adf-radio-group{display:inline-flex;flex-direction:column;margin-left:5px;margin-top:15px}.adf-radio-button{margin:5px}"], encapsulation: 2 });
RadioButtonsCloudWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: FormCloudService },
    { type: LogService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioButtonsCloudWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'radio-buttons-cloud-widget',
                template: "<div class=\"adf-radio-buttons-widget-cloud {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\" [id]=\"field.id\">\n    <div class=\"adf-radio-button-container\">\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <mat-radio-group class=\"adf-radio-group\" [(ngModel)]=\"field.value\" [disabled]=\"field.readOnly\">\n            <mat-radio-button\n                [matTooltip]=\"field.tooltip\"\n                matTooltipPosition=\"above\"\n                matTooltipShowDelay=\"1000\"\n                [id]=\"field.id + '-' + opt.id\"\n                [name]=\"field.id\"\n                [value]=\"opt.id\"\n                [checked]=\"isChecked(opt)\"\n                (change)=\"onOptionClick(opt.id)\"\n                color=\"primary\"\n                class=\"adf-radio-button\" *ngFor=\"let opt of field.options\" >\n                {{opt.name}}\n            </mat-radio-button>\n        </mat-radio-group>\n    </div>\n    <error-widget [error]=\"field.validationSummary\" ></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-radio-button-container{display:flex;flex-direction:column;margin-bottom:15px}.adf-radio-group{display:inline-flex;flex-direction:column;margin-left:5px;margin-top:15px}.adf-radio-button{margin:5px}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc2.FormCloudService }, { type: ɵngcc1.LogService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,