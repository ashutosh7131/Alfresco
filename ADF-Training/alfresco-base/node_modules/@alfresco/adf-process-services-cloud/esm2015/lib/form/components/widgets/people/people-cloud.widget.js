/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { WidgetComponent, FormService } from '@alfresco/adf-core';
import { FormControl } from '@angular/forms';
import { filter, takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../../people/components/people-cloud.component';
import * as ɵngcc4 from '@angular/material/tooltip';
import * as ɵngcc5 from '@ngx-translate/core';

function PeopleCloudWidgetComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
export class PeopleCloudWidgetComponent extends WidgetComponent {
    constructor(formService) {
        super(formService);
        this.onDestroy$ = new Subject();
        this.typeId = 'PeopleCloudWidgetComponent';
    }
    ngOnInit() {
        if (this.field) {
            this.roles = this.field.roles;
            this.mode = this.field.optionType;
            this.title = this.field.placeholder;
            this.preSelectUsers = this.field.value ? this.field.value : [];
        }
        this.search = new FormControl({ value: '', disabled: this.field.readOnly }, []),
            this.search.statusChanges
                .pipe(filter((value) => {
                return value === 'INVALID';
            }), takeUntil(this.onDestroy$))
                .subscribe(() => {
                this.field.markAsInvalid();
                this.field.form.markAsInvalid();
            });
        this.search.statusChanges
            .pipe(filter((value) => {
            return value === 'VALID';
        }), takeUntil(this.onDestroy$))
            .subscribe(() => {
            this.field.validate();
            this.field.form.validateForm();
        });
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    onChangedUser(users) {
        this.field.value = [...users];
        this.onFieldChanged(this.field);
    }
    isMultipleMode() {
        return this.mode === 'multiple';
    }
}
PeopleCloudWidgetComponent.ɵfac = function PeopleCloudWidgetComponent_Factory(t) { return new (t || PeopleCloudWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService)); };
PeopleCloudWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PeopleCloudWidgetComponent, selectors: [["people-cloud-widget"]], hostBindings: function PeopleCloudWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function PeopleCloudWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function PeopleCloudWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function PeopleCloudWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function PeopleCloudWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function PeopleCloudWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function PeopleCloudWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function PeopleCloudWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function PeopleCloudWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function PeopleCloudWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 22, consts: [[1, "adf-label"], [4, "ngIf"], ["matTooltipPosition", "above", "matTooltipShowDelay", "1000", 3, "preSelectUsers", "validate", "appName", "title", "readOnly", "searchUserCtrl", "roles", "mode", "matTooltip", "changedUsers"], [3, "error"]], template: function PeopleCloudWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "label", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, PeopleCloudWidgetComponent_span_4_Template, 2, 0, "span", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "adf-cloud-people", 2);
        ɵngcc0.ɵɵlistener("changedUsers", function PeopleCloudWidgetComponent_Template_adf_cloud_people_changedUsers_5_listener($event) { return ctx.onChangedUser($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "error-widget", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adf-dropdown-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 20, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("preSelectUsers", ctx.preSelectUsers)("validate", true)("appName", ctx.appName)("title", ctx.title)("readOnly", ctx.field.readOnly)("searchUserCtrl", ctx.search)("roles", ctx.roles)("mode", ctx.mode)("matTooltip", ctx.field.tooltip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.PeopleCloudComponent, ɵngcc4.MatTooltip, ɵngcc1.ErrorWidgetComponent], pipes: [ɵngcc5.TranslatePipe], encapsulation: 2 });
PeopleCloudWidgetComponent.ctorParameters = () => [
    { type: FormService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PeopleCloudWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'people-cloud-widget',
                template: "<div class=\"adf-dropdown-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <adf-cloud-people\n            [preSelectUsers]=\"preSelectUsers\"\n            [validate]=\"true\"\n            [appName]=\"appName\"\n            [title]=\"title\"\n            [readOnly]=\"field.readOnly\"\n            [searchUserCtrl]=\"search\"\n            (changedUsers)=\"onChangedUser($event)\"\n            [roles]=\"roles\"\n            [mode]=\"mode\"\n            [matTooltip]=\"field.tooltip\"\n            matTooltipPosition=\"above\"\n            matTooltipShowDelay=\"1000\">\n        </adf-cloud-people>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n</div>\n\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.FormService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,