/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class FormCloudRepresentation {
    constructor(obj) {
        this.id = obj.id || null;
        this.name = obj.name || null;
        this.description = obj.description || null;
        this.version = obj.version || null;
        this.tabs = obj.tabs || null;
        this.fields = obj.fields || null;
        this.outcomes = obj.outcomes || null;
        this.metadata = obj.metadata || null;
        this.variables = obj.variables || null;
        this.taskId = obj.taskId || null;
        this.taskName = obj.taskName || null;
        this.processDefinitionId = obj.processDefinitionId || null;
        this.processInstanceId = obj.processInstanceId || null;
        this.selectedOutcome = obj.selectedOutcome || null;
    }
}
export var FileSourceTypes;
(function (FileSourceTypes) {
    FileSourceTypes["ALL_FILE_SOURCES_SERVICE_ID"] = "all-file-sources";
    FileSourceTypes["ALFRESCO_CONTENT_SOURCES_SERVICE_ID"] = "alfresco-content";
})(FileSourceTypes || (FileSourceTypes = {}));
export var DestinationFolderPathType;
(function (DestinationFolderPathType) {
    DestinationFolderPathType["STATIC_TYPE"] = "value";
    DestinationFolderPathType["STRING_TYPE"] = "string";
    DestinationFolderPathType["FOLDER_TYPE"] = "folder";
})(DestinationFolderPathType || (DestinationFolderPathType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1jbG91ZC1yZXByZXNlbnRhdGlvbi5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvc3JjLyIsInNvdXJjZXMiOlsibGliL2Zvcm0vbW9kZWxzL2Zvcm0tY2xvdWQtcmVwcmVzZW50YXRpb24ubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsTUFBTSxPQUFPLHVCQUF1QjtJQWlCaEMsWUFBWSxHQUFTO1FBQ2pCLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDO1FBQzNDLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUM7UUFDbkMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7UUFDckMsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUNyQyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUM7UUFDakMsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUNyQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsR0FBRyxDQUFDLG1CQUFtQixJQUFJLElBQUksQ0FBQztRQUMzRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsR0FBRyxDQUFDLGlCQUFpQixJQUFJLElBQUksQ0FBQztRQUN2RCxJQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsQ0FBQyxlQUFlLElBQUksSUFBSSxDQUFDO0lBQ3ZELENBQUM7Q0FDSjtBQU9ELE1BQU0sQ0FBTixJQUFZLGVBR1g7QUFIRCxXQUFZLGVBQWU7SUFDdkIsbUVBQWdELENBQUE7SUFDaEQsMkVBQXdELENBQUE7QUFDNUQsQ0FBQyxFQUhXLGVBQWUsS0FBZixlQUFlLFFBRzFCO0FBRUQsTUFBTSxDQUFOLElBQVkseUJBSVg7QUFKRCxXQUFZLHlCQUF5QjtJQUNqQyxrREFBcUIsQ0FBQTtJQUNyQixtREFBc0IsQ0FBQTtJQUN0QixtREFBc0IsQ0FBQTtBQUMxQixDQUFDLEVBSlcseUJBQXlCLEtBQXpCLHlCQUF5QixRQUlwQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCBjbGFzcyBGb3JtQ2xvdWRSZXByZXNlbnRhdGlvbiB7XG5cbiAgICBpZD86IHN0cmluZztcbiAgICBuYW1lPzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAgIHZlcnNpb24/OiBudW1iZXI7XG4gICAgdGFicz86IGFueVtdO1xuICAgIGZpZWxkcz86IGFueVtdO1xuICAgIG91dGNvbWVzPzogYW55W107XG4gICAgbWV0YWRhdGE/OiBhbnk7XG4gICAgdmFyaWFibGVzPzogYW55W107XG4gICAgdGFza0lkPzogc3RyaW5nO1xuICAgIHRhc2tOYW1lPzogc3RyaW5nO1xuICAgIHByb2Nlc3NEZWZpbml0aW9uSWQ/OiBzdHJpbmc7XG4gICAgcHJvY2Vzc0luc3RhbmNlSWQ/OiBzdHJpbmc7XG4gICAgc2VsZWN0ZWRPdXRjb21lPzogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIHRoaXMuaWQgPSBvYmouaWQgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5uYW1lID0gb2JqLm5hbWUgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IG9iai5kZXNjcmlwdGlvbiB8fCBudWxsO1xuICAgICAgICB0aGlzLnZlcnNpb24gPSBvYmoudmVyc2lvbiB8fCBudWxsO1xuICAgICAgICB0aGlzLnRhYnMgPSBvYmoudGFicyB8fCBudWxsO1xuICAgICAgICB0aGlzLmZpZWxkcyA9IG9iai5maWVsZHMgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5vdXRjb21lcyA9IG9iai5vdXRjb21lcyB8fCBudWxsO1xuICAgICAgICB0aGlzLm1ldGFkYXRhID0gb2JqLm1ldGFkYXRhIHx8IG51bGw7XG4gICAgICAgIHRoaXMudmFyaWFibGVzID0gb2JqLnZhcmlhYmxlcyB8fCBudWxsO1xuICAgICAgICB0aGlzLnRhc2tJZCA9IG9iai50YXNrSWQgfHwgbnVsbDtcbiAgICAgICAgdGhpcy50YXNrTmFtZSA9IG9iai50YXNrTmFtZSB8fCBudWxsO1xuICAgICAgICB0aGlzLnByb2Nlc3NEZWZpbml0aW9uSWQgPSBvYmoucHJvY2Vzc0RlZmluaXRpb25JZCB8fCBudWxsO1xuICAgICAgICB0aGlzLnByb2Nlc3NJbnN0YW5jZUlkID0gb2JqLnByb2Nlc3NJbnN0YW5jZUlkIHx8IG51bGw7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRPdXRjb21lID0gb2JqLnNlbGVjdGVkT3V0Y29tZSB8fCBudWxsO1xuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBEZXN0aW5hdGlvbkZvbGRlclBhdGhNb2RlbCB7XG4gICAgYWxpYXM6IHN0cmluZztcbiAgICBwYXRoOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBlbnVtIEZpbGVTb3VyY2VUeXBlcyB7XG4gICAgQUxMX0ZJTEVfU09VUkNFU19TRVJWSUNFX0lEID0gJ2FsbC1maWxlLXNvdXJjZXMnLFxuICAgIEFMRlJFU0NPX0NPTlRFTlRfU09VUkNFU19TRVJWSUNFX0lEID0gJ2FsZnJlc2NvLWNvbnRlbnQnXG59XG5cbmV4cG9ydCBlbnVtIERlc3RpbmF0aW9uRm9sZGVyUGF0aFR5cGUge1xuICAgIFNUQVRJQ19UWVBFID0gJ3ZhbHVlJyxcbiAgICBTVFJJTkdfVFlQRSA9ICdzdHJpbmcnLFxuICAgIEZPTERFUl9UWVBFID0gJ2ZvbGRlcidcbn1cbiJdfQ==