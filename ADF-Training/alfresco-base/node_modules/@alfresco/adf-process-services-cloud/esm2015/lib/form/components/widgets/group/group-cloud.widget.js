/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { WidgetComponent, FormService } from '@alfresco/adf-core';
import { FormControl } from '@angular/forms';
import { filter, takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../../group/components/group-cloud.component';
import * as ɵngcc4 from '@angular/material/tooltip';
import * as ɵngcc5 from '@ngx-translate/core';

function GroupCloudWidgetComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function GroupCloudWidgetComponent_error_widget_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 5);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
export class GroupCloudWidgetComponent extends WidgetComponent {
    constructor(formService) {
        super(formService);
        this.onDestroy$ = new Subject();
        this.typeId = 'GroupCloudWidgetComponent';
    }
    ngOnInit() {
        if (this.field) {
            this.roles = this.field.roles;
            this.mode = this.field.optionType;
            this.title = this.field.placeholder;
            this.preSelectGroup = this.field.value ? this.field.value : [];
        }
        this.search = new FormControl({ value: '', disabled: this.field.readOnly }, []),
            this.search.statusChanges
                .pipe(filter((value) => {
                return value === 'INVALID';
            }), takeUntil(this.onDestroy$))
                .subscribe(() => {
                this.field.markAsInvalid();
                this.field.form.markAsInvalid();
            });
        this.search.statusChanges
            .pipe(filter((value) => {
            return value === 'VALID';
        }), takeUntil(this.onDestroy$))
            .subscribe(() => {
            this.field.validate();
            this.field.form.validateForm();
        });
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    onChangedGroup(groups) {
        this.field.value = [...groups];
        this.onFieldChanged(this.field);
    }
    isMultipleMode() {
        return this.mode === 'multiple';
    }
}
GroupCloudWidgetComponent.ɵfac = function GroupCloudWidgetComponent_Factory(t) { return new (t || GroupCloudWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService)); };
GroupCloudWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GroupCloudWidgetComponent, selectors: [["group-cloud-widget"]], hostBindings: function GroupCloudWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function GroupCloudWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function GroupCloudWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function GroupCloudWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function GroupCloudWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function GroupCloudWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function GroupCloudWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function GroupCloudWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function GroupCloudWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function GroupCloudWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 8, vars: 23, consts: [[1, "adf-label"], [4, "ngIf"], [3, "mode", "title", "readOnly", "roles", "searchGroupsControl", "preSelectGroups", "matTooltip", "matTooltipPosition", "matTooltipShowDelay", "changedGroups"], [3, "error"], ["class", "adf-dropdown-required-message", 3, "required", 4, "ngIf"], [1, "adf-dropdown-required-message", 3, "required"]], template: function GroupCloudWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "label", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, GroupCloudWidgetComponent_span_4_Template, 2, 0, "span", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "adf-cloud-group", 2);
        ɵngcc0.ɵɵlistener("changedGroups", function GroupCloudWidgetComponent_Template_adf_cloud_group_changedGroups_5_listener($event) { return ctx.onChangedGroup($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "error-widget", 3);
        ɵngcc0.ɵɵtemplate(7, GroupCloudWidgetComponent_error_widget_7_Template, 2, 3, "error-widget", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adf-dropdown-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 21, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("mode", ctx.mode)("title", ctx.title)("readOnly", ctx.field.readOnly)("roles", ctx.roles)("searchGroupsControl", ctx.search)("preSelectGroups", ctx.preSelectGroup)("matTooltip", ctx.field.tooltip)("matTooltipPosition", "above")("matTooltipShowDelay", 1000);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.GroupCloudComponent, ɵngcc4.MatTooltip, ɵngcc1.ErrorWidgetComponent], pipes: [ɵngcc5.TranslatePipe], encapsulation: 2 });
GroupCloudWidgetComponent.ctorParameters = () => [
    { type: FormService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GroupCloudWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'group-cloud-widget',
                template: "<div class=\"adf-dropdown-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span\n        *ngIf=\"isRequired()\">*</span></label>\n        <adf-cloud-group [mode]=\"mode\"\n                         [title]=\"title\"\n                         [readOnly]=\"field.readOnly\"\n                         [roles]=\"roles\"\n                         [searchGroupsControl]=\"search\"\n                         (changedGroups)=\"onChangedGroup($event)\"\n                         [preSelectGroups]=\"preSelectGroup\"\n                         [matTooltip]=\"field.tooltip\"\n                         [matTooltipPosition]=\"'above'\"\n                         [matTooltipShowDelay]=\"1000\">\n        </adf-cloud-group>\n        <error-widget [error]=\"field.validationSummary\"></error-widget>\n        <error-widget class=\"adf-dropdown-required-message\" *ngIf=\"isInvalidFieldRequired()\"\n                  required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.FormService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,