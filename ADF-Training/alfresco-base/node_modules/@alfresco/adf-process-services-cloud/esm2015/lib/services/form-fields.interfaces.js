/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export var PeopleModeOptions;
(function (PeopleModeOptions) {
    PeopleModeOptions["single"] = "single";
    PeopleModeOptions["multiple"] = "multiple";
})(PeopleModeOptions || (PeopleModeOptions = {}));
export var FormFieldType;
(function (FormFieldType) {
    FormFieldType["text"] = "text";
    FormFieldType["multiline"] = "multi-line-text";
    FormFieldType["number"] = "integer";
    FormFieldType["checkbox"] = "boolean";
    FormFieldType["date"] = "date";
    FormFieldType["datetime"] = "datetime";
    FormFieldType["dropdown"] = "dropdown";
    FormFieldType["typeahead"] = "typeahead";
    FormFieldType["amount"] = "amount";
    FormFieldType["radio"] = "radio-buttons";
    FormFieldType["people"] = "people";
    FormFieldType["groupOfPeople"] = "functional-group";
    FormFieldType["dynamicTable"] = "dynamicTable";
    FormFieldType["hyperlink"] = "hyperlink";
    FormFieldType["header"] = "group";
    FormFieldType["uploadFile"] = "upload";
    FormFieldType["uploadFolder"] = "uploadFolder";
    FormFieldType["displayValue"] = "readonly";
    FormFieldType["displayText"] = "readonly-text";
    FormFieldType["fileViewer"] = "file-viewer";
})(FormFieldType || (FormFieldType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZHMuaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvc3JjLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2Zvcm0tZmllbGRzLmludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBMkxILE1BQU0sQ0FBTixJQUFZLGlCQUdYO0FBSEQsV0FBWSxpQkFBaUI7SUFDekIsc0NBQWlCLENBQUE7SUFDakIsMENBQXFCLENBQUE7QUFDekIsQ0FBQyxFQUhXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFHNUI7QUFPRCxNQUFNLENBQU4sSUFBWSxhQXFCWDtBQXJCRCxXQUFZLGFBQWE7SUFDckIsOEJBQWEsQ0FBQTtJQUNiLDhDQUE2QixDQUFBO0lBQzdCLG1DQUFrQixDQUFBO0lBQ2xCLHFDQUFvQixDQUFBO0lBQ3BCLDhCQUFhLENBQUE7SUFDYixzQ0FBcUIsQ0FBQTtJQUNyQixzQ0FBcUIsQ0FBQTtJQUNyQix3Q0FBdUIsQ0FBQTtJQUN2QixrQ0FBaUIsQ0FBQTtJQUNqQix3Q0FBdUIsQ0FBQTtJQUN2QixrQ0FBaUIsQ0FBQTtJQUNqQixtREFBa0MsQ0FBQTtJQUNsQyw4Q0FBNkIsQ0FBQTtJQUM3Qix3Q0FBdUIsQ0FBQTtJQUN2QixpQ0FBZ0IsQ0FBQTtJQUNoQixzQ0FBcUIsQ0FBQTtJQUNyQiw4Q0FBNkIsQ0FBQTtJQUM3QiwwQ0FBeUIsQ0FBQTtJQUN6Qiw4Q0FBNkIsQ0FBQTtJQUM3QiwyQ0FBMEIsQ0FBQTtBQUM5QixDQUFDLEVBckJXLGFBQWEsS0FBYixhQUFhLFFBcUJ4QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IE1vbWVudCB9IGZyb20gJ21vbWVudCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybUNvbnRlbnQge1xuICAgIGZvcm1SZXByZXNlbnRhdGlvbjogRm9ybVJlcHJlc2VudGF0aW9uO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1SZXByZXNlbnRhdGlvbiB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICB2ZXJzaW9uPzogbnVtYmVyO1xuICAgIGZvcm1EZWZpbml0aW9uPzogRm9ybURlZmluaXRpb247XG4gICAgc3RhbmRBbG9uZT86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybVRhYiB7XG4gICAgaWQ6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIHZpc2liaWxpdHlDb25kaXRpb246IFZpc2liaWxpdHlDb25kaXRpb24gfCBudWxsO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1PdXRjb21lIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGb3JtRGVmaW5pdGlvbiB7XG4gICAgdGFiczogRm9ybVRhYltdO1xuICAgIGZpZWxkczogQ29udGFpbmVyW10gfCBIZWFkZXJSZXByZXNlbnRhdGlvbltdO1xuICAgIG91dGNvbWVzOiBGb3JtT3V0Y29tZVtdO1xuICAgIG1ldGFkYXRhOiB7fTtcbiAgICB2YXJpYWJsZXM6IGFueVtdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbnRhaW5lciB7XG4gICAgaWQ6IHN0cmluZztcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgdGFiOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIG51bWJlck9mQ29sdW1uczogbnVtYmVyO1xuICAgIGZpZWxkczoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBGb3JtRmllbGRSZXByZXNlbnRhdGlvbltdXG4gICAgfTtcbn1cblxuZXhwb3J0IHR5cGUgRm9ybUZpZWxkUmVwcmVzZW50YXRpb24gPSAoRGF0ZUZpZWxkIHwgRGF0ZVRpbWVGaWVsZCB8IFRleHRGaWVsZCB8IEF0dGFjaEZpbGVGaWVsZCB8IERyb3BEb3duRmllbGQgfFxuICAgIFJhZGlvRmllbGQgfCBUeXBlYWhlYWRGaWVsZCB8IFBlb3BsZUZpZWxkIHwgQW1vdW50RmllbGQgfCBOdW1iZXJGaWVsZCB8IENoZWNrYm94RmllbGQgfCBIeXBlcmxpbmtGaWVsZCApO1xuXG5leHBvcnQgaW50ZXJmYWNlIEF0dGFjaEZpbGVGaWVsZCBleHRlbmRzIEZvcm1GaWVsZCB7XG4gICAgcmVxdWlyZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHlwZWFoZWFkRmllbGQgZXh0ZW5kcyBSZXN0RmllbGQge1xuICAgIHJlcXVpcmVkOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc3RGaWVsZCBleHRlbmRzIEZvcm1GaWVsZCB7XG4gICAgcmVxdWlyZWQ6IGJvb2xlYW47XG4gICAgcmVzdFVybDogc3RyaW5nO1xuICAgIHJlc3RSZXNwb25zZVBhdGg6IHN0cmluZztcbiAgICByZXN0SWRQcm9wZXJ0eTogc3RyaW5nO1xuICAgIHJlc3RMYWJlbFByb3BlcnR5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSGVhZGVyUmVwcmVzZW50YXRpb24gZXh0ZW5kcyBDb250YWluZXIge1xuICAgIG51bWJlck9mQ29sdW1uczogbnVtYmVyO1xuICAgIHBhcmFtczoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnlcbiAgICB9O1xuICAgIHZpc2liaWxpdHlDb25kaXRpb246IFZpc2liaWxpdHlDb25kaXRpb247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29sdW1uRGVmaW5pdGlvblJlcHJlc2VudGF0aW9uIGV4dGVuZHMgQ29udGFpbmVyIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgdmFsdWU6IGFueTtcbiAgICByZXF1aXJlZDogYm9vbGVhbjtcbiAgICBlZGl0YWJsZTogYm9vbGVhbjtcbiAgICBzb3J0YWJsZTogYm9vbGVhbjtcbiAgICB2aXNpYmxlOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNUYWJsZVJlcHJlc2VudGF0aW9uIGV4dGVuZHMgRm9ybUZpZWxkIHtcbiAgICByZXF1aXJlZDogYm9vbGVhbjtcbiAgICB0YWI6IHN0cmluZztcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIGNvbHVtbkRlZmluaXRpb25zOiBDb2x1bW5EZWZpbml0aW9uUmVwcmVzZW50YXRpb25bXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBWaXNpYmlsaXR5Q29uZGl0aW9uIHtcbiAgICBsZWZ0VHlwZTogc3RyaW5nO1xuICAgIGxlZnRWYWx1ZTogc3RyaW5nO1xuICAgIG9wZXJhdG9yOiBzdHJpbmc7XG4gICAgcmlnaHRWYWx1ZTogc3RyaW5nIHwgbnVtYmVyIHwgRGF0ZSB8IE1vbWVudDtcbiAgICByaWdodFR5cGU6IHN0cmluZztcbiAgICBuZXh0Q29uZGl0aW9uT3BlcmF0b3I/OiBzdHJpbmc7XG4gICAgbmV4dENvbmRpdGlvbj86IFZpc2liaWxpdHlDb25kaXRpb247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybUZpZWxkIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICB2YWx1ZTogYW55O1xuICAgIHR5cGU6IEZvcm1GaWVsZFR5cGUgfCBzdHJpbmc7XG4gICAgcmVhZE9ubHk/OiBib29sZWFuO1xuICAgIGNvbHNwYW46IG51bWJlcjtcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgW2FueUtleTogc3RyaW5nXTogYW55XG4gICAgfTtcbiAgICB2aXNpYmlsaXR5Q29uZGl0aW9uOiBudWxsIHwgVmlzaWJpbGl0eUNvbmRpdGlvbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGb3JtT3B0aW9uIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBPcHRpb25zRmllbGQge1xuICAgIHZhbHVlOiBhbnk7XG4gICAgcmVzdFVybDogc3RyaW5nIHwgbnVsbDtcbiAgICByZXN0UmVzcG9uc2VQYXRoOiBzdHJpbmcgfCBudWxsO1xuICAgIHJlc3RJZFByb3BlcnR5OiBzdHJpbmcgfCBudWxsO1xuICAgIHJlc3RMYWJlbFByb3BlcnR5OiBzdHJpbmcgfCBudWxsO1xuICAgIG9wdGlvblR5cGU6ICdtYW51YWwnIHwgJ3Jlc3QnO1xuICAgIG9wdGlvbnM6IEZvcm1PcHRpb25bXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBbW91bnRGaWVsZCBleHRlbmRzIEZvcm1GaWVsZCB7XG4gICAgcmVxdWlyZWQ6IGJvb2xlYW47XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZyB8IG51bGw7XG4gICAgbWluVmFsdWU6IG51bWJlciB8IG51bGw7XG4gICAgbWF4VmFsdWU6IG51bWJlciB8IG51bGw7XG4gICAgZW5hYmxlRnJhY3Rpb25zOiBib29sZWFuO1xuICAgIGN1cnJlbmN5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hlY2tib3hGaWVsZCBleHRlbmRzIEZvcm1GaWVsZCB7XG4gICAgcmVxdWlyZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0ZUZpZWxkIGV4dGVuZHMgRm9ybUZpZWxkIHtcbiAgICByZXF1aXJlZDogYm9vbGVhbjtcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nIHwgbnVsbDtcbiAgICBtaW5WYWx1ZTogc3RyaW5nIHwgbnVsbDtcbiAgICBtYXhWYWx1ZTogc3RyaW5nIHwgbnVsbDtcbiAgICBkYXRlRGlzcGxheUZvcm1hdDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERhdGVUaW1lRmllbGQgZXh0ZW5kcyBGb3JtRmllbGQge1xuICAgIHJlcXVpcmVkOiBib29sZWFuO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmcgfCBudWxsO1xuICAgIG1pblZhbHVlOiBzdHJpbmcgfCBudWxsO1xuICAgIG1heFZhbHVlOiBzdHJpbmcgfCBudWxsO1xuICAgIGRhdGVEaXNwbGF5Rm9ybWF0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHJvcERvd25GaWVsZCBleHRlbmRzIE9wdGlvbnNGaWVsZCwgRm9ybUZpZWxkIHtcbiAgICByZXF1aXJlZDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBIeXBlcmxpbmtGaWVsZCBleHRlbmRzIEZvcm1GaWVsZCB7XG4gICAgaHlwZXJsaW5rVXJsOiBzdHJpbmcgfCBudWxsO1xuICAgIGRpc3BsYXlUZXh0OiBzdHJpbmcgfCBudWxsO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE51bWJlckZpZWxkIGV4dGVuZHMgRm9ybUZpZWxkIHtcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nIHwgbnVsbDtcbiAgICBtaW5WYWx1ZTogbnVtYmVyIHwgbnVsbDtcbiAgICBtYXhWYWx1ZTogbnVtYmVyIHwgbnVsbDtcbiAgICByZXF1aXJlZDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSYWRpb0ZpZWxkIGV4dGVuZHMgT3B0aW9uc0ZpZWxkLCBGb3JtRmllbGQge1xuICAgIHJlcXVpcmVkOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRleHRGaWVsZCBleHRlbmRzIEZvcm1GaWVsZCB7XG4gICAgcmVnZXhQYXR0ZXJuOiBzdHJpbmcgfCBudWxsO1xuICAgIHJlcXVpcmVkOiBib29sZWFuO1xuICAgIG1pbkxlbmd0aDogbnVtYmVyO1xuICAgIG1heExlbmd0aDogbnVtYmVyO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmcgfCBudWxsO1xufVxuXG5leHBvcnQgZW51bSBQZW9wbGVNb2RlT3B0aW9ucyB7XG4gICAgc2luZ2xlID0gJ3NpbmdsZScsXG4gICAgbXVsdGlwbGUgPSAnbXVsdGlwbGUnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGVvcGxlRmllbGQgZXh0ZW5kcyBGb3JtRmllbGQge1xuICAgIHJlcXVpcmVkOiBib29sZWFuO1xuICAgIG9wdGlvblR5cGU6IFBlb3BsZU1vZGVPcHRpb25zO1xufVxuXG5leHBvcnQgZW51bSBGb3JtRmllbGRUeXBlIHtcbiAgICB0ZXh0ID0gJ3RleHQnLFxuICAgIG11bHRpbGluZSA9ICdtdWx0aS1saW5lLXRleHQnLFxuICAgIG51bWJlciA9ICdpbnRlZ2VyJyxcbiAgICBjaGVja2JveCA9ICdib29sZWFuJyxcbiAgICBkYXRlID0gJ2RhdGUnLFxuICAgIGRhdGV0aW1lID0gJ2RhdGV0aW1lJyxcbiAgICBkcm9wZG93biA9ICdkcm9wZG93bicsXG4gICAgdHlwZWFoZWFkID0gJ3R5cGVhaGVhZCcsXG4gICAgYW1vdW50ID0gJ2Ftb3VudCcsXG4gICAgcmFkaW8gPSAncmFkaW8tYnV0dG9ucycsXG4gICAgcGVvcGxlID0gJ3Blb3BsZScsXG4gICAgZ3JvdXBPZlBlb3BsZSA9ICdmdW5jdGlvbmFsLWdyb3VwJyxcbiAgICBkeW5hbWljVGFibGUgPSAnZHluYW1pY1RhYmxlJyxcbiAgICBoeXBlcmxpbmsgPSAnaHlwZXJsaW5rJyxcbiAgICBoZWFkZXIgPSAnZ3JvdXAnLFxuICAgIHVwbG9hZEZpbGUgPSAndXBsb2FkJyxcbiAgICB1cGxvYWRGb2xkZXIgPSAndXBsb2FkRm9sZGVyJyxcbiAgICBkaXNwbGF5VmFsdWUgPSAncmVhZG9ubHknLFxuICAgIGRpc3BsYXlUZXh0ID0gJ3JlYWRvbmx5LXRleHQnLFxuICAgIGZpbGVWaWV3ZXIgPSAnZmlsZS12aWV3ZXInXG59XG4iXX0=