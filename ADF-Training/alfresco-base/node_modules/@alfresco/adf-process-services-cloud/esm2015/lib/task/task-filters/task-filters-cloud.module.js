/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { FlexLayoutModule } from '@angular/flex-layout';
import { TaskFiltersCloudComponent } from './components/task-filters-cloud.component';
import { MaterialModule } from '../../material.module';
import { CoreModule, MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';
import { HttpClientModule } from '@angular/common/http';
import { AppListCloudModule } from './../../app/app-list-cloud.module';
import { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';
import { ProcessCommonModule } from '../../common/process-common.module';
import { PeopleCloudModule } from '../../people/people-cloud.module';
import { EditServiceTaskFilterCloudComponent } from './components/edit-task-filters/edit-service-task-filter-cloud.component';
import { EditTaskFilterCloudComponent } from './components/edit-task-filters/edit-task-filter-cloud.component';
import { TaskFilterDialogCloudComponent } from './components/task-filter-dialog/task-filter-dialog-cloud.component';
import { ServiceTaskFiltersCloudComponent } from './components/service-task-filters-cloud.component';
import { TaskAssignmentFilterCloudComponent } from './components/task-assignment-filter/task-assignment-filter.component';
import { GroupCloudModule } from '../../group/group-cloud.module';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = MOMENT_DATE_FORMATS;
export class TaskFiltersCloudModule {
}
TaskFiltersCloudModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TaskFiltersCloudModule });
TaskFiltersCloudModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TaskFiltersCloudModule_Factory(t) { return new (t || TaskFiltersCloudModule)(); }, providers: [
        { provide: DateAdapter, useClass: MomentDateAdapter },
        { provide: MAT_DATE_FORMATS, useValue: ɵ0 }
    ], imports: [[
            FormsModule,
            ReactiveFormsModule,
            HttpClientModule,
            CommonModule,
            FlexLayoutModule,
            MaterialModule,
            AppListCloudModule,
            CoreModule,
            GroupCloudModule,
            ProcessCommonModule,
            PeopleCloudModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TaskFiltersCloudModule, { declarations: function () { return [TaskFiltersCloudComponent,
        ServiceTaskFiltersCloudComponent,
        EditTaskFilterCloudComponent,
        EditServiceTaskFilterCloudComponent,
        TaskFilterDialogCloudComponent,
        TaskAssignmentFilterCloudComponent]; }, imports: function () { return [FormsModule,
        ReactiveFormsModule,
        HttpClientModule,
        CommonModule,
        FlexLayoutModule,
        MaterialModule,
        AppListCloudModule,
        CoreModule,
        GroupCloudModule,
        ProcessCommonModule,
        PeopleCloudModule]; }, exports: function () { return [TaskFiltersCloudComponent,
        ServiceTaskFiltersCloudComponent,
        EditTaskFilterCloudComponent,
        EditServiceTaskFilterCloudComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TaskFiltersCloudModule, [{
        type: NgModule,
        args: [{
                imports: [
                    FormsModule,
                    ReactiveFormsModule,
                    HttpClientModule,
                    CommonModule,
                    FlexLayoutModule,
                    MaterialModule,
                    AppListCloudModule,
                    CoreModule,
                    GroupCloudModule,
                    ProcessCommonModule,
                    PeopleCloudModule
                ],
                declarations: [
                    TaskFiltersCloudComponent,
                    ServiceTaskFiltersCloudComponent,
                    EditTaskFilterCloudComponent,
                    EditServiceTaskFilterCloudComponent,
                    TaskFilterDialogCloudComponent,
                    TaskAssignmentFilterCloudComponent
                ],
                exports: [
                    TaskFiltersCloudComponent,
                    ServiceTaskFiltersCloudComponent,
                    EditTaskFilterCloudComponent,
                    EditServiceTaskFilterCloudComponent
                ],
                providers: [
                    { provide: DateAdapter, useClass: MomentDateAdapter },
                    { provide: MAT_DATE_FORMATS, useValue: ɵ0 }
                ]
            }]
    }], null, null); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1maWx0ZXJzLWNsb3VkLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvc3JjL2xpYi90YXNrL3Rhc2stZmlsdGVycy90YXNrLWZpbHRlcnMtY2xvdWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDdEYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxVQUFVLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDekUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDckUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0seUVBQXlFLENBQUM7QUFDOUgsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0saUVBQWlFLENBQUM7QUFDL0csT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sb0VBQW9FLENBQUM7QUFDcEgsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDckcsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sc0VBQXNFLENBQUM7QUFDMUgsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7O0FBQ2xFLFdBK0IrQyxtQkFBbUI7QUFHbEUsTUFBTSxPQUFPLHNCQUFzQjtBQUFHO2tEQWpDckMsUUFBUSxTQUFDLGtCQUNOO0dBQU8sRUFBRSxzQkFDTCxXQUFXLHNCQUNYLG1CQUFtQixzQkFDbkIsZ0JBQWdCLHNCQUNoQixZQUFZO0dBQ1osZ0JBQWdCLHNCQUNoQixjQUFjO2NBQ2Qsa0JBQWtCO0VBQ2xCLFVBQVU7ZUFDVjtNQUFnQixzQkFDaEI7Y0FBbUI7TUFDbkIsaUJBQWlCO2VBQ3BCO0dBQ0QsWUFBWSxFQUFFO1dBQ1Y7SUFBeUI7RUFDekI7SUFBZ0Msc0JBQ2hDO3FCQUE0QjthQUM1QjtpQ0FBbUMsc0JBQ25DLDhCQUE4QixzQkFDOUIsa0NBQWtDLGtCQUNyQyxrQkFDRDtHQUFPLEVBQUUsc0JBQ0w7VUFBeUIsc0JBQ3pCOzBCQUFnQztHQUNoQyw0QkFBNEI7YUFDNUIsbUNBQW1DLGtCQUN0QyxrQkFDRDtDQUFTLEVBQUUsc0JBQ1AsRUFBRTtLQUFPLEVBQUUsV0FBVyxFQUFFO0VBQVEsRUFBRSxpQkFBaUI7Q0FBRSxzQkFDckQsRUFBRTtNQUFPLEVBQUU7QUFBZ0IsRUFBRSxRQUFRLElBQXFCLEVBQUU7TUFDL0Q7QUFDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQztBQUFlIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQgeyBUYXNrRmlsdGVyc0Nsb3VkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stZmlsdGVycy1jbG91ZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWF0ZXJpYWxNb2R1bGUgfSBmcm9tICcuLi8uLi9tYXRlcmlhbC5tb2R1bGUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgTW9tZW50RGF0ZUFkYXB0ZXIsIE1PTUVOVF9EQVRFX0ZPUk1BVFMgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEFwcExpc3RDbG91ZE1vZHVsZSB9IGZyb20gJy4vLi4vLi4vYXBwL2FwcC1saXN0LWNsb3VkLm1vZHVsZSc7XG5pbXBvcnQgeyBEYXRlQWRhcHRlciwgTUFUX0RBVEVfRk9STUFUUyB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuaW1wb3J0IHsgUHJvY2Vzc0NvbW1vbk1vZHVsZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9wcm9jZXNzLWNvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgUGVvcGxlQ2xvdWRNb2R1bGUgfSBmcm9tICcuLi8uLi9wZW9wbGUvcGVvcGxlLWNsb3VkLm1vZHVsZSc7XG5pbXBvcnQgeyBFZGl0U2VydmljZVRhc2tGaWx0ZXJDbG91ZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9lZGl0LXRhc2stZmlsdGVycy9lZGl0LXNlcnZpY2UtdGFzay1maWx0ZXItY2xvdWQuY29tcG9uZW50JztcbmltcG9ydCB7IEVkaXRUYXNrRmlsdGVyQ2xvdWRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZWRpdC10YXNrLWZpbHRlcnMvZWRpdC10YXNrLWZpbHRlci1jbG91ZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza0ZpbHRlckRpYWxvZ0Nsb3VkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stZmlsdGVyLWRpYWxvZy90YXNrLWZpbHRlci1kaWFsb2ctY2xvdWQuY29tcG9uZW50JztcbmltcG9ydCB7IFNlcnZpY2VUYXNrRmlsdGVyc0Nsb3VkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NlcnZpY2UtdGFzay1maWx0ZXJzLWNsb3VkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYXNrQXNzaWdubWVudEZpbHRlckNsb3VkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stYXNzaWdubWVudC1maWx0ZXIvdGFzay1hc3NpZ25tZW50LWZpbHRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3JvdXBDbG91ZE1vZHVsZSB9IGZyb20gJy4uLy4uL2dyb3VwL2dyb3VwLWNsb3VkLm1vZHVsZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBGb3Jtc01vZHVsZSxcbiAgICAgICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICAgICAgSHR0cENsaWVudE1vZHVsZSxcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBGbGV4TGF5b3V0TW9kdWxlLFxuICAgICAgICBNYXRlcmlhbE1vZHVsZSxcbiAgICAgICAgQXBwTGlzdENsb3VkTW9kdWxlLFxuICAgICAgICBDb3JlTW9kdWxlLFxuICAgICAgICBHcm91cENsb3VkTW9kdWxlLFxuICAgICAgICBQcm9jZXNzQ29tbW9uTW9kdWxlLFxuICAgICAgICBQZW9wbGVDbG91ZE1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFRhc2tGaWx0ZXJzQ2xvdWRDb21wb25lbnQsXG4gICAgICAgIFNlcnZpY2VUYXNrRmlsdGVyc0Nsb3VkQ29tcG9uZW50LFxuICAgICAgICBFZGl0VGFza0ZpbHRlckNsb3VkQ29tcG9uZW50LFxuICAgICAgICBFZGl0U2VydmljZVRhc2tGaWx0ZXJDbG91ZENvbXBvbmVudCxcbiAgICAgICAgVGFza0ZpbHRlckRpYWxvZ0Nsb3VkQ29tcG9uZW50LFxuICAgICAgICBUYXNrQXNzaWdubWVudEZpbHRlckNsb3VkQ29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFRhc2tGaWx0ZXJzQ2xvdWRDb21wb25lbnQsXG4gICAgICAgIFNlcnZpY2VUYXNrRmlsdGVyc0Nsb3VkQ29tcG9uZW50LFxuICAgICAgICBFZGl0VGFza0ZpbHRlckNsb3VkQ29tcG9uZW50LFxuICAgICAgICBFZGl0U2VydmljZVRhc2tGaWx0ZXJDbG91ZENvbXBvbmVudFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogRGF0ZUFkYXB0ZXIsIHVzZUNsYXNzOiBNb21lbnREYXRlQWRhcHRlciB9LFxuICAgICAgICB7IHByb3ZpZGU6IE1BVF9EQVRFX0ZPUk1BVFMsIHVzZVZhbHVlOiBNT01FTlRfREFURV9GT1JNQVRTIH1cbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFRhc2tGaWx0ZXJzQ2xvdWRNb2R1bGUgeyB9XG4iXX0=