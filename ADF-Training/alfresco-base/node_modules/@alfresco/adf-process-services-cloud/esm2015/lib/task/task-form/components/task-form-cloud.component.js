/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { TaskCloudService } from '../../services/task-cloud.service';
import { FormRenderingService } from '@alfresco/adf-core';
import { AttachFileCloudWidgetComponent } from '../../../form/components/widgets/attach-file/attach-file-cloud-widget.component';
import { DropdownCloudWidgetComponent } from '../../../form/components/widgets/dropdown/dropdown-cloud.widget';
import { DateCloudWidgetComponent } from '../../../form/components/widgets/date/date-cloud.widget';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/task-cloud.service';
import * as ɵngcc2 from '@alfresco/adf-core';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../../../form/components/form-cloud.component';
import * as ɵngcc5 from '../../../form/components/form-cloud-custom-outcomes.component';
import * as ɵngcc6 from '@angular/material/card';
import * as ɵngcc7 from '@angular/material/button';
import * as ɵngcc8 from '../../directives/complete-task.directive';
import * as ɵngcc9 from '../../directives/claim-task-cloud.directive';
import * as ɵngcc10 from '../../directives/unclaim-task-cloud.directive';
import * as ɵngcc11 from '@angular/flex-layout/flex';
import * as ɵngcc12 from '@angular/material/progress-spinner';
import * as ɵngcc13 from '@ngx-translate/core';

function TaskFormCloudComponent_div_0_adf_cloud_form_1_ng_template_2_Template(rf, ctx) { }
function TaskFormCloudComponent_div_0_adf_cloud_form_1_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-cloud-form", 5);
    ɵngcc0.ɵɵlistener("formSaved", function TaskFormCloudComponent_div_0_adf_cloud_form_1_Template_adf_cloud_form_formSaved_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.onFormSaved($event); })("formCompleted", function TaskFormCloudComponent_div_0_adf_cloud_form_1_Template_adf_cloud_form_formCompleted_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onFormCompleted($event); })("formError", function TaskFormCloudComponent_div_0_adf_cloud_form_1_Template_adf_cloud_form_formError_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.onError($event); })("error", function TaskFormCloudComponent_div_0_adf_cloud_form_1_Template_adf_cloud_form_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.onError($event); })("formContentClicked", function TaskFormCloudComponent_div_0_adf_cloud_form_1_Template_adf_cloud_form_formContentClicked_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.onFormContentClicked($event); });
    ɵngcc0.ɵɵelementStart(1, "adf-cloud-form-custom-outcomes");
    ɵngcc0.ɵɵtemplate(2, TaskFormCloudComponent_div_0_adf_cloud_form_1_ng_template_2_Template, 0, 0, "ng-template", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(5);
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("appName", ctx_r3.appName)("appVersion", ctx_r3.taskDetails.appVersion)("taskId", ctx_r3.taskId)("showTitle", ctx_r3.showTitle)("processInstanceId", ctx_r3.taskDetails.processInstanceId)("readOnly", ctx_r3.isReadOnly())("showRefreshButton", ctx_r3.showRefreshButton)("showValidationIcon", ctx_r3.showValidationIcon)("showCompleteButton", ctx_r3.canCompleteTask())("showSaveButton", ctx_r3.canCompleteTask());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function TaskFormCloudComponent_div_0_ng_template_2_mat_card_header_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-header");
    ɵngcc0.ɵɵelementStart(1, "mat-card-title");
    ɵngcc0.ɵɵelementStart(2, "h4");
    ɵngcc0.ɵɵelementStart(3, "span", 12);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 1, (ctx_r15.taskDetails == null ? null : ctx_r15.taskDetails.name) || "FORM.FORM_RENDERER.NAMELESS_TASK"), " ");
} }
function TaskFormCloudComponent_div_0_ng_template_2_ng_template_5_Template(rf, ctx) { }
function TaskFormCloudComponent_div_0_ng_template_2_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 13);
    ɵngcc0.ɵɵlistener("success", function TaskFormCloudComponent_div_0_ng_template_2_button_6_Template_button_success_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(3); return ctx_r18.onCompleteTask(); })("error", function TaskFormCloudComponent_div_0_ng_template_2_button_6_Template_button_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r20 = ɵngcc0.ɵɵnextContext(3); return ctx_r20.onError($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("appName", ctx_r17.appName)("taskId", ctx_r17.taskId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, "ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE"), " ");
} }
function TaskFormCloudComponent_div_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 7);
    ɵngcc0.ɵɵtemplate(1, TaskFormCloudComponent_div_0_ng_template_2_mat_card_header_1_Template, 6, 3, "mat-card-header", 8);
    ɵngcc0.ɵɵelementStart(2, "mat-card-content");
    ɵngcc0.ɵɵelement(3, "adf-empty-content", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "mat-card-actions", 10);
    ɵngcc0.ɵɵtemplate(5, TaskFormCloudComponent_div_0_ng_template_2_ng_template_5_Template, 0, 0, "ng-template", 6);
    ɵngcc0.ɵɵtemplate(6, TaskFormCloudComponent_div_0_ng_template_2_button_6_Template, 3, 5, "button", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(5);
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.showTitle);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("icon", "description")("title", "ADF_CLOUD_TASK_FORM.EMPTY_FORM.TITLE")("subtitle", "ADF_CLOUD_TASK_FORM.EMPTY_FORM.SUBTITLE");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.canCompleteTask());
} }
function TaskFormCloudComponent_div_0_ng_template_4_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function TaskFormCloudComponent_div_0_ng_template_4_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(3); return ctx_r24.onCancelClick(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL"), " ");
} }
function TaskFormCloudComponent_div_0_ng_template_4_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵlistener("success", function TaskFormCloudComponent_div_0_ng_template_4_button_1_Template_button_success_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r26 = ɵngcc0.ɵɵnextContext(3); return ctx_r26.onClaimTask(); })("error", function TaskFormCloudComponent_div_0_ng_template_4_button_1_Template_button_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r28 = ɵngcc0.ɵɵnextContext(3); return ctx_r28.onError($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("appName", ctx_r22.appName)("taskId", ctx_r22.taskId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, "ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM"), " ");
} }
function TaskFormCloudComponent_div_0_ng_template_4_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("success", function TaskFormCloudComponent_div_0_ng_template_4_button_2_Template_button_success_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(3); return ctx_r29.onUnclaimTask(); })("error", function TaskFormCloudComponent_div_0_ng_template_4_button_2_Template_button_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r31 = ɵngcc0.ɵɵnextContext(3); return ctx_r31.onError($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("appName", ctx_r23.appName)("taskId", ctx_r23.taskId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, "ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM"), " ");
} }
function TaskFormCloudComponent_div_0_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TaskFormCloudComponent_div_0_ng_template_4_button_0_Template, 3, 3, "button", 14);
    ɵngcc0.ɵɵtemplate(1, TaskFormCloudComponent_div_0_ng_template_4_button_1_Template, 3, 5, "button", 15);
    ɵngcc0.ɵɵtemplate(2, TaskFormCloudComponent_div_0_ng_template_4_button_2_Template, 3, 5, "button", 16);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.showCancelButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.canClaimTask());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.hasCandidateUsersOrGroups());
} }
function TaskFormCloudComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, TaskFormCloudComponent_div_0_adf_cloud_form_1_Template, 3, 11, "adf-cloud-form", 2);
    ɵngcc0.ɵɵtemplate(2, TaskFormCloudComponent_div_0_ng_template_2_Template, 7, 6, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, TaskFormCloudComponent_div_0_ng_template_4_Template, 3, 3, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r4 = ɵngcc0.ɵɵreference(3);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hasForm())("ngIfElse", _r4);
} }
function TaskFormCloudComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 20);
    ɵngcc0.ɵɵelement(1, "mat-spinner");
    ɵngcc0.ɵɵelementEnd();
} }
export class TaskFormCloudComponent {
    constructor(taskCloudService, formRenderingService) {
        this.taskCloudService = taskCloudService;
        this.formRenderingService = formRenderingService;
        this.appName = '';
        this.showTitle = true;
        this.showRefreshButton = false;
        this.showValidationIcon = true;
        this.showCancelButton = true;
        this.showCompleteButton = true;
        this.readOnly = false;
        this.formSaved = new EventEmitter();
        this.formCompleted = new EventEmitter();
        this.taskCompleted = new EventEmitter();
        this.taskClaimed = new EventEmitter();
        this.taskUnclaimed = new EventEmitter();
        this.cancelClick = new EventEmitter();
        this.error = new EventEmitter();
        this.formContentClicked = new EventEmitter();
        this.candidateUsers = [];
        this.candidateGroups = [];
        this.loading = false;
        this.formRenderingService.setComponentTypeResolver('upload', () => AttachFileCloudWidgetComponent, true);
        this.formRenderingService.setComponentTypeResolver('dropdown', () => DropdownCloudWidgetComponent, true);
        this.formRenderingService.setComponentTypeResolver('date', () => DateCloudWidgetComponent, true);
    }
    ngOnInit() {
        if (this.appName === '' && this.taskId) {
            this.loadTask();
        }
    }
    ngOnChanges(changes) {
        const appName = changes['appName'];
        if (appName && (appName.currentValue !== appName.previousValue) && this.taskId) {
            this.loadTask();
            return;
        }
        const taskId = changes['taskId'];
        if (taskId && taskId.currentValue && this.appName) {
            this.loadTask();
            return;
        }
    }
    loadTask() {
        this.loading = true;
        this.taskCloudService
            .getTaskById(this.appName, this.taskId)
            .subscribe(details => {
            this.taskDetails = details;
            this.loading = false;
        });
        this.taskCloudService
            .getCandidateUsers(this.appName, this.taskId)
            .subscribe(users => this.candidateUsers = users || []);
        this.taskCloudService
            .getCandidateGroups(this.appName, this.taskId)
            .subscribe(groups => this.candidateGroups = groups || []);
    }
    hasForm() {
        return this.taskDetails && !!this.taskDetails.formKey;
    }
    canCompleteTask() {
        return this.showCompleteButton && !this.readOnly && this.taskCloudService.canCompleteTask(this.taskDetails);
    }
    canClaimTask() {
        return !this.readOnly && this.taskCloudService.canClaimTask(this.taskDetails);
    }
    hasCandidateUsers() {
        return this.candidateUsers.length !== 0;
    }
    hasCandidateGroups() {
        return this.candidateGroups.length !== 0;
    }
    hasCandidateUsersOrGroups() {
        var _a;
        let hasCandidateUsersOrGroups = false;
        if (((_a = this.taskDetails) === null || _a === void 0 ? void 0 : _a.status) === 'ASSIGNED') {
            hasCandidateUsersOrGroups = this.hasCandidateUsers() || this.hasCandidateGroups();
        }
        return hasCandidateUsersOrGroups;
    }
    canUnclaimTask() {
        return !this.readOnly && this.taskCloudService.canUnclaimTask(this.taskDetails);
    }
    isReadOnly() {
        return this.readOnly || !this.taskCloudService.canCompleteTask(this.taskDetails);
    }
    onCompleteTask() {
        this.loadTask();
        this.taskCompleted.emit(this.taskId);
    }
    onClaimTask() {
        this.loadTask();
        this.taskClaimed.emit(this.taskId);
    }
    onUnclaimTask() {
        this.loadTask();
        this.taskUnclaimed.emit(this.taskId);
    }
    onCancelClick() {
        this.cancelClick.emit(this.taskId);
    }
    onFormSaved(form) {
        this.formSaved.emit(form);
    }
    onFormCompleted(form) {
        this.formCompleted.emit(form);
        this.taskCompleted.emit(this.taskId);
    }
    onError(data) {
        this.error.emit(data);
    }
    onFormContentClicked(content) {
        this.formContentClicked.emit(content);
    }
}
TaskFormCloudComponent.ɵfac = function TaskFormCloudComponent_Factory(t) { return new (t || TaskFormCloudComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TaskCloudService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormRenderingService)); };
TaskFormCloudComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TaskFormCloudComponent, selectors: [["adf-cloud-task-form"]], inputs: { appName: "appName", showTitle: "showTitle", showRefreshButton: "showRefreshButton", showValidationIcon: "showValidationIcon", showCancelButton: "showCancelButton", showCompleteButton: "showCompleteButton", readOnly: "readOnly", taskId: "taskId" }, outputs: { formSaved: "formSaved", formCompleted: "formCompleted", taskCompleted: "taskCompleted", taskClaimed: "taskClaimed", taskUnclaimed: "taskUnclaimed", cancelClick: "cancelClick", error: "error", formContentClicked: "formContentClicked" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 2, consts: [[4, "ngIf", "ngIfElse"], ["loadingTemplate", ""], [3, "appName", "appVersion", "taskId", "showTitle", "processInstanceId", "readOnly", "showRefreshButton", "showValidationIcon", "showCompleteButton", "showSaveButton", "formSaved", "formCompleted", "formError", "error", "formContentClicked", 4, "ngIf", "ngIfElse"], ["withoutForm", ""], ["taskFormCloudButtons", ""], [3, "appName", "appVersion", "taskId", "showTitle", "processInstanceId", "readOnly", "showRefreshButton", "showValidationIcon", "showCompleteButton", "showSaveButton", "formSaved", "formCompleted", "formError", "error", "formContentClicked"], [3, "ngTemplateOutlet"], [1, "adf-task-form-container"], [4, "ngIf"], [3, "icon", "title", "subtitle"], [1, "adf-task-form-actions"], ["mat-button", "", "adf-cloud-complete-task", "", "color", "primary", "id", "adf-form-complete", 3, "appName", "taskId", "success", "error", 4, "ngIf"], [1, "adf-form-title"], ["mat-button", "", "adf-cloud-complete-task", "", "color", "primary", "id", "adf-form-complete", 3, "appName", "taskId", "success", "error"], ["mat-button", "", "id", "adf-cloud-cancel-task", 3, "click", 4, "ngIf"], ["mat-button", "", "adf-cloud-claim-task", "", 3, "appName", "taskId", "success", "error", 4, "ngIf"], ["mat-button", "", "adf-cloud-unclaim-task", "", 3, "appName", "taskId", "success", "error", 4, "ngIf"], ["mat-button", "", "id", "adf-cloud-cancel-task", 3, "click"], ["mat-button", "", "adf-cloud-claim-task", "", 3, "appName", "taskId", "success", "error"], ["mat-button", "", "adf-cloud-unclaim-task", "", 3, "appName", "taskId", "success", "error"], ["fxLayout", "row", "fxLayoutAlign", "center stretch"]], template: function TaskFormCloudComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TaskFormCloudComponent_div_0_Template, 6, 2, "div", 0);
        ɵngcc0.ɵɵtemplate(1, TaskFormCloudComponent_ng_template_1_Template, 2, 0, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loading)("ngIfElse", _r1);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.FormCloudComponent, ɵngcc5.FormCustomOutcomesComponent, ɵngcc3.NgTemplateOutlet, ɵngcc6.MatCard, ɵngcc6.MatCardContent, ɵngcc2.EmptyContentComponent, ɵngcc6.MatCardActions, ɵngcc6.MatCardHeader, ɵngcc6.MatCardTitle, ɵngcc7.MatButton, ɵngcc8.CompleteTaskDirective, ɵngcc9.ClaimTaskCloudDirective, ɵngcc10.UnClaimTaskCloudDirective, ɵngcc11.DefaultLayoutDirective, ɵngcc11.DefaultLayoutAlignDirective, ɵngcc12.MatSpinner], pipes: [ɵngcc13.TranslatePipe], styles: [".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"], encapsulation: 2 });
TaskFormCloudComponent.ctorParameters = () => [
    { type: TaskCloudService },
    { type: FormRenderingService }
];
TaskFormCloudComponent.propDecorators = {
    appName: [{ type: Input }],
    taskId: [{ type: Input }],
    showTitle: [{ type: Input }],
    showRefreshButton: [{ type: Input }],
    showValidationIcon: [{ type: Input }],
    showCancelButton: [{ type: Input }],
    showCompleteButton: [{ type: Input }],
    readOnly: [{ type: Input }],
    formSaved: [{ type: Output }],
    formCompleted: [{ type: Output }],
    taskCompleted: [{ type: Output }],
    taskClaimed: [{ type: Output }],
    taskUnclaimed: [{ type: Output }],
    cancelClick: [{ type: Output }],
    error: [{ type: Output }],
    formContentClicked: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TaskFormCloudComponent, [{
        type: Component,
        args: [{
                selector: 'adf-cloud-task-form',
                template: "<div *ngIf=\"!loading; else loadingTemplate\">\n    <adf-cloud-form *ngIf=\"hasForm(); else withoutForm\"\n                    [appName]=\"appName\"\n                    [appVersion]=\"taskDetails.appVersion\"\n                    [taskId]=\"taskId\"\n                    [showTitle]=\"showTitle\"\n                    [processInstanceId]=\"taskDetails.processInstanceId\"\n                    [readOnly]=\"isReadOnly()\"\n                    [showRefreshButton]=\"showRefreshButton\"\n                    [showValidationIcon]=\"showValidationIcon\"\n                    [showCompleteButton]=\"canCompleteTask()\"\n                    [showSaveButton]=\"canCompleteTask()\"\n                    (formSaved)=\"onFormSaved($event)\"\n                    (formCompleted)=\"onFormCompleted($event)\"\n                    (formError)=\"onError($event)\"\n                    (error)=\"onError($event)\"\n                    (formContentClicked)=\"onFormContentClicked($event)\">\n        <adf-cloud-form-custom-outcomes>\n            <ng-template [ngTemplateOutlet]=\"taskFormCloudButtons\">\n            </ng-template>\n        </adf-cloud-form-custom-outcomes>\n    </adf-cloud-form>\n\n    <ng-template #withoutForm>\n        <mat-card class=\"adf-task-form-container\">\n            <mat-card-header *ngIf=\"showTitle\">\n                <mat-card-title>\n                    <h4>\n                        <span class=\"adf-form-title\">\n                            {{ taskDetails?.name || 'FORM.FORM_RENDERER.NAMELESS_TASK' | translate }}\n                        </span>\n                    </h4>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-empty-content\n                    [icon]=\"'description'\"\n                    [title]=\"'ADF_CLOUD_TASK_FORM.EMPTY_FORM.TITLE'\"\n                    [subtitle]=\"'ADF_CLOUD_TASK_FORM.EMPTY_FORM.SUBTITLE'\">\n                </adf-empty-content>\n            </mat-card-content>\n            <mat-card-actions class=\"adf-task-form-actions\">\n                <ng-template [ngTemplateOutlet]=\"taskFormCloudButtons\">\n                </ng-template>\n                <button mat-button *ngIf=\"canCompleteTask()\" adf-cloud-complete-task [appName]=\"appName\"\n                        [taskId]=\"taskId\" (success)=\"onCompleteTask()\" (error)=\"onError($event)\" color=\"primary\" id=\"adf-form-complete\">\n                    {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE' | translate}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </ng-template>\n    <ng-template #taskFormCloudButtons>\n        <button mat-button *ngIf=\"showCancelButton\" id=\"adf-cloud-cancel-task\" (click)=\"onCancelClick()\">\n            {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL' | translate}}\n        </button>\n        <button mat-button *ngIf=\"canClaimTask()\" adf-cloud-claim-task [appName]=\"appName\" [taskId]=\"taskId\"\n                (success)=\"onClaimTask()\" (error)=\"onError($event)\">\n            {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM' | translate}}\n        </button>\n        <button mat-button *ngIf=\"hasCandidateUsersOrGroups()\" adf-cloud-unclaim-task [appName]=\"appName\" [taskId]=\"taskId\"\n                (success)=\"onUnclaimTask()\" (error)=\"onError($event)\">\n            {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM' | translate}}\n        </button>\n    </ng-template>\n</div>\n\n<ng-template #loadingTemplate>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-template>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"]
            }]
    }], function () { return [{ type: ɵngcc1.TaskCloudService }, { type: ɵngcc2.FormRenderingService }]; }, { appName: [{
            type: Input
        }], showTitle: [{
            type: Input
        }], showRefreshButton: [{
            type: Input
        }], showValidationIcon: [{
            type: Input
        }], showCancelButton: [{
            type: Input
        }], showCompleteButton: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], formSaved: [{
            type: Output
        }], formCompleted: [{
            type: Output
        }], taskCompleted: [{
            type: Output
        }], taskClaimed: [{
            type: Output
        }], taskUnclaimed: [{
            type: Output
        }], cancelClick: [{
            type: Output
        }], error: [{
            type: Output
        }], formContentClicked: [{
            type: Output
        }], taskId: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,