/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { FlexLayoutModule } from '@angular/flex-layout';
import { TaskFiltersCloudComponent } from './components/task-filters-cloud.component';
import { MaterialModule } from '../../material.module';
import { CoreModule, MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';
import { HttpClientModule } from '@angular/common/http';
import { AppListCloudModule } from './../../app/app-list-cloud.module';
import { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';
import { ProcessCommonModule } from '../../common/process-common.module';
import { PeopleCloudModule } from '../../people/people-cloud.module';
import { EditServiceTaskFilterCloudComponent } from './components/edit-task-filters/edit-service-task-filter-cloud.component';
import { EditTaskFilterCloudComponent } from './components/edit-task-filters/edit-task-filter-cloud.component';
import { TaskFilterDialogCloudComponent } from './components/task-filter-dialog/task-filter-dialog-cloud.component';
import { ServiceTaskFiltersCloudComponent } from './components/service-task-filters-cloud.component';
import { TaskAssignmentFilterCloudComponent } from './components/task-assignment-filter/task-assignment-filter.component';
import { GroupCloudModule } from '../../group/group-cloud.module';
const ɵ0 = MOMENT_DATE_FORMATS;
export class TaskFiltersCloudModule {
}
TaskFiltersCloudModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    FormsModule,
                    ReactiveFormsModule,
                    HttpClientModule,
                    CommonModule,
                    FlexLayoutModule,
                    MaterialModule,
                    AppListCloudModule,
                    CoreModule,
                    GroupCloudModule,
                    ProcessCommonModule,
                    PeopleCloudModule
                ],
                declarations: [
                    TaskFiltersCloudComponent,
                    ServiceTaskFiltersCloudComponent,
                    EditTaskFilterCloudComponent,
                    EditServiceTaskFilterCloudComponent,
                    TaskFilterDialogCloudComponent,
                    TaskAssignmentFilterCloudComponent
                ],
                exports: [
                    TaskFiltersCloudComponent,
                    ServiceTaskFiltersCloudComponent,
                    EditTaskFilterCloudComponent,
                    EditServiceTaskFilterCloudComponent
                ],
                providers: [
                    { provide: DateAdapter, useClass: MomentDateAdapter },
                    { provide: MAT_DATE_FORMATS, useValue: ɵ0 }
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1maWx0ZXJzLWNsb3VkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvc3JjLyIsInNvdXJjZXMiOlsibGliL3Rhc2svdGFzay1maWx0ZXJzL3Rhc2stZmlsdGVycy1jbG91ZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdkUsT0FBTyxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLHlFQUF5RSxDQUFDO0FBQzlILE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLGlFQUFpRSxDQUFDO0FBQy9HLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ3BILE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3JHLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLHNFQUFzRSxDQUFDO0FBQzFILE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO1dBZ0NuQixtQkFBbUI7QUFHbEUsTUFBTSxPQUFPLHNCQUFzQjs7O1lBakNsQyxRQUFRLFNBQUM7Z0JBQ04sT0FBTyxFQUFFO29CQUNMLFdBQVc7b0JBQ1gsbUJBQW1CO29CQUNuQixnQkFBZ0I7b0JBQ2hCLFlBQVk7b0JBQ1osZ0JBQWdCO29CQUNoQixjQUFjO29CQUNkLGtCQUFrQjtvQkFDbEIsVUFBVTtvQkFDVixnQkFBZ0I7b0JBQ2hCLG1CQUFtQjtvQkFDbkIsaUJBQWlCO2lCQUNwQjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1YseUJBQXlCO29CQUN6QixnQ0FBZ0M7b0JBQ2hDLDRCQUE0QjtvQkFDNUIsbUNBQW1DO29CQUNuQyw4QkFBOEI7b0JBQzlCLGtDQUFrQztpQkFDckM7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLHlCQUF5QjtvQkFDekIsZ0NBQWdDO29CQUNoQyw0QkFBNEI7b0JBQzVCLG1DQUFtQztpQkFDdEM7Z0JBQ0QsU0FBUyxFQUFFO29CQUNQLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUU7b0JBQ3JELEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFFBQVEsSUFBcUIsRUFBRTtpQkFDL0Q7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQnO1xuaW1wb3J0IHsgVGFza0ZpbHRlcnNDbG91ZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWZpbHRlcnMtY2xvdWQuY29tcG9uZW50JztcbmltcG9ydCB7IE1hdGVyaWFsTW9kdWxlIH0gZnJvbSAnLi4vLi4vbWF0ZXJpYWwubW9kdWxlJztcbmltcG9ydCB7IENvcmVNb2R1bGUsIE1vbWVudERhdGVBZGFwdGVyLCBNT01FTlRfREFURV9GT1JNQVRTIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBBcHBMaXN0Q2xvdWRNb2R1bGUgfSBmcm9tICcuLy4uLy4uL2FwcC9hcHAtbGlzdC1jbG91ZC5tb2R1bGUnO1xuaW1wb3J0IHsgRGF0ZUFkYXB0ZXIsIE1BVF9EQVRFX0ZPUk1BVFMgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jb3JlJztcbmltcG9ydCB7IFByb2Nlc3NDb21tb25Nb2R1bGUgfSBmcm9tICcuLi8uLi9jb21tb24vcHJvY2Vzcy1jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IFBlb3BsZUNsb3VkTW9kdWxlIH0gZnJvbSAnLi4vLi4vcGVvcGxlL3Blb3BsZS1jbG91ZC5tb2R1bGUnO1xuaW1wb3J0IHsgRWRpdFNlcnZpY2VUYXNrRmlsdGVyQ2xvdWRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZWRpdC10YXNrLWZpbHRlcnMvZWRpdC1zZXJ2aWNlLXRhc2stZmlsdGVyLWNsb3VkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFZGl0VGFza0ZpbHRlckNsb3VkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2VkaXQtdGFzay1maWx0ZXJzL2VkaXQtdGFzay1maWx0ZXItY2xvdWQuY29tcG9uZW50JztcbmltcG9ydCB7IFRhc2tGaWx0ZXJEaWFsb2dDbG91ZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWZpbHRlci1kaWFsb2cvdGFzay1maWx0ZXItZGlhbG9nLWNsb3VkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZXJ2aWNlVGFza0ZpbHRlcnNDbG91ZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zZXJ2aWNlLXRhc2stZmlsdGVycy1jbG91ZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza0Fzc2lnbm1lbnRGaWx0ZXJDbG91ZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWFzc2lnbm1lbnQtZmlsdGVyL3Rhc2stYXNzaWdubWVudC1maWx0ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEdyb3VwQ2xvdWRNb2R1bGUgfSBmcm9tICcuLi8uLi9ncm91cC9ncm91cC1jbG91ZC5tb2R1bGUnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgRm9ybXNNb2R1bGUsXG4gICAgICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgICAgIEh0dHBDbGllbnRNb2R1bGUsXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgRmxleExheW91dE1vZHVsZSxcbiAgICAgICAgTWF0ZXJpYWxNb2R1bGUsXG4gICAgICAgIEFwcExpc3RDbG91ZE1vZHVsZSxcbiAgICAgICAgQ29yZU1vZHVsZSxcbiAgICAgICAgR3JvdXBDbG91ZE1vZHVsZSxcbiAgICAgICAgUHJvY2Vzc0NvbW1vbk1vZHVsZSxcbiAgICAgICAgUGVvcGxlQ2xvdWRNb2R1bGVcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBUYXNrRmlsdGVyc0Nsb3VkQ29tcG9uZW50LFxuICAgICAgICBTZXJ2aWNlVGFza0ZpbHRlcnNDbG91ZENvbXBvbmVudCxcbiAgICAgICAgRWRpdFRhc2tGaWx0ZXJDbG91ZENvbXBvbmVudCxcbiAgICAgICAgRWRpdFNlcnZpY2VUYXNrRmlsdGVyQ2xvdWRDb21wb25lbnQsXG4gICAgICAgIFRhc2tGaWx0ZXJEaWFsb2dDbG91ZENvbXBvbmVudCxcbiAgICAgICAgVGFza0Fzc2lnbm1lbnRGaWx0ZXJDbG91ZENvbXBvbmVudFxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBUYXNrRmlsdGVyc0Nsb3VkQ29tcG9uZW50LFxuICAgICAgICBTZXJ2aWNlVGFza0ZpbHRlcnNDbG91ZENvbXBvbmVudCxcbiAgICAgICAgRWRpdFRhc2tGaWx0ZXJDbG91ZENvbXBvbmVudCxcbiAgICAgICAgRWRpdFNlcnZpY2VUYXNrRmlsdGVyQ2xvdWRDb21wb25lbnRcbiAgICBdLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7IHByb3ZpZGU6IERhdGVBZGFwdGVyLCB1c2VDbGFzczogTW9tZW50RGF0ZUFkYXB0ZXIgfSxcbiAgICAgICAgeyBwcm92aWRlOiBNQVRfREFURV9GT1JNQVRTLCB1c2VWYWx1ZTogTU9NRU5UX0RBVEVfRk9STUFUUyB9XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUYXNrRmlsdGVyc0Nsb3VkTW9kdWxlIHsgfVxuIl19