/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class TaskQueryCloudRequestModel {
    constructor(obj) {
        if (obj) {
            this.appName = obj.appName;
            this.appVersion = obj.appVersion;
            this.assignee = obj.assignee;
            this.claimedDate = obj.claimedDate;
            this.createdDate = obj.createdDate;
            this.createdFrom = obj.createdFrom;
            this.createdTo = obj.createdTo;
            this.description = obj.description;
            this.dueDate = obj.dueDate;
            this.lastModifiedFrom = obj.lastModifiedFrom;
            this.lastModifiedTo = obj.lastModifiedTo;
            this.dueDateFrom = obj.dueDateFrom;
            this.dueDateTo = obj.dueDateTo;
            this.id = obj.id;
            this.name = obj.name;
            this.owner = obj.owner;
            this.parentTaskId = obj.parentTaskId;
            this.standalone = obj.standalone;
            this.priority = obj.priority;
            this.processDefinitionId = obj.processDefinitionId;
            this.processDefinitionName = obj.processDefinitionName;
            this.processInstanceId = obj.processInstanceId;
            this.status = obj.status;
            this.completedBy = obj.completedBy;
            this.maxItems = obj.maxItems;
            this.skipCount = obj.skipCount;
            this.sorting = obj.sorting;
            this.completedFrom = obj.completedFrom;
            this.completedTo = obj.completedTo;
            this.completedDate = obj.completedDate;
            this.candidateGroupId = obj.candidateGroupId;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWNsb3VkLW1vZGVsLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvcHJvY2Vzcy1zZXJ2aWNlcy1jbG91ZC9zcmMvIiwic291cmNlcyI6WyJsaWIvdGFzay90YXNrLWxpc3QvbW9kZWxzL2ZpbHRlci1jbG91ZC1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxNQUFNLE9BQU8sMEJBQTBCO0lBaUNuQyxZQUFZLEdBQVM7UUFDakIsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7WUFDM0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQztZQUM3QixJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7WUFDbkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsV0FBVyxDQUFDO1lBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQztZQUNuQyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUM7WUFDL0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsV0FBVyxDQUFDO1lBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztZQUMzQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDLGdCQUFnQixDQUFDO1lBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsR0FBRyxDQUFDLGNBQWMsQ0FBQztZQUN6QyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7WUFDbkMsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDO1lBQy9CLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQztZQUNyQyxJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUM7WUFDakMsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO1lBQzdCLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxHQUFHLENBQUMsbUJBQW1CLENBQUM7WUFDbkQsSUFBSSxDQUFDLHFCQUFxQixHQUFHLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQztZQUN2RCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsR0FBRyxDQUFDLGlCQUFpQixDQUFDO1lBQy9DLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztZQUN6QixJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7WUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO1lBQzdCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQUMvQixJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7WUFDM0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQztZQUNuQyxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUM7WUFDdkMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQztTQUNoRDtJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFRhc2tMaXN0Q2xvdWRTb3J0aW5nTW9kZWwgfSBmcm9tICcuL3Rhc2stbGlzdC1zb3J0aW5nLm1vZGVsJztcblxuZXhwb3J0IGNsYXNzIFRhc2tRdWVyeUNsb3VkUmVxdWVzdE1vZGVsIHtcbiAgICBhcHBOYW1lOiBzdHJpbmc7XG4gICAgYXBwVmVyc2lvbj86IHN0cmluZztcbiAgICBhc3NpZ25lZT86IHN0cmluZztcbiAgICBjbGFpbWVkRGF0ZT86IHN0cmluZztcbiAgICBjcmVhdGVkRGF0ZT86IERhdGU7XG4gICAgY3JlYXRlZEZyb20/OiBzdHJpbmc7XG4gICAgY3JlYXRlZFRvPzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAgIGR1ZURhdGU/OiBhbnk7XG4gICAgbGFzdE1vZGlmaWVkRnJvbT86IGFueTtcbiAgICBsYXN0TW9kaWZpZWRUbz86IGFueTtcbiAgICBkdWVEYXRlRnJvbT86IGFueTtcbiAgICBkdWVEYXRlVG8/OiBhbnk7XG4gICAgaWQ/OiBzdHJpbmc7XG4gICAgbmFtZT86IHN0cmluZztcbiAgICBvd25lcj86IHN0cmluZztcbiAgICBwYXJlbnRUYXNrSWQ/OiBzdHJpbmc7XG4gICAgc3RhbmRhbG9uZT86IGJvb2xlYW47XG4gICAgcHJpb3JpdHk/OiBudW1iZXI7XG4gICAgcHJvY2Vzc0RlZmluaXRpb25JZD86IHN0cmluZztcbiAgICBwcm9jZXNzRGVmaW5pdGlvbk5hbWU/OiBzdHJpbmc7XG4gICAgcHJvY2Vzc0luc3RhbmNlSWQ/OiBzdHJpbmc7XG4gICAgc3RhdHVzPzogc3RyaW5nO1xuICAgIGNvbXBsZXRlZEJ5Pzogc3RyaW5nO1xuICAgIG1heEl0ZW1zOiBudW1iZXI7XG4gICAgc2tpcENvdW50OiBudW1iZXI7XG4gICAgc29ydGluZz86IFRhc2tMaXN0Q2xvdWRTb3J0aW5nTW9kZWxbXTtcbiAgICBjb21wbGV0ZWREYXRlPzogRGF0ZTtcbiAgICBjb21wbGV0ZWRGcm9tPzogc3RyaW5nO1xuICAgIGNvbXBsZXRlZFRvPzogc3RyaW5nO1xuICAgIGNhbmRpZGF0ZUdyb3VwSWQ/OiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgaWYgKG9iaikge1xuICAgICAgICAgICAgdGhpcy5hcHBOYW1lID0gb2JqLmFwcE5hbWU7XG4gICAgICAgICAgICB0aGlzLmFwcFZlcnNpb24gPSBvYmouYXBwVmVyc2lvbjtcbiAgICAgICAgICAgIHRoaXMuYXNzaWduZWUgPSBvYmouYXNzaWduZWU7XG4gICAgICAgICAgICB0aGlzLmNsYWltZWREYXRlID0gb2JqLmNsYWltZWREYXRlO1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVkRGF0ZSA9IG9iai5jcmVhdGVkRGF0ZTtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlZEZyb20gPSBvYmouY3JlYXRlZEZyb207XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZWRUbyA9IG9iai5jcmVhdGVkVG87XG4gICAgICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gb2JqLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgdGhpcy5kdWVEYXRlID0gb2JqLmR1ZURhdGU7XG4gICAgICAgICAgICB0aGlzLmxhc3RNb2RpZmllZEZyb20gPSBvYmoubGFzdE1vZGlmaWVkRnJvbTtcbiAgICAgICAgICAgIHRoaXMubGFzdE1vZGlmaWVkVG8gPSBvYmoubGFzdE1vZGlmaWVkVG87XG4gICAgICAgICAgICB0aGlzLmR1ZURhdGVGcm9tID0gb2JqLmR1ZURhdGVGcm9tO1xuICAgICAgICAgICAgdGhpcy5kdWVEYXRlVG8gPSBvYmouZHVlRGF0ZVRvO1xuICAgICAgICAgICAgdGhpcy5pZCA9IG9iai5pZDtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG9iai5uYW1lO1xuICAgICAgICAgICAgdGhpcy5vd25lciA9IG9iai5vd25lcjtcbiAgICAgICAgICAgIHRoaXMucGFyZW50VGFza0lkID0gb2JqLnBhcmVudFRhc2tJZDtcbiAgICAgICAgICAgIHRoaXMuc3RhbmRhbG9uZSA9IG9iai5zdGFuZGFsb25lO1xuICAgICAgICAgICAgdGhpcy5wcmlvcml0eSA9IG9iai5wcmlvcml0eTtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25JZCA9IG9iai5wcm9jZXNzRGVmaW5pdGlvbklkO1xuICAgICAgICAgICAgdGhpcy5wcm9jZXNzRGVmaW5pdGlvbk5hbWUgPSBvYmoucHJvY2Vzc0RlZmluaXRpb25OYW1lO1xuICAgICAgICAgICAgdGhpcy5wcm9jZXNzSW5zdGFuY2VJZCA9IG9iai5wcm9jZXNzSW5zdGFuY2VJZDtcbiAgICAgICAgICAgIHRoaXMuc3RhdHVzID0gb2JqLnN0YXR1cztcbiAgICAgICAgICAgIHRoaXMuY29tcGxldGVkQnkgPSBvYmouY29tcGxldGVkQnk7XG4gICAgICAgICAgICB0aGlzLm1heEl0ZW1zID0gb2JqLm1heEl0ZW1zO1xuICAgICAgICAgICAgdGhpcy5za2lwQ291bnQgPSBvYmouc2tpcENvdW50O1xuICAgICAgICAgICAgdGhpcy5zb3J0aW5nID0gb2JqLnNvcnRpbmc7XG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlZEZyb20gPSBvYmouY29tcGxldGVkRnJvbTtcbiAgICAgICAgICAgIHRoaXMuY29tcGxldGVkVG8gPSBvYmouY29tcGxldGVkVG87XG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlZERhdGUgPSBvYmouY29tcGxldGVkRGF0ZTtcbiAgICAgICAgICAgIHRoaXMuY2FuZGlkYXRlR3JvdXBJZCA9IG9iai5jYW5kaWRhdGVHcm91cElkO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19