/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DateRangeFilterService } from '../../../common/date-range-filter/date-range-filter.service';
export class TaskFilterCloudModel {
    constructor(obj) {
        this.dateRangeFilterService = new DateRangeFilterService();
        if (obj) {
            this.id = obj.id || Math.random().toString(36).substr(2, 9);
            this.name = obj.name || null;
            this.key = obj.key || null;
            this.icon = obj.icon || null;
            this.index = obj.index || null;
            this.appName = obj.appName || obj.appName === '' ? obj.appName : null;
            this.status = obj.status || null;
            this.sort = obj.sort || null;
            this.assignee = obj.assignee || null;
            this.order = obj.order || null;
            this.owner = obj.owner || null;
            this.processDefinitionName = obj.processDefinitionName || null;
            this.processDefinitionId = obj.processDefinitionId || null;
            this.processInstanceId = obj.processInstanceId || null;
            this.createdDate = obj.createdDate || null;
            this.dueDateType = obj.dueDateType || null;
            this.dueDate = obj.dueDate || null;
            this._dueDateFrom = obj._dueDateFrom || null;
            this._dueDateTo = obj._dueDateTo || null;
            this.taskName = obj.taskName || null;
            this.taskId = obj.taskId || null;
            this.parentTaskId = obj.parentTaskId || null;
            this.priority = obj.priority || null;
            this.standalone = obj.standalone || null;
            this.lastModifiedFrom = obj.lastModifiedFrom || null;
            this.lastModifiedTo = obj.lastModifiedTo || null;
            this.completedBy = obj.completedBy || null;
            this.completedDateType = obj.completedDateType || null;
            this.completedFrom = obj._completedFrom || null;
            this.completedTo = obj._completedTo || null;
            this.completedDate = obj.completedDate || null;
            this.createdDateType = obj.createdDateType || null;
            this.createdFrom = obj._createdFrom || null;
            this.createdTo = obj._createdTo || null;
            this.candidateGroups = obj.candidateGroups || null;
            this.showCounter = obj.showCounter || false;
        }
    }
    set dueDateFrom(dueDateFrom) {
        this._dueDateFrom = dueDateFrom;
    }
    set dueDateTo(dueDateTo) {
        this._dueDateTo = dueDateTo;
    }
    get dueDateFrom() {
        if (this.isDateRangeType(this.dueDateType)) {
            return this._dueDateFrom;
        }
        return this.getStartDate(this.dueDateType);
    }
    get dueDateTo() {
        if (this.isDateRangeType(this.dueDateType)) {
            return this._dueDateTo;
        }
        return this.getEndDate(this.dueDateType);
    }
    set completedFrom(completedFrom) {
        this._completedFrom = completedFrom;
    }
    set completedTo(completedTo) {
        this._completedTo = completedTo;
    }
    get completedFrom() {
        if (this.isDateRangeType(this.completedDateType)) {
            return this._completedFrom;
        }
        return this.getStartDate(this.completedDateType);
    }
    get completedTo() {
        if (this.isDateRangeType(this.completedDateType)) {
            return this._completedTo;
        }
        return this.getEndDate(this.completedDateType);
    }
    set createdFrom(createdFrom) {
        this._createdFrom = createdFrom;
    }
    set createdTo(createdTo) {
        this._createdTo = createdTo;
    }
    get createdFrom() {
        if (this.isDateRangeType(this.createdDateType)) {
            return this._createdFrom;
        }
        return this.getStartDate(this.createdDateType);
    }
    get createdTo() {
        if (this.isDateRangeType(this.createdDateType)) {
            return this._createdTo;
        }
        return this.getEndDate(this.createdDateType);
    }
    getStartDate(key) {
        return this.dateRangeFilterService.getDateRange(key).startDate;
    }
    getEndDate(key) {
        return this.dateRangeFilterService.getDateRange(key).endDate;
    }
    isDateRangeType(type) {
        return !!this.dateRangeFilterService.isDateRangeType(type);
    }
}
export var AssignmentType;
(function (AssignmentType) {
    AssignmentType["CURRENT_USER"] = "CURRENT_USER";
    AssignmentType["UNASSIGNED"] = "UNASSIGNED";
    AssignmentType["CANDIDATE_GROUPS"] = "CANDIDATE_GROUPS";
})(AssignmentType || (AssignmentType = {}));
//# sourceMappingURL=data:application/json;base64,