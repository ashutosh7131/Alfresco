/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { NgModule } from '@angular/core';
import { TaskListCloudModule } from './task-list/task-list-cloud.module';
import { TaskFiltersCloudModule } from './task-filters/task-filters-cloud.module';
import { StartTaskCloudModule } from './start-task/start-task-cloud.module';
import { TaskHeaderCloudModule } from './task-header/task-header-cloud.module';
import { TaskDirectiveModule } from './directives/task-directive.module';
import { TaskFormModule } from './task-form/task-form.module';
import * as ɵngcc0 from '@angular/core';
export class TaskCloudModule {
}
TaskCloudModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TaskCloudModule });
TaskCloudModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TaskCloudModule_Factory(t) { return new (t || TaskCloudModule)(); }, imports: [[
            TaskListCloudModule,
            TaskFiltersCloudModule,
            StartTaskCloudModule,
            TaskHeaderCloudModule,
            TaskDirectiveModule,
            TaskFormModule
        ], TaskListCloudModule,
        TaskFiltersCloudModule,
        StartTaskCloudModule,
        TaskHeaderCloudModule,
        TaskDirectiveModule,
        TaskFormModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TaskCloudModule, { imports: function () { return [TaskListCloudModule,
        TaskFiltersCloudModule,
        StartTaskCloudModule,
        TaskHeaderCloudModule,
        TaskDirectiveModule,
        TaskFormModule]; }, exports: function () { return [TaskListCloudModule,
        TaskFiltersCloudModule,
        StartTaskCloudModule,
        TaskHeaderCloudModule,
        TaskDirectiveModule,
        TaskFormModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TaskCloudModule, [{
        type: NgModule,
        args: [{
                imports: [
                    TaskListCloudModule,
                    TaskFiltersCloudModule,
                    StartTaskCloudModule,
                    TaskHeaderCloudModule,
                    TaskDirectiveModule,
                    TaskFormModule
                ],
                exports: [
                    TaskListCloudModule,
                    TaskFiltersCloudModule,
                    StartTaskCloudModule,
                    TaskHeaderCloudModule,
                    TaskDirectiveModule,
                    TaskFormModule
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1jbG91ZC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9wcm9jZXNzLXNlcnZpY2VzLWNsb3VkL3NyYy9saWIvdGFzay90YXNrLWNsb3VkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7O0FBb0I5RCxNQUFNLE9BQU8sZUFBZTtBQUFHOzJDQWxCOUIsUUFBUSxTQUFDO0dBQ04sT0FBTyxFQUFFLHNCQUNMLG1CQUFtQixzQkFDbkIsc0JBQXNCLHNCQUN0QixvQkFBb0I7YUFDcEI7Q0FBcUIsc0JBQ3JCO01BQW1CLHNCQUNuQjtRQUFjLGtCQUNqQjtTQUNELE9BQU8sRUFBRTtPQUNMLG1CQUFtQjtxQkFDbkI7V0FBc0I7Q0FDdEIsb0JBQW9CO2FBQ3BCO0dBQXFCLHNCQUNyQjtlQUFtQjtTQUNuQixjQUFjLGtCQUNqQixjQUNKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGFza0xpc3RDbG91ZE1vZHVsZSB9IGZyb20gJy4vdGFzay1saXN0L3Rhc2stbGlzdC1jbG91ZC5tb2R1bGUnO1xuaW1wb3J0IHsgVGFza0ZpbHRlcnNDbG91ZE1vZHVsZSB9IGZyb20gJy4vdGFzay1maWx0ZXJzL3Rhc2stZmlsdGVycy1jbG91ZC5tb2R1bGUnO1xuaW1wb3J0IHsgU3RhcnRUYXNrQ2xvdWRNb2R1bGUgfSBmcm9tICcuL3N0YXJ0LXRhc2svc3RhcnQtdGFzay1jbG91ZC5tb2R1bGUnO1xuaW1wb3J0IHsgVGFza0hlYWRlckNsb3VkTW9kdWxlIH0gZnJvbSAnLi90YXNrLWhlYWRlci90YXNrLWhlYWRlci1jbG91ZC5tb2R1bGUnO1xuaW1wb3J0IHsgVGFza0RpcmVjdGl2ZU1vZHVsZSB9IGZyb20gJy4vZGlyZWN0aXZlcy90YXNrLWRpcmVjdGl2ZS5tb2R1bGUnO1xuaW1wb3J0IHsgVGFza0Zvcm1Nb2R1bGUgfSBmcm9tICcuL3Rhc2stZm9ybS90YXNrLWZvcm0ubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIFRhc2tMaXN0Q2xvdWRNb2R1bGUsXG4gICAgICAgIFRhc2tGaWx0ZXJzQ2xvdWRNb2R1bGUsXG4gICAgICAgIFN0YXJ0VGFza0Nsb3VkTW9kdWxlLFxuICAgICAgICBUYXNrSGVhZGVyQ2xvdWRNb2R1bGUsXG4gICAgICAgIFRhc2tEaXJlY3RpdmVNb2R1bGUsXG4gICAgICAgIFRhc2tGb3JtTW9kdWxlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFRhc2tMaXN0Q2xvdWRNb2R1bGUsXG4gICAgICAgIFRhc2tGaWx0ZXJzQ2xvdWRNb2R1bGUsXG4gICAgICAgIFN0YXJ0VGFza0Nsb3VkTW9kdWxlLFxuICAgICAgICBUYXNrSGVhZGVyQ2xvdWRNb2R1bGUsXG4gICAgICAgIFRhc2tEaXJlY3RpdmVNb2R1bGUsXG4gICAgICAgIFRhc2tGb3JtTW9kdWxlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUYXNrQ2xvdWRNb2R1bGUgeyB9XG4iXX0=