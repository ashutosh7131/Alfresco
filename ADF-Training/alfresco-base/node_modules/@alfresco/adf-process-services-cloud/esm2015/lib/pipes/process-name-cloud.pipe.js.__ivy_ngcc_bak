/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Pipe } from '@angular/core';
import moment from 'moment-es6';
import { LocalizedDatePipe } from '@alfresco/adf-core';
export class ProcessNameCloudPipe {
    constructor(localizedDatePipe) {
        this.localizedDatePipe = localizedDatePipe;
    }
    transform(processNameFormat, processInstance) {
        let processName = processNameFormat;
        if (processName.match(ProcessNameCloudPipe.DATE_TIME_IDENTIFIER_REG_EXP)) {
            const presentDateTime = moment.now();
            processName = processName.replace(ProcessNameCloudPipe.DATE_TIME_IDENTIFIER_REG_EXP, this.localizedDatePipe.transform(presentDateTime, 'medium'));
        }
        if (processName.match(ProcessNameCloudPipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP)) {
            const selectedProcessDefinitionName = processInstance ? processInstance.processDefinitionName : '';
            processName = processName.replace(ProcessNameCloudPipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP, selectedProcessDefinitionName);
        }
        return processName;
    }
}
ProcessNameCloudPipe.DATE_TIME_IDENTIFIER_REG_EXP = new RegExp('%{datetime}', 'i');
ProcessNameCloudPipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP = new RegExp('%{processdefinition}', 'i');
ProcessNameCloudPipe.decorators = [
    { type: Pipe, args: [{ name: 'processNameCloud' },] }
];
ProcessNameCloudPipe.ctorParameters = () => [
    { type: LocalizedDatePipe }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1uYW1lLWNsb3VkLnBpcGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9wcm9jZXNzLXNlcnZpY2VzLWNsb3VkL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9wcm9jZXNzLW5hbWUtY2xvdWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLE1BQU0sTUFBTSxZQUFZLENBQUM7QUFDaEMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFJdkQsTUFBTSxPQUFPLG9CQUFvQjtJQUk3QixZQUFvQixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtJQUN4RCxDQUFDO0lBRUQsU0FBUyxDQUFDLGlCQUF5QixFQUFFLGVBQXNDO1FBQ3ZFLElBQUksV0FBVyxHQUFHLGlCQUFpQixDQUFDO1FBQ3BDLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyw0QkFBNEIsQ0FBQyxFQUFFO1lBQ3RFLE1BQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUNyQyxXQUFXLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FDN0Isb0JBQW9CLENBQUMsNEJBQTRCLEVBQ2pELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLFFBQVEsQ0FBQyxDQUM5RCxDQUFDO1NBQ0w7UUFFRCxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMscUNBQXFDLENBQUMsRUFBRTtZQUMvRSxNQUFNLDZCQUE2QixHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDbkcsV0FBVyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQzdCLG9CQUFvQixDQUFDLHFDQUFxQyxFQUMxRCw2QkFBNkIsQ0FDaEMsQ0FBQztTQUNMO1FBQ0QsT0FBTyxXQUFXLENBQUM7SUFDdkIsQ0FBQzs7QUF4Qk0saURBQTRCLEdBQUcsSUFBSSxNQUFNLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQzlELDBEQUFxQyxHQUFHLElBQUksTUFBTSxDQUFDLHNCQUFzQixFQUFFLEdBQUcsQ0FBQyxDQUFDOztZQUgxRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUU7OztZQUh6QixpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudC1lczYnO1xuaW1wb3J0IHsgTG9jYWxpemVkRGF0ZVBpcGUgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuaW1wb3J0IHsgUHJvY2Vzc0luc3RhbmNlQ2xvdWQgfSBmcm9tICcuLi9wcm9jZXNzL3N0YXJ0LXByb2Nlc3MvbW9kZWxzL3Byb2Nlc3MtaW5zdGFuY2UtY2xvdWQubW9kZWwnO1xuXG5AUGlwZSh7IG5hbWU6ICdwcm9jZXNzTmFtZUNsb3VkJyB9KVxuZXhwb3J0IGNsYXNzIFByb2Nlc3NOYW1lQ2xvdWRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgc3RhdGljIERBVEVfVElNRV9JREVOVElGSUVSX1JFR19FWFAgPSBuZXcgUmVnRXhwKCcle2RhdGV0aW1lfScsICdpJyk7XG4gICAgc3RhdGljIFBST0NFU1NfREVGSU5JVElPTl9JREVOVElGSUVSX1JFR19FWFAgPSBuZXcgUmVnRXhwKCcle3Byb2Nlc3NkZWZpbml0aW9ufScsICdpJyk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGxvY2FsaXplZERhdGVQaXBlOiBMb2NhbGl6ZWREYXRlUGlwZSkge1xuICAgIH1cblxuICAgIHRyYW5zZm9ybShwcm9jZXNzTmFtZUZvcm1hdDogc3RyaW5nLCBwcm9jZXNzSW5zdGFuY2U/OiBQcm9jZXNzSW5zdGFuY2VDbG91ZCk6IHN0cmluZyB7XG4gICAgICAgIGxldCBwcm9jZXNzTmFtZSA9IHByb2Nlc3NOYW1lRm9ybWF0O1xuICAgICAgICBpZiAocHJvY2Vzc05hbWUubWF0Y2goUHJvY2Vzc05hbWVDbG91ZFBpcGUuREFURV9USU1FX0lERU5USUZJRVJfUkVHX0VYUCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHByZXNlbnREYXRlVGltZSA9IG1vbWVudC5ub3coKTtcbiAgICAgICAgICAgIHByb2Nlc3NOYW1lID0gcHJvY2Vzc05hbWUucmVwbGFjZShcbiAgICAgICAgICAgICAgICBQcm9jZXNzTmFtZUNsb3VkUGlwZS5EQVRFX1RJTUVfSURFTlRJRklFUl9SRUdfRVhQLFxuICAgICAgICAgICAgICAgIHRoaXMubG9jYWxpemVkRGF0ZVBpcGUudHJhbnNmb3JtKHByZXNlbnREYXRlVGltZSwgJ21lZGl1bScpXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHByb2Nlc3NOYW1lLm1hdGNoKFByb2Nlc3NOYW1lQ2xvdWRQaXBlLlBST0NFU1NfREVGSU5JVElPTl9JREVOVElGSUVSX1JFR19FWFApKSB7XG4gICAgICAgICAgICBjb25zdCBzZWxlY3RlZFByb2Nlc3NEZWZpbml0aW9uTmFtZSA9IHByb2Nlc3NJbnN0YW5jZSA/IHByb2Nlc3NJbnN0YW5jZS5wcm9jZXNzRGVmaW5pdGlvbk5hbWUgOiAnJztcbiAgICAgICAgICAgIHByb2Nlc3NOYW1lID0gcHJvY2Vzc05hbWUucmVwbGFjZShcbiAgICAgICAgICAgICAgICBQcm9jZXNzTmFtZUNsb3VkUGlwZS5QUk9DRVNTX0RFRklOSVRJT05fSURFTlRJRklFUl9SRUdfRVhQLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkUHJvY2Vzc0RlZmluaXRpb25OYW1lXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcm9jZXNzTmFtZTtcbiAgICB9XG59XG4iXX0=