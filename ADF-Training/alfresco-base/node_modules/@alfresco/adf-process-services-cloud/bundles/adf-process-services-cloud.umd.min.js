!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@alfresco/adf-core"),require("@angular/flex-layout"),require("@angular/material/autocomplete"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/core"),require("@angular/material/form-field"),require("@angular/material/datepicker"),require("@angular/material/dialog"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/slide-toggle"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/tooltip"),require("@angular/common"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("moment-es6"),require("apollo-angular"),require("apollo-angular/http"),require("@apollo/client/core"),require("@apollo/client/link/ws"),require("@apollo/client/link/error"),require("@apollo/client/utilities"),require("@angular/common/http"),require("@angular/animations"),require("moment"),require("@alfresco/js-api"),require("@alfresco/adf-content-services")):"function"==typeof define&&define.amd?define("@alfresco/adf-process-services-cloud",["exports","@angular/core","@alfresco/adf-core","@angular/flex-layout","@angular/material/autocomplete","@angular/material/button","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/core","@angular/material/form-field","@angular/material/datepicker","@angular/material/dialog","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/slide-toggle","@angular/material/table","@angular/material/tabs","@angular/material/tooltip","@angular/common","rxjs","rxjs/operators","@angular/forms","moment-es6","apollo-angular","apollo-angular/http","@apollo/client/core","@apollo/client/link/ws","@apollo/client/link/error","@apollo/client/utilities","@angular/common/http","@angular/animations","moment","@alfresco/js-api","@alfresco/adf-content-services"],t):t(((e=e||self).alfresco=e.alfresco||{},e.alfresco["adf-process-services-cloud"]={}),e.ng.core,e["@alfresco/adf-core"],e.ng.flexLayout,e.ng.material.autocomplete,e.ng.material.button,e.ng.material.card,e.ng.material.checkbox,e.ng.material.chips,e.ng.material.core,e.ng.material.formField,e.ng.material.datepicker,e.ng.material.dialog,e.ng.material.expansion,e.ng.material.gridList,e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material.menu,e.ng.material.progressSpinner,e.ng.material.radio,e.ng.material.select,e.ng.material.slideToggle,e.ng.material.table,e.ng.material.tabs,e.ng.material.tooltip,e.ng.common,e.rxjs,e.rxjs.operators,e.ng.forms,e["moment-es6"],e["apollo-angular"],e["apollo-angular/http"],e["@apollo/client/core"],e["@apollo/client/link/ws"],e["@apollo/client/link/error"],e["@apollo/client/utilities"],e.ng.common.http,e.ng.animations,e.moment,e["@alfresco/js-api"],e["@alfresco/adf-content-services"])}(this,(function(e,t,r,i,n,o,a,s,l,p,c,d,u,f,m,h,y,g,v,D,S,T,E,F,C,I,A,_,k,P,b,O,L,R,w,N,U,M,x,V,G,B){"use strict";b=b&&Object.prototype.hasOwnProperty.call(b,"default")?b.default:b,V=V&&Object.prototype.hasOwnProperty.call(V,"default")?V.default:V;
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var $=function(){};$.decorators=[{type:t.NgModule,args:[{providers:[{provide:c.MAT_FORM_FIELD_DEFAULT_OPTIONS,useValue:{floatLabel:"never"}}],imports:[n.MatAutocompleteModule,o.MatButtonModule,a.MatCardModule,u.MatDialogModule,s.MatCheckboxModule,d.MatDatepickerModule,m.MatGridListModule,h.MatIconModule,y.MatInputModule,g.MatListModule,p.MatOptionModule,S.MatRadioModule,T.MatSelectModule,E.MatSlideToggleModule,F.MatTableModule,C.MatTabsModule,D.MatProgressSpinnerModule,p.MatNativeDateModule,p.MatRippleModule,I.MatTooltipModule,l.MatChipsModule,v.MatMenuModule,f.MatExpansionModule],exports:[n.MatAutocompleteModule,o.MatButtonModule,a.MatCardModule,u.MatDialogModule,s.MatCheckboxModule,d.MatDatepickerModule,m.MatGridListModule,h.MatIconModule,y.MatInputModule,g.MatListModule,p.MatOptionModule,S.MatRadioModule,T.MatSelectModule,E.MatSlideToggleModule,F.MatTableModule,C.MatTabsModule,D.MatProgressSpinnerModule,p.MatNativeDateModule,p.MatRippleModule,I.MatTooltipModule,l.MatChipsModule,v.MatMenuModule,f.MatExpansionModule]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var K="theme-2",j="favorite_border",q=function(){function e(){this.selectedApp=new t.EventEmitter}return e.prototype.onSelectApp=function(e){this.selectedApp.emit(e)},e.prototype.getTheme=function(){return this.applicationInstance.theme||K},e.prototype.getIcon=function(){return this.applicationInstance.icon||j},e}();q.decorators=[{type:t.Component,args:[{selector:"adf-cloud-app-details",template:'<div class="adf-app-listgrid">\n    <div class="adf-app-listgrid-item">\n        <mat-card tabindex="0"\n            fxLayout="column"\n            role="button"\n            class="adf-app-listgrid-item-card"\n            title="{{applicationInstance.name}}"\n            [ngClass]="getTheme()"\n            (click)="onSelectApp(applicationInstance)"\n            (keyup.enter)="onSelectApp(applicationInstance)">\n            <div class="adf-app-listgrid-item-card-logo">\n                <mat-icon class="adf-app-listgrid-item-card-logo-icon">{{ getIcon() }}</mat-icon>\n            </div>\n            <div mat-card-title class="adf-app-listgrid-item-card-title">\n                <h1>{{applicationInstance.name}}</h1>\n            </div>\n            <mat-card-subtitle class="adf-app-listgrid-item-card-subtitle" fxFlex="1 0 auto">\n                <div class="adf-line-clamp">{{applicationInstance.description}}</div>\n            </mat-card-subtitle>\n        </mat-card>\n    </div>\n  </div>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-app-listgrid{padding:8px}.adf-app-listgrid-item{box-sizing:border-box;outline:none;padding:8px}.adf-app-listgrid-item-card{min-height:200px;outline:none;padding:0!important;transition:transform .28s cubic-bezier(.4,0,.2,1),box-shadow .28s cubic-bezier(.4,0,.2,1)}.adf-app-listgrid-item-card.theme-1{background-color:#269abc}.adf-app-listgrid-item-card.theme-2{background-color:#7da9b0}.adf-app-listgrid-item-card.theme-3{background-color:#7689ab}.adf-app-listgrid-item-card.theme-4{background-color:#c74e3e}.adf-app-listgrid-item-card.theme-5{background-color:#fab96c}.adf-app-listgrid-item-card.theme-6{background-color:#759d4c}.adf-app-listgrid-item-card.theme-7{background-color:#b1b489}.adf-app-listgrid-item-card.theme-8{background-color:#a17299}.adf-app-listgrid-item-card.theme-9{background-color:#696c67}.adf-app-listgrid-item-card.theme-10{background-color:#cabb33}.adf-app-listgrid-item-card:hover{box-shadow:0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.2);cursor:pointer;transform:scale(1.015)}.adf-app-listgrid-item-card-logo{padding:16px;position:absolute;right:20px;top:20px;z-index:9}.adf-app-listgrid-item-card-logo-icon{font-size:70px;height:1em!important;width:1em!important}.theme-1 .adf-app-listgrid-item-card-logo-icon{color:#168aac}.theme-2 .adf-app-listgrid-item-card-logo-icon{color:#6d99a0}.theme-3 .adf-app-listgrid-item-card-logo-icon{color:#66799b}.theme-4 .adf-app-listgrid-item-card-logo-icon{color:#b73e2e}.theme-5 .adf-app-listgrid-item-card-logo-icon{color:#eaa95c}.theme-6 .adf-app-listgrid-item-card-logo-icon{color:#658d3c}.theme-7 .adf-app-listgrid-item-card-logo-icon{color:#a1a479}.theme-8 .adf-app-listgrid-item-card-logo-icon{color:#916289}.theme-9 .adf-app-listgrid-item-card-logo-icon{color:#595c57}.theme-10 .adf-app-listgrid-item-card-logo-icon{color:#baab23}.adf-app-listgrid-item-card-title{margin-bottom:0!important;padding:16px;z-index:9999}.adf-app-listgrid-item-card-title h1{color:#fff;font-size:24px;line-height:normal;margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:80%}.adf-app-listgrid-item-card-subtitle{color:#fff;padding:16px;z-index:9999}.adf-app-listgrid-item-card-subtitle .adf-line-clamp{line-height:1.25;overflow:hidden;padding:0!important;position:relative;text-overflow:ellipsis}@supports (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{-webkit-box-orient:vertical;-webkit-line-clamp:3;display:-webkit-box;height:3.7125em}}@supports not (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{white-space:nowrap;width:100%}}.adf-app-listgrid-item-card-actions{border-top:1px solid rgba(0,0,0,.1);box-sizing:border-box;min-height:48px;padding:0 16px 16px!important}.adf-app-listgrid-item-card-actions-icon{color:#e9f1f3}.adf-app-listgrid-item-card-actions.mat-card-actions{margin-left:0;margin-right:0}.adf-app-listgrid-item-card-actions.mat-card-actions:last-child{margin-bottom:0!important}"]}]}],q.propDecorators={applicationInstance:[{type:t.Input}],selectedApp:[{type:t.Output}]};var H=function(){function e(e,t,r){this.apiService=e,this.logService=t,this.appConfigService=r,this.loadApps()}return e.prototype.getDeployedApplicationsByStatus=function(e,t){return this.hasDeployedApps()?_.of(this.deployedApps):this.getApplicationsByStatus(e,t)},e.prototype.hasDeployedApps=function(){return this.deployedApps&&this.deployedApps.length>0},e.prototype.loadApps=function(){var e=this.appConfigService.get("alfresco-deployed-apps",[]);e.map((function(e){e.theme=e.theme?e.theme:"theme-1",e.icon=e.icon?e.icon:"favorite"})),this.deployedApps=e},e.prototype.getApplicationsByStatus=function(e,t){var r=this;if(""===e)return _.of([]);var i=this.apiService.getInstance().oauth2Auth,n=this.getApplicationUrl(),o={status:e,roles:t,sort:"name"};return _.from(i.callCustomApi(n,"GET",{},o,{},{},{},["application/json"],["application/json"])).pipe(k.map((function(e){return e.list.entries.map((function(e){return e.entry}))})),k.catchError((function(e){return r.handleError(e)})))},e.prototype.getApplicationUrl=function(){return this.appConfigService.get("bpmHost")+"/deployment-service/v1/applications"},e.prototype.handleError=function(e){return this.logService.error(e),_.throwError(e||"Server error")},e}();H.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new H(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.LogService),t.ɵɵinject(r.AppConfigService))},token:H,providedIn:"root"}),H.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],H.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.LogService},{type:r.AppConfigService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Y=function(){function e(r){this.appsProcessCloudService=r,this.layoutType=e.LAYOUT_GRID,this.appClick=new t.EventEmitter,this.loadingError$=new _.Subject,this.hasEmptyCustomContentTemplate=!1}return e.prototype.ngOnInit=function(){var t=this;this.isValidType()||this.setDefaultLayoutType(),this.apps$=this.appsProcessCloudService.getDeployedApplicationsByStatus(e.RUNNING_STATUS).pipe(k.catchError((function(){return t.loadingError$.next(!0),_.of()})))},e.prototype.ngAfterContentInit=function(){this.emptyCustomContent&&(this.hasEmptyCustomContentTemplate=!0)},e.prototype.onSelectApp=function(e){this.appClick.emit(e)},e.prototype.isValidType=function(){return!(!this.layoutType||this.layoutType!==e.LAYOUT_LIST&&this.layoutType!==e.LAYOUT_GRID)},e.prototype.setDefaultLayoutType=function(){this.layoutType=e.LAYOUT_GRID},e.prototype.isList=function(){return this.layoutType===e.LAYOUT_LIST},e.prototype.isGrid=function(){return this.layoutType===e.LAYOUT_GRID},e}();Y.LAYOUT_LIST="LIST",Y.LAYOUT_GRID="GRID",Y.RUNNING_STATUS="RUNNING",Y.decorators=[{type:t.Component,args:[{selector:"adf-cloud-app-list",template:'<div class="menu-container" *ngIf="apps$ | async as appsList; else loadingOrError">\n    <ng-container *ngIf="appsList.length > 0; else noApps">\n        <div *ngIf="isGrid(); else appList" fxLayout="row wrap">\n            <adf-cloud-app-details fxFlex="33.33333%" fxFlex.lt-md="50%" fxFlex.lt-sm="100%"\n                *ngFor="let app of appsList" [applicationInstance]="app" (selectedApp)="onSelectApp($event)">\n            </adf-cloud-app-details>\n        </div>\n\n        <ng-template #appList>\n            <mat-list class="adf-app-list">\n                <mat-list-item class="adf-app-list-item" (click)="onSelectApp(app)" (keyup.enter)="onSelectApp(app)"\n                    *ngFor="let app of appsList" tabindex="0" role="button" title="{{app.name}}">\n                    <mat-icon matListIcon>touch_app</mat-icon>\n                    <span matLine>{{app.name}}</span>\n                </mat-list-item>\n            </mat-list>\n        </ng-template>\n    </ng-container>\n</div>\n<ng-template #noApps>\n    <div class="adf-app-list-empty">\n        <ng-content select="adf-custom-empty-content-template" *ngIf="hasEmptyCustomContentTemplate; else defaultEmptyTemplate"\n            class="adf-custom-empty-template">\n        </ng-content>\n\n        <ng-template #defaultEmptyTemplate>\n            <adf-empty-content icon="apps" [title]="\'ADF_CLOUD_TASK_LIST.APPS.NO_APPS.TITLE\' | translate"\n                [subtitle]="\'ADF_CLOUD_TASK_LIST.APPS.NO_APPS.SUBTITLE\' | translate">\n            </adf-empty-content>\n        </ng-template>\n    </div>\n</ng-template>\n<ng-template #loadingOrError>\n    <div *ngIf="loadingError$ | async; else loading" class="adf-app-list-error">\n        <adf-empty-content icon="error_outline" [title]="\'ADF_CLOUD_TASK_LIST.APPS.ERROR.TITLE\' | translate"\n            [subtitle]="\'ADF_CLOUD_TASK_LIST.APPS.ERROR.SUBTITLE\' | translate">\n        </adf-empty-content>\n    </div>\n    <ng-template #loading>\n    <ng-container>\n        <div class="adf-app-list-spinner">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n</ng-template>\n',styles:[":host{width:100%}.adf-app-list-item{cursor:pointer}.adf-app-list-empty,.adf-app-list-error,.adf-app-list-spinner{align-items:center;display:flex;flex-direction:column;height:85vh;justify-content:center}.adf-app-list-empty .mat-spinner,.adf-app-list-error .mat-spinner,.adf-app-list-spinner .mat-spinner{margin:0 auto}"]}]}],Y.ctorParameters=function(){return[{type:H}]},Y.propDecorators={emptyCustomContent:[{type:t.ContentChild,args:[r.CustomEmptyContentTemplateDirective]}],layoutType:[{type:t.Input}],appClick:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var W=function(){};W.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,r.TemplateModule,$,i.FlexLayoutModule,r.CoreModule],declarations:[Y,q],exports:[Y,q]}]}];
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
var z=function(e,t){return(z=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)};function Q(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}z(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function J(e,t,r,i){return new(r||(r=Promise))((function(n,o){function a(e){try{l(i.next(e))}catch(e){o(e)}}function s(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((i=i.apply(e,t||[])).next())}))}function X(e,t){var r,i,n,o,a={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,i&&(n=2&o[0]?i.return:o[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,o[1])).done)return n;switch(i=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(n=a.trys,(n=n.length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){a.label=o[1];break}if(6===o[0]&&a.label<n[1]){a.label=n[1],n=o;break}if(n&&a.label<n[2]){a.label=n[2],a.ops.push(o);break}n[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{r=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}Object.create;function Z(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],i=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function ee(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var i,n,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(i=o.next()).done;)a.push(i.value)}catch(e){n={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return a}function te(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(ee(arguments[t]));return e}Object.create;
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var re=function(e){e&&(this.appName=e.appName,this.appVersion=e.appVersion,this.assignee=e.assignee,this.claimedDate=e.claimedDate,this.createdDate=e.createdDate,this.createdFrom=e.createdFrom,this.createdTo=e.createdTo,this.description=e.description,this.dueDate=e.dueDate,this.lastModifiedFrom=e.lastModifiedFrom,this.lastModifiedTo=e.lastModifiedTo,this.dueDateFrom=e.dueDateFrom,this.dueDateTo=e.dueDateTo,this.id=e.id,this.name=e.name,this.owner=e.owner,this.parentTaskId=e.parentTaskId,this.standalone=e.standalone,this.priority=e.priority,this.processDefinitionId=e.processDefinitionId,this.processDefinitionName=e.processDefinitionName,this.processInstanceId=e.processInstanceId,this.status=e.status,this.completedBy=e.completedBy,this.maxItems=e.maxItems,this.skipCount=e.skipCount,this.sorting=e.sorting,this.completedFrom=e.completedFrom,this.completedTo=e.completedTo,this.completedDate=e.completedDate,this.candidateGroupId=e.candidateGroupId)},ie=function(){function e(e,t){this.apiService=e,this.appConfigService=t,this.defaultParams={path:"",httpMethod:"",contentTypes:["application/json"],accepts:["application/json"],returnType:Object}}return e.prototype.getBasePath=function(e){return e?this.contextRoot+"/"+e:this.contextRoot},e.prototype.post=function(e,t){return _.from(this.callApi(Object.assign(Object.assign({},this.defaultParams),{path:e,httpMethod:"POST",bodyParam:t})))},e.prototype.put=function(e,t){return _.from(this.callApi(Object.assign(Object.assign({},this.defaultParams),{path:e,httpMethod:"PUT",bodyParam:t})))},e.prototype.delete=function(e){return _.from(this.callApi(Object.assign(Object.assign({},this.defaultParams),{path:e,httpMethod:"DELETE"})))},e.prototype.get=function(e,t){return _.from(this.callApi(Object.assign(Object.assign({},this.defaultParams),{path:e,httpMethod:"GET",queryParams:t})))},e.prototype.callApi=function(e){return this.apiService.getInstance().oauth2Auth.callCustomApi(e.path,e.httpMethod,e.pathParams,e.queryParams,e.headerParams,e.formParams,e.bodyParam,e.contentTypes,e.accepts,e.returnType,e.contextRoot,e.responseType)},Object.defineProperty(e.prototype,"contextRoot",{get:function(){return this.appConfigService.get("bpmHost","")},enumerable:!1,configurable:!0}),e}(),ne=function(e){function t(t,r,i){var n=e.call(this,t,r)||this;return n.logService=i,n}return Q(t,e),t.prototype.getTaskByRequest=function(e,t){if(e.appName||""===e.appName){t=t||this.getBasePath(e.appName)+"/query/v1/tasks";var r=this.buildQueryParams(e),i=this.buildSortingParam(e.sorting);return i&&(r.sort=i),this.get(t,r).pipe(k.map((function(e){var t=e.list&&e.list.entries;return t&&(e.list.entries=t.map((function(e){return e.entry}))),e})))}return this.logService.error("Appname is mandatory for querying task"),_.throwError("Appname not configured")},t.prototype.buildQueryParams=function(e){var t={};for(var r in e)e.hasOwnProperty(r)&&!this.isExcludedField(r)&&this.isPropertyValueValid(e,r)&&(t[r]=e[r]);return t},t.prototype.isExcludedField=function(e){return"appName"===e||"sorting"===e},t.prototype.isPropertyValueValid=function(e,t){return""!==e[t]&&null!==e[t]&&void 0!==e[t]},t.prototype.buildSortingParam=function(e){var t,r,i="";if(e)try{for(var n=Z(e),o=n.next();!o.done;o=n.next()){var a=o.value;i=i?i+"&"+a.orderBy+","+a.direction:a.orderBy+","+a.direction}}catch(e){t={error:e}}finally{try{o&&!o.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}return encodeURI(i)},t}(ie);
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */ne.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new ne(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(r.LogService))},token:ne,providedIn:"root"}),ne.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],ne.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:r.LogService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var oe,ae={default:[{key:"name",type:"text",title:"ADF_CLOUD_TASK_LIST.PROPERTIES.NAME",sortable:!0},{key:"created",type:"text",title:"ADF_CLOUD_TASK_LIST.PROPERTIES.CREATED",cssClass:"hidden",sortable:!0},{key:"assignee",type:"text",title:"ADF_CLOUD_TASK_LIST.PROPERTIES.ASSIGNEE",cssClass:"hidden",sortable:!0}]},se=function(e){e&&(this.orderBy=e.orderBy,this.direction=e.direction)},le=function(e){e&&(this.name=e.name||null,this.description=e.description||null,this.assignee=e.assignee||null,this.priority=e.priority||null,this.dueDate=e.dueDate||null,this.candidateUsers=e.candidateUsers||null,this.candidateGroups=e.candidateGroups||null,this.formKey=e.formKey||null,this.payloadType="CreateTaskPayload")},pe=function(e){this.id=e&&e.id||null,this.name=e&&e.name||null,this.appName=e&&e.appName||null,this.key=e&&e.key||null,this.formKey=e&&e.formKey||null,this.version=e&&e.version||0,this.appVersion=e&&e.appVersion||0};(
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
oe=e.ClaimTaskEnum||(e.ClaimTaskEnum={})).claim="claim",oe.unclaim="unclaim";var ce=[{label:"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.NONE",value:"0",key:"0"},{label:"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.LOW",value:"1",key:"1"},{label:"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.NORMAL",value:"2",key:"2"},{label:"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.HIGH",value:"3",key:"3"}],de="ASSIGNED",ue="CREATED",fe=function(e){function t(t,r,i,n,o){var a=e.call(this,t,r)||this;return a.logService=i,a.translateService=n,a.identityUserService=o,a.dataChangesDetected$=new _.Subject,a}return Q(t,e),t.prototype.completeTask=function(e,t){if((e||""===e)&&t){var r=this.getBasePath(e)+"/rb/v1/tasks/"+t+"/complete";return this.post(r,{payloadType:"CompleteTaskPayload"})}return this.logService.error("AppName and TaskId are mandatory for complete a task"),_.throwError("AppName/TaskId not configured")},t.prototype.canCompleteTask=function(e){return e&&e.status===de&&this.isAssignedToMe(e.assignee)},t.prototype.isTaskEditable=function(e){return e&&e.status===de&&this.isAssignedToMe(e.assignee)},t.prototype.isAssigneePropertyClickable=function(e,t,r){var i=!1,n=[de];return((null==t?void 0:t.length)||(null==r?void 0:r.length))&&(i=n.includes(e.status)),i},t.prototype.canClaimTask=function(e){return e&&e.status===ue},t.prototype.canUnclaimTask=function(e){var t=this.identityUserService.getCurrentUserInfo().username;return e&&e.status===de&&e.assignee===t},t.prototype.claimTask=function(e,t,r){var i=this;if((e||""===e)&&t){var n=this.getBasePath(e)+"/rb/v1/tasks/"+t+"/claim?assignee="+r;return this.post(n).pipe(k.map((function(e){return i.dataChangesDetected$.next(),e.entry})))}return this.logService.error("AppName and TaskId are mandatory for querying a task"),_.throwError("AppName/TaskId not configured")},t.prototype.unclaimTask=function(e,t){var r=this;if((e||""===e)&&t){var i=this.getBasePath(e)+"/rb/v1/tasks/"+t+"/release";return this.post(i).pipe(k.map((function(e){return r.dataChangesDetected$.next(),e.entry})))}return this.logService.error("AppName and TaskId are mandatory for querying a task"),_.throwError("AppName/TaskId not configured")},t.prototype.getTaskById=function(e,t){if((e||""===e)&&t){var r=this.getBasePath(e)+"/query/v1/tasks/"+t;return this.get(r).pipe(k.map((function(e){return e.entry})))}return this.logService.error("AppName and TaskId are mandatory for querying a task"),_.throwError("AppName/TaskId not configured")},t.prototype.createNewTask=function(e,t){var r=this.getBasePath(t)+"/rb/v1/tasks",i=JSON.stringify(new le(e));return this.post(r,i).pipe(k.map((function(e){return e.entry})))},t.prototype.updateTask=function(e,t,r){if((e||""===e)&&t){r.payloadType="UpdateTaskPayload";var i=this.getBasePath(e)+"/rb/v1/tasks/"+t;return this.put(i,r).pipe(k.map((function(e){return e.entry})))}return this.logService.error("AppName and TaskId are mandatory for querying a task"),_.throwError("AppName/TaskId not configured")},t.prototype.getCandidateUsers=function(e,t){if((e||""===e)&&t){var r=this.getBasePath(e)+"/query/v1/tasks/"+t+"/candidate-users";return this.get(r)}return this.logService.error("AppName and TaskId are mandatory to get candidate user"),_.of([])},t.prototype.getCandidateGroups=function(e,t){if((e||""===e)&&t){var r=this.getBasePath(e)+"/query/v1/tasks/"+t+"/candidate-groups";return this.get(r)}return this.logService.error("AppName and TaskId are mandatory to get candidate groups"),_.of([])},t.prototype.getProcessDefinitions=function(e){if(e||""===e){var t=this.getBasePath(e)+"/rb/v1/process-definitions";return this.get(t).pipe(k.map((function(e){return e.list.entries.map((function(e){return new pe(e.entry)}))})))}return this.logService.error("AppName is mandatory for querying task"),_.throwError("AppName not configured")},t.prototype.assign=function(e,t,r){if(e&&t){var i={assignee:r,taskId:t,payloadType:"AssignTaskPayload"},n=this.getBasePath(e)+"/rb/v1/tasks/"+t+"/assign";return this.post(n,i).pipe(k.map((function(e){return e.entry})))}return this.logService.error("AppName and TaskId are mandatory to change/update the task assignee"),_.throwError("AppName/TaskId not configured")},t.prototype.getPriorityLabel=function(e){var t=this.priorities.find((function(t){return t.value===e.toString()}))||this.priorities[0];return this.translateService.instant(t.label)},Object.defineProperty(t.prototype,"priorities",{get:function(){return this.appConfigService.get("adf-cloud-priority-values")||ce},enumerable:!1,configurable:!0}),t.prototype.isAssignedToMe=function(e){return e===this.identityUserService.getCurrentUserInfo().username},t}(ie);fe.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new fe(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(r.LogService),t.ɵɵinject(r.TranslationService),t.ɵɵinject(r.IdentityUserService))},token:fe,providedIn:"root"}),fe.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],fe.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:r.LogService},{type:r.TranslationService},{type:r.IdentityUserService}]};var me=function(e){function i(r,i,n,o){var a=e.call(this,r,o,ae)||this;return a.taskCloudService=i,a.userPreferences=n,a.appName="",a.selectionMode="single",a.multiselect=!1,a.stickyHeader=!1,a.showActions=!1,a.actionsPosition="right",a.showContextMenu=!1,a.showRowContextMenu=new t.EventEmitter,a.showRowActionsMenu=new t.EventEmitter,a.executeRowAction=new t.EventEmitter,a.rowClick=new t.EventEmitter,a.rowsSelected=new t.EventEmitter,a.success=new t.EventEmitter,a.error=new t.EventEmitter,a.rows=[],a.skipCount=0,a.isLoading=!0,a.defaultSorting={key:"startDate",direction:"desc"},a.onDestroy$=new _.Subject,a.size=n.paginationSize,a.pagination=new _.BehaviorSubject({maxItems:a.size,skipCount:0,totalItems:0}),a.boundReplacePriorityValues=a.replacePriorityValues.bind(a),a}return Q(i,e),i.prototype.ngOnInit=function(){var e=this;this.userPreferences.select(r.UserPreferenceValues.PaginationSize).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){return e.size=t}))},i.prototype.ngOnChanges=function(e){e.sorting&&this.formatSorting(e.sorting.currentValue),this.reload()},i.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},i.prototype.ngAfterContentInit=function(){this.createDatatableSchema()},i.prototype.reload=function(){this.requestNode=this.createRequestNode(),this.requestNode.appName||""===this.requestNode.appName?this.load(this.requestNode):this.rows=[]},i.prototype.isListEmpty=function(){return!this.rows||0===this.rows.length},i.prototype.resetPagination=function(){this.skipCount=0,this.size=this.userPreferences.paginationSize,this.pagination.next({skipCount:0,maxItems:this.size})},i.prototype.updatePagination=function(e){this.size=e.maxItems,this.skipCount=e.skipCount,this.pagination.next(e),this.reload()},i.prototype.onSortingChanged=function(e){this.setSorting(e.detail),this.formatSorting(this.sorting),this.reload()},i.prototype.onRowClick=function(e){this.currentInstanceId=e.value.getValue("id"),this.rowClick.emit(this.currentInstanceId)},i.prototype.onRowSelect=function(e){this.selectedInstances=te(e.detail.selection),this.rowsSelected.emit(this.selectedInstances)},i.prototype.onRowUnselect=function(e){this.selectedInstances=te(e.detail.selection),this.rowsSelected.emit(this.selectedInstances)},i.prototype.onRowKeyUp=function(e){"Enter"===e.detail.keyboardEvent.key&&(e.preventDefault(),this.currentInstanceId=e.detail.row.getValue("id"),this.rowClick.emit(this.currentInstanceId))},i.prototype.onShowRowActionsMenu=function(e){this.showRowActionsMenu.emit(e)},i.prototype.onShowRowContextMenu=function(e){this.showRowContextMenu.emit(e)},i.prototype.onExecuteRowAction=function(e){this.executeRowAction.emit(e)},i.prototype.setSorting=function(e){var t=e?{orderBy:e.key,direction:e.direction.toUpperCase()}:Object.assign({},this.defaultSorting);this.sorting=[new se(t)]},i.prototype.formatSorting=function(e){this.formattedSorting=this.isValidSorting(e)?[e[0].orderBy,e[0].direction.toLocaleLowerCase()]:null},i.prototype.isValidSorting=function(e){return e&&e.length&&e[0].orderBy&&e[0].direction},i.prototype.replacePriorityValues=function(e,t){var r=this;return t.key.split(".").reduce((function(e,t){return"priority"===t&&e&&"number"==typeof e[t]?e[t]=r.taskCloudService.getPriorityLabel(e[t]):e&&"object"==typeof e?e[t]:void 0}),e.obj)},i}(r.DataTableSchema);me.decorators=[{type:t.Directive}],me.ctorParameters=function(){return[{type:r.AppConfigService},{type:fe},{type:r.UserPreferencesService},{type:String}]},me.propDecorators={emptyCustomContent:[{type:t.ContentChild,args:[r.CustomEmptyContentTemplateDirective]}],appName:[{type:t.Input}],selectionMode:[{type:t.Input}],multiselect:[{type:t.Input}],stickyHeader:[{type:t.Input}],sorting:[{type:t.Input}],showActions:[{type:t.Input}],actionsPosition:[{type:t.Input}],showContextMenu:[{type:t.Input}],showRowContextMenu:[{type:t.Output}],showRowActionsMenu:[{type:t.Output}],executeRowAction:[{type:t.Output}],rowClick:[{type:t.Output}],rowsSelected:[{type:t.Output}],success:[{type:t.Output}],error:[{type:t.Output}]};var he=function(e){function t(r,i,n,o){var a=e.call(this,i,n,o,t.PRESET_KEY)||this;return a.taskListCloudService=r,a.assignee="",a.createdFrom="",a.createdTo="",a.lastModifiedFrom="",a.lastModifiedTo="",a.dueDateFrom="",a.dueDateTo="",a.id="",a.name="",a.parentTaskId="",a.processDefinitionName="",a.processDefinitionId="",a.processInstanceId="",a.status="",a.owner="",a.standalone=!1,a.completedDate="",a.completedFrom="",a.completedTo="",a.candidateGroupId="",a}return Q(t,e),t.prototype.load=function(e){var t=this;this.isLoading=!0,this.taskListCloudService.getTaskByRequest(e).subscribe((function(e){t.rows=e.list.entries,t.success.emit(e),t.isLoading=!1,t.pagination.next(e.list.pagination)}),(function(e){t.error.emit(e),t.isLoading=!1}))},t.prototype.createRequestNode=function(){var e={appName:this.appName,assignee:this.assignee,id:this.id,name:this.name,parentTaskId:this.parentTaskId,processDefinitionName:this.processDefinitionName,processDefinitionId:this.processDefinitionId,processInstanceId:this.processInstanceId,owner:this.owner,priority:this.priority,lastModifiedFrom:this.lastModifiedFrom,lastModifiedTo:this.lastModifiedTo,dueDateFrom:this.dueDateFrom,dueDateTo:this.dueDateTo,status:this.status,dueDate:this.dueDate,createdDate:this.createdDate,createdFrom:this.createdFrom,createdTo:this.createdTo,maxItems:this.size,skipCount:this.skipCount,sorting:this.sorting,standalone:this.standalone,completedBy:this.completedBy,completedFrom:this.completedFrom,completedTo:this.completedTo,completedDate:this.completedDate,candidateGroupId:this.candidateGroupId};return new re(e)},t}(me);he.PRESET_KEY="adf-cloud-task-list.presets",he.decorators=[{type:t.Component,args:[{selector:"adf-cloud-task-list",template:'<div *ngIf="!rows">{{ \'ADF_CLOUD_TASK_LIST.FILTERS.MESSAGES.NONE\' | translate }}</div>\n<ng-container *ngIf="rows">\n        <adf-datatable\n            [rows]="rows"\n            [columns]="columns"\n            [loading]="isLoading"\n            [sorting]="formattedSorting"\n            [multiselect]="multiselect"\n            [selectionMode]="selectionMode"\n            [stickyHeader]="stickyHeader"\n            [actions]="showActions"\n            [actionsPosition]="actionsPosition"\n            [contextMenu]="showContextMenu"\n            [resolverFn]="boundReplacePriorityValues"\n            (showRowActionsMenu)="onShowRowActionsMenu($event)"\n            (showRowContextMenu)="onShowRowContextMenu($event)"\n            (executeRowAction)="onExecuteRowAction($event)"\n            (row-select)="onRowSelect($any($event))"\n            (row-unselect)="onRowUnselect($any($event))"\n            (rowClick)="onRowClick($any($event))"\n            (row-keyup)="onRowKeyUp($any($event))"\n            (sorting-changed)="onSortingChanged($any($event))">\n            <adf-loading-content-template>\n                <ng-template>\n                    \x3c!-- Add your custom loading template here --\x3e\n                    <mat-progress-spinner class="adf-cloud-task-list-loading-margin"\n                                          [color]="\'primary\'"\n                                          [mode]="\'indeterminate\'">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n            <adf-no-content-template>\n                <ng-template>\n                    <adf-empty-content *ngIf="!emptyCustomContent"\n                                       icon="assignment"\n                                       [title]="\'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.TITLE\' | translate"\n                                       [subtitle]="\'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.SUBTITLE\' | translate">\n                    </adf-empty-content>\n                    <ng-content select="adf-custom-empty-content-template"></ng-content>\n                </ng-template>\n            </adf-no-content-template>\n        </adf-datatable>\n</ng-container>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-cloud-task-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],he.ctorParameters=function(){return[{type:ne},{type:r.AppConfigService},{type:fe},{type:r.UserPreferencesService}]},he.propDecorators={assignee:[{type:t.Input}],createdDate:[{type:t.Input}],createdFrom:[{type:t.Input}],createdTo:[{type:t.Input}],dueDate:[{type:t.Input}],lastModifiedFrom:[{type:t.Input}],lastModifiedTo:[{type:t.Input}],dueDateFrom:[{type:t.Input}],dueDateTo:[{type:t.Input}],id:[{type:t.Input}],name:[{type:t.Input}],parentTaskId:[{type:t.Input}],processDefinitionName:[{type:t.Input}],processDefinitionId:[{type:t.Input}],processInstanceId:[{type:t.Input}],status:[{type:t.Input}],owner:[{type:t.Input}],priority:[{type:t.Input}],completedBy:[{type:t.Input}],standalone:[{type:t.Input}],completedDate:[{type:t.Input}],completedFrom:[{type:t.Input}],completedTo:[{type:t.Input}],candidateGroupId:[{type:t.Input}]};var ye=function(e){function t(t,r,i){var n=e.call(this,t,r)||this;return n.logService=i,n}return Q(t,e),t.prototype.getServiceTaskByRequest=function(e){if(e.appName||""===e.appName){var t=this.getBasePath(e.appName)+"/query/admin/v1/service-tasks",r=this.buildQueryParams(e),i=this.buildSortingParam(e.sorting);return i&&(r.sort=i),this.get(t,r)}return this.logService.error("Appname is mandatory for querying task"),_.throwError("Appname not configured")},t.prototype.getServiceTaskStatus=function(e,t){if(e){var r=this.getBasePath(e)+"/query/admin/v1/service-tasks/"+t+"/integration-context";return this.get(r).pipe(k.map((function(e){return e.entry})))}return this.logService.error("Appname is mandatory for querying task"),_.throwError("Appname not configured")},t.prototype.buildQueryParams=function(e){var t={};for(var r in e)e.hasOwnProperty(r)&&!this.isExcludedField(r)&&this.isPropertyValueValid(e,r)&&(t[r]=e[r]);return t},t.prototype.isExcludedField=function(e){return"appName"===e||"sorting"===e},t.prototype.isPropertyValueValid=function(e,t){return""!==e[t]&&null!==e[t]&&void 0!==e[t]},t.prototype.buildSortingParam=function(e){var t,r,i="";if(e)try{for(var n=Z(e),o=n.next();!o.done;o=n.next()){var a=o.value;i=i?i+"&"+a.orderBy+","+a.direction:a.orderBy+","+a.direction}}catch(e){t={error:e}}finally{try{o&&!o.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}return encodeURI(i)},t}(ie);ye.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new ye(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(r.LogService))},token:ye,providedIn:"root"}),ye.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],ye.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:r.LogService}]};var ge=function(e){function t(r,i,n,o){var a=e.call(this,i,n,o,t.PRESET_KEY)||this;return a.serviceTaskListCloudService=r,a.queryParams={},a}return Q(t,e),t.prototype.load=function(e){var t=this;this.isLoading=!0,this.serviceTaskListCloudService.getServiceTaskByRequest(e).subscribe((function(e){t.rows=e.list.entries,t.success.emit(e),t.isLoading=!1,t.pagination.next(e.list.pagination)}),(function(e){t.error.emit(e),t.isLoading=!1}))},t.prototype.createRequestNode=function(){var e,t,r,i,n,o,a,s,l,p,c,d,u,f,m;return{appName:this.appName,maxItems:this.size,skipCount:this.skipCount,sorting:this.sorting,id:null===(e=this.queryParams)||void 0===e?void 0:e.serviceTaskId,activityName:null===(t=this.queryParams)||void 0===t?void 0:t.activityName,activityType:null===(r=this.queryParams)||void 0===r?void 0:r.activityType,completedDate:null===(i=this.queryParams)||void 0===i?void 0:i.completedDate,elementId:null===(n=this.queryParams)||void 0===n?void 0:n.elementId,executionId:null===(o=this.queryParams)||void 0===o?void 0:o.executionId,processDefinitionId:null===(a=this.queryParams)||void 0===a?void 0:a.processDefinitionId,processDefinitionKey:null===(s=this.queryParams)||void 0===s?void 0:s.processDefinitionKey,processDefinitionVersion:null===(l=this.queryParams)||void 0===l?void 0:l.processDefinitionVersion,processInstanceId:null===(p=this.queryParams)||void 0===p?void 0:p.processInstanceId,serviceFullName:null===(c=this.queryParams)||void 0===c?void 0:c.serviceFullName,serviceName:null===(d=this.queryParams)||void 0===d?void 0:d.serviceName,serviceVersion:null===(u=this.queryParams)||void 0===u?void 0:u.serviceVersion,startedDate:null===(f=this.queryParams)||void 0===f?void 0:f.startedDate,status:null===(m=this.queryParams)||void 0===m?void 0:m.status}},t}(me);ge.PRESET_KEY="adf-cloud-service-task-list.presets",ge.decorators=[{type:t.Component,args:[{selector:"adf-cloud-service-task-list",template:'<div *ngIf="!rows">{{ \'ADF_CLOUD_TASK_LIST.FILTERS.MESSAGES.NONE\' | translate }}</div>\n<ng-container *ngIf="rows">\n        <adf-datatable\n            [rows]="rows"\n            [columns]="columns"\n            [loading]="isLoading"\n            [sorting]="formattedSorting"\n            [multiselect]="multiselect"\n            [selectionMode]="selectionMode"\n            [stickyHeader]="stickyHeader"\n            [actions]="showActions"\n            [actionsPosition]="actionsPosition"\n            [contextMenu]="showContextMenu"\n            [resolverFn]="boundReplacePriorityValues"\n            (showRowActionsMenu)="onShowRowActionsMenu($event)"\n            (showRowContextMenu)="onShowRowContextMenu($event)"\n            (executeRowAction)="onExecuteRowAction($event)"\n            (row-select)="onRowSelect($any($event))"\n            (row-unselect)="onRowUnselect($any($event))"\n            (rowClick)="onRowClick($any($event))"\n            (row-keyup)="onRowKeyUp($any($event))"\n            (sorting-changed)="onSortingChanged($any($event))">\n            <adf-loading-content-template>\n                <ng-template>\n                    \x3c!-- Add your custom loading template here --\x3e\n                    <mat-progress-spinner class="adf-cloud-task-list-loading-margin"\n                                          [color]="\'primary\'"\n                                          [mode]="\'indeterminate\'">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n            <adf-no-content-template>\n                <ng-template>\n                    <adf-empty-content *ngIf="!emptyCustomContent"\n                                       icon="assignment"\n                                       [title]="\'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.TITLE\' | translate"\n                                       [subtitle]="\'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.SUBTITLE\' | translate">\n                    </adf-empty-content>\n                    <ng-content select="adf-custom-empty-content-template"></ng-content>\n                </ng-template>\n            </adf-no-content-template>\n        </adf-datatable>\n</ng-container>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-cloud-task-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],ge.ctorParameters=function(){return[{type:ye},{type:r.AppConfigService},{type:fe},{type:r.UserPreferencesService}]},ge.propDecorators={queryParams:[{type:t.Input}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ve,De=function(){};De.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,$,r.CoreModule],declarations:[he,ge],exports:[he,ge]}]}],(
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
ve=e.DateCloudFilterType||(e.DateCloudFilterType={})).NO_DATE="NO_DATE",ve.TODAY="TODAY",ve.TOMORROW="TOMORROW",ve.NEXT_7_DAYS="NEXT_7_DAYS",ve.WEEK="WEEK",ve.MONTH="MONTH",ve.QUARTER="QUARTER",ve.YEAR="YEAR",ve.RANGE="RANGE";var Se=function(){function t(){this.currentDate=new Date}return t.prototype.getDateRange=function(t){switch(t){case e.DateCloudFilterType.TODAY:return this.getTodayDateRange();case e.DateCloudFilterType.TOMORROW:return this.getTomorrowDateRange();case e.DateCloudFilterType.NEXT_7_DAYS:return this.getNext7DaysDateRange();case e.DateCloudFilterType.WEEK:return this.getCurrentWeekRange();case e.DateCloudFilterType.MONTH:return this.getCurrentMonthDateRange();case e.DateCloudFilterType.QUARTER:return this.getQuarterDateRange();case e.DateCloudFilterType.YEAR:return this.getCurrentYearDateRange();default:return this.resetDateRange()}},t.prototype.isDateRangeType=function(t){return t===e.DateCloudFilterType.RANGE},t.prototype.resetDateRange=function(){return{startDate:null,endDate:null}},t.prototype.getNext7DaysDateRange=function(){return{startDate:b().startOf("day").toISOString(!0),endDate:b().add(7,"days").endOf("day").toISOString(!0)}},t.prototype.getTomorrowDateRange=function(){return{startDate:b().endOf("day").toISOString(!0),endDate:b().add(1,"days").endOf("day").toISOString(!0)}},t.prototype.getCurrentYearDateRange=function(){return{startDate:b().startOf("year").toISOString(!0),endDate:b().endOf("year").toISOString(!0)}},t.prototype.getTodayDateRange=function(){return{startDate:b().startOf("day").toISOString(!0),endDate:b().endOf("day").toISOString(!0)}},t.prototype.getCurrentWeekRange=function(){return{startDate:b().startOf("week").toISOString(!0),endDate:b().endOf("week").toISOString(!0)}},t.prototype.getCurrentMonthDateRange=function(){return{startDate:b().startOf("month").toISOString(!0),endDate:b().endOf("month").toISOString(!0)}},t.prototype.getQuarterDateRange=function(){return{startDate:b().startOf("quarter").toISOString(!0),endDate:b().endOf("quarter").toISOString(!0)}},t}();Se.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Se},token:Se,providedIn:"root"}),Se.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Te,Ee=function(){function e(e){this.dateRangeFilterService=new Se,e&&(this.id=e.id||Math.random().toString(36).substr(2,9),this.name=e.name||null,this.key=e.key||null,this.icon=e.icon||null,this.index=e.index||null,this.appName=e.appName||""===e.appName?e.appName:null,this.status=e.status||null,this.sort=e.sort||null,this.assignee=e.assignee||null,this.order=e.order||null,this.owner=e.owner||null,this.processDefinitionName=e.processDefinitionName||null,this.processDefinitionId=e.processDefinitionId||null,this.processInstanceId=e.processInstanceId||null,this.createdDate=e.createdDate||null,this.dueDateType=e.dueDateType||null,this.dueDate=e.dueDate||null,this._dueDateFrom=e._dueDateFrom||null,this._dueDateTo=e._dueDateTo||null,this.taskName=e.taskName||null,this.taskId=e.taskId||null,this.parentTaskId=e.parentTaskId||null,this.priority=e.priority||null,this.standalone=e.standalone||null,this.lastModifiedFrom=e.lastModifiedFrom||null,this.lastModifiedTo=e.lastModifiedTo||null,this.completedBy=e.completedBy||null,this.completedDateType=e.completedDateType||null,this.completedFrom=e._completedFrom||null,this.completedTo=e._completedTo||null,this.completedDate=e.completedDate||null,this.createdDateType=e.createdDateType||null,this.createdFrom=e._createdFrom||null,this.createdTo=e._createdTo||null,this.candidateGroups=e.candidateGroups||null,this.showCounter=e.showCounter||!1)}return Object.defineProperty(e.prototype,"dueDateFrom",{get:function(){return this.isDateRangeType(this.dueDateType)?this._dueDateFrom:this.getStartDate(this.dueDateType)},set:function(e){this._dueDateFrom=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"dueDateTo",{get:function(){return this.isDateRangeType(this.dueDateType)?this._dueDateTo:this.getEndDate(this.dueDateType)},set:function(e){this._dueDateTo=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"completedFrom",{get:function(){return this.isDateRangeType(this.completedDateType)?this._completedFrom:this.getStartDate(this.completedDateType)},set:function(e){this._completedFrom=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"completedTo",{get:function(){return this.isDateRangeType(this.completedDateType)?this._completedTo:this.getEndDate(this.completedDateType)},set:function(e){this._completedTo=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"createdFrom",{get:function(){return this.isDateRangeType(this.createdDateType)?this._createdFrom:this.getStartDate(this.createdDateType)},set:function(e){this._createdFrom=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"createdTo",{get:function(){return this.isDateRangeType(this.createdDateType)?this._createdTo:this.getEndDate(this.createdDateType)},set:function(e){this._createdTo=e},enumerable:!1,configurable:!0}),e.prototype.getStartDate=function(e){return this.dateRangeFilterService.getDateRange(e).startDate},e.prototype.getEndDate=function(e){return this.dateRangeFilterService.getDateRange(e).endDate},e.prototype.isDateRangeType=function(e){return!!this.dateRangeFilterService.isDateRangeType(e)},e}();(Te=e.AssignmentType||(e.AssignmentType={})).CURRENT_USER="CURRENT_USER",Te.UNASSIGNED="UNASSIGNED",Te.CANDIDATE_GROUPS="CANDIDATE_GROUPS";
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Fe=new t.InjectionToken("proccess-filters-cloud"),Ce=new t.InjectionToken("task-filters-cloud"),Ie=function(e){function t(t,r,i,n){var o=e.call(this,t,r)||this;return o.apollo=i,o.http=n,o.appsListening=[],o}return Q(t,e),Object.defineProperty(t.prototype,"webSocketHost",{get:function(){return this.contextRoot.split("://")[1]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"protocol",{get:function(){return"https"===this.contextRoot.split("://")[0]?"wss":"ws"},enumerable:!1,configurable:!0}),t.prototype.initNotificationsForApp=function(e){var t=this;if(!this.appsListening.includes(e)){this.appsListening.push(e);var r=this.http.create({uri:this.getBasePath(e)+"/notifications/graphql"}),i=new w.WebSocketLink({uri:this.protocol+"://"+this.webSocketHost+"/"+e+"/notifications/ws/graphql",options:{reconnect:!0,lazy:!0,connectionParams:{kaInterval:2e3,"X-Authorization":"Bearer "+this.apiService.getInstance().oauth2Auth.token}}}),n=R.split((function(e){var t=e.query,r=U.getMainDefinition(t);return"OperationDefinition"===r.kind&&"subscription"===r.operation}),i,r),o=N.onError((function(e){var r,i,n=e.graphQLErrors,o=e.operation,a=e.forward;if(n)try{for(var s=Z(n),l=s.next();!l.done;l=s.next()){switch(l.value.extensions.code){case"UNAUTHENTICATED":var p=o.getContext().headers;o.setContext({headers:Object.assign(Object.assign({},p),{"X-Authorization":"Bearer "+t.apiService.getInstance().oauth2Auth.token})}),a(o)}}}catch(e){r={error:e}}finally{try{l&&!l.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}}));this.apollo.createNamed(e,{link:R.ApolloLink.from([o,n]),cache:new R.InMemoryCache({merge:!0}),defaultOptions:{watchQuery:{errorPolicy:"all"}}})}},t.prototype.makeGQLQuery=function(e,t){return this.initNotificationsForApp(e),this.apollo.use(e).subscribe({query:R.gql(t)})},t}(ie);Ie.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Ie(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(O.Apollo),t.ɵɵinject(L.HttpLink))},token:Ie,providedIn:"root"}),Ie.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Ie.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:O.Apollo},{type:L.HttpLink}]};var Ae=function(e){function t(t,r,i,n,o){var a=e.call(this,i,n)||this;return a.identityUserService=t,a.preferenceService=r,a.notificationCloudService=o,a.filtersSubject=new _.BehaviorSubject([]),a.filters$=a.filtersSubject.asObservable(),a}return Q(t,e),t.prototype.createDefaultFilters=function(e){var t=this,r=this.prepareKey(e);this.preferenceService.getPreferences(e,r).pipe(k.switchMap((function(i){var n=i&&i.list&&i.list.entries?i.list.entries:[];return t.hasPreferences(n)&&t.hasTaskFilters(n,r)?_.of(t.findFiltersByKeyInPreferences(n,r)):t.createTaskFilters(e,r,t.defaultTaskFilters(e))}))).subscribe((function(e){t.addFiltersToStream(e)}))},t.prototype.hasPreferences=function(e){return e&&e.length>0},t.prototype.hasTaskFilters=function(e,t){var r=e.find((function(e){return e.entry.key===t}));return!(!r||!r.entry)&&JSON.parse(r.entry.value).length>0},t.prototype.createTaskFilters=function(e,t,r){return this.preferenceService.createPreference(e,t,r)},t.prototype.getTaskFiltersByKey=function(e,t){return this.preferenceService.getPreferenceByKey(e,t)},t.prototype.getTaskListFilters=function(e){return this.createDefaultFilters(e),this.filters$},t.prototype.getTaskFilterById=function(e,t){var r=this,i=this.prepareKey(e);return this.getTaskFiltersByKey(e,i).pipe(k.switchMap((function(t){return t&&0===t.length?r.createTaskFilters(e,i,r.defaultTaskFilters(e)):_.of(t)})),k.map((function(e){return e.filter((function(e){return e.id===t}))[0]})))},t.prototype.addFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getTaskFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){return i&&0===i.length?t.createTaskFilters(e.appName,r,[e]):(i.push(e),t.preferenceService.updatePreference(e.appName,r,i))})),k.map((function(e){return t.addFiltersToStream(e),e})))},t.prototype.addFiltersToStream=function(e){this.filtersSubject.next(e)},t.prototype.updateFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getTaskFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){if(i&&0===i.length)return t.createTaskFilters(e.appName,r,[e]);var n=i.findIndex((function(t){return t.id===e.id}));return i[n]=e,t.updateTaskFilters(e.appName,r,i)})),k.map((function(e){return t.addFiltersToStream(e),e})))},t.prototype.deleteFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getTaskFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){return i&&i.length>0?(i=i.filter((function(t){return t.id!==e.id})),t.updateTaskFilters(e.appName,r,i)):_.of([])})),k.map((function(e){return t.addFiltersToStream(e),e})))},t.prototype.isDefaultFilter=function(e){return-1!==this.defaultTaskFilters().findIndex((function(t){return e===t.name}))},t.prototype.getTaskFilterCounter=function(e){if(e.appName||""===e.appName){var t=this.getBasePath(e.appName)+"/query/v1/tasks",r={assignee:e.assignee,status:e.status,appName:e.appName,maxItems:1};return this.get(t,r).pipe(k.map((function(e){return e.list.pagination.totalItems})))}return _.throwError("Appname not configured")},t.prototype.updateTaskFilters=function(e,t,r){return this.preferenceService.updatePreference(e,t,r)},t.prototype.prepareKey=function(e){return"task-filters-"+e+"-"+this.identityUserService.getCurrentUserInfo().username},t.prototype.findFiltersByKeyInPreferences=function(e,t){var r=e.find((function(e){return e.entry.key===t}));return r&&r.entry?JSON.parse(r.entry.value):[]},t.prototype.defaultTaskFilters=function(e){return[new Ee({name:"ADF_CLOUD_TASK_FILTERS.MY_TASKS",key:"my-tasks",icon:"inbox",appName:e,status:"ASSIGNED",assignee:this.identityUserService.getCurrentUserInfo().username,sort:"createdDate",order:"DESC",showCounter:!0}),new Ee({name:"ADF_CLOUD_TASK_FILTERS.QUEUED_TASKS",key:"queued-tasks",icon:"queue",appName:e,status:"CREATED",assignee:"",sort:"createdDate",order:"DESC",showCounter:!0}),new Ee({name:"ADF_CLOUD_TASK_FILTERS.COMPLETED_TASKS",key:"completed-tasks",icon:"done",appName:e,status:"COMPLETED",assignee:"",sort:"createdDate",order:"DESC"})]},t.prototype.getTaskNotificationSubscription=function(e){return this.notificationCloudService.makeGQLQuery(e,"\n    subscription {\n        engineEvents(eventType: [\n            TASK_COMPLETED\n            TASK_ASSIGNED\n            TASK_ACTIVATED\n            TASK_SUSPENDED\n            TASK_CANCELLED,\n            TASK_CREATED\n        ]) {\n            eventType\n            entity\n        }\n    }\n").pipe(k.map((function(e){return e.data.engineEvents})))},t}(ie);Ae.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Ae(t.ɵɵinject(r.IdentityUserService),t.ɵɵinject(Ce),t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(Ie))},token:Ae,providedIn:"root"}),Ae.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Ae.ctorParameters=function(){return[{type:r.IdentityUserService},{type:void 0,decorators:[{type:t.Inject,args:[Ce]}]},{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:Ie}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var _e=function(){function e(){this.appName="",this.showIcons=!1,this.success=new t.EventEmitter,this.error=new t.EventEmitter,this.counters$={},this.updatedCounters=[],this.onDestroy$=new _.Subject}return e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e.prototype.wasFilterUpdated=function(e){return this.updatedCounters.includes(e)},e.prototype.addToUpdatedCounters=function(e){this.updatedCounters.includes(e)||this.updatedCounters.push(e)},e.prototype.resetFilterCounter=function(e){var t=this.updatedCounters.indexOf(e);t>-1&&this.updatedCounters.splice(t,1)},e}();_e.decorators=[{type:t.Directive}],_e.propDecorators={appName:[{type:t.Input}],filterParam:[{type:t.Input}],showIcons:[{type:t.Input}],success:[{type:t.Output}],error:[{type:t.Output}]};var ke=function(e){function r(r,i,n){var o=e.call(this)||this;return o.taskFilterCloudService=r,o.translationService=i,o.appConfigService=n,o.filterSelected=new t.EventEmitter,o.filterClicked=new t.EventEmitter,o.filterCounterUpdated=new t.EventEmitter,o.filters=[],o}return Q(r,e),r.prototype.ngOnInit=function(){this.enableNotifications=this.appConfigService.get("notifications",!0),this.initFilterCounterNotifications(),this.getFilters(this.appName)},r.prototype.ngOnChanges=function(e){var t=e.appName,r=e.filterParam;t&&t.currentValue!==t.previousValue?this.getFilters(t.currentValue):r&&r.currentValue!==r.previousValue&&this.selectFilterAndEmit(r.currentValue)},r.prototype.getFilters=function(e){var t=this;this.filters$=this.taskFilterCloudService.getTaskListFilters(e),this.filters$.pipe(k.takeUntil(this.onDestroy$)).subscribe((function(e){t.resetFilter(),t.filters=e||[],t.selectFilterAndEmit(t.filterParam),t.updateFilterCounters(),t.success.emit(e)}),(function(e){t.error.emit(e)}))},r.prototype.updateFilterCounters=function(){var e=this;this.filters.forEach((function(t){return e.updateFilterCounter(t)}))},r.prototype.updateFilterCounter=function(e){(null==e?void 0:e.showCounter)&&(this.counters$[e.key]=this.taskFilterCloudService.getTaskFilterCounter(e))},r.prototype.initFilterCounterNotifications=function(){var e=this;this.appName&&this.enableNotifications&&this.taskFilterCloudService.getTaskNotificationSubscription(this.appName).pipe(k.debounceTime(3e3)).subscribe((function(t){t.map((function(t){e.checkFilterCounter(t.entity)})),e.updatedCounters.length&&(e.updateFilterCounters(),e.filterCounterUpdated.emit(t))}))},r.prototype.checkFilterCounter=function(e){var t=this;this.filters.map((function(r){t.isFilterPresent(r,e)&&t.addToUpdatedCounters(r.key)}))},r.prototype.isFilterPresent=function(e,t){return e.status===t.status&&(e.assignee===t.assignee||void 0===t.assignee)},r.prototype.selectFilter=function(e){var t=this;e&&(this.currentFilter=this.filters.find((function(r,i){return e.index===i||e.key===r.key||e.id===r.id||e.name&&e.name.toLocaleLowerCase()===t.translationService.instant(r.name).toLocaleLowerCase()})))},r.prototype.selectFilterAndEmit=function(e){e?(this.selectFilter(e),this.currentFilter&&(this.resetFilterCounter(this.currentFilter.key),this.filterSelected.emit(this.currentFilter))):this.currentFilter=void 0},r.prototype.onFilterClick=function(e){e?(this.selectFilter(e),this.updateFilterCounter(this.currentFilter),this.filterClicked.emit(this.currentFilter)):this.currentFilter=void 0},r.prototype.selectDefaultTaskFilter=function(){this.isFilterListEmpty()||(this.currentFilter=this.filters[0])},r.prototype.isFilterListEmpty=function(){return void 0===this.filters||this.filters&&0===this.filters.length},r.prototype.resetFilter=function(){this.filters=[],this.currentFilter=void 0},r}(_e);ke.decorators=[{type:t.Component,args:[{selector:"adf-cloud-task-filters",template:'<ng-container *ngIf="filters$ | async as filterList; else loading">\n    <div *ngFor="let filter of filterList"\n         class="adf-task-filters__entry">\n        <button (click)="onFilterClick(filter)"\n                [attr.aria-label]="filter.name | translate"\n                [id]="filter.id"\n                [attr.data-automation-id]="filter.key + \'_filter\'"\n                mat-button\n                [class.adf-active]="currentFilter === filter"\n                class="adf-filter-action-button adf-full-width"\n                fxLayout="row"\n                fxLayoutAlign="space-between center">\n            <adf-icon data-automation-id="adf-filter-icon"\n                      *ngIf="showIcons"\n                      [value]="filter.icon"></adf-icon>\n            <span data-automation-id="adf-filter-label"\n                  class="adf-filter-action-button__label">{{ filter.name | translate }}</span>\n        </button>\n        <span *ngIf="counters$[filter.key]"\n              [attr.data-automation-id]="filter.key + \'_filter-counter\'"\n              class="adf-filter-action-button__counter"\n              [class.adf-active]=wasFilterUpdated(filter.key)>\n            {{ counters$[filter.key] | async }}\n        </span>\n    </div>\n</ng-container>\n<ng-template #loading>\n    <ng-container>\n        <div class="adf-app-list-spinner">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-task-filters__entry{display:flex;font-size:14px!important;font-weight:700;height:24px;opacity:1;padding:12px 0!important;width:100%}.adf-task-filters__entry .adf-full-width{display:flex;width:100%}.adf-task-filters__entry .adf-filter-action-button{cursor:pointer;opacity:.54;padding:16px}.adf-task-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-task-filters__entry .adf-filter-action-button__counter{margin-left:10px;margin-top:6px;opacity:.54;padding:0 5px}.adf-task-filters__entry .adf-filter-action-button__counter.adf-active{background-color:var(--theme-accent-color);border-radius:15px;color:var(--theme-colors-mag-grey-light);font-size:smaller;margin-left:8px;margin-top:5px;padding:0 5px}.adf-task-filters__entry:hover{color:var(--theme-primary-color)}.adf-task-filters__entry:hover .adf-filter-action-button,.adf-task-filters__entry:hover .adf-filter-action-button__counter{opacity:1}.adf-task-filters__entry .adf-active{color:var(--theme-primary-color);opacity:1}"]}]}],ke.ctorParameters=function(){return[{type:Ae},{type:r.TranslationService},{type:r.AppConfigService}]},ke.propDecorators={filterSelected:[{type:t.Output}],filterClicked:[{type:t.Output}],filterCounterUpdated:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Pe=function(){function r(){this.dateChanged=new t.EventEmitter,this.dateTypeChange=new t.EventEmitter,this.filteredProperties=[],this.dateRangeForm=new P.FormGroup({from:new P.FormControl,to:new P.FormControl})}return r.prototype.ngOnInit=function(){var e=this;this.options=this.options?this.options:this.createDefaultRangeOptions();var t=this.createDefaultDateOptions();this.filteredProperties=t.filter((function(t){return e.isValidProperty(e.options,t.value.toString())})),this.hasPreselectedValues()&&this.setPreselectedValues()},r.prototype.onSelectionChange=function(e){this.type=e.value,this.isDateRangeType()||this.dateTypeChange.emit(this.type)},r.prototype.isDateRangeType=function(){return this.type===e.DateCloudFilterType.RANGE},r.prototype.onDateRangeClosed=function(){var e={startDate:b(this.dateRangeForm.controls.from.value).startOf("day").toISOString(!0),endDate:b(this.dateRangeForm.controls.to.value).endOf("day").toISOString(!0)};this.dateChanged.emit(e)},r.prototype.hasPreselectedValues=function(){var e,t;return!!(null===(e=this.processFilterProperty)||void 0===e?void 0:e.attributes)&&!!(null===(t=this.processFilterProperty)||void 0===t?void 0:t.value)},r.prototype.setPreselectedValues=function(){var e=this.getFilterAttribute("from"),t=this.getFilterAttribute("to"),r=this.getFilterAttribute("dateType");this.dateRangeForm.get("from").setValue(b(this.getFilterValue(e))),this.dateRangeForm.get("to").setValue(b(this.getFilterValue(t))),this.type=this.getFilterValue(r)},r.prototype.getFilterAttribute=function(e){return this.processFilterProperty.attributes[e]},r.prototype.getFilterValue=function(e){return this.processFilterProperty.value[e]},r.prototype.isValidProperty=function(e,t){return!e||e.indexOf(t)>=0},r.prototype.createDefaultRangeOptions=function(){return[e.DateCloudFilterType.NO_DATE,e.DateCloudFilterType.TODAY,e.DateCloudFilterType.WEEK,e.DateCloudFilterType.MONTH,e.DateCloudFilterType.QUARTER,e.DateCloudFilterType.YEAR,e.DateCloudFilterType.RANGE]},r.prototype.createDefaultDateOptions=function(){return[{value:e.DateCloudFilterType.NO_DATE,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.NO_DATE"},{value:e.DateCloudFilterType.TODAY,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.TODAY"},{value:e.DateCloudFilterType.TOMORROW,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.TOMORROW"},{value:e.DateCloudFilterType.NEXT_7_DAYS,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.NEXT_7_DAYS"},{value:e.DateCloudFilterType.WEEK,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.WEEK"},{value:e.DateCloudFilterType.MONTH,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.MONTH"},{value:e.DateCloudFilterType.QUARTER,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.QUARTER"},{value:e.DateCloudFilterType.YEAR,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.YEAR"},{value:e.DateCloudFilterType.RANGE,label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.RANGE"}]},r}();Pe.decorators=[{type:t.Component,args:[{selector:"adf-cloud-date-range-filter",template:'\n<mat-form-field [floatLabel]="\'auto\'" [attr.data-automation-id]="processFilterProperty.key">\n    <mat-select\n        placeholder="{{ processFilterProperty.label | translate }}"\n        [value]="type"\n        (selectionChange)="onSelectionChange($event)"\n        [attr.data-automation-id]="\'adf-cloud-edit-process-property-\' + processFilterProperty.key">\n        <mat-option *ngFor="let propertyOption of filteredProperties" [value]="propertyOption.value" [attr.data-automation-id]="\'adf-cloud-edit-process-property-options-\' + propertyOption.value.toString()">\n            {{ propertyOption.label | translate }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n\n<ng-container *ngIf="isDateRangeType()">\n    <mat-form-field [floatLabel]="\'auto\'" class="adf-cloud-date-range-picker">\n        <mat-label>{{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE_TITLE\' | translate }}</mat-label>\n        <mat-date-range-input [formGroup]="dateRangeForm" [rangePicker]="picker">\n          <input matStartDate formControlName="from" placeholder="{{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.START_DATE\' | translate }}">\n          <input matEndDate formControlName="to" placeholder="{{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.END_DATE\' | translate }}">\n        </mat-date-range-input>\n        <mat-datepicker-toggle\n            matSuffix\n            [for]="picker"\n            [attr.data-automation-id]="\'adf-cloud-edit-process-property-date-range-\' + processFilterProperty.key"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker (closed)="onDateRangeClosed()"></mat-date-range-picker>\n    </mat-form-field>\n</ng-container>\n',styles:[".adf-cloud-date-range-picker{margin:0 10px}"]}]}],Pe.propDecorators={processFilterProperty:[{type:t.Input}],options:[{type:t.Input}],dateChanged:[{type:t.Output}],dateTypeChange:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var be=function(){};be.decorators=[{type:t.NgModule,args:[{declarations:[Pe],imports:[A.CommonModule,r.CoreModule,$],exports:[Pe],providers:[Se]}]}];var Oe=function(){function e(e,r){this.identityUserService=e,this.logService=r,this.mode="single",this.validate=!1,this.readOnly=!1,this.preSelectUsers=[],this.excludedUsers=[],this.userChipsCtrl=new P.FormControl({value:"",disabled:!1}),this.searchUserCtrl=new P.FormControl({value:"",disabled:!1}),this.selectUser=new t.EventEmitter,this.removeUser=new t.EventEmitter,this.changedUsers=new t.EventEmitter,this.warning=new t.EventEmitter,this._searchUsers=[],this.onDestroy$=new _.Subject,this.selectedUsers=[],this.invalidUsers=[],this.searchUsers$=new _.BehaviorSubject(this._searchUsers),this._subscriptAnimationState="enter",this.searchedValue="",this.validationLoading=!1,this.searchLoading=!1}return e.prototype.ngOnInit=function(){this.loadClientId(),this.initSearch()},e.prototype.ngOnChanges=function(e){(this.valueChanged(e.preSelectUsers)||this.valueChanged(e.mode)||this.valueChanged(e.validate))&&(this.hasPreSelectUsers()?this.loadPreSelectUsers():this.hasPreselectedUsersCleared(e)&&(this.selectedUsers=[],this.invalidUsers=[]),this.isValidationEnabled()||(this.invalidUsers=[])),e.appName&&this.isAppNameChanged(e.appName)&&this.loadClientId()},e.prototype.loadClientId=function(){return J(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return e=this,[4,this.identityUserService.getClientIdByApplicationName(this.appName).toPromise()];case 1:return e.clientId=t.sent(),this.clientId&&this.searchUserCtrl.enable(),[2]}}))}))},e.prototype.initSearch=function(){var e=this;this.searchUserCtrl.valueChanges.pipe(k.filter((function(t){return e.searchLoading=!0,"string"==typeof t})),k.tap((function(t){t&&e.setTypingError()})),k.debounceTime(500),k.distinctUntilChanged(),k.tap((function(t){t.trim()?e.searchedValue=t:(e.searchUserCtrl.markAsPristine(),e.searchUserCtrl.markAsUntouched())})),k.tap((function(){e.resetSearchUsers()})),k.switchMap((function(t){return e.identityUserService.findUsersByName(t.trim())})),k.mergeMap((function(t){return e.resetSearchUsers(),e.searchLoading=!1,t})),k.filter((function(t){return!e.isUserAlreadySelected(t)&&!e.isExcludedUser(t)})),k.mergeMap((function(t){return e.appName?e.checkUserHasAccess(t.id).pipe(k.mergeMap((function(e){return e?_.of(t):_.of()}))):e.hasRoles()?e.filterUsersByRoles(t):_.of(t)})),k.takeUntil(this.onDestroy$)).subscribe((function(t){e._searchUsers.push(t),e.searchUsers$.next(e._searchUsers)}))},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e.prototype.isAppNameChanged=function(e){return e&&e.previousValue!==e.currentValue&&this.appName&&this.appName.length>0},e.prototype.isValidationEnabled=function(){return!0===this.validate},e.prototype.checkUserHasAccess=function(e){return this.hasRoles()?this.identityUserService.checkUserHasAnyClientAppRole(e,this.clientId,this.roles):this.identityUserService.checkUserHasClientApp(e,this.clientId)},e.prototype.hasRoles=function(){return this.roles&&this.roles.length>0},e.prototype.filterUsersByRoles=function(e){return this.identityUserService.checkUserHasRole(e.id,this.roles).pipe(k.map((function(t){return{hasRole:t,user:e}})),k.filter((function(e){return e.hasRole})),k.map((function(e){return e.user})))},e.prototype.isUserAlreadySelected=function(e){var t=this;return!!(this.selectedUsers&&this.selectedUsers.length>0)&&!!this.selectedUsers.find((function(r){return t.compare(r,e)}))},e.prototype.isExcludedUser=function(e){var t,r=this;return(null===(t=this.excludedUsers)||void 0===t?void 0:t.length)>0&&!!this.excludedUsers.find((function(t){return r.compare(t,e)}))},e.prototype.loadPreSelectUsers=function(){return J(this,void 0,void 0,(function(){return X(this,(function(e){switch(e.label){case 0:return this.selectedUsers=[],this.isSingleMode()?this.selectedUsers=[this.preSelectUsers[0]]:this.selectedUsers=this.removeDuplicatedUsers(this.preSelectUsers),this.userChipsCtrl.setValue(this.selectedUsers[0].username),this.isValidationEnabled()?(this.validationLoading=!0,[4,this.validatePreselectUsers()]):[3,2];case 1:e.sent(),this.validationLoading=!1,e.label=2;case 2:return[2]}}))}))},e.prototype.getPreselectedUsers=function(){return this.isSingleMode()?[this.preSelectUsers[0]]:this.removeDuplicatedUsers(this.preSelectUsers)},e.prototype.validatePreselectUsers=function(){return J(this,void 0,void 0,(function(){var e,t,r,i,n,o,a,s,l;return X(this,(function(p){switch(p.label){case 0:this.invalidUsers=[],e=[],p.label=1;case 1:p.trys.push([1,8,9,10]),t=Z(this.getPreselectedUsers()),r=t.next(),p.label=2;case 2:if(r.done)return[3,7];i=r.value,p.label=3;case 3:return p.trys.push([3,5,,6]),[4,this.searchUser(i)];case 4:return n=p.sent(),this.compare(i,n)?(n.readonly=i.readonly,e.push(n)):this.invalidUsers.push(i),[3,6];case 5:return o=p.sent(),this.invalidUsers.push(i),this.logService.error(o),[3,6];case 6:return r=t.next(),[3,2];case 7:return[3,10];case 8:return a=p.sent(),s={error:a},[3,10];case 9:try{r&&!r.done&&(l=t.return)&&l.call(t)}finally{if(s)throw s.error}return[7];case 10:return this.checkPreselectValidationErrors(),this.selectedUsers=e.concat(this.invalidUsers),[2]}}))}))},e.prototype.compare=function(e,t){var r,i;if(e&&t){var n=["id","username","email"];try{for(var o=Z(Object.keys(e)),a=o.next();!a.done;a=o.next()){var s=a.value;if(void 0!==e[s]&&n.includes(s))return e[s]===t[s]}}catch(e){r={error:e}}finally{try{a&&!a.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}}return!1},e.prototype.getSearchKey=function(e){return e.id?"id":e.email?"email":e.username?"username":null},e.prototype.searchUser=function(e){return J(this,void 0,void 0,(function(){var t;return X(this,(function(r){switch(r.label){case 0:switch(t=this.getSearchKey(e),t){case"id":return[3,1];case"username":return[3,2];case"email":return[3,4]}return[3,6];case 1:return[2,this.identityUserService.findUserById(e[t]).toPromise()];case 2:return[4,this.identityUserService.findUserByUsername(e[t]).toPromise()];case 3:return[2,r.sent()[0]];case 4:return[4,this.identityUserService.findUserByEmail(e[t]).toPromise()];case 5:return[2,r.sent()[0]];case 6:return[2,null]}}))}))},e.prototype.removeDuplicatedUsers=function(e){return e.filter((function(e,t,r){return t===r.findIndex((function(t){return e.id===t.id&&e.username===t.username&&e.email===t.email}))}))},e.prototype.checkPreselectValidationErrors=function(){this.invalidUsers=this.removeDuplicatedUsers(this.invalidUsers),this.invalidUsers.length>0&&this.generateInvalidUsersMessage(),this.warning.emit({message:"INVALID_PRESELECTED_USERS",users:this.invalidUsers})},e.prototype.onSelect=function(e){e&&(this.selectUser.emit(e),this.isMultipleMode()?this.isUserAlreadySelected(e)||this.selectedUsers.push(e):(this.invalidUsers=[],this.selectedUsers=[e]),this.userInput.nativeElement.value="",this.searchUserCtrl.setValue(""),this.userChipsCtrlValue(this.selectedUsers[0].username),this.changedUsers.emit(this.selectedUsers),this.resetSearchUsers())},e.prototype.onRemove=function(e){this.removeUser.emit(e),this.removeUserFromSelected(e),this.changedUsers.emit(this.selectedUsers),0===this.selectedUsers.length?this.userChipsCtrlValue(""):this.userChipsCtrlValue(this.selectedUsers[0].username),this.searchUserCtrl.markAsDirty(),this.searchUserCtrl.markAsTouched(),this.isValidationEnabled()&&(this.removeUserFromValidation(e),this.checkPreselectValidationErrors())},e.prototype.userChipsCtrlValue=function(e){this.userChipsCtrl.setValue(e),this.userChipsCtrl.markAsDirty(),this.userChipsCtrl.markAsTouched()},e.prototype.removeUserFromSelected=function(e){var t=e.id,r=e.username,i=e.email,n=this.selectedUsers.findIndex((function(e){return e.id===t&&e.username===r&&e.email===i}));-1!==n&&this.selectedUsers.splice(n,1)},e.prototype.removeUserFromValidation=function(e){var t=e.id,r=e.username,i=e.email,n=this.invalidUsers.findIndex((function(e){return e.id===t&&e.username===r&&e.email===i}));-1!==n&&this.invalidUsers.splice(n,1)},e.prototype.generateInvalidUsersMessage=function(){var e=this;this.validateUsersMessage="",this.invalidUsers.forEach((function(t,r){r===e.invalidUsers.length-1?e.validateUsersMessage+=t.username+" ":e.validateUsersMessage+=t.username+", "}))},e.prototype.setTypingError=function(){this.searchUserCtrl.setErrors(Object.assign({searchTypingError:!0},this.searchUserCtrl.errors))},e.prototype.hasPreselectError=function(){return this.invalidUsers&&this.invalidUsers.length>0},e.prototype.getDisplayName=function(e){return r.FullNamePipe.prototype.transform(e)},e.prototype.isMultipleMode=function(){return"multiple"===this.mode},e.prototype.isSingleMode=function(){return"single"===this.mode},e.prototype.isSingleSelectionReadonly=function(){return this.isSingleMode()&&1===this.selectedUsers.length&&!0===this.selectedUsers[0].readonly},e.prototype.hasPreSelectUsers=function(){return this.preSelectUsers&&this.preSelectUsers.length>0},e.prototype.valueChanged=function(e){return e&&e.currentValue!==e.previousValue},e.prototype.hasPreselectedUsersCleared=function(e){return e&&e.preSelectUsers&&e.preSelectUsers.currentValue&&0===e.preSelectUsers.currentValue.length},e.prototype.resetSearchUsers=function(){this._searchUsers=[],this.searchUsers$.next(this._searchUsers)},e.prototype.getSelectedUsers=function(){return this.selectedUsers},e.prototype.isReadonly=function(){return this.readOnly||this.isSingleSelectionReadonly()},e.prototype.isValidationLoading=function(){return this.isValidationEnabled()&&this.validationLoading},e.prototype.setFocus=function(e){this.isFocused=e},e.prototype.hasError=function(){return!!this.searchUserCtrl.errors},e.prototype.getValidationPattern=function(){return this.searchUserCtrl.errors.pattern.requiredPattern},e.prototype.getValidationMaxLength=function(){return this.searchUserCtrl.errors.maxlength.requiredLength},e.prototype.getValidationMinLength=function(){return this.searchUserCtrl.errors.minlength.requiredLength},e}();Oe.decorators=[{type:t.Component,args:[{selector:"adf-cloud-people",template:'<form>\n    <mat-form-field [floatLabel]="\'auto\'" class="adf-people-cloud">\n        <mat-label *ngIf="!isReadonly()" id="adf-people-cloud-title-id">{{ title | translate }}</mat-label>\n        <mat-chip-list #userMultipleChipList [disabled]="isReadonly() || isValidationLoading()" data-automation-id="adf-cloud-people-chip-list">\n            <mat-chip\n                *ngFor="let user of selectedUsers"\n                [removable]="!(user.readonly)"\n                [attr.data-automation-id]="\'adf-people-cloud-chip-\' + user.username"\n                (removed)="onRemove(user)"\n                matTooltip="{{ (user.readonly ? \'ADF_CLOUD_GROUPS.MANDATORY\' : \'\') | translate }}">\n                {{user | fullName}}\n                <mat-icon\n                    matChipRemove\n                    *ngIf="!(user.readonly || readOnly)"\n                    [attr.data-automation-id]="\'adf-people-cloud-chip-remove-icon-\' + user.username">\n                    cancel\n                </mat-icon>\n            </mat-chip>\n            <input *ngIf="!isReadonly()" matInput\n                   [formControl]="searchUserCtrl"\n                   [matAutocomplete]="auto"\n                   [matChipInputFor]="userMultipleChipList"\n                   (focus)="setFocus(true)"\n                   (blur)="setFocus(false)"\n                   class="adf-cloud-input"\n                   data-automation-id="adf-people-cloud-search-input" #userInput>\n        </mat-chip-list>\n\n        <mat-autocomplete autoActiveFirstOption class="adf-people-cloud-list"\n                          #auto="matAutocomplete"\n                          (optionSelected)="onSelect($event.option.value)"\n                          [displayWith]="getDisplayName">\n            <ng-container *ngIf="(searchUsers$ | async)?.length else noResults" >\n            <mat-option *ngFor="let user of searchUsers$ | async; let i = index" [value]="user">\n                <div class="adf-people-cloud-row" id="adf-people-cloud-user-{{user.username}}"\n                     data-automation-id="adf-people-cloud-row">\n                    <div [outerHTML]="user | usernameInitials:\'adf-people-cloud-pic\'"></div>\n                    <span class="adf-people-label-name"> {{user | fullName}}</span>\n                </div>\n            </mat-option>\n            </ng-container>\n            <ng-template #noResults>\n                <mat-option *ngIf="searchUserCtrl.hasError(\'searchTypingError\') && !searchLoading" disabled\n                            class="adf-people-cloud-option-not-active"\n                            data-automation-id="adf-people-cloud-no-results">\n                    <span> {{ \'ADF_CLOUD_USERS.ERROR.NOT_FOUND\' | translate : { userName: searchedValue } }}</span>\n                </mat-option>\n            </ng-template>\n        </mat-autocomplete>\n    </mat-form-field>\n    <mat-progress-bar\n        *ngIf="validationLoading"\n        mode="indeterminate">\n    </mat-progress-bar>\n\n    <mat-error *ngIf="hasPreselectError() && !isValidationLoading()">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_USERS.ERROR.NOT_FOUND\' | translate : { userName : validateUsersMessage } }}</mat-error>\n    <mat-error *ngIf="searchUserCtrl.hasError(\'pattern\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_PATTERN\' | translate: { pattern: getValidationPattern() } }}</mat-error>\n    <mat-error *ngIf="searchUserCtrl.hasError(\'maxlength\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MAX_LENGTH\' | translate: { requiredLength: getValidationMaxLength() } }}\n    </mat-error>\n    <mat-error *ngIf="searchUserCtrl.hasError(\'minlength\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MIN_LENGTH\' | translate: { requiredLength: getValidationMinLength() } }}</mat-error>\n    <mat-error *ngIf="searchUserCtrl.hasError(\'required\') || userChipsCtrl.hasError(\'required\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.REQUIRED\' | translate }} </mat-error>\n    <mat-error *ngIf="searchUserCtrl.hasError(\'searchTypingError\') && !this.isFocused" data-automation-id="invalid-users-typing-error">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_USERS.ERROR.NOT_FOUND\' | translate : { userName : searchedValue } }}</mat-error>\n</form>\n',animations:[x.trigger("transitionMessages",[x.state("enter",x.style({opacity:1,transform:"translateY(0%)"})),x.transition("void => enter",[x.style({opacity:0,transform:"translateY(-100%)"}),x.animate("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])],providers:[r.FullNamePipe],changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None,styles:[".adf-people-cloud{width:100%}.adf-people-cloud-option-not-active{background:inherit!important}.adf-people-cloud-list{margin:5px 0;padding:10px 0}.adf-people-cloud-row{align-items:center;column-gap:10px;display:flex}.adf-people-cloud-pic{align-items:center;background:var(--theme-primary-color);border-radius:100px;color:var(--theme-text-fg-color);display:flex;font-size:18px;font-weight:bolder;height:40px;justify-content:center;text-transform:uppercase;width:40px}.adf-start-task-cloud-error{height:20px;margin-top:-10px;position:absolute}.adf-start-task-cloud-error-message{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-start-task-cloud-error-icon{color:var(--theme-warn-color);font-size:17px}"]}]}],Oe.ctorParameters=function(){return[{type:r.IdentityUserService},{type:r.LogService}]},Oe.propDecorators={appName:[{type:t.Input}],mode:[{type:t.Input}],roles:[{type:t.Input}],validate:[{type:t.Input}],readOnly:[{type:t.Input}],preSelectUsers:[{type:t.Input}],excludedUsers:[{type:t.Input}],userChipsCtrl:[{type:t.Input}],searchUserCtrl:[{type:t.Input}],title:[{type:t.Input}],selectUser:[{type:t.Output}],removeUser:[{type:t.Output}],changedUsers:[{type:t.Output}],warning:[{type:t.Output}],userInput:[{type:t.ViewChild,args:["userInput"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Le=function(){};Le.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,i.FlexLayoutModule,$,P.FormsModule,P.ReactiveFormsModule,r.CoreModule],declarations:[Oe],exports:[Oe]}]}];var Re=function(){function e(e,t){this.identityUserService=e,this.preferenceService=t,this.filtersSubject=new _.BehaviorSubject([]),this.filters$=this.filtersSubject.asObservable()}return e.prototype.createDefaultFilters=function(e){var t=this,r=this.prepareKey(e);this.preferenceService.getPreferences(e,r).pipe(k.switchMap((function(i){var n=i&&i.list&&i.list.entries?i.list.entries:[];return t.hasPreferences(n)&&t.hasTaskFilters(n,r)?_.of(t.findFiltersByKeyInPreferences(n,r)):t.createTaskFilters(e,r,t.defaultServiceTaskFilters(e))}))).subscribe((function(e){t.addFiltersToStream(e)}))},e.prototype.hasPreferences=function(e){return e&&e.length>0},e.prototype.hasTaskFilters=function(e,t){var r=e.find((function(e){return e.entry.key===t}));return!(!r||!r.entry)&&JSON.parse(r.entry.value).length>0},e.prototype.createTaskFilters=function(e,t,r){return this.preferenceService.createPreference(e,t,r)},e.prototype.getTaskFiltersByKey=function(e,t){return this.preferenceService.getPreferenceByKey(e,t)},e.prototype.getTaskListFilters=function(e){return this.createDefaultFilters(e),this.filters$},e.prototype.getTaskFilterById=function(e,t){var r=this,i=this.prepareKey(e);return this.getTaskFiltersByKey(e,i).pipe(k.switchMap((function(t){return t&&0===t.length?r.createTaskFilters(e,i,r.defaultServiceTaskFilters(e)):_.of(t)})),k.map((function(e){return e.filter((function(e){return e.id===t}))[0]})))},e.prototype.addFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getTaskFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){return i&&0===i.length?t.createTaskFilters(e.appName,r,[e]):(i.push(e),t.preferenceService.updatePreference(e.appName,r,i))})),k.map((function(e){return t.addFiltersToStream(e),e})))},e.prototype.addFiltersToStream=function(e){this.filtersSubject.next(e)},e.prototype.updateFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getTaskFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){if(i&&0===i.length)return t.createTaskFilters(e.appName,r,[e]);var n=i.findIndex((function(t){return t.id===e.id}));return i[n]=e,t.updateTaskFilters(e.appName,r,i)})),k.map((function(e){return t.addFiltersToStream(e),e})))},e.prototype.deleteFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getTaskFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){return i&&i.length>0?(i=i.filter((function(t){return t.id!==e.id})),t.updateTaskFilters(e.appName,r,i)):_.of([])})),k.map((function(e){return t.addFiltersToStream(e),e})))},e.prototype.isDefaultFilter=function(e){return-1!==this.defaultServiceTaskFilters().findIndex((function(t){return e===t.name}))},e.prototype.updateTaskFilters=function(e,t,r){return this.preferenceService.updatePreference(e,t,r)},e.prototype.prepareKey=function(e){return"service-task-filters-"+e+"-"+this.identityUserService.getCurrentUserInfo().username},e.prototype.findFiltersByKeyInPreferences=function(e,t){var r=e.find((function(e){return e.entry.key===t}));return r&&r.entry?JSON.parse(r.entry.value):[]},e.prototype.defaultServiceTaskFilters=function(e){return[{id:this.generateRandomId(),name:"ADF_CLOUD_SERVICE_TASK_FILTERS.ALL_SERVICE_TASKS",key:"my-service-tasks",icon:"inbox",appName:e,status:"",sort:"startedDate",order:"DESC"},{id:this.generateRandomId(),name:"ADF_CLOUD_SERVICE_TASK_FILTERS.COMPLETED_TASKS",key:"completed-tasks",icon:"done",appName:e,status:"COMPLETED",sort:"completedDate",order:"DESC"},{id:this.generateRandomId(),name:"ADF_CLOUD_SERVICE_TASK_FILTERS.ERRORED_TASKS",key:"errored-service-tasks",icon:"error",appName:e,status:"ERROR",sort:"startedDate",order:"DESC"}]},e.prototype.generateRandomId=function(){return Math.random().toString(36).substr(2,9)},e}();Re.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Re(t.ɵɵinject(r.IdentityUserService),t.ɵɵinject(Ce))},token:Re,providedIn:"root"}),Re.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Re.ctorParameters=function(){return[{type:r.IdentityUserService},{type:void 0,decorators:[{type:t.Inject,args:[Ce]}]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var we=function(){function e(e,t,r){this.fb=e,this.dialogRef=t,this.data=r,this.defaultIcon="inbox"}return e.prototype.ngOnInit=function(){this.filterForm=this.fb.group({name:[this.data.name,P.Validators.required]})},e.prototype.onSaveClick=function(){this.dialogRef.close({action:e.ACTION_SAVE,icon:this.defaultIcon,name:this.nameController.value})},e.prototype.onCancelClick=function(){this.dialogRef.close()},Object.defineProperty(e.prototype,"nameController",{get:function(){return this.filterForm.get("name")},enumerable:!1,configurable:!0}),e.prototype.isValid=function(){return this.filterForm.valid},e}();we.ACTION_SAVE="SAVE",we.decorators=[{type:t.Component,args:[{selector:"adf-cloud-task-filter-dialog",template:'<div class="adf-task-filter-dialog">\n    <span mat-dialog-title id="adf-task-filter-dialog-title">\n         {{ \'ADF_CLOUD_EDIT_TASK_FILTER.DIALOG.TITLE\' | translate}}\n    </span>\n    <mat-card>\n        <mat-card-content>\n        <form [formGroup]="filterForm">\n            <mat-form-field fxFlex [floatLabel]="\'auto\'">\n                <input matInput placeholder="{{ \'ADF_CLOUD_EDIT_TASK_FILTER.FILTER_NAME\' | translate }}" formControlName="name" id="adf-filter-name-id">\n            </mat-form-field>\n        </form>\n        </mat-card-content>\n        <mat-card-actions fxLayout="row" fxLayoutAlign="end end">\n            <button mat-button (click)="onSaveClick()" id="adf-save-button-id" [disabled]="!isValid()">\n                {{ \'ADF_CLOUD_EDIT_TASK_FILTER.DIALOG.SAVE\' | translate}}\n            </button>\n            <button mat-button (click)="onCancelClick()" id="adf-cancel-button-id">\n               {{ \'ADF_CLOUD_EDIT_TASK_FILTER.DIALOG.CANCEL\' | translate}}\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n',styles:[".adf-task-filter-dialog .mat-card,.adf-task-filter-dialog .mat-card-content{box-shadow:none;padding:0}"]}]}],we.ctorParameters=function(){return[{type:P.FormBuilder},{type:u.MatDialogRef},{type:void 0,decorators:[{type:t.Inject,args:[u.MAT_DIALOG_DATA]}]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ne=function(){function i(e,r,n,o,a,s,l){this.formBuilder=e,this.dateAdapter=r,this.userPreferencesService=n,this.appsProcessCloudService=o,this.taskCloudService=a,this.dialog=s,this.translateService=l,this.appName="",this.showTitle=!0,this.showTaskFilterName=!0,this.filterProperties=[],this.role="",this.showFilterActions=!0,this.actions=i.DEFAULT_ACTIONS,this.sortProperties=[],this.action=new t.EventEmitter,this.applicationNames=[],this.processDefinitionNames=[],this.formHasBeenChanged=!1,this.taskFilterProperties=[],this.taskFilterActions=[],this.toggleFilterActions=!1,this.sortDirections=[{value:"ASC",label:"ADF_CLOUD_TASK_FILTERS.DIRECTION.ASCENDING"},{value:"DESC",label:"ADF_CLOUD_TASK_FILTERS.DIRECTION.DESCENDING"}],this.allProcessDefinitionNamesOption={value:"",label:"ADF_CLOUD_TASK_FILTERS.STATUS.ALL"},this.filterChange=new t.EventEmitter,this.onDestroy$=new _.Subject,this.isLoading=!1}return i.prototype.ngOnInit=function(){var e=this;this.userPreferencesService.select(r.UserPreferenceValues.Locale).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){return e.dateAdapter.setLocale(t)}))},i.prototype.ngOnChanges=function(e){var t=e.id;t&&t.currentValue!==t.previousValue&&this.retrieveTaskFilterAndBuildForm()},i.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},i.prototype.createFilterActions=function(){return[{actionType:i.ACTION_SAVE,icon:"adf:save",tooltip:"ADF_CLOUD_EDIT_TASK_FILTER.TOOL_TIP.SAVE"},{actionType:i.ACTION_SAVE_AS,icon:"adf:save-as",tooltip:"ADF_CLOUD_EDIT_TASK_FILTER.TOOL_TIP.SAVE_AS"},{actionType:i.ACTION_DELETE,icon:"delete",tooltip:"ADF_CLOUD_EDIT_TASK_FILTER.TOOL_TIP.DELETE"}]},i.prototype.hasFormChanged=function(e){return e.actionType===i.ACTION_SAVE||e.actionType===i.ACTION_SAVE_AS?!this.formHasBeenChanged:(e.actionType,i.ACTION_DELETE,!1)},i.prototype.onExpand=function(){this.toggleFilterActions=!0},i.prototype.onClose=function(){this.toggleFilterActions=!1},i.prototype.isDisabledAction=function(e){return!!this.isDisabledForDefaultFilters(e)||this.hasFormChanged(e)},i.prototype.deepCompare=function(e,t){return JSON.stringify(e).toLowerCase()===JSON.stringify(t).toLowerCase()},i.prototype.getSanitizeFilterName=function(e){return this.replaceSpaceWithHyphen(e.trim()).toLowerCase()},i.prototype.replaceSpaceWithHyphen=function(e){var t=new RegExp(" ","g");return e.replace(t,"-")},i.prototype.executeFilterActions=function(e){e.actionType===i.ACTION_SAVE?this.save(e):e.actionType===i.ACTION_SAVE_AS?this.saveAs(e):e.actionType===i.ACTION_DELETE&&this.delete(e)},i.prototype.getRunningApplications=function(){var e=this;this.appsProcessCloudService.getDeployedApplicationsByStatus(i.APP_RUNNING_STATUS,this.role).subscribe((function(t){t&&t.length>0&&t.map((function(t){e.applicationNames.push({label:t.name,value:t.name})}))}))},i.prototype.getProcessDefinitions=function(){var e=this;this.taskCloudService.getProcessDefinitions(this.appName).subscribe((function(t){t&&t.length>0&&(e.processDefinitionNames.push(e.allProcessDefinitionNamesOption),t.map((function(t){e.processDefinitionNames.push({label:t.name,value:t.name})})))}))},i.prototype.checkMandatoryActions=function(){void 0!==this.actions&&0!==this.actions.length||(this.actions=i.DEFAULT_ACTIONS)},i.prototype.isValidAction=function(e,t){return!e||e.indexOf(t.actionType)>=0},i.prototype.isFormValid=function(){return this.editTaskFilterForm.valid},i.prototype.getPropertyController=function(e){return this.editTaskFilterForm.get(e.key)},i.prototype.onDateChanged=function(e,t){if(e){var r=V(e,i.FORMAT_DATE,!0),n=this.getPropertyController(t);r.isValid()?(n.setValue(r.toISOString(!0)),n.setErrors(null)):n.setErrors({invalid:!0})}},i.prototype.onDateRangeFilterChanged=function(t,r){var i,n;this.editTaskFilterForm.get(null===(i=r.attributes)||void 0===i?void 0:i.from).setValue(t.startDate?t.startDate:null),this.editTaskFilterForm.get(null===(n=r.attributes)||void 0===n?void 0:n.to).setValue(t.endDate?t.endDate:null),this.editTaskFilterForm.get(r.attributes.dateType).setValue(e.DateCloudFilterType.RANGE)},i.prototype.onChangedUser=function(e,t){var r;r="single"===t.selectionMode?e[0]:e,this.getPropertyController(t).setValue(r)},i.prototype.onAssignedChange=function(e){this.editTaskFilterForm.get("candidateGroups").setValue([]),this.editTaskFilterForm.get("assignee").setValue(null==e?void 0:e.username)},i.prototype.onAssignedGroupsChange=function(e){this.editTaskFilterForm.get("assignee").setValue(null),this.editTaskFilterForm.get("candidateGroups").setValue(e)},i.prototype.hasError=function(e){var t=this.getPropertyController(e);return t.errors&&t.errors.invalid},i.prototype.hasLastModifiedProperty=function(){return this.filterProperties.indexOf(i.LAST_MODIFIED)>=0},Object.defineProperty(i.prototype,"createSortProperties",{get:function(){return this.checkMandatorySortProperties(),this.sortProperties.map((function(e){return{label:e,value:e}}))},enumerable:!1,configurable:!0}),i.prototype.createAndFilterActions=function(){var e=this;return this.checkMandatoryActions(),this.createFilterActions().filter((function(t){return e.isValidAction(e.actions,t)}))},i.prototype.isValidProperty=function(e,t){return!e||e.indexOf(t)>=0},i.prototype.checkForProperty=function(e){return!!this.filterProperties&&this.filterProperties.indexOf(e)>=0},i.prototype.hasSortProperty=function(){return this.filterProperties.indexOf(i.SORT)>=0},i.prototype.removeOrderProperty=function(e){return e&&e.length>0?e.filter((function(e){return e.key!==i.ORDER})):[]},i.prototype.createAndFilterProperties=function(){var e=this;this.checkMandatoryFilterProperties(),this.checkForProperty(i.APPLICATION_NAME)&&(this.applicationNames=[],this.getRunningApplications()),this.checkForProperty(i.PROCESS_DEFINITION_NAME)&&(this.processDefinitionNames=[],this.getProcessDefinitions());var t=this.createTaskFilterProperties().filter((function(t){return e.isValidProperty(e.filterProperties,t.key)}));return this.hasSortProperty()||(t=this.removeOrderProperty(t)),t},i.prototype.onFilterChange=function(){var e=this;this.editTaskFilterForm.valueChanges.pipe(k.debounceTime(500),k.filter((function(){return e.isFormValid()})),k.takeUntil(this.onDestroy$)).subscribe((function(t){e.assignNewFilter(t)}))},i.prototype.getFormControlsConfig=function(e){var t=this;return e.map((function(e){var r;return e.attributes?t.getAttributesControlConfig(e):((r={})[e.key]=e.value,r)})).reduce((function(e,t){return Object.assign(e,t)}),{})},i.prototype.getAttributesControlConfig=function(e){return Object.values(e.attributes).reduce((function(t,r){return t[r]=e.value[r],t}),{})},i.prototype.buildForm=function(e){this.formHasBeenChanged=!1,this.editTaskFilterForm=this.formBuilder.group(this.getFormControlsConfig(e)),this.onFilterChange()},i.prototype.onDateTypeChange=function(e,t){this.editTaskFilterForm.get(t.attributes.dateType).setValue(e)},i.prototype.retrieveTaskFilterAndBuildForm=function(){var e=this;this.isLoading=!0,this.getTaskFilterById(this.appName,this.id).pipe(k.finalize((function(){return e.isLoading=!1})),k.takeUntil(this.onDestroy$)).subscribe((function(t){e.taskFilter=t,e.taskFilterProperties=e.createAndFilterProperties(),e.taskFilterActions=e.createAndFilterActions(),e.buildForm(e.taskFilterProperties)}))},i.prototype.delete=function(e){var t=this;this.deleteFilter(this.taskFilter).pipe(k.filter((function(r){return e.filter=t.taskFilter,t.action.emit(e),0===r.length})),k.switchMap((function(){return t.restoreDefaultTaskFilters()})),k.takeUntil(this.onDestroy$)).subscribe((function(){}))},i.prototype.save=function(e){var t=this;this.updateFilter(this.changedTaskFilter).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(){e.filter=t.changedTaskFilter,t.action.emit(e),t.formHasBeenChanged=t.deepCompare(t.changedTaskFilter,t.taskFilter)}))},i.prototype.saveAs=function(e){var t,r=this;this.dialog.open(we,{data:{name:this.translateService.instant(null===(t=this.taskFilter)||void 0===t?void 0:t.name)},height:"auto",minWidth:"30%"}).afterClosed().subscribe((function(t){if(t&&t.action===we.ACTION_SAVE){var i=Math.random().toString(36).substr(2,9),n=r.getSanitizeFilterName(t.name),o={name:t.name,icon:t.icon,id:i,key:"custom-"+n},a=Object.assign({},r.changedTaskFilter,o);r.addFilter(a).subscribe((function(){e.filter=a,r.action.emit(e)}))}}))},i.prototype.checkMandatoryFilterProperties=function(){void 0!==this.filterProperties&&0!==this.filterProperties.length||(this.filterProperties=this.getDefaultFilterProperties())},i.prototype.checkMandatorySortProperties=function(){void 0!==this.sortProperties&&0!==this.sortProperties.length||(this.sortProperties=this.getDefaultSortProperties())},i}();Ne.ACTION_SAVE="save",Ne.ACTION_SAVE_AS="saveAs",Ne.ACTION_DELETE="delete",Ne.APP_RUNNING_STATUS="RUNNING",Ne.APPLICATION_NAME="appName",Ne.PROCESS_DEFINITION_NAME="processDefinitionName",Ne.LAST_MODIFIED="lastModified",Ne.SORT="sort",Ne.ORDER="order",Ne.DEFAULT_ACTIONS=["save","saveAs","delete"],Ne.FORMAT_DATE="DD/MM/YYYY",Ne.ACTIONS_DISABLED_BY_DEFAULT=[Ne.ACTION_SAVE,Ne.ACTION_DELETE],Ne.decorators=[{type:t.Directive}],Ne.ctorParameters=function(){return[{type:P.FormBuilder},{type:p.DateAdapter},{type:r.UserPreferencesService},{type:H},{type:fe},{type:u.MatDialog},{type:r.TranslationService}]},Ne.propDecorators={appName:[{type:t.Input}],id:[{type:t.Input}],showTitle:[{type:t.Input}],showTaskFilterName:[{type:t.Input}],filterProperties:[{type:t.Input}],role:[{type:t.Input}],showFilterActions:[{type:t.Input}],actions:[{type:t.Input}],sortProperties:[{type:t.Input}],action:[{type:t.Output}],filterChange:[{type:t.Output}]};var Ue=function(e){function t(t,r,i,n,o,a,s,l){var p=e.call(this,t,o,a,s,l,r,i)||this;return p.serviceTaskFilterCloudService=n,p}return Q(t,e),t.prototype.assignNewFilter=function(e){this.changedTaskFilter=Object.assign(Object.assign({},this.taskFilter),e),this.formHasBeenChanged=!this.deepCompare(this.changedTaskFilter,this.taskFilter),this.filterChange.emit(this.changedTaskFilter)},t.prototype.getTaskFilterById=function(e,t){return this.serviceTaskFilterCloudService.getTaskFilterById(e,t)},t.prototype.getDefaultFilterProperties=function(){return["appName","activityName","status","sort","order"]},t.prototype.getDefaultSortProperties=function(){return["id","activityName","startedDate","completedDate"]},t.prototype.updateFilter=function(e){return this.serviceTaskFilterCloudService.updateFilter(e)},t.prototype.deleteFilter=function(e){return this.serviceTaskFilterCloudService.deleteFilter(e)},t.prototype.addFilter=function(e){return this.serviceTaskFilterCloudService.addFilter(e).pipe(k.takeUntil(this.onDestroy$))},t.prototype.isDisabledForDefaultFilters=function(e){return this.serviceTaskFilterCloudService.isDefaultFilter(this.taskFilter.name)&&t.ACTIONS_DISABLED_BY_DEFAULT.includes(e.actionType)},t.prototype.restoreDefaultTaskFilters=function(){return this.serviceTaskFilterCloudService.getTaskListFilters(this.appName)},t.prototype.getStatusOptions=function(){return[{value:"",label:"ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.ALL"},{value:"STARTED",label:"ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.STARTED"},{value:"COMPLETED",label:"ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.COMPLETED"},{value:"CANCELLED",label:"ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.CANCELLED"},{value:"ERROR",label:"ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.ERROR"}]},t.prototype.createTaskFilterProperties=function(){var e=this.getStatusOptions();return[{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.APP_NAME",type:"select",key:"appName",value:this.taskFilter.appName||"",options:this.applicationNames},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.SERVICE_TASK_ID",type:"text",key:"serviceTaskId",value:this.taskFilter.serviceTaskId||""},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.ELEMENT_ID",type:"text",key:"elementId",value:this.taskFilter.elementId||""},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.ACTIVITY_NAME",type:"text",key:"activityName",value:this.taskFilter.activityName||""},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.ACTIVITY_TYPE",type:"text",key:"activityType",value:this.taskFilter.activityType||""},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.SORT",type:"select",key:"sort",value:this.taskFilter.sort||this.createSortProperties[0].value,options:this.createSortProperties},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.DIRECTION",type:"select",key:"order",value:this.taskFilter.order||this.sortDirections[0].value,options:te(this.sortDirections)},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.STATUS",type:"select",key:"status",value:this.taskFilter.status||e[0].value,options:e},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.STARTED_DATE",type:"date",key:"startedDate",value:this.taskFilter.completedDate||!1},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.COMPLETED_DATE",type:"date",key:"completedDate",value:this.taskFilter.completedDate||!1},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.PROCESS_INSTANCE_ID",type:"text",key:"processInstanceId",value:this.taskFilter.processInstanceId||""},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.PROCESS_DEF_ID",type:"text",key:"processDefinitionId",value:this.taskFilter.processDefinitionId||""},{label:"ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.SERVICE_NAME",type:"text",key:"serviceName",value:this.taskFilter.serviceName||""}]},t}(Ne);Ue.decorators=[{type:t.Component,args:[{selector:"adf-cloud-edit-service-task-filter",template:'<mat-accordion [hideToggle]="isLoading">\n    <mat-expansion-panel (afterExpand)="onExpand()" (closed)="onClose()">\n        <mat-expansion-panel-header *ngIf="taskFilter" id="adf-edit-task-filter-expansion-header">\n            <ng-container *ngIf="!isLoading; else loadingTemplate">\n                <mat-panel-title *ngIf="showTaskFilterName" fxLayoutAlign="space-between center" id="adf-edit-task-filter-title-id"\n                    >{{taskFilter.name | translate}}</mat-panel-title>\n                <mat-panel-description fxLayoutAlign="space-between center" id="adf-edit-task-filter-sub-title-id">\n                    <span *ngIf="showTitle">{{ \'ADF_CLOUD_EDIT_TASK_FILTER.TITLE\' | translate}}</span>\n                    <div *ngIf="showFilterActions" class="adf-cloud-edit-task-filter-actions">\n                        <ng-container *ngIf="toggleFilterActions">\n                            <button *ngFor="let filterAction of taskFilterActions"\n                                    mat-icon-button\n                                    matTooltip="{{ filterAction.tooltip | translate}}"\n                                    [attr.data-automation-id]="\'adf-filter-action-\' + filterAction.actionType"\n                                    [disabled]="isDisabledAction(filterAction)"\n                                    (click)="executeFilterActions(filterAction)">\n                                <adf-icon [value]="filterAction.icon"></adf-icon>\n                            </button>\n                        </ng-container>\n                    </div>\n                </mat-panel-description>\n            </ng-container>\n            <ng-template #loadingTemplate>\n                <div class="adf-cloud-edit-task-filter-loading-margin">\n                    <mat-spinner [diameter]="30"></mat-spinner>\n                </div>\n            </ng-template>\n        </mat-expansion-panel-header>\n        <ng-container *ngIf="!isLoading;">\n            <form *ngIf="editTaskFilterForm" [formGroup]="editTaskFilterForm">\n                <div fxLayout="row wrap" fxLayout.xs="column" fxLayoutGap="10px" fxLayoutAlign="start center">\n                    <ng-container *ngFor="let taskFilterProperty of taskFilterProperties">\n                        <mat-form-field fxFlex="23%"\n                                        [floatLabel]="\'auto\'"\n                                        *ngIf="taskFilterProperty.type === \'select\'"\n                                        [attr.data-automation-id]="taskFilterProperty.key">\n                            <mat-select placeholder="{{taskFilterProperty.label | translate}}"\n                                        [formControlName]="taskFilterProperty.key"\n                                        [attr.data-automation-id]="\'adf-cloud-edit-task-property-\' + taskFilterProperty.key">\n                                <mat-option *ngFor="let propertyOption of taskFilterProperty.options"\n                                            [value]="propertyOption.value"\n                                            [attr.data-automation-id]="\'adf-cloud-edit-task-property-options-\' + taskFilterProperty.key">\n                                    {{ propertyOption.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field fxFlex="23%"\n                                        [floatLabel]="\'auto\'"\n                                        *ngIf="taskFilterProperty.type === \'text\'"\n                                        [attr.data-automation-id]="taskFilterProperty.key">\n                            <input matInput\n                                   [formControlName]="taskFilterProperty.key"\n                                   type="text"\n                                   placeholder="{{taskFilterProperty.label | translate}}"\n                                   [attr.data-automation-id]="\'adf-cloud-edit-task-property-\' + taskFilterProperty.key" />\n                        </mat-form-field>\n                        <mat-form-field fxFlex="23%"\n                                        [floatLabel]="\'auto\'"\n                                        *ngIf="taskFilterProperty.type === \'date\'"\n                                        [attr.data-automation-id]="taskFilterProperty.key">\n                            <mat-label>{{taskFilterProperty.label | translate}}</mat-label>\n                            <input matInput\n                                   (keyup)="onDateChanged($any($event).srcElement.value, taskFilterProperty)"\n                                   (dateChange)="onDateChanged($event.value, taskFilterProperty)"\n                                   [matDatepicker]="dateController"\n                                   placeholder="{{taskFilterProperty.label | translate}}"\n                                   [attr.data-automation-id]="\'adf-cloud-edit-task-property-\' + taskFilterProperty.key">\n                            <mat-datepicker-toggle matSuffix\n                                                   [for]="dateController"\n                                                   [attr.data-automation-id]="\'adf-cloud-edit-task-property-date-toggle-\' + taskFilterProperty.key">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #dateController\n                                            [attr.data-automation-id]="\'adf-cloud-edit-task-property-date-picker-\' + taskFilterProperty.key">\n                            </mat-datepicker>\n                            <div class="adf-edit-task-filter-date-error-container">\n                                <div *ngIf="hasError(taskFilterProperty)">\n                                    <div class="adf-error-text">{{\'ADF_TASK_LIST.START_TASK.FORM.ERROR.DATE\'|translate}}</div>\n                                    <mat-icon class="adf-error-icon">warning</mat-icon>\n                                </div>\n                            </div>\n                        </mat-form-field>\n                        <div class="adf-edit-task-filter-checkbox"\n                             *ngIf="taskFilterProperty.type === \'checkbox\'">\n                            <mat-checkbox color="primary"\n                                          [formControlName]="taskFilterProperty.key"\n                                          [attr.data-automation-id]="taskFilterProperty.key"\n                            >{{taskFilterProperty.label | translate}}</mat-checkbox>\n                        </div>\n\n                        <adf-cloud-date-range-filter #dateRange\n                            *ngIf="taskFilterProperty.type === \'date-range\'"\n                            [processFilterProperty]="taskFilterProperty"\n                            [options]="taskFilterProperty.dateFilterOptions"\n                            (dateTypeChange)="onDateTypeChange($event, taskFilterProperty)"\n                            (dateChanged)="onDateRangeFilterChanged($event, taskFilterProperty)">\n                        </adf-cloud-date-range-filter>\n\n                        <div fxFlex="23%" class="{{ \'adf-edit-task-filter-\' + taskFilterProperty.key }}" *ngIf="taskFilterProperty.type === \'people\'">\n                            <adf-cloud-people\n                                [preSelectUsers]="taskFilterProperty.value"\n                                [title]="taskFilterProperty.label"\n                                [validate]="true"\n                                [appName]="appName"\n                                [mode]="taskFilterProperty.selectionMode"\n                                (changedUsers)="onChangedUser($event, taskFilterProperty)">\n                            </adf-cloud-people>\n                        </div>\n\n                        <adf-cloud-task-assignment-filter fxFlex="23%"\n                            *ngIf="taskFilterProperty.type === \'assignment\'"\n                            [taskFilterProperty]="taskFilterProperty"\n                            (assignedChange)="onAssignedChange($event)"\n                            (assignedGroupChange)="onAssignedGroupsChange($event)">\n                        </adf-cloud-task-assignment-filter>\n                    </ng-container>\n                </div>\n            </form>\n        </ng-container>\n    </mat-expansion-panel>\n</mat-accordion>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-edit-task-filter-checkbox{flex:1 23%;font-size:16px;padding-top:10px;text-align:center}.adf-edit-task-filter-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-edit-task-filter-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-edit-task-filter-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:10px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-edit-task-filter-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:16px}.adf-edit-task-filter-dateRange mat-grid-list{width:450px}.adf-cloud-edit-task-filter-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],Ue.ctorParameters=function(){return[{type:P.FormBuilder},{type:u.MatDialog},{type:r.TranslationService},{type:Re},{type:p.DateAdapter},{type:r.UserPreferencesService},{type:H},{type:fe}]};var Me=function(t){function r(e,r,i,n,o,a,s,l){var p=t.call(this,e,o,a,s,l,r,i)||this;return p.taskFilterCloudService=n,p}return Q(r,t),r.prototype.assignNewFilter=function(e){this.setLastModifiedToFilter(e),this.changedTaskFilter=new Ee(Object.assign({},this.taskFilter,e)),this.formHasBeenChanged=!this.deepCompare(this.changedTaskFilter,this.taskFilter),this.filterChange.emit(this.changedTaskFilter)},r.prototype.getTaskFilterById=function(e,t){return this.taskFilterCloudService.getTaskFilterById(e,t).pipe(k.map((function(e){return new Ee(e)})))},r.prototype.createAndFilterProperties=function(){var e=t.prototype.createAndFilterProperties.call(this);return this.hasLastModifiedProperty()?te(e,this.createLastModifiedProperty()):e},r.prototype.getDefaultFilterProperties=function(){return["status","assignee","sort","order"]},r.prototype.getDefaultSortProperties=function(){return["id","name","createdDate","priority"]},r.prototype.setLastModifiedToFilter=function(e){if(e.lastModifiedTo&&Date.parse(e.lastModifiedTo.toString())){var t=b(e.lastModifiedTo);t.set({hour:23,minute:59,second:59}),e.lastModifiedTo=t.toISOString(!0)}},r.prototype.updateFilter=function(e){return this.taskFilterCloudService.updateFilter(e)},r.prototype.deleteFilter=function(e){return this.taskFilterCloudService.deleteFilter(e)},r.prototype.addFilter=function(e){return this.taskFilterCloudService.addFilter(e).pipe(k.takeUntil(this.onDestroy$))},r.prototype.isDisabledForDefaultFilters=function(e){return this.taskFilterCloudService.isDefaultFilter(this.taskFilter.name)&&r.ACTIONS_DISABLED_BY_DEFAULT.includes(e.actionType)},r.prototype.restoreDefaultTaskFilters=function(){return this.taskFilterCloudService.getTaskListFilters(this.appName)},r.prototype.createLastModifiedProperty=function(){return[{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.LAST_MODIFIED_FROM",type:"date",key:"lastModifiedFrom",value:""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.LAST_MODIFIED_TO",type:"date",key:"lastModifiedTo",value:""}]},r.prototype.getStatusOptions=function(){return[{value:"",label:"ADF_CLOUD_TASK_FILTERS.STATUS.ALL"},{value:"CREATED",label:"ADF_CLOUD_TASK_FILTERS.STATUS.CREATED"},{value:"ASSIGNED",label:"ADF_CLOUD_TASK_FILTERS.STATUS.ASSIGNED"},{value:"SUSPENDED",label:"ADF_CLOUD_TASK_FILTERS.STATUS.SUSPENDED"},{value:"CANCELLED",label:"ADF_CLOUD_TASK_FILTERS.STATUS.CANCELLED"},{value:"COMPLETED",label:"ADF_CLOUD_TASK_FILTERS.STATUS.COMPLETED"}]},r.prototype.createTaskFilterProperties=function(){var t=this.getStatusOptions(),r=this.createSortProperties;return[{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.APP_NAME",type:"select",key:"appName",value:this.taskFilter.appName||"",options:this.applicationNames},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.TASK_ID",type:"text",key:"taskId",value:""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.STATUS",type:"select",key:"status",value:this.taskFilter.status||t[0].value,options:t},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.ASSIGNMENT",type:"text",key:"assignee",value:this.taskFilter.assignee||""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PROCESS_DEF_NAME",type:"select",key:"processDefinitionName",value:this.taskFilter.processDefinitionName||"",options:this.processDefinitionNames},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PROCESS_INSTANCE_ID",type:"text",key:"processInstanceId",value:this.taskFilter.processInstanceId||""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PROCESS_DEF_ID",type:"text",key:"processDefinitionId",value:this.taskFilter.processDefinitionId||""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.TASK_NAME",type:"text",key:"taskName",value:this.taskFilter.taskName||""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PARENT_TASK_ID",type:"text",key:"parentTaskId",value:this.taskFilter.parentTaskId||""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PRIORITY",type:"select",key:"priority",value:this.taskFilter.priority||"",options:this.taskCloudService.priorities},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.OWNER",type:"text",key:"owner",value:this.taskFilter.owner||""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.CREATED_DATE",type:"date",key:"createdDate",value:""},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.SORT",type:"select",key:"sort",value:this.taskFilter.sort||r[0].value,options:r},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.DIRECTION",type:"select",key:"order",value:this.taskFilter.order||this.sortDirections[0].value,options:te(this.sortDirections)},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.STAND_ALONE",type:"checkbox",key:"standalone",value:this.taskFilter.standalone||!1},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.DUE_DATE",type:"date-range",key:"dueDateRange",attributes:{dateType:"dueDateType",from:"_dueDateFrom",to:"_dueDateTo"},value:{dueDateType:this.taskFilter.dueDateType||null,_dueDateFrom:this.taskFilter.dueDateFrom||null,_dueDateTo:this.taskFilter.dueDateTo||null},dateFilterOptions:[e.DateCloudFilterType.NO_DATE,e.DateCloudFilterType.TODAY,e.DateCloudFilterType.TOMORROW,e.DateCloudFilterType.NEXT_7_DAYS,e.DateCloudFilterType.RANGE]},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.COMPLETED_DATE",type:"date-range",key:"completedDateRange",attributes:{dateType:"completedDateType",from:"_completedFrom",to:"_completedTo"},value:{completedDateType:this.taskFilter.completedDateType||null,_completedFrom:this.taskFilter.completedFrom||null,_completedTo:this.taskFilter.completedTo||null}},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.CREATED_DATE",type:"date-range",key:"createdDateRange",attributes:{dateType:"createdDateType",from:"_createdFrom",to:"_createdTo"},value:{createdDateType:this.taskFilter.createdDateType||null,_createdFrom:this.taskFilter.createdFrom||null,_createdTo:this.taskFilter.createdTo||null}},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.COMPLETED_BY",type:"people",key:"completedBy",value:this.taskFilter.completedBy?[this.taskFilter.completedBy]:null,selectionMode:"single"},{label:"ADF_CLOUD_EDIT_TASK_FILTER.LABEL.ASSIGNMENT",type:"assignment",key:"assignment",attributes:{assignee:"assignee",candidateGroups:"candidateGroups"},value:{assignee:this.taskFilter.assignee||null,candidateGroups:this.taskFilter.candidateGroups||[]}}]},r}(Ne);Me.decorators=[{type:t.Component,args:[{selector:"adf-cloud-edit-task-filter",template:'<mat-accordion [hideToggle]="isLoading">\n    <mat-expansion-panel (afterExpand)="onExpand()" (closed)="onClose()">\n        <mat-expansion-panel-header *ngIf="taskFilter" id="adf-edit-task-filter-expansion-header">\n            <ng-container *ngIf="!isLoading; else loadingTemplate">\n                <mat-panel-title *ngIf="showTaskFilterName" fxLayoutAlign="space-between center" id="adf-edit-task-filter-title-id"\n                    >{{taskFilter.name | translate}}</mat-panel-title>\n                <mat-panel-description fxLayoutAlign="space-between center" id="adf-edit-task-filter-sub-title-id">\n                    <span *ngIf="showTitle">{{ \'ADF_CLOUD_EDIT_TASK_FILTER.TITLE\' | translate}}</span>\n                    <div *ngIf="showFilterActions" class="adf-cloud-edit-task-filter-actions">\n                        <ng-container *ngIf="toggleFilterActions">\n                            <button *ngFor="let filterAction of taskFilterActions"\n                                    mat-icon-button\n                                    matTooltip="{{ filterAction.tooltip | translate}}"\n                                    [attr.data-automation-id]="\'adf-filter-action-\' + filterAction.actionType"\n                                    [disabled]="isDisabledAction(filterAction)"\n                                    (click)="executeFilterActions(filterAction)">\n                                <adf-icon [value]="filterAction.icon"></adf-icon>\n                            </button>\n                        </ng-container>\n                    </div>\n                </mat-panel-description>\n            </ng-container>\n            <ng-template #loadingTemplate>\n                <div class="adf-cloud-edit-task-filter-loading-margin">\n                    <mat-spinner [diameter]="30"></mat-spinner>\n                </div>\n            </ng-template>\n        </mat-expansion-panel-header>\n        <ng-container *ngIf="!isLoading;">\n            <form *ngIf="editTaskFilterForm" [formGroup]="editTaskFilterForm">\n                <div fxLayout="row wrap" fxLayout.xs="column" fxLayoutGap="10px" fxLayoutAlign="start center">\n                    <ng-container *ngFor="let taskFilterProperty of taskFilterProperties">\n                        <mat-form-field fxFlex="23%"\n                                        [floatLabel]="\'auto\'"\n                                        *ngIf="taskFilterProperty.type === \'select\'"\n                                        [attr.data-automation-id]="taskFilterProperty.key">\n                            <mat-select placeholder="{{taskFilterProperty.label | translate}}"\n                                        [formControlName]="taskFilterProperty.key"\n                                        [attr.data-automation-id]="\'adf-cloud-edit-task-property-\' + taskFilterProperty.key">\n                                <mat-option *ngFor="let propertyOption of taskFilterProperty.options"\n                                            [value]="propertyOption.value"\n                                            [attr.data-automation-id]="\'adf-cloud-edit-task-property-options-\' + taskFilterProperty.key">\n                                    {{ propertyOption.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field fxFlex="23%"\n                                        [floatLabel]="\'auto\'"\n                                        *ngIf="taskFilterProperty.type === \'text\'"\n                                        [attr.data-automation-id]="taskFilterProperty.key">\n                            <input matInput\n                                   [formControlName]="taskFilterProperty.key"\n                                   type="text"\n                                   placeholder="{{taskFilterProperty.label | translate}}"\n                                   [attr.data-automation-id]="\'adf-cloud-edit-task-property-\' + taskFilterProperty.key" />\n                        </mat-form-field>\n                        <mat-form-field fxFlex="23%"\n                                        [floatLabel]="\'auto\'"\n                                        *ngIf="taskFilterProperty.type === \'date\'"\n                                        [attr.data-automation-id]="taskFilterProperty.key">\n                            <mat-label>{{taskFilterProperty.label | translate}}</mat-label>\n                            <input matInput\n                                   (keyup)="onDateChanged($any($event).srcElement.value, taskFilterProperty)"\n                                   (dateChange)="onDateChanged($event.value, taskFilterProperty)"\n                                   [matDatepicker]="dateController"\n                                   placeholder="{{taskFilterProperty.label | translate}}"\n                                   [attr.data-automation-id]="\'adf-cloud-edit-task-property-\' + taskFilterProperty.key">\n                            <mat-datepicker-toggle matSuffix\n                                                   [for]="dateController"\n                                                   [attr.data-automation-id]="\'adf-cloud-edit-task-property-date-toggle-\' + taskFilterProperty.key">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #dateController\n                                            [attr.data-automation-id]="\'adf-cloud-edit-task-property-date-picker-\' + taskFilterProperty.key">\n                            </mat-datepicker>\n                            <div class="adf-edit-task-filter-date-error-container">\n                                <div *ngIf="hasError(taskFilterProperty)">\n                                    <div class="adf-error-text">{{\'ADF_TASK_LIST.START_TASK.FORM.ERROR.DATE\'|translate}}</div>\n                                    <mat-icon class="adf-error-icon">warning</mat-icon>\n                                </div>\n                            </div>\n                        </mat-form-field>\n                        <div class="adf-edit-task-filter-checkbox"\n                             *ngIf="taskFilterProperty.type === \'checkbox\'">\n                            <mat-checkbox color="primary"\n                                          [formControlName]="taskFilterProperty.key"\n                                          [attr.data-automation-id]="taskFilterProperty.key"\n                            >{{taskFilterProperty.label | translate}}</mat-checkbox>\n                        </div>\n\n                        <adf-cloud-date-range-filter #dateRange\n                            *ngIf="taskFilterProperty.type === \'date-range\'"\n                            [processFilterProperty]="taskFilterProperty"\n                            [options]="taskFilterProperty.dateFilterOptions"\n                            (dateTypeChange)="onDateTypeChange($event, taskFilterProperty)"\n                            (dateChanged)="onDateRangeFilterChanged($event, taskFilterProperty)">\n                        </adf-cloud-date-range-filter>\n\n                        <div fxFlex="23%" class="{{ \'adf-edit-task-filter-\' + taskFilterProperty.key }}" *ngIf="taskFilterProperty.type === \'people\'">\n                            <adf-cloud-people\n                                [preSelectUsers]="taskFilterProperty.value"\n                                [title]="taskFilterProperty.label"\n                                [validate]="true"\n                                [appName]="appName"\n                                [mode]="taskFilterProperty.selectionMode"\n                                (changedUsers)="onChangedUser($event, taskFilterProperty)">\n                            </adf-cloud-people>\n                        </div>\n\n                        <adf-cloud-task-assignment-filter fxFlex="23%"\n                            *ngIf="taskFilterProperty.type === \'assignment\'"\n                            [taskFilterProperty]="taskFilterProperty"\n                            (assignedChange)="onAssignedChange($event)"\n                            (assignedGroupChange)="onAssignedGroupsChange($event)">\n                        </adf-cloud-task-assignment-filter>\n                    </ng-container>\n                </div>\n            </form>\n        </ng-container>\n    </mat-expansion-panel>\n</mat-accordion>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-edit-task-filter-checkbox{flex:1 23%;font-size:16px;padding-top:10px;text-align:center}.adf-edit-task-filter-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-edit-task-filter-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-edit-task-filter-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:10px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-edit-task-filter-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:16px}.adf-edit-task-filter-dateRange mat-grid-list{width:450px}.adf-cloud-edit-task-filter-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],Me.ctorParameters=function(){return[{type:P.FormBuilder},{type:u.MatDialog},{type:r.TranslationService},{type:Ae},{type:p.DateAdapter},{type:r.UserPreferencesService},{type:H},{type:fe}]};var xe=function(e){function r(r,i){var n=e.call(this)||this;return n.serviceTaskFilterCloudService=r,n.translationService=i,n.filterSelected=new t.EventEmitter,n.filterClicked=new t.EventEmitter,n.filters=[],n}return Q(r,e),r.prototype.ngOnInit=function(){this.getFilters(this.appName)},r.prototype.ngOnChanges=function(e){var t=e.appName,r=e.filterParam;t&&t.currentValue!==t.previousValue?this.getFilters(t.currentValue):r&&r.currentValue!==r.previousValue&&this.selectFilterAndEmit(r.currentValue)},r.prototype.getFilters=function(e){var t=this;this.filters$=this.serviceTaskFilterCloudService.getTaskListFilters(e),this.filters$.pipe(k.takeUntil(this.onDestroy$)).subscribe((function(e){t.resetFilter(),t.filters=e||[],t.selectFilterAndEmit(t.filterParam),t.success.emit(e)}),(function(e){t.error.emit(e)}))},r.prototype.selectFilter=function(e){var t=this;e&&(this.currentFilter=this.filters.find((function(r,i){return e.index===i||e.key===r.key||e.id===r.id||e.name&&e.name.toLocaleLowerCase()===t.translationService.instant(r.name).toLocaleLowerCase()})))},r.prototype.selectFilterAndEmit=function(e){e?(this.selectFilter(e),this.currentFilter&&this.filterSelected.emit(this.currentFilter)):this.currentFilter=void 0},r.prototype.onFilterClick=function(e){e?(this.selectFilter(e),this.filterClicked.emit(this.currentFilter)):this.currentFilter=void 0},r.prototype.selectDefaultTaskFilter=function(){this.isFilterListEmpty()||(this.currentFilter=this.filters[0])},r.prototype.isFilterListEmpty=function(){return void 0===this.filters||this.filters&&0===this.filters.length},r.prototype.resetFilter=function(){this.filters=[],this.currentFilter=void 0},r}(_e);xe.decorators=[{type:t.Component,args:[{selector:"adf-cloud-service-task-filters",template:'<ng-container *ngIf="filters$ | async as filterList; else loading">\n    <div *ngFor="let filter of filterList"\n         class="adf-task-filters__entry">\n        <button (click)="onFilterClick(filter)"\n                [attr.aria-label]="filter.name | translate"\n                [id]="filter.id"\n                [attr.data-automation-id]="filter.key + \'_filter\'"\n                mat-button\n                [class.adf-active]="currentFilter === filter"\n                class="adf-filter-action-button adf-full-width"\n                fxLayout="row"\n                fxLayoutAlign="space-between center">\n            <adf-icon data-automation-id="adf-filter-icon"\n                      *ngIf="showIcons"\n                      [value]="filter.icon"></adf-icon>\n            <span data-automation-id="adf-filter-label"\n                  class="adf-filter-action-button__label">{{ filter.name | translate }}</span>\n        </button>\n        <span *ngIf="counters$[filter.key]"\n              [attr.data-automation-id]="filter.key + \'_filter-counter\'"\n              class="adf-filter-action-button__counter"\n              [class.adf-active]=wasFilterUpdated(filter.key)>\n            {{ counters$[filter.key] | async }}\n        </span>\n    </div>\n</ng-container>\n<ng-template #loading>\n    <ng-container>\n        <div class="adf-app-list-spinner">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-task-filters__entry{display:flex;font-size:14px!important;font-weight:700;height:24px;opacity:1;padding:12px 0!important;width:100%}.adf-task-filters__entry .adf-full-width{display:flex;width:100%}.adf-task-filters__entry .adf-filter-action-button{cursor:pointer;opacity:.54;padding:16px}.adf-task-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-task-filters__entry .adf-filter-action-button__counter{margin-left:10px;margin-top:6px;opacity:.54;padding:0 5px}.adf-task-filters__entry .adf-filter-action-button__counter.adf-active{background-color:var(--theme-accent-color);border-radius:15px;color:var(--theme-colors-mag-grey-light);font-size:smaller;margin-left:8px;margin-top:5px;padding:0 5px}.adf-task-filters__entry:hover{color:var(--theme-primary-color)}.adf-task-filters__entry:hover .adf-filter-action-button,.adf-task-filters__entry:hover .adf-filter-action-button__counter{opacity:1}.adf-task-filters__entry .adf-active{color:var(--theme-primary-color);opacity:1}"]}]}],xe.ctorParameters=function(){return[{type:Re},{type:r.TranslationService}]},xe.propDecorators={filterSelected:[{type:t.Output}],filterClicked:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ve=function(){function r(r){this.identityUserService=r,this.assignedChange=new t.EventEmitter,this.assignedGroupChange=new t.EventEmitter,this.candidateGroups=[],this.groupForm=new P.FormControl(""),this.assignmentTypeList={unassigned:e.AssignmentType.UNASSIGNED,currentUser:e.AssignmentType.CURRENT_USER,candidateGroups:e.AssignmentType.CANDIDATE_GROUPS}}return r.prototype.ngOnInit=function(){this.isFilterPropertyDefined()&&(this.setDefaultAssignedGroups(),this.setDefaultAssignmentType())},r.prototype.isCandidateGroupsType=function(){return this.assignmentType===e.AssignmentType.CANDIDATE_GROUPS},r.prototype.onAssignmentTypeChange=function(t){this.candidateGroups=[],t===e.AssignmentType.CURRENT_USER?this.assignedChange.emit(this.identityUserService.getCurrentUserInfo()):t===e.AssignmentType.UNASSIGNED&&this.assignedChange.emit(null)},r.prototype.onChangedGroups=function(e){this.assignedGroupChange.emit(e)},r.prototype.setDefaultAssignmentType=function(){var t=this.taskFilterProperty.attributes.assignee,r=this.taskFilterProperty.value[t];this.candidateGroups.length>0?this.assignmentType=e.AssignmentType.CANDIDATE_GROUPS:this.assignmentType=r?e.AssignmentType.CURRENT_USER:e.AssignmentType.UNASSIGNED},r.prototype.setDefaultAssignedGroups=function(){var e=this.taskFilterProperty.attributes.candidateGroups;this.candidateGroups=this.taskFilterProperty.value[e]},r.prototype.isFilterPropertyDefined=function(){return!!this.taskFilterProperty.attributes&&!!this.taskFilterProperty.value},r}();Ve.decorators=[{type:t.Component,args:[{selector:"adf-cloud-task-assignment-filter",template:'<div class="adf-cloud-assignment-container" fxLayout="row">\n    <mat-form-field [floatLabel]="\'auto\'">\n        <mat-select class="adf-task-assignment-filter"\n                    placeholder="{{ \'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.ASSIGNMENT_TYPE\' | translate }}"\n                    [(ngModel)]="assignmentType"\n                    (ngModelChange)="onAssignmentTypeChange(assignmentType)">\n            <mat-option [value]="assignmentTypeList.currentUser">{{ \'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.ASSIGNED_TO_ME\' | translate }} </mat-option>\n            <mat-option [value]="assignmentTypeList.unassigned">{{ \'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.UNASSIGNED\' | translate }} </mat-option>\n            <mat-option [value]="assignmentTypeList.candidateGroups">{{ \'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.LIST_OF_CANDIDATE_GROUPS\' | translate }} </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <adf-cloud-group class="adf-group-cloud-filter" *ngIf="isCandidateGroupsType()"\n        [mode]="\'multiple\'"\n        [appName]="appName"\n        [preSelectGroups]="candidateGroups"\n        [searchGroupsControl]="groupForm"\n        (changedGroups)="onChangedGroups($event)"\n        [title]="\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.CANDIDATE_GROUP\'"></adf-cloud-group>\n</div>\n',styles:[".adf-cloud-assignment-container{align-items:center}.adf-cloud-assignment-container mat-form-field{width:100%}.adf-task-assignment-filter{margin-right:10px}.adf-group-cloud-filter{flex:1;margin-left:15px;width:100%}"]}]}],Ve.ctorParameters=function(){return[{type:r.IdentityUserService}]},Ve.propDecorators={appName:[{type:t.Input}],taskFilterProperty:[{type:t.Input}],assignedChange:[{type:t.Output}],assignedGroupChange:[{type:t.Output}]};var Ge=function(){function e(e,r){this.identityGroupService=e,this.logService=r,this.mode="single",this.preSelectGroups=[],this.validate=!1,this.readOnly=!1,this.groupChipsCtrl=new P.FormControl({value:"",disabled:!1}),this.searchGroupsControl=new P.FormControl({value:"",disabled:!1}),this.roles=[],this.selectGroup=new t.EventEmitter,this.removeGroup=new t.EventEmitter,this.changedGroups=new t.EventEmitter,this.warning=new t.EventEmitter,this.searchGroups=[],this.onDestroy$=new _.Subject,this.selectedGroups=[],this.invalidGroups=[],this.searchGroups$=new _.BehaviorSubject(this.searchGroups),this._subscriptAnimationState="enter",this.searchedValue="",this.validationLoading=!1,this.searchLoading=!1}return e.prototype.ngOnInit=function(){this.loadClientId(),this.initSearch()},e.prototype.ngOnChanges=function(e){(this.hasPreselectedGroupsChanged(e)||this.hasModeChanged(e)||this.isValidationChanged(e))&&(this.hasPreSelectGroups()?this.loadPreSelectGroups():this.hasPreselectedGroupsCleared(e)&&(this.selectedGroups=[],this.invalidGroups=[]),this.isValidationEnabled()||(this.invalidGroups=[])),e.appName&&this.isAppNameChanged(e.appName)&&this.loadClientId()},e.prototype.isAppNameChanged=function(e){return e&&e.previousValue!==e.currentValue&&this.appName&&this.appName.length>0},e.prototype.loadClientId=function(){return J(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return e=this,[4,this.identityGroupService.getClientIdByApplicationName(this.appName).toPromise()];case 1:return e.clientId=t.sent(),this.clientId&&this.searchGroupsControl.enable(),[2]}}))}))},e.prototype.initSearch=function(){var e=this;this.searchGroupsControl.valueChanges.pipe(k.filter((function(t){return e.searchLoading=!0,"string"==typeof t})),k.tap((function(t){t&&e.setTypingError()})),k.debounceTime(500),k.distinctUntilChanged(),k.tap((function(t){t.trim()?e.searchedValue=t:(e.searchGroupsControl.markAsPristine(),e.searchGroupsControl.markAsUntouched())})),k.tap((function(){return e.resetSearchGroups()})),k.switchMap((function(t){return e.identityGroupService.findGroupsByName({name:t.trim()})})),k.mergeMap((function(t){return e.resetSearchGroups(),e.searchLoading=!1,t})),k.filter((function(t){return!e.isGroupAlreadySelected(t)})),k.mergeMap((function(t){return e.appName?e.checkGroupHasAccess(t.id).pipe(k.mergeMap((function(e){return e?_.of(t):_.of()}))):e.hasRoles()?e.filterGroupsByRoles(t):_.of(t)})),k.takeUntil(this.onDestroy$)).subscribe((function(t){e.searchGroups.push(t),e.searchGroups$.next(e.searchGroups)}))},e.prototype.checkGroupHasAccess=function(e){return this.hasRoles()?this.identityGroupService.checkGroupHasAnyClientAppRole(e,this.clientId,this.roles):this.identityGroupService.checkGroupHasClientApp(e,this.clientId)},e.prototype.isGroupAlreadySelected=function(e){return!!(this.selectedGroups&&this.selectedGroups.length>0)&&!!this.selectedGroups.find((function(t){return t.name===e.name}))},e.prototype.searchGroup=function(e){return J(this,void 0,void 0,(function(){return X(this,(function(t){switch(t.label){case 0:return[4,this.identityGroupService.findGroupsByName({name:e}).toPromise()];case 1:return[2,t.sent()[0]]}}))}))},e.prototype.getPreselectedGroups=function(){return this.isSingleMode()?[this.preSelectGroups[0]]:this.removeDuplicatedGroups(this.preSelectGroups)},e.prototype.validatePreselectGroups=function(){return J(this,void 0,void 0,(function(){var e,t,r,i,n,o,a,s;return X(this,(function(l){switch(l.label){case 0:this.invalidGroups=[],l.label=1;case 1:l.trys.push([1,8,9,10]),e=Z(this.getPreselectedGroups()),t=e.next(),l.label=2;case 2:if(t.done)return[3,7];r=t.value,l.label=3;case 3:return l.trys.push([3,5,,6]),[4,this.searchGroup(r.name)];case 4:return i=l.sent(),this.isPreselectedGroupInvalid(r,i)&&this.invalidGroups.push(r),[3,6];case 5:return n=l.sent(),this.invalidGroups.push(r),this.logService.error(n),[3,6];case 6:return t=e.next(),[3,2];case 7:return[3,10];case 8:return o=l.sent(),a={error:o},[3,10];case 9:try{t&&!t.done&&(s=e.return)&&s.call(e)}finally{if(a)throw a.error}return[7];case 10:return this.checkPreselectValidationErrors(),[2]}}))}))},e.prototype.checkPreselectValidationErrors=function(){this.invalidGroups=this.removeDuplicatedGroups(this.invalidGroups),this.invalidGroups.length>0&&this.generateInvalidGroupsMessage(),this.warning.emit({message:"INVALID_PRESELECTED_GROUPS",groups:this.invalidGroups})},e.prototype.generateInvalidGroupsMessage=function(){var e=this;this.validateGroupsMessage="",this.invalidGroups.forEach((function(t,r){r===e.invalidGroups.length-1?e.validateGroupsMessage+=t.name+" ":e.validateGroupsMessage+=t.name+", "}))},e.prototype.loadPreSelectGroups=function(){return J(this,void 0,void 0,(function(){return X(this,(function(e){switch(e.label){case 0:return this.selectedGroups=[],this.isSingleMode()?this.selectedGroups=[this.preSelectGroups[0]]:this.selectedGroups=this.removeDuplicatedGroups(this.preSelectGroups),this.groupChipsCtrl.setValue(this.selectedGroups[0].name),this.isValidationEnabled()?(this.validationLoading=!0,[4,this.validatePreselectGroups()]):[3,2];case 1:e.sent(),this.validationLoading=!1,e.label=2;case 2:return[2]}}))}))},e.prototype.filterGroupsByRoles=function(e){return this.identityGroupService.checkGroupHasRole(e.id,this.roles).pipe(k.map((function(t){return{hasRole:t,group:e}})),k.filter((function(e){return e.hasRole})),k.map((function(e){return e.group})))},e.prototype.onSelect=function(e){e&&(this.selectGroup.emit(e),this.isMultipleMode()?this.isGroupAlreadySelected(e)||this.selectedGroups.push(e):(this.invalidGroups=[],this.selectedGroups=[e]),this.groupInput.nativeElement.value="",this.searchGroupsControl.setValue(""),this.groupChipsCtrlValue(this.selectedGroups[0].name),this.changedGroups.emit(this.selectedGroups),this.resetSearchGroups())},e.prototype.onRemove=function(e){this.removeGroup.emit(e),this.removeGroupFromSelected(e),this.changedGroups.emit(this.selectedGroups),0===this.selectedGroups.length?this.groupChipsCtrlValue(""):this.groupChipsCtrlValue(this.selectedGroups[0].name),this.searchGroupsControl.markAsDirty(),this.searchGroupsControl.markAsTouched(),this.isValidationEnabled()&&(this.removeGroupFromValidation(e),this.checkPreselectValidationErrors())},e.prototype.groupChipsCtrlValue=function(e){this.groupChipsCtrl.setValue(e),this.groupChipsCtrl.markAsDirty(),this.groupChipsCtrl.markAsTouched()},e.prototype.removeGroupFromSelected=function(e){var t=e.id,r=e.name,i=this.selectedGroups.findIndex((function(e){return e.id===t&&e.name===r}));-1!==i&&this.selectedGroups.splice(i,1)},e.prototype.removeGroupFromValidation=function(e){var t=e.id,r=e.name,i=this.invalidGroups.findIndex((function(e){return e.id===t&&e.name===r}));-1!==i&&this.invalidGroups.splice(i,1)},e.prototype.resetSearchGroups=function(){this.searchGroups=[],this.searchGroups$.next(this.searchGroups)},e.prototype.isPreselectedGroupInvalid=function(e,t){return!t||void 0===t.name||e.name!==t.name},e.prototype.isSingleMode=function(){return"single"===this.mode},e.prototype.isSingleSelectionReadonly=function(){return this.isSingleMode()&&1===this.selectedGroups.length&&!0===this.selectedGroups[0].readonly},e.prototype.hasPreselectError=function(){return this.invalidGroups&&this.invalidGroups.length>0},e.prototype.isReadonly=function(){return this.readOnly||this.isSingleSelectionReadonly()},e.prototype.isMultipleMode=function(){return"multiple"===this.mode},e.prototype.getDisplayName=function(e){return e?e.name:""},e.prototype.removeDuplicatedGroups=function(e){return e.filter((function(e,t,r){return t===r.findIndex((function(t){return e.id===t.id&&e.name===t.name}))}))},e.prototype.hasPreSelectGroups=function(){return this.preSelectGroups&&this.preSelectGroups.length>0},e.prototype.hasModeChanged=function(e){return e&&e.mode&&e.mode.currentValue!==e.mode.previousValue},e.prototype.isValidationChanged=function(e){return e&&e.validate&&e.validate.currentValue!==e.validate.previousValue},e.prototype.hasPreselectedGroupsChanged=function(e){return e&&e.preSelectGroups&&e.preSelectGroups.currentValue!==e.preSelectGroups.previousValue},e.prototype.hasPreselectedGroupsCleared=function(e){return e&&e.preSelectGroups&&0===e.preSelectGroups.currentValue.length},e.prototype.hasRoles=function(){return this.roles&&this.roles.length>0},e.prototype.setTypingError=function(){this.searchGroupsControl.setErrors(Object.assign({searchTypingError:!0},this.searchGroupsControl.errors))},e.prototype.hasError=function(){return!!this.searchGroupsControl.errors},e.prototype.isValidationLoading=function(){return this.isValidationEnabled()&&this.validationLoading},e.prototype.setFocus=function(e){this.isFocused=e},e.prototype.isValidationEnabled=function(){return!0===this.validate},e.prototype.getValidationPattern=function(){return this.searchGroupsControl.errors.pattern.requiredPattern},e.prototype.getValidationMaxLength=function(){return this.searchGroupsControl.errors.maxlength.requiredLength},e.prototype.getValidationMinLength=function(){return this.searchGroupsControl.errors.minlength.requiredLength},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e}();Ge.decorators=[{type:t.Component,args:[{selector:"adf-cloud-group",template:'<form>\n    <mat-form-field class="adf-cloud-group">\n        <mat-label *ngIf="!isReadonly()"\n            id="adf-group-cloud-title-id">{{ (title || \'ADF_CLOUD_GROUPS.SEARCH-GROUP\') | translate }}</mat-label>\n        <mat-chip-list #groupChipList [disabled]="isReadonly() || isValidationLoading()" data-automation-id="adf-cloud-group-chip-list">\n            <mat-chip\n                *ngFor="let group of selectedGroups"\n                [removable]="!(group.readonly)"\n                [attr.data-automation-id]="\'adf-cloud-group-chip-\' + group.name"\n                (removed)="onRemove(group)"\n                matTooltip="{{ (group.readonly ? \'ADF_CLOUD_GROUPS.MANDATORY\' : \'\') | translate }}">\n                {{group.name}}\n                <mat-icon\n                    *ngIf="!(group.readonly || readOnly)"\n                    matChipRemove [attr.data-automation-id]="\'adf-cloud-group-chip-remove-icon-\' + group.name">\n                    cancel\n                </mat-icon>\n            </mat-chip>\n            <input *ngIf="!isReadonly()" matInput\n                   [formControl]="searchGroupsControl"\n                   [matAutocomplete]="auto"\n                   [matChipInputFor]="groupChipList"\n                   (focus)="setFocus(true)"\n                   (blur)="setFocus(false)"\n                   class="adf-group-input"\n                   data-automation-id="adf-cloud-group-search-input" #groupInput>\n        </mat-chip-list>\n\n        <mat-autocomplete\n            autoActiveFirstOption\n            #auto="matAutocomplete"\n            class="adf-cloud-group-list"\n            (optionSelected)="onSelect($event.option.value)"\n            [displayWith]="getDisplayName"\n            data-automation-id="adf-cloud-group-autocomplete">\n            <ng-container *ngIf="(searchGroups$ | async)?.length else noResults">\n                <mat-option *ngFor="let group of searchGroups$ | async; let i = index" [value]="group"\n                            [attr.data-automation-id]="\'adf-cloud-group-chip-\' + group.name">\n                    <div class="adf-cloud-group-row" id="adf-group-{{i}}" fxLayout="row" fxLayoutAlign="start center"\n                         data-automation-id="adf-cloud-group-row"\n                         fxLayoutGap="20px">\n                        <button class="adf-group-short-name" mat-fab>{{group | groupNameInitial }}</button>\n                        <span>{{group.name}}</span>\n                    </div>\n                </mat-option>\n            </ng-container>\n            <ng-template #noResults>\n                <mat-option *ngIf="searchGroupsControl.hasError(\'searchTypingError\') && !searchLoading" disabled\n                            class="adf-cloud-group-option-not-active"\n                            data-automation-id="adf-cloud-group-no-results">\n                    <span> {{ \'ADF_CLOUD_GROUPS.ERROR.NOT_FOUND\' | translate : { groupName: searchedValue } }}</span>\n                </mat-option>\n            </ng-template>\n        </mat-autocomplete>\n    </mat-form-field>\n    <mat-progress-bar\n        *ngIf="validationLoading"\n        mode="indeterminate">\n    </mat-progress-bar>\n\n    <mat-error *ngIf="hasPreselectError() &&  !isValidationLoading()">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_GROUPS.ERROR.NOT_FOUND\' | translate : { groupName : validateGroupsMessage } }}</mat-error>\n    <mat-error *ngIf="searchGroupsControl.hasError(\'pattern\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_PATTERN\' | translate: { pattern: getValidationPattern() } }}</mat-error>\n    <mat-error *ngIf="searchGroupsControl.hasError(\'maxlength\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MAX_LENGTH\' | translate: { requiredLength: getValidationMaxLength() } }}\n    </mat-error>\n    <mat-error *ngIf="searchGroupsControl.hasError(\'minlength\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MIN_LENGTH\' | translate: { requiredLength: getValidationMinLength() } }}</mat-error>\n    <mat-error *ngIf="searchGroupsControl.hasError(\'required\') || groupChipsCtrl.hasError(\'required\')">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_PEOPLE_GROUPS.ERROR.REQUIRED\' | translate }} </mat-error>\n    <mat-error *ngIf="searchGroupsControl.hasError(\'searchTypingError\') && !this.isFocused" data-automation-id="invalid-groups-typing-error">\n        <mat-icon class="adf-start-task-cloud-error-icon">warning</mat-icon>\n        {{ \'ADF_CLOUD_GROUPS.ERROR.NOT_FOUND\' | translate : { groupName : searchedValue } }}</mat-error>\n</form>\n',animations:[x.trigger("transitionMessages",[x.state("enter",x.style({opacity:1,transform:"translateY(0%)"})),x.transition("void => enter",[x.style({opacity:0,transform:"translateY(-100%)"}),x.animate("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])],changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None,styles:[".adf-cloud-group-list{margin:5px 0;padding:10px 0}.adf-cloud-group{width:100%}.adf-cloud-group-option-not-active{background:inherit!important}.adf-cloud-group .mat-form-field{width:100%}.adf-cloud-group-error{height:20px;margin-top:-10px;position:absolute}.adf-cloud-group-error-message{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-cloud-group-error-icon{color:var(--theme-warn-color);font-size:17px}.mat-autocomplete-panel .mat-fab{background:var(--theme-primary-color);box-shadow:none!important;font-size:18px;font-weight:bolder;height:40px;width:40px}.mat-autocomplete-panel .mat-fab .mat-button-wrapper{display:inline!important}"]}]}],Ge.ctorParameters=function(){return[{type:r.IdentityGroupService},{type:r.LogService}]},Ge.propDecorators={appName:[{type:t.Input}],title:[{type:t.Input}],mode:[{type:t.Input}],preSelectGroups:[{type:t.Input}],validate:[{type:t.Input}],readOnly:[{type:t.Input}],groupChipsCtrl:[{type:t.Input}],searchGroupsControl:[{type:t.Input}],roles:[{type:t.Input}],selectGroup:[{type:t.Output}],removeGroup:[{type:t.Output}],changedGroups:[{type:t.Output}],warning:[{type:t.Output}],groupInput:[{type:t.ViewChild,args:["groupInput"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Be=function(){function e(){}return e.prototype.transform=function(e){var t="";return e&&(t=this.getInitialGroupName(e.name).toUpperCase()),t},e.prototype.getInitialGroupName=function(e){return e=e?e[0]:""},e}();Be.decorators=[{type:t.Pipe,args:[{name:"groupNameInitial"}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var $e=function(){};$e.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,i.FlexLayoutModule,$,P.FormsModule,P.ReactiveFormsModule,r.CoreModule],declarations:[Ge,Be],exports:[Ge,Be]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ke=r.MOMENT_DATE_FORMATS,je=function(){};je.decorators=[{type:t.NgModule,args:[{imports:[P.FormsModule,P.ReactiveFormsModule,M.HttpClientModule,A.CommonModule,i.FlexLayoutModule,$,W,r.CoreModule,$e,be,Le],declarations:[ke,xe,Me,Ue,we,Ve],exports:[ke,xe,Me,Ue],providers:[{provide:p.DateAdapter,useClass:r.MomentDateAdapter},{provide:p.MAT_DATE_FORMATS,useValue:Ke}]}]}];var qe=r.MOMENT_DATE_FORMATS,He=function(){function e(r,i,n,o,a,s){this.taskService=r,this.dateAdapter=i,this.userPreferencesService=n,this.formBuilder=o,this.identityUserService=a,this.logService=s,this.DATE_FORMAT="DD/MM/YYYY",this.appName="",this.maxNameLength=e.MAX_NAME_LENGTH,this.name="",this.success=new t.EventEmitter,this.cancel=new t.EventEmitter,this.error=new t.EventEmitter,this.submitted=!1,this.candidateGroupNames=[],this.assigneeForm=new P.FormControl(""),this.groupForm=new P.FormControl(""),this.onDestroy$=new _.Subject}return e.prototype.ngOnInit=function(){var e=this;this.userPreferencesService.select(r.UserPreferenceValues.Locale).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){return e.dateAdapter.setLocale(t)})),this.loadCurrentUser(),this.buildForm(),this.loadDefaultPriorities()},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e.prototype.buildForm=function(){this.taskForm=this.formBuilder.group({name:new P.FormControl(this.name,[P.Validators.required,P.Validators.maxLength(this.getMaxNameLength()),this.whitespaceValidator]),priority:new P.FormControl(""),description:new P.FormControl("",[this.whitespaceValidator]),formKey:new P.FormControl})},e.prototype.getMaxNameLength=function(){return this.maxNameLength>e.MAX_NAME_LENGTH?e.MAX_NAME_LENGTH:this.maxNameLength},e.prototype.loadCurrentUser=function(){this.currentUser=this.identityUserService.getCurrentUserInfo(),this.assigneeName=this.currentUser.username},e.prototype.loadDefaultPriorities=function(){this.priorities=this.taskService.priorities},e.prototype.saveTask=function(){this.submitted=!0;var e=Object.assign(this.taskForm.value);e.dueDate=this.dueDate,e.assignee=this.assigneeName,e.formKey=this.formKey,e.candidateGroups=this.candidateGroupNames,this.createNewTask(new le(e))},e.prototype.createNewTask=function(e){var t=this;this.taskService.createNewTask(e,this.appName).subscribe((function(e){t.submitted=!1,t.success.emit(e)}),(function(e){t.submitted=!1,t.error.emit(e),t.logService.error("An error occurred while creating new task")}))},e.prototype.onCancel=function(){this.cancel.emit()},e.prototype.onDateChanged=function(e){(this.dateError=!1,e)&&(b(e,this.DATE_FORMAT,!0).isValid()||(this.dateError=!0))},e.prototype.onAssigneeSelect=function(e){this.assigneeName=e?e.username:""},e.prototype.onAssigneeRemove=function(){this.assigneeName=""},e.prototype.onCandidateGroupSelect=function(e){e.name&&this.candidateGroupNames.push(e.name)},e.prototype.onCandidateGroupRemove=function(e){e.name&&(this.candidateGroupNames=this.candidateGroupNames.filter((function(t){return t!==e.name})))},e.prototype.canStartTask=function(){return!(this.dateError||!this.taskForm.valid||this.submitted||this.assignee.hasError()||this.candidateGroups.hasError())},e.prototype.whitespaceValidator=function(e){var t=0===(e.value||"").trim().length;return 0===e.value.length||!t?null:{whitespace:!0}},Object.defineProperty(e.prototype,"nameController",{get:function(){return this.taskForm.get("name")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"priorityController",{get:function(){return this.taskForm.get("priority")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"assigneeFormControl",{get:function(){return this.assigneeForm},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"candidateUserFormControl",{get:function(){return this.groupForm},enumerable:!1,configurable:!0}),e.prototype.onFormSelect=function(e){this.formKey=e||""},e}();He.MAX_NAME_LENGTH=255,He.decorators=[{type:t.Component,args:[{selector:"adf-cloud-start-task",template:'<mat-card>\n    <mat-card-header fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="10px"\n                     class="adf-cloud-start-task-heading">\n        <mat-card-title>{{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.TITLE\' | translate}}</mat-card-title>\n    </mat-card-header>\n    <form [formGroup]="taskForm" fxLayout="column" (ngSubmit)="saveTask()">\n\n        <mat-card-content>\n            <div class="adf-task-name">\n                <mat-form-field fxFlex>\n                    <mat-label>{{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.NAME\' | translate }}</mat-label>\n                    <input\n                        matInput\n                        id="name_id"\n                        class="form-control"\n                        formControlName="name">\n                    <mat-error *ngIf="nameController.hasError(\'required\')">\n                        {{ \'ADF_CLOUD_START_TASK.ERROR.REQUIRED\' | translate }}\n                    </mat-error>\n                    <mat-error *ngIf="nameController.hasError(\'maxlength\')">\n                        {{ \'ADF_CLOUD_START_TASK.ERROR.MAXIMUM_LENGTH\' | translate : {characters: maxNameLength} }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout="row" fxLayout.lt-md="column" fxLayoutGap="20px" fxLayoutGap.lt-md="0px">\n                <mat-form-field fxFlex>\n                    <mat-label>{{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.DESCRIPTION\' | translate}}</mat-label>\n                    <textarea\n                        matInput\n                        class="form-control"\n                        id="description_id"\n                        formControlName="description">\n                    </textarea>\n                </mat-form-field>\n\n                <mat-form-field fxFlex class="adf-cloud-priority-container">\n                    <mat-label>{{ \'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.PRIORITY\' | translate }}</mat-label>\n                    <mat-select formControlName="priority">\n                        <mat-option *ngFor="let priorityOption of priorities" [value]="priorityOption.value">{{ priorityOption.label | translate }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div fxLayout="row" fxLayout.lt-md="column" fxLayoutGap="20px" fxLayoutGap.lt-md="0px">\n                <mat-form-field fxFlex>\n                    <input matInput\n                           [matDatepicker]="taskDatePicker"\n                           (keydown)="true"\n                           (focusout)="onDateChanged($any($event).srcElement.value)"\n                           placeholder="{{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.DATE\'|translate}}"\n                           [(ngModel)]="dueDate"\n                           [ngModelOptions]="{standalone: true}"\n                           id="date_id">\n                    <mat-datepicker-toggle matSuffix [for]="taskDatePicker"></mat-datepicker-toggle>\n                    <mat-datepicker #taskDatePicker\n                                    [touchUi]="true"\n                                    (dateChanged)="onDateChanged($event)">\n                    </mat-datepicker>\n                    <div class="adf-cloud-date-error-container">\n                        <div *ngIf="dateError">\n                            <div class="adf-error-text">{{\'ADF_CLOUD_START_TASK.ERROR.DATE\' | translate}}</div>\n                            <mat-icon class="adf-error-icon">warning</mat-icon>\n                        </div>\n                    </div>\n                </mat-form-field>\n                <adf-cloud-people fxFlex #peopleInput *ngIf="currentUser"\n                                  [appName]="appName"\n                                  [preSelectUsers]="[currentUser]"\n                                  [searchUserCtrl]="assigneeFormControl"\n                                  (selectUser)="onAssigneeSelect($event)"\n                                  [title]="\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.ASSIGNEE\'"\n                                  (removeUser)="onAssigneeRemove()"></adf-cloud-people>\n            </div>\n\n            <div fxLayout="row" fxLayout.lt-md="column" fxLayoutGap="20px" fxLayoutGap.lt-md="0px">\n                <adf-cloud-group fxFlex #groupInput *ngIf="currentUser"\n                                 [mode]="\'multiple\'"\n                                 [title]="\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.CANDIDATE_GROUP\'"\n                                 [appName]="appName"\n                                 [searchGroupsControl]="candidateUserFormControl"\n                                 (selectGroup)="onCandidateGroupSelect($event)"\n                                 (removeGroup)="onCandidateGroupRemove($event)">\n                </adf-cloud-group>\n                <adf-cloud-form-definition-selector *ngIf="appName"\n                                                    fxFlex\n                                                    [appName]="appName"\n                                                    (selectForm)="onFormSelect($event)">\n                </adf-cloud-form-definition-selector>\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <div class="adf-cloud-start-task-footer" fxLayout="row" fxLayoutAlign="end end">\n                <button\n                    mat-button\n                    type="button"\n                    (click)="onCancel()"\n                    id="button-cancel">\n                    {{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.ACTION.CANCEL\'|translate}}\n                </button>\n                <button\n                    color="primary"\n                    type="submit"\n                    [disabled]="!canStartTask()"\n                    mat-button\n                    id="button-start">\n                    {{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.ACTION.START\'|translate}}\n                </button>\n            </div>\n        </mat-card-actions>\n    </form>\n</mat-card>\n',providers:[{provide:p.DateAdapter,useClass:r.MomentDateAdapter},{provide:p.MAT_DATE_FORMATS,useValue:qe}],encapsulation:t.ViewEncapsulation.None,styles:[".adf-cloud-start-task-heading{border-bottom:1px solid var(--theme-fg-divider);margin-bottom:10px}.adf-cloud-start-task-heading .mat-card-title{font-size:18px;font-weight:700}.adf-cloud-priority-container{padding-top:1.1em}.adf-cloud-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-cloud-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-cloud-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-cloud-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:17px}.adf-cloud-start-task-footer{border-top:1px solid #eee;font-size:18px;padding:4px}adf-cloud-start-task .adf-cloud-start-task-footer .mat-button{text-transform:uppercase!important}"]}]}],He.ctorParameters=function(){return[{type:fe},{type:p.DateAdapter},{type:r.UserPreferencesService},{type:P.FormBuilder},{type:r.IdentityUserService},{type:r.LogService}]},He.propDecorators={appName:[{type:t.Input}],maxNameLength:[{type:t.Input}],name:[{type:t.Input}],success:[{type:t.Output}],cancel:[{type:t.Output}],error:[{type:t.Output}],assignee:[{type:t.ViewChild,args:["peopleInput"]}],candidateGroups:[{type:t.ViewChild,args:["groupInput"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ye=function(){function e(e){this.id=e.name||null,this.name=e.name||null,this.value=this.hasValue(e)?e.value:null,this.type=e.type||null}return e.prototype.hasValue=function(e){return void 0!==typeof e.value&&null!==e.value},e}(),We=function(e){function t(t,r){return e.call(this,t,r)||this}return Q(t,e),Object.defineProperty(t.prototype,"uploadApi",{get:function(){var e;return this._uploadApi=null!==(e=this._uploadApi)&&void 0!==e?e:new G.UploadApi(this.apiService.getInstance()),this._uploadApi},enumerable:!1,configurable:!0}),t.prototype.getTaskForm=function(e,t,r){var i=this;return this.getTask(e,t).pipe(k.switchMap((function(t){return i.getForm(e,t.formKey,r).pipe(k.map((function(e){var r=Object.assign(Object.assign(Object.assign({},e.formRepresentation),e.formRepresentation.formDefinition),{taskId:t.id,taskName:t.name,processDefinitionId:t.processDefinitionId,processInstanceId:t.processInstanceId});return delete r.formDefinition,r})))})))},t.prototype.saveTaskForm=function(e,t,r,i,n){var o=this.getBasePath(e)+"/form/v1/forms/"+i+"/save",a={values:n,taskId:t,processInstanceId:r};return this.post(o,a).pipe(k.map((function(e){return e.entry})))},t.prototype.createTemporaryRawRelatedContent=function(e,t,r){var i=this.apiService.lastConfig;return i.provider="ALL",i.hostEcm=r.replace("/alfresco",""),this.apiService.getInstance().setConfig(i),_.from(this.uploadApi.uploadFile(e,"",t,"",{overwrite:!0})).pipe(k.map((function(e){return e.entry})))},t.prototype.completeTaskForm=function(e,t,r,i,n,o,a){var s=this.getBasePath(e)+"/form/v1/forms/"+i+"/submit/versions/"+a,l={values:n,taskId:t,processInstanceId:r};return o&&(l.outcome=o),this.post(s,l).pipe(k.map((function(e){return e.entry})))},t.prototype.getTask=function(e,t){var r=this.getBasePath(e)+"/query/v1/tasks/"+t;return this.get(r).pipe(k.map((function(e){return e.entry})))},t.prototype.getTaskVariables=function(e,t){var r=this.getBasePath(e)+"/query/v1/tasks/"+t+"/variables";return this.get(r).pipe(k.map((function(e){return e.list.entries.map((function(e){return new Ye(e.entry)}))})))},t.prototype.getForm=function(e,t,r){var i=this.getBasePath(e)+"/form/v1/forms/"+t;return r&&(i+="/versions/"+r),this.get(i)},t.prototype.getRestWidgetData=function(e,t,r){var i;void 0===r&&(r={});var n=null===(i=this.appConfigService.get("alfresco-deployed-apps")[0])||void 0===i?void 0:i.name,o=this.getBasePath(n)+"/form/v1/forms/"+e+"/values/"+t;return this.post(o,r)},t.prototype.parseForm=function(e,t,i){if(void 0===i&&(i=!1),e){var n=Object.assign(Object.assign({},e.formRepresentation),e.formRepresentation.formDefinition);delete n.formDefinition;var o={};(t||[]).forEach((function(e){o[e.name]=e.value}));var a=new r.FormModel(n,o,i);return e.fields||(a.outcomes=[new r.FormOutcomeModel(a,{id:"$save",name:r.FormOutcomeModel.SAVE_ACTION,isSystem:!0})]),a}return null},t}(ie);We.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new We(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService))},token:We,providedIn:"root"}),We.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],We.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService}]};var ze=function(e){function i(i,n,o){var a=e.call(this)||this;return a.formCloudService=i,a.formService=n,a.visibilityService=o,a.appName="",a.fieldValidators=te(r.FORM_FIELD_VALIDATORS),a.formSaved=new t.EventEmitter,a.formCompleted=new t.EventEmitter,a.formLoaded=new t.EventEmitter,a.formDataRefreshed=new t.EventEmitter,a.formContentClicked=new t.EventEmitter,a.subscriptions=[],a.onDestroy$=new _.Subject,a.formService.formContentClicked.pipe(k.takeUntil(a.onDestroy$)).subscribe((function(e){e instanceof r.UploadWidgetContentLinkModel?(a.form.setNodeIdValueForViewersLinkedToUploadWidget(e),a.onFormDataRefreshed(a.form)):a.formContentClicked.emit(e)})),a.formService.updateFormValuesRequested.pipe(k.takeUntil(a.onDestroy$)).subscribe((function(e){a.form.addValuesNotPresent(e),a.onFormDataRefreshed(a.form)})),a}return Q(i,e),i.prototype.onKeyDown=function(e){e.cancelBubble=!0},i.prototype.ngOnChanges=function(e){var t=e.appName;if(t&&t.currentValue)this.taskId?this.getFormByTaskId(t.currentValue,this.taskId,this.appVersion):this.formId&&this.getFormById(t.currentValue,this.formId,this.appVersion);else{var r=e.formId;if(r&&r.currentValue&&this.appName)this.getFormById(this.appName,r.currentValue,this.appVersion);else{var i=e.taskId;if(i&&i.currentValue&&this.appName)this.getFormByTaskId(this.appName,i.currentValue,this.appVersion);else{var n=e.data;n&&n.currentValue&&this.refreshFormData()}}}},i.prototype.onRefreshClicked=function(){this.loadForm()},i.prototype.loadForm=function(){this.appName&&this.taskId?this.getFormByTaskId(this.appName,this.taskId,this.appVersion):this.appName&&this.formId&&this.getFormById(this.appName,this.formId,this.appVersion)},i.prototype.findProcessVariablesByTaskId=function(e,t){var r=this;return this.formCloudService.getTask(e,t).pipe(k.switchMap((function(i){return r.isAProcessTask(i)?r.formCloudService.getTaskVariables(e,t):_.of([])})))},i.prototype.isAProcessTask=function(e){return e.processDefinitionId&&"null"!==e.processDefinitionDeploymentId},i.prototype.getFormByTaskId=function(e,t,r){var i=this;return new Promise((function(n){_.forkJoin(i.formCloudService.getTaskForm(e,t,r),i.formCloudService.getTaskVariables(e,t)).pipe(k.takeUntil(i.onDestroy$)).subscribe((function(e){i.formCloudRepresentationJSON=e[0],i.formCloudRepresentationJSON.processVariables=e[1],i.data=e[1];var t=i.parseForm(i.formCloudRepresentationJSON);i.visibilityService.refreshVisibility(t,i.data),t.validateForm(),i.form=t,i.form.nodeId="-my-",i.onFormLoaded(i.form),n(i.form)}),(function(e){i.handleError(e),n(null)}))}))},i.prototype.getFormById=function(e,t,r){var i=this;this.formCloudService.getForm(e,t,r).pipe(k.map((function(e){var t=Object.assign(Object.assign({},e.formRepresentation),e.formRepresentation.formDefinition);return delete t.formDefinition,t})),k.takeUntil(this.onDestroy$)).subscribe((function(e){i.formCloudRepresentationJSON=e;var t=i.parseForm(e);i.visibilityService.refreshVisibility(t),t.validateForm(),i.form=t,i.form.nodeId="-my-",i.onFormLoaded(i.form)}),(function(e){i.handleError(e)}))},i.prototype.saveTaskForm=function(){var e=this;this.form&&this.appName&&this.taskId&&this.formCloudService.saveTaskForm(this.appName,this.taskId,this.processInstanceId,""+this.form.id,this.form.values).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(){e.onTaskSaved(e.form)}),(function(t){return e.onTaskSavedError(t)}))},i.prototype.completeTaskForm=function(e){var t=this;this.form&&this.appName&&this.taskId&&this.formCloudService.completeTaskForm(this.appName,this.taskId,this.processInstanceId,""+this.form.id,this.form.values,e,this.appVersion).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(){t.onTaskCompleted(t.form)}),(function(e){return t.onTaskCompletedError(e)}))},i.prototype.parseForm=function(e){if(e){var t={};(this.data||[]).forEach((function(e){t[e.name]=e.value}));var i=new r.FormModel(e,t,this.readOnly);return i||(i.outcomes=this.getFormDefinitionOutcomes(i)),this.fieldValidators&&this.fieldValidators.length>0&&(i.fieldValidators=this.fieldValidators),i}return null},i.prototype.getFormDefinitionOutcomes=function(e){return[new r.FormOutcomeModel(e,{id:"$save",name:r.FormOutcomeModel.SAVE_ACTION,isSystem:!0})]},i.prototype.checkVisibility=function(e){e&&e.form&&this.visibilityService.refreshVisibility(e.form)},i.prototype.refreshFormData=function(){this.form=this.parseForm(this.formCloudRepresentationJSON),this.onFormLoaded(this.form),this.onFormDataRefreshed(this.form)},i.prototype.onFormLoaded=function(e){this.formLoaded.emit(e)},i.prototype.onFormDataRefreshed=function(e){this.formDataRefreshed.emit(e)},i.prototype.onTaskSaved=function(e){this.formSaved.emit(e)},i.prototype.onTaskSavedError=function(e){this.handleError(e)},i.prototype.onTaskCompleted=function(e){this.formCompleted.emit(e)},i.prototype.onTaskCompletedError=function(e){this.handleError(e)},i.prototype.onExecuteOutcome=function(e){var t=new r.FormOutcomeEvent(e);return!t.defaultPrevented&&(this.executeOutcome.emit(t),!t.defaultPrevented)},i.prototype.storeFormAsMetadata=function(){},i.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},i}(r.FormBaseComponent);ze.decorators=[{type:t.Component,args:[{selector:"adf-cloud-form",template:'<div *ngIf="!hasForm()">\n    <ng-content select="[empty-form]">\n    </ng-content>\n</div>\n\n<div *ngIf="hasForm()" class="adf-form-container">\n    <mat-card>\n        <mat-card-header *ngIf="showTitle || showRefreshButton || showValidationIcon">\n            <mat-card-title>\n                <h4>\n                    <div *ngIf="showValidationIcon" class="adf-form-validation-button">\n                        <i id="adf-valid-form-icon" class="material-icons"\n                            *ngIf="form.isValid; else no_valid_form">check_circle</i>\n                        <ng-template #no_valid_form>\n                            <i id="adf-invalid-form-icon" class="material-icons adf-invalid-color">error</i>\n                        </ng-template>\n                    </div>\n                    <div *ngIf="showRefreshButton" class="adf-form-reload-button">\n                        <button mat-icon-button (click)="onRefreshClicked()">\n                            <mat-icon>refresh</mat-icon>\n                        </button>\n                    </div>\n                    <span *ngIf="isTitleEnabled()" class="adf-form-title" [matTooltip]="form.taskName">\n                        {{form.taskName}}\n                        <ng-container *ngIf="!form.taskName">\n                            {{\'FORM.FORM_RENDERER.NAMELESS_TASK\' | translate}}\n                        </ng-container>\n                    </span>\n\n                </h4>\n            </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <adf-form-renderer [formDefinition]="form">\n            </adf-form-renderer>\n        </mat-card-content>\n        <mat-card-actions *ngIf="form.hasOutcomes()" class="adf-form-mat-card-actions">\n            <ng-content select="adf-cloud-form-custom-outcomes"></ng-content>\n            <ng-container *ngFor="let outcome of form.outcomes">\n                <button *ngIf="outcome.isVisible" [id]="\'adf-form-\'+ outcome.name  | formatSpace" [color]="getColorForOutcome(outcome.name)"\n                    mat-button [disabled]="!isOutcomeButtonEnabled(outcome)"\n                    [class.adf-form-hide-button]="!isOutcomeButtonVisible(outcome, form.readOnly)"\n                    (click)="onOutcomeClicked(outcome)">\n                    {{outcome.name | translate | uppercase }}\n                </button>\n            </ng-container>\n        </mat-card-actions>\n    </mat-card>\n</div>\n'}]}],ze.ctorParameters=function(){return[{type:We},{type:r.FormService},{type:r.WidgetVisibilityService}]},ze.propDecorators={appName:[{type:t.Input}],appVersion:[{type:t.Input}],formId:[{type:t.Input}],processInstanceId:[{type:t.Input}],form:[{type:t.Input}],taskId:[{type:t.Input}],data:[{type:t.Input}],fieldValidators:[{type:t.Input}],formSaved:[{type:t.Output}],formCompleted:[{type:t.Output}],formLoaded:[{type:t.Output}],formDataRefreshed:[{type:t.Output}],formContentClicked:[{type:t.Output}],onKeyDown:[{type:t.HostListener,args:["keydown",["$event"]]}]};var Qe=function(e){function t(t,r){return e.call(this,t,r)||this}return Q(t,e),t.prototype.getForms=function(e){var t=this.getBasePath(e)+"/form/v1/forms";return this.get(t).pipe(k.map((function(e){return e.map((function(e){return e.formRepresentation}))})))},t.prototype.getStandAloneTaskForms=function(e){return _.from(this.getForms(e)).pipe(k.map((function(e){return e.filter((function(e){return e.standalone||void 0===e.standalone}))})))},t}(ie);Qe.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Qe(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService))},token:Qe,providedIn:"root"}),Qe.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Qe.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Je=function(){function e(e){this.formDefinitionCloudService=e,this.appName="",this.selectForm=new t.EventEmitter}return e.prototype.ngOnInit=function(){this.forms$=this.formDefinitionCloudService.getStandAloneTaskForms(this.appName)},e.prototype.onSelect=function(e){this.selectForm.emit(e.value)},e}();Je.decorators=[{type:t.Component,args:[{selector:"adf-cloud-form-definition-selector",template:'<mat-form-field class="adf-form-definition-selector">\n    <mat-label>{{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.FORM\'|translate}}</mat-label>\n    <mat-select class="adf-form-selector-dropdown" (selectionChange)="onSelect($event)">\n        <mat-option [value]="\'\'">{{\'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.NONE\'|translate}}</mat-option>\n        <mat-option *ngFor="let form of forms$ | async" [value]="form.id">{{ form.name }}</mat-option>\n    </mat-select>\n</mat-form-field>\n',styles:[".adf-form-definition-selector{width:100%}"]}]}],Je.ctorParameters=function(){return[{type:Qe}]},Je.propDecorators={appName:[{type:t.Input}],selectForm:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Xe=function(){};Xe.decorators=[{type:t.Component,args:[{selector:"adf-cloud-form-custom-outcomes",template:"<ng-content></ng-content>"}]}];var Ze=r.MOMENT_DATE_FORMATS,et=function(e){function t(t,r,i){var n=e.call(this,t)||this;return n.formService=t,n.dateAdapter=r,n.userPreferencesService=i,n.typeId="DateCloudWidgetComponent",n.DATE_FORMAT_CLOUD="YYYY-MM-DD",n.onDestroy$=new _.Subject,n}return Q(t,e),t.prototype.ngOnInit=function(){var e=this;this.userPreferencesService.select(r.UserPreferenceValues.Locale).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){return e.dateAdapter.setLocale(t)})),this.dateAdapter.overrideDisplayFormat=this.field.dateDisplayFormat,this.field&&(this.field.minValue&&(this.minDate=b(this.field.minValue,this.DATE_FORMAT_CLOUD)),this.field.maxValue&&(this.maxDate=b(this.field.maxValue,this.DATE_FORMAT_CLOUD)))},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.onDateChanged=function(e){var t=b(e,this.field.dateDisplayFormat,!0);t.isValid()?this.field.value=t.format(this.field.dateDisplayFormat):this.field.value=e,this.onFieldChanged(this.field)},t}(r.WidgetComponent);et.decorators=[{type:t.Component,args:[{selector:"date-widget",providers:[{provide:p.DateAdapter,useClass:r.MomentDateAdapter},{provide:p.MAT_DATE_FORMATS,useValue:Ze}],template:'<div class="{{field.className}}" id="data-widget" [class.adf-invalid]="!field.isValid">\n    <mat-form-field class="adf-date-widget">\n        <label class="adf-label" [attr.for]="field.id">{{field.name | translate }} ({{field.dateDisplayFormat}})<span *ngIf="isRequired()">*</span></label>\n        <input matInput\n               [id]="field.id"\n               [value]="field.value"\n               [required]="isRequired()"\n               [disabled]="field.readOnly"\n               (change)="onDateChanged($any($event).srcElement.value)"\n               [placeholder]="field.placeholder"\n               [matTooltip]="field.tooltip"\n               matTooltipPosition="above"\n               matTooltipShowDelay="1000">\n        <mat-datepicker-toggle  matSuffix [for]="datePicker" [disabled]="field.readOnly" ></mat-datepicker-toggle>\n    </mat-form-field>\n    <error-widget [error]="field.validationSummary"></error-widget>\n    <error-widget *ngIf="isInvalidFieldRequired()" required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n    <mat-datepicker #datePicker [touchUi]="true" [startAt]="field.value | adfMomentDate: field.dateDisplayFormat" [disabled]="field.readOnly"></mat-datepicker>\n    <input\n        type="hidden"\n        [matDatepicker]="datePicker"\n        [value]="field.value | adfMomentDate: field.dateDisplayFormat"\n        [min]="minDate"\n        [max]="maxDate"\n        [disabled]="field.readOnly"\n        (dateInput)="onDateChanged($any($event).targetElement.value)">\n</div>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None,styles:[".adf-date-widget .mat-form-field-suffix{top:26px}.adf-date-widget .mat-form-field-label-wrapper{top:20px}"]}]}],et.ctorParameters=function(){return[{type:r.FormService},{type:p.DateAdapter},{type:r.UserPreferencesService}]};var tt=function(e){function t(t,r,i){var n=e.call(this,t)||this;return n.formService=t,n.formCloudService=r,n.logService=i,n.typeId="DropdownCloudWidgetComponent",n.onDestroy$=new _.Subject,n}return Q(t,e),t.prototype.ngOnInit=function(){var e=this;this.hasRestUrl()&&!this.isLinkedWidget()&&this.persistFieldOptionsFromRestApi(),this.isLinkedWidget()&&(this.loadFieldOptionsForLinkedWidget(),this.formService.formFieldValueChanged.pipe(k.filter((function(t){return e.isFormFieldEventOfTypeDropdown(t)&&e.isParentFormFieldEvent(t)})),k.takeUntil(this.onDestroy$)).subscribe((function(t){var r=t.field.value;e.parentValueChanged(r)})))},t.prototype.persistFieldOptionsFromRestApi=function(){var e=this;if(this.isValidRestType()){var t=this.buildBodyParam();this.formCloudService.getRestWidgetData(this.field.form.id,this.field.id,t).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){e.field.options=t,e.field.updateForm()}),(function(t){return e.handleError(t)}))}},t.prototype.buildBodyParam=function(){var e=Object.assign({});if(this.isLinkedWidget()){var t=this.getParentWidgetValue();e[this.getLinkedWidgetId()]=t}return e},t.prototype.loadFieldOptionsForLinkedWidget=function(){var e=this.getParentWidgetValue();this.parentValueChanged(e)},t.prototype.getParentWidgetValue=function(){var e=this.getLinkedWidgetId(),t=this.getFormFieldById(e);return null==t?void 0:t.value},t.prototype.parentValueChanged=function(e){this.isValidValue(e)?this.isValidRestType()?this.persistFieldOptionsFromRestApi():this.persistFieldOptionsFromManualList(e):this.isDefaultValue(e)&&this.addDefaultOption()},t.prototype.isValidValue=function(e){return!!e&&e!==t.DEFAULT_OPTION.id},t.prototype.isDefaultValue=function(e){return e===t.DEFAULT_OPTION.id},t.prototype.getFormFieldById=function(e){return this.field.form.getFormFields().filter((function(t){return t.id===e}))[0]},t.prototype.persistFieldOptionsFromManualList=function(e){var t=this;this.hasRuleEntries()&&this.getRuleEntries().forEach((function(r){r.key===e&&(t.field.options=r.options,t.field.updateForm())}))},t.prototype.getRuleEntries=function(){return this.field.rule.entries},t.prototype.hasRuleEntries=function(){return!!this.getRuleEntries().length},t.prototype.addDefaultOption=function(){this.field.options=[t.DEFAULT_OPTION]},t.prototype.selectionChangedForField=function(e){var t=new r.FormFieldEvent(e.form,e);this.formService.formFieldValueChanged.next(t),this.onFieldChanged(e)},t.prototype.isParentFormFieldEvent=function(e){return e.field.id===this.getLinkedWidgetId()},t.prototype.isFormFieldEventOfTypeDropdown=function(e){return e.field.type===r.FormFieldTypes.DROPDOWN},t.prototype.hasRestUrl=function(){var e;return!!(null===(e=this.field)||void 0===e?void 0:e.restUrl)},t.prototype.isLinkedWidget=function(){return!!this.getLinkedWidgetId()},t.prototype.getLinkedWidgetId=function(){var e,t;return null===(t=null===(e=this.field)||void 0===e?void 0:e.rule)||void 0===t?void 0:t.ruleOn},t.prototype.compareDropdownValues=function(e,t){return!(!e||!t)&&("string"==typeof e&&"object"==typeof t?e===t.id||e===t.name:"object"==typeof e&&"string"==typeof t?e.id===t||e.name===t:"object"==typeof e&&"object"==typeof t?e.id===t.id||e.name===t.name:e===t)},t.prototype.getOptionValue=function(e,r){if(this.field.hasMultipleValues)return e;return e.id===t.DEFAULT_OPTION.id||e.name!==r?e.id:e.name},t.prototype.isValidRestType=function(){return"rest"===this.field.optionType&&!!this.field.restUrl},t.prototype.handleError=function(e){this.logService.error(e)},t.prototype.isReadOnlyType=function(){return"readonly"===this.field.type},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t}(r.WidgetComponent);tt.DEFAULT_OPTION={id:"empty",name:"Choose one..."},tt.decorators=[{type:t.Component,args:[{selector:"dropdown-cloud-widget",template:'<div class="adf-dropdown-widget {{field.className}}"\n     [class.adf-invalid]="!field.isValid" [class.adf-readonly]="field.readOnly">\n    <div class="adf-dropdown-widget-top-labels">\n        <label class="adf-label" [attr.for]="field.id">{{field.name | translate }}<span\n            *ngIf="isRequired()">*</span></label>\n        <label class="adf-label adf-dropdown-widget-linked"\n               *ngIf="isLinkedWidget()"\n               [attr.for]="field.id">\n            {{ \'FORM.FIELD.DEPENDS_ON\' | translate: { widgetId: getLinkedWidgetId() } }}\n        </label>\n    </div>\n    <mat-form-field>\n        <mat-select class="adf-select"\n                    [id]="field.id"\n                    [(ngModel)]="field.value"\n                    [disabled]="field.readOnly"\n                    [compareWith]="compareDropdownValues"\n                    (ngModelChange)="selectionChangedForField(field)"\n                    [matTooltip]="field.tooltip"\n                    matTooltipPosition="above"\n                    matTooltipShowDelay="1000"\n                    [multiple]="field.hasMultipleValues">\n            <mat-option *ngFor="let opt of field.options"\n                        [value]="getOptionValue(opt, field.value)"\n                        [id]="opt.id">{{opt.name}}\n            </mat-option>\n            <mat-option id="readonlyOption" *ngIf="isReadOnlyType()" [value]="field.value">{{field.value}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <error-widget [error]="field.validationSummary"></error-widget>\n    <error-widget class="adf-dropdown-required-message" *ngIf="isInvalidFieldRequired()"\n                  required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n</div>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None,styles:[".adf-dropdown-widget{margin-top:13px;width:100%}.adf-dropdown-widget .adf-select{padding-top:0!important;width:100%}.adf-dropdown-widget .mat-select-value-text{font-size:14px}.adf-dropdown-widget-top-labels{display:flex;flex-direction:row;height:16px;justify-content:space-between}.adf-dropdown-widget-top-labels .adf-dropdown-widget-linked{display:contents}.adf-dropdown-widget-select{width:100%}.adf-dropdown-widget-dropdown-required-message .adf-error-text-container{margin-top:1px!important}"]}]}],tt.ctorParameters=function(){return[{type:r.FormService},{type:We},{type:r.LogService}]};var rt=function(e){function t(t){var r=e.call(this,t)||this;return r.onDestroy$=new _.Subject,r.typeId="GroupCloudWidgetComponent",r}return Q(t,e),t.prototype.ngOnInit=function(){var e=this;this.field&&(this.roles=this.field.roles,this.mode=this.field.optionType,this.title=this.field.placeholder,this.preSelectGroup=this.field.value?this.field.value:[]),this.search=new P.FormControl({value:"",disabled:this.field.readOnly},[]),this.search.statusChanges.pipe(k.filter((function(e){return"INVALID"===e})),k.takeUntil(this.onDestroy$)).subscribe((function(){e.field.markAsInvalid(),e.field.form.markAsInvalid()})),this.search.statusChanges.pipe(k.filter((function(e){return"VALID"===e})),k.takeUntil(this.onDestroy$)).subscribe((function(){e.field.validate(),e.field.form.validateForm()}))},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.onChangedGroup=function(e){this.field.value=te(e),this.onFieldChanged(this.field)},t.prototype.isMultipleMode=function(){return"multiple"===this.mode},t}(r.WidgetComponent);rt.decorators=[{type:t.Component,args:[{selector:"group-cloud-widget",template:'<div class="adf-dropdown-widget {{field.className}}"\n     [class.adf-invalid]="!field.isValid" [class.adf-readonly]="field.readOnly">\n    <label class="adf-label" [attr.for]="field.id">{{field.name | translate }}<span\n        *ngIf="isRequired()">*</span></label>\n        <adf-cloud-group [mode]="mode"\n                         [title]="title"\n                         [readOnly]="field.readOnly"\n                         [roles]="roles"\n                         [searchGroupsControl]="search"\n                         (changedGroups)="onChangedGroup($event)"\n                         [preSelectGroups]="preSelectGroup"\n                         [matTooltip]="field.tooltip"\n                         [matTooltipPosition]="\'above\'"\n                         [matTooltipShowDelay]="1000">\n        </adf-cloud-group>\n        <error-widget [error]="field.validationSummary"></error-widget>\n        <error-widget class="adf-dropdown-required-message" *ngIf="isInvalidFieldRequired()"\n                  required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n</div>\n\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None}]}],rt.ctorParameters=function(){return[{type:r.FormService}]};var it=function(e){function t(t){var r=e.call(this,t)||this;return r.onDestroy$=new _.Subject,r.typeId="PeopleCloudWidgetComponent",r}return Q(t,e),t.prototype.ngOnInit=function(){var e=this;this.field&&(this.roles=this.field.roles,this.mode=this.field.optionType,this.title=this.field.placeholder,this.preSelectUsers=this.field.value?this.field.value:[]),this.search=new P.FormControl({value:"",disabled:this.field.readOnly},[]),this.search.statusChanges.pipe(k.filter((function(e){return"INVALID"===e})),k.takeUntil(this.onDestroy$)).subscribe((function(){e.field.markAsInvalid(),e.field.form.markAsInvalid()})),this.search.statusChanges.pipe(k.filter((function(e){return"VALID"===e})),k.takeUntil(this.onDestroy$)).subscribe((function(){e.field.validate(),e.field.form.validateForm()}))},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.onChangedUser=function(e){this.field.value=te(e),this.onFieldChanged(this.field)},t.prototype.isMultipleMode=function(){return"multiple"===this.mode},t}(r.WidgetComponent);it.decorators=[{type:t.Component,args:[{selector:"people-cloud-widget",template:'<div class="adf-dropdown-widget {{field.className}}"\n     [class.adf-invalid]="!field.isValid" [class.adf-readonly]="field.readOnly">\n    <label class="adf-label" [attr.for]="field.id">{{field.name | translate }}<span *ngIf="isRequired()">*</span></label>\n        <adf-cloud-people\n            [preSelectUsers]="preSelectUsers"\n            [validate]="true"\n            [appName]="appName"\n            [title]="title"\n            [readOnly]="field.readOnly"\n            [searchUserCtrl]="search"\n            (changedUsers)="onChangedUser($event)"\n            [roles]="roles"\n            [mode]="mode"\n            [matTooltip]="field.tooltip"\n            matTooltipPosition="above"\n            matTooltipShowDelay="1000">\n        </adf-cloud-people>\n    <error-widget [error]="field.validationSummary"></error-widget>\n</div>\n\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None}]}],it.ctorParameters=function(){return[{type:r.FormService}]};var nt=function(){function e(e,t,r,i){this.apiService=e,this.notificationService=t,this.logService=r,this.dialog=i,this.sourceNodeNotFound=!1}return Object.defineProperty(e.prototype,"nodesApi",{get:function(){var e;return this._nodesApi=null!==(e=this._nodesApi)&&void 0!==e?e:new G.NodesApi(this.apiService.getInstance()),this._nodesApi},enumerable:!1,configurable:!0}),e.prototype.openUploadFileDialog=function(e,t,r,i){var n=new _.Subject;n.subscribe({complete:this.close.bind(this)});var o={title:"Select a file",actionName:B.NodeAction.ATTACH,currentFolderId:e,restrictRootToCurrentFolderId:i,select:n,selectionMode:t,isSelectionValid:function(e){return e.isFile},showFilesInResult:!0,showDropdownSiteList:!1,showLocalUploadButton:r};return this.openContentNodeDialog(o,"adf-content-node-selector-dialog","66%"),n},e.prototype.getNodeIdFromPath=function(e){return J(this,void 0,void 0,(function(){var t;return X(this,(function(r){switch(r.label){case 0:if(!e.alias||!e.path)return[3,4];r.label=1;case 1:return r.trys.push([1,3,,4]),[4,this.getNodeId(e.alias,e.path).toPromise()];case 2:return[2,r.sent()];case 3:return t=r.sent(),this.logService.error(t),[3,4];case 4:return[2,this.getNodeId(e.alias).toPromise()]}}))}))},e.prototype.getNodeIdFromFolderVariableValue=function(e,t){return J(this,void 0,void 0,(function(){return X(this,(function(r){switch(r.label){case 0:return[4,this.isExistingNode(e)];case 1:return[2,r.sent()?e:this.getNodeId(t).toPromise()]}}))}))},e.prototype.isExistingNode=function(e){return J(this,void 0,void 0,(function(){var t,r;return X(this,(function(i){switch(i.label){case 0:if(t=!1,!e)return[3,4];i.label=1;case 1:return i.trys.push([1,3,,4]),[4,this.getNodeId(e).pipe(k.mapTo(!0)).toPromise()];case 2:return t=i.sent(),[3,4];case 3:return r=i.sent(),this.logService.error(r),[3,4];case 4:return[2,t]}}))}))},e.prototype.getNodeId=function(e,t){var r,i=this;return t&&(r={relativePath:t}),_.from(this.nodesApi.getNode(e,r)).pipe(k.map((function(e){return e.entry.id})),k.catchError((function(e){return i.sourceNodeNotFound=!0,i.handleError(e)})))},e.prototype.openContentNodeDialog=function(e,t,r){var i=this,n=this.dialog.open(B.ContentNodeSelectorComponent,{data:e,panelClass:t,width:r});n.afterOpened().subscribe((function(){i.sourceNodeNotFound&&i.notificationService.showWarning("ADF_CLOUD_TASK_FORM.ERROR.DESTINATION_FOLDER_PATH_ERROR")})),n.afterClosed().subscribe((function(){i.sourceNodeNotFound=!1}))},e.prototype.close=function(){this.dialog.closeAll()},e.prototype.handleError=function(e){return _.throwError(e||"Server error")},e}();nt.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new nt(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.NotificationService),t.ɵɵinject(r.LogService),t.ɵɵinject(u.MatDialog))},token:nt,providedIn:"root"}),nt.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],nt.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.NotificationService},{type:r.LogService},{type:u.MatDialog}]};var ot=function(){function e(e,t,r,i){this.apiService=e,this.logService=t,this.contentService=r,this.downloadService=i}return Object.defineProperty(e.prototype,"uploadApi",{get:function(){var e;return this._uploadApi=null!==(e=this._uploadApi)&&void 0!==e?e:new G.UploadApi(this.apiService.getInstance()),this._uploadApi},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"authenticationApi",{get:function(){var e;return this._authenticationApi=null!==(e=this._authenticationApi)&&void 0!==e?e:new G.AuthenticationApi(this.apiService.getInstance()),this._authenticationApi},enumerable:!1,configurable:!0}),e.prototype.createTemporaryRawRelatedContent=function(e,t){var r=this;return _.from(this.uploadApi.uploadFile(e,"",t,"",{overwrite:!0})).pipe(k.map((function(e){return Object.assign(Object.assign({},e.entry),{nodeId:e.entry.id})})),k.catchError((function(e){return r.handleError(e)})))},e.prototype.getRawContentNode=function(e){return this.contentService.getNodeContent(e)},e.prototype.downloadNodeContent=function(e,t){this.contentService.downloadBlob(e,t)},e.prototype.downloadFile=function(e){return J(this,void 0,void 0,(function(){var t,r;return X(this,(function(i){switch(i.label){case 0:return[4,this.getAuthTicket()];case 1:return t=i.sent(),r=this.contentService.getContentUrl(e,!0,t),this.downloadService.downloadUrl(r,e),[2]}}))}))},e.prototype.getAuthTicket=function(){return J(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return[4,this.authenticationApi.getTicket()];case 1:return(e=t.sent())&&e.entry?[2,e.entry.id||""]:[2,""]}}))}))},e.prototype.handleError=function(e){return this.logService.error(e),_.throwError(e||"Server error")},e}();ot.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new ot(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.LogService),t.ɵɵinject(r.ContentService),t.ɵɵinject(r.DownloadService))},token:ot,providedIn:"root"}),ot.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],ot.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.LogService},{type:r.ContentService},{type:r.DownloadService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var at,st;!function(e){e.ALL_FILE_SOURCES_SERVICE_ID="all-file-sources",e.ALFRESCO_CONTENT_SOURCES_SERVICE_ID="alfresco-content"}(at||(at={})),function(e){e.STATIC_TYPE="value",e.STRING_TYPE="string",e.FOLDER_TYPE="folder"}(st||(st={}));var lt=function(e){function t(t,r,i,n,o){var a=e.call(this,t)||this;return a.thumbnailService=r,a.processCloudContentService=i,a.notificationService=n,a.logService=o,a.multipleOption="",a}return Q(t,e),t.prototype.ngOnInit=function(){this.field&&this.field.value&&this.field.value.length>0&&(this.hasFile=!0,this.fixIncompatibilityFromPreviousAndNewForm([])),this.getMultipleFileParam(),this.setDestinationFolderPathFromMappedVariable()},t.prototype.removeFile=function(e){this.field&&this.removeElementFromList(e)},t.prototype.onFileChanged=function(e){var t,r,i=this,n=[],o=[];try{for(var a=Z(Array.from(e.target.files)),s=a.next();!s.done;s=a.next()){var l=s.value;this.isUploaded(l)?this.notificationService.showWarning("FORM.FIELD.FILE_ALREADY_UPLOADED"):n.push(l)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(r=a.return)&&r.call(a)}finally{if(t)throw t.error}}n&&n.length>0&&_.from(n).pipe(k.mergeMap((function(e){return i.uploadRawContent(e)}))).subscribe((function(e){o.push(e)}),(function(e){return i.logService.error("Error uploading file. See console output for more details. "+e)}),(function(){i.fixIncompatibilityFromPreviousAndNewForm(o),i.hasFile=!0}))},t.prototype.isUploaded=function(e){return(this.field.value||[]).some((function(t){return t.name===e.name}))},t.prototype.fixIncompatibilityFromPreviousAndNewForm=function(e){var t=te(this.field.value||[]);t.push.apply(t,te(e||[])),this.field.value=t,this.field.form.values[this.field.id]=t,this.hasFile=t.length>0},t.prototype.getIcon=function(e){return this.thumbnailService.getMimeTypeIcon(e)},t.prototype.uploadRawContent=function(e){return this.processCloudContentService.createTemporaryRawRelatedContent(e,this.field.form.nodeId)},t.prototype.getMultipleFileParam=function(){this.field&&this.field.params&&this.field.params.multiple&&(this.multipleOption=this.field.params.multiple?"multiple":"")},Object.defineProperty(t.prototype,"uploadedFiles",{get:function(){return this.field.value||this.field.form.values[this.field.id]||[]},enumerable:!1,configurable:!0}),t.prototype.removeElementFromList=function(e){var t=this.uploadedFiles.filter((function(t){return t.id!==e.id}));this.resetFormValues(t)},t.prototype.resetFormValues=function(e){e&&e.length>0?(this.field.value=e,this.field.form.values[this.field.id]=e,this.hasFile=!0):(this.field.value=[],this.field.form.values[this.field.id]=[],this.hasFile=!1)},t.prototype.fileClicked=function(e){this.formService.formContentClicked.next(e)},t.prototype.isAlfrescoAndLocal=function(){var e,t,r;return(null===(r=null===(t=null===(e=this.field)||void 0===e?void 0:e.params)||void 0===t?void 0:t.fileSource)||void 0===r?void 0:r.serviceId)===at.ALL_FILE_SOURCES_SERVICE_ID},t.prototype.isPathVariableType=function(e){var t,r,i,n;return(null===(n=null===(i=null===(r=null===(t=this.field)||void 0===t?void 0:t.params)||void 0===r?void 0:r.fileSource)||void 0===i?void 0:i.destinationFolderPath)||void 0===n?void 0:n.type)===e},t.prototype.setDestinationFolderPathFromMappedVariable=function(){this.isAlfrescoAndLocal()&&(this.prepareUploadWidgetDestinationFolderPathFromStringVariable(),this.prepareUploadWidgetDestinationFolderPathFromFolderVariable())},t.prototype.prepareUploadWidgetDestinationFolderPathFromStringVariable=function(){this.isPathVariableType(st.STRING_TYPE)&&this.setUploadWidgetDestinationFolderPath(this.getDestinationFolderPathValue())},t.prototype.prepareUploadWidgetDestinationFolderPathFromFolderVariable=function(){if(this.isPathVariableType(st.FOLDER_TYPE)){var e=this.getDestinationFolderPathValue();this.setUploadWidgetDestinationFolderPath((null==e?void 0:e.length)?e[0].id:void 0)}},t.prototype.setUploadWidgetDestinationFolderPath=function(e){this.field.params.fileSource.destinationFolderPath.value=e||void 0},t.prototype.getDestinationFolderPathValue=function(){var e,t;return this.field.form.getProcessVariableValue(null===(t=null===(e=this.field.params.fileSource)||void 0===e?void 0:e.destinationFolderPath)||void 0===t?void 0:t.name)},t}(r.WidgetComponent);lt.decorators=[{type:t.Component,args:[{selector:"upload-cloud-widget",template:'<div class="adf-upload-widget {{field.className}}" [class.adf-invalid]="!field.isValid"\n    [class.adf-readonly]="field.readOnly">\n    <label class="adf-label" [attr.for]="field.id">{{ field.name | translate }}<span\n            *ngIf="isRequired()">*</span></label>\n    <div class="adf-cloud-upload-widget-container">\n        <div>\n            <mat-list *ngIf="hasFile">\n                <mat-list-item class="adf-upload-files-row" *ngFor="let file of uploadedFiles">\n                    <img mat-list-icon class="adf-upload-widget__icon" [id]="\'file-\'+file.id+\'-icon\'"\n                        [src]="getIcon(file.content.mimeType)" [alt]="mimeTypeIcon" (click)="fileClicked(file)"\n                        (keyup.enter)="fileClicked(file)" role="button" tabindex="0" />\n                    <span matLine id="{{\'file-\'+file.id}}" (click)="fileClicked(file)" (keyup.enter)="fileClicked(file)"\n                        role="button" tabindex="0" class="adf-file">{{file.name}}</span>\n                    <button *ngIf="!field.readOnly" mat-icon-button [id]="\'file-\'+file.id+\'-remove\'"\n                        (click)="removeFile(file);" (keyup.enter)="removeFile(file);">\n                        <mat-icon class="mat-24">highlight_off</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n        </div>\n\n        <div *ngIf="(!hasFile || multipleOption) && !field.readOnly">\n            <button mat-raised-button color="primary" (click)="uploadFiles.click()" [matTooltip]="field.tooltip"\n                matTooltipPosition="above" matTooltipShowDelay="1000">\n                {{ \'FORM.FIELD.UPLOAD\' | translate }}<mat-icon>file_upload</mat-icon>\n                <input #uploadFiles [multiple]="multipleOption" type="file" [id]="field.form.nodeId"\n                    (change)="onFileChanged($event)" />\n            </button>\n        </div>\n\n        <div *ngIf="!hasFile && field.readOnly">\n            {{ \'FORM.FIELD.NO_FILE_ATTACHED\' | translate }}\n        </div>\n\n    </div>\n    <error-widget [error]="field.validationSummary"></error-widget>\n    <error-widget *ngIf="isInvalidFieldRequired()" required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n</div>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None,styles:[".adf-cloud-upload-widget-container{margin-bottom:15px}.adf-cloud-upload-widget-container input{display:none}.adf-cloud-upload-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-cloud-upload-widget__icon{cursor:pointer;float:left;padding:6px}.adf-cloud-upload-widget__reset{margin-top:-2px}.adf-cloud-upload-files-row .mat-line{margin-bottom:0}"]}]}],lt.ctorParameters=function(){return[{type:r.FormService},{type:r.ThumbnailService},{type:ot},{type:r.NotificationService},{type:r.LogService}]},lt.propDecorators={fileInput:[{type:t.ViewChild,args:["uploadFiles"]}]};var pt=function(e){function t(r,i,n,o,a,s,l,p,c){var d=e.call(this,r,n,o,a,i)||this;return d.contentNodeSelectorService=s,d.appConfigService=l,d.apiService=p,d.contentNodeSelectorPanelService=c,d.typeId="AttachFileCloudWidgetComponent",d.rootNodeId=t.ALIAS_USER_FOLDER,d.displayedColumns=["icon","fileName","action"],d}return Q(t,e),Object.defineProperty(t.prototype,"nodesApi",{get:function(){var e;return this._nodesApi=null!==(e=this._nodesApi)&&void 0!==e?e:new G.NodesApi(this.apiService.getInstance()),this._nodesApi},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t,r,i;if(e.prototype.ngOnInit.call(this),this.hasFile&&1===this.field.value.length){var n=this.field.value||this.field.form.values[this.field.id];this.contentModelFormFileHandler(n[0])}this.field.params.displayableCMProperties=null!==(r=this.field.params.displayableCMProperties)&&void 0!==r?r:[],(t=this.displayedColumns).splice.apply(t,te([2,0],null===(i=this.field.params.displayableCMProperties)||void 0===i?void 0:i.map((function(e){return null==e?void 0:e.name}))))},t.prototype.isPathStaticType=function(){var e,t,r;return(null===(r=null===(t=null===(e=this.field.params)||void 0===e?void 0:e.fileSource)||void 0===t?void 0:t.destinationFolderPath)||void 0===r?void 0:r.type)===st.STATIC_TYPE},t.prototype.isUploadButtonVisible=function(){return(!this.hasFile||this.multipleOption)&&!this.field.readOnly},t.prototype.onRemoveAttachFile=function(e){var t;this.removeFile(e),e.id===(null===(t=this.selectedNode)||void 0===t?void 0:t.id)&&(this.selectedNode=null,this.contentModelFormFileHandler())},t.prototype.fetchAppNameFromAppConfig=function(){var e;return null===(e=this.appConfigService.get("alfresco-deployed-apps")[0])||void 0===e?void 0:e.name},t.prototype.replaceAppNameAliasWithValue=function(e){if(null==e?void 0:e.match(t.APP_NAME)){var r=this.fetchAppNameFromAppConfig();return e.replace(t.APP_NAME,r)}return e},t.prototype.openSelectDialog=function(){return J(this,void 0,void 0,(function(){var e,r,i=this;return X(this,(function(n){switch(n.label){case 0:return e=this.field.params.multiple?"multiple":"single",[4,this.getDestinationFolderNodeId()];case 1:return r=n.sent(),this.rootNodeId=r||t.ALIAS_USER_FOLDER,this.contentNodeSelectorPanelService.customModels=this.field.params.customModels,this.contentNodeSelectorService.openUploadFileDialog(this.rootNodeId,e,this.isAlfrescoAndLocal(),!0).subscribe((function(e){e.forEach((function(e){return e.isExternal=!0}));var t=i.removeExistingSelection(e);i.fixIncompatibilityFromPreviousAndNewForm(t),1===i.field.value.length&&i.contentModelFormFileHandler(e&&e.length>0?e[0]:null)})),[2]}}))}))},t.prototype.getDestinationFolderNodeId=function(){var e,r,i,n;return J(this,void 0,void 0,(function(){var o;return X(this,(function(a){switch(a.label){case 0:switch(null===(n=null===(i=null===(r=null===(e=this.field)||void 0===e?void 0:e.params)||void 0===r?void 0:r.fileSource)||void 0===i?void 0:i.destinationFolderPath)||void 0===n?void 0:n.type){case st.STATIC_TYPE:return[3,1];case st.STRING_TYPE:return[3,3];case st.FOLDER_TYPE:return[3,5]}return[3,7];case 1:return[4,this.getNodeIdFromPath(this.field.params.fileSource.destinationFolderPath)];case 2:return o=a.sent(),[3,9];case 3:return[4,this.getNodeIdFromPath(this.field.params.fileSource.destinationFolderPath)];case 4:return o=a.sent(),[3,9];case 5:return[4,this.getNodeIdFromFolderVariableValue(this.field.params.fileSource.destinationFolderPath)];case 6:return o=a.sent(),[3,9];case 7:return[4,this.getNodeIdFromPath({type:"",value:t.ALIAS_USER_FOLDER})];case 8:return o=a.sent(),[3,9];case 9:return[2,o]}}))}))},t.prototype.getNodeIdFromPath=function(e){return J(this,void 0,void 0,(function(){var t,r,i;return X(this,(function(n){switch(n.label){case 0:(r=this.getAliasAndRelativePathFromDestinationFolderPath(e.value)).path=this.replaceAppNameAliasWithValue(r.path),n.label=1;case 1:return n.trys.push([1,3,,4]),[4,this.contentNodeSelectorService.getNodeIdFromPath(r)];case 2:return t=n.sent(),[3,4];case 3:return i=n.sent(),this.logService.error(i),[3,4];case 4:return[2,t]}}))}))},t.prototype.getNodeIdFromFolderVariableValue=function(e){return J(this,void 0,void 0,(function(){var r,i;return X(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,this.contentNodeSelectorService.getNodeIdFromFolderVariableValue(e.value,t.ALIAS_USER_FOLDER)];case 1:return r=n.sent(),[3,3];case 2:return i=n.sent(),this.logService.error(i),[3,3];case 3:return[2,r]}}))}))},t.prototype.getAliasAndRelativePathFromDestinationFolderPath=function(e){var r,i;if(e){var n=e.indexOf("/");n>=0?(r=e.substring(0,n),i=e.substring(n,e.length)):r=e}return this.isValidAlias(r)?{alias:r,path:i}:{alias:t.ALIAS_USER_FOLDER,path:void 0}},t.prototype.removeExistingSelection=function(e){var t=te(this.field.value||[]);return e.filter((function(e){return!t.some((function(t){return t.id===e.id}))}))},t.prototype.downloadContent=function(e){this.processCloudContentService.downloadFile(e.id)},t.prototype.onAttachFileClicked=function(e){e.nodeId=e.id,this.fileClicked(new r.ContentLinkModel(e))},t.prototype.getWidgetIcon=function(){return this.isAlfrescoAndLocal()?"file_upload":"attach_file"},t.prototype.onRowClicked=function(e){var t;(null===(t=this.selectedNode)||void 0===t?void 0:t.id)===(null==e?void 0:e.id)?this.selectedNode=null:this.selectedNode=e,this.contentModelFormFileHandler(this.selectedNode)},t.prototype.contentModelFormFileHandler=function(e){var t=this;if((null==e?void 0:e.id)&&this.isRetrieveMetadataOptionEnabled()){var i={};this.nodesApi.getNode(e.id).then((function(e){var r,n=null===(r=null==e?void 0:e.entry)||void 0===r?void 0:r.properties;n&&(Object.keys(n).forEach((function(e){var t=e.replace(":","_");i[t]=n[e]})),t.formService.updateFormValuesRequested.next(i))}))}this.fileClicked(new r.UploadWidgetContentLinkModel(e,this.field.id))},t.prototype.isRetrieveMetadataOptionEnabled=function(){var e,r;return(null===(r=null===(e=this.field)||void 0===e?void 0:e.params)||void 0===r?void 0:r.menuOptions)&&this.field.params.menuOptions[t.RETRIEVE_METADATA_OPTION]},t.prototype.isValidAlias=function(e){return e&&t.VALID_ALIAS.includes(e)},t.prototype.ngOnDestroy=function(){this.contentNodeSelectorPanelService.customModels=[]},t}(lt);pt.ALIAS_ROOT_FOLDER="-root-",pt.ALIAS_USER_FOLDER="-my-",pt.APP_NAME="-appname-",pt.VALID_ALIAS=[pt.ALIAS_ROOT_FOLDER,pt.ALIAS_USER_FOLDER,"-shared-"],pt.RETRIEVE_METADATA_OPTION="retrieveMetadata",pt.decorators=[{type:t.Component,args:[{selector:"adf-cloud-attach-file-cloud-widget",template:'<div class="adf-attach-file-widget-container">\n    <div class="adf-attach-widget {{field.className}}" [class.adf-invalid]="!field.isValid"\n        [class.adf-readonly]="field.readOnly">\n        <label class="adf-label" [attr.for]="field.id">{{field.name}}\n            <span *ngIf="isRequired()">*</span>\n        </label>\n        <div class="adf-attach-widget-container">\n            <div class="adf-attach-widget__menu-upload" *ngIf="isUploadButtonVisible()">\n                <button (click)="openSelectDialog()" mat-raised-button color="primary" [id]="field.id"\n                    [matTooltip]="field.tooltip" matTooltipPosition="above" matTooltipShowDelay="1000">\n                    {{ \'FORM.FIELD.ATTACH\' | translate }}\n                    <mat-icon>{{getWidgetIcon()}}</mat-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <div id="adf-attach-widget-readonly-list" class="adf-attach-widget-readonly-table">\n        <adf-cloud-file-properties-table\n            [uploadedFiles]="uploadedFiles"\n            [hasFile]="hasFile"\n            [selectedNode]="selectedNode"\n            [field]="field"\n            [displayedColumns]="displayedColumns"\n            [mimeTypeIcon]="mimeTypeIcon"\n            (rowClick)="onRowClicked($event)"\n            (attachFileClick)="onAttachFileClicked($event)"\n            (downloadFile)="downloadContent($event)"\n            (contentModelFileHandler)="contentModelFormFileHandler($event)"\n            (removeAttachFile)="onRemoveAttachFile($event)"\n        ></adf-cloud-file-properties-table>\n        <div *ngIf="!hasFile && field.readOnly" id="{{\'adf-attach-empty-list-\'+field.id}}">\n            {{ \'FORM.FIELD.NO_FILE_ATTACHED\' | translate }}\n        </div>\n\n    </div>\n\n    <error-widget [error]="field.validationSummary"></error-widget>\n    <error-widget *ngIf="isInvalidFieldRequired()" required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n</div>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None,styles:[".adf-attach-widget-container{align-items:center;display:flex}.adf-attach-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-widget__menu-upload{align-items:center;display:flex;margin-right:8px}.adf-attach-widget__menu-upload .mat-raised-button{font-size:12px;line-height:28px}.adf-attach-widget__menu-upload button span{font-size:12px}.adf-attach-widget__menu-upload button span mat-icon{height:12px;line-height:12px;width:12px}.adf-attach-widget__menu-upload button span .material-icons{font-size:18px}.adf-attach-widget__input-type{height:.1px;opacity:0;overflow:hidden;position:absolute;width:.1px;z-index:-1}.adf-attach-widget__image-logo{padding-left:5px}.adf-attach-widget-repo-button{padding-left:10px}.adf-attach-widget-repo-button .mat-button-wrapper{display:inline}.adf-attach-widget-repo-button .mat-mini-fab.mat-accent{background-color:inherit}.adf-attach-widget{background:var(--theme-colors-mat-grey);border-bottom:none;display:flex;justify-content:space-between;min-height:27px;padding:.4375em;word-break:break-all}.adf-attach-widget .adf-label{font-size:var(--theme-caption-font-size);line-height:var(--theme-headline-line-height);margin-left:8px;text-align:left;white-space:nowrap;width:32px}.adf-attach-widget__icon{cursor:pointer;float:left;padding:6px}.adf-attach-widget__reset{margin-top:-2px}.adf-attach-files-row div.mat-list-item-content{cursor:pointer}.adf-attach-files-row .mat-line{margin-bottom:0}.adf-attach-selected-file-row div.mat-list-item-content .adf-datatable-selected{color:var(--theme-primary-color);padding-right:6px}.adf-attach-file-widget-container{margin:15px}"]}]}],pt.ctorParameters=function(){return[{type:r.FormService},{type:r.LogService},{type:r.ThumbnailService},{type:ot},{type:r.NotificationService},{type:nt},{type:r.AppConfigService},{type:r.AlfrescoApiService},{type:B.ContentNodeSelectorPanelService}]};var ct=function(e){function r(r){var i=e.call(this,r)||this;return i.nodeContentLoaded=new t.EventEmitter,i}return Q(r,e),r.prototype.onNodeContentLoaded=function(e){this.nodeContentLoaded.emit(e)},r}(r.WidgetComponent);ct.decorators=[{type:t.Component,args:[{selector:"adf-properties-viewer-widget",template:'<div class="adf-file-viewer-widget {{field.className}}" [class.adf-invalid]="!field.isValid"\n    [class.adf-readonly]="field.readOnly">\n    <label class="adf-label" [attr.for]="field.id">{{field.name | translate }}<span\n            *ngIf="isRequired()">*</span></label>\n    <ng-template #properties [ngTemplateOutlet]="properties" let-properties="properties" [ngTemplateOutletContext]="{ properties: field.params?.propertiesViewerOptions }">\n        <adf-properties-viewer-wrapper *ngIf="field.value" [nodeId]="field.value"\n            [displayDefaultProperties]="properties?.displayDefaultProperties !== undefined ?  properties?.displayDefaultProperties : true"\n            [expanded]="properties?.expanded !== undefined ? properties?.expanded : true"\n            [preset]="properties?.preset"\n            [displayEmpty]="properties?.displayEmpty !== undefined ? properties?.displayEmpty : false"\n            [editable]="properties?.editable !== undefined ? properties?.editable : false"\n            [multi]="properties?.multi !== undefined ? properties?.multi : false"\n            [displayAspect]="properties?.displayAspect !== undefined ? properties?.displayAspect : null"\n            [copyToClipboardAction]="properties?.copyToClipboardAction !== undefined ? properties?.copyToClipboardAction : true"\n            [useChipsForMultiValueProperty]="properties?.useChipsForMultiValueProperty !== undefined ? properties?.useChipsForMultiValueProperty : true"\n            (nodeContentLoaded)="onNodeContentLoaded($event)">\n        </adf-properties-viewer-wrapper>\n    </ng-template>\n    <error-widget [error]="field.validationSummary"></error-widget>\n</div>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None,styles:["adf-properties-viewer-widget{height:100%;width:100%}adf-properties-viewer-widget adf-properties-viewer-wrapper{border:1px solid var(--theme-border-color);border-radius:6px;display:block;height:100%;width:100%}adf-properties-viewer-widget adf-properties-viewer-wrapper .adf-properties-viewer-wrapper-loading{height:100%;width:100%}adf-properties-viewer-widget adf-properties-viewer-wrapper .adf-properties-viewer-wrapper-loading mat-progress-spinner{display:block;margin:auto}"]}]}],ct.ctorParameters=function(){return[{type:r.FormService}]},ct.propDecorators={nodeContentLoaded:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var dt=function(){function e(e){this.nodesApiService=e,this.loading=!0,this.displayAspect=null,this.nodeContentLoaded=new t.EventEmitter}return e.prototype.ngOnChanges=function(e){e&&e.nodeId&&e.nodeId.currentValue&&!e.nodeId.isFirstChange()&&this.getNode(e.nodeId.currentValue)},e.prototype.ngOnInit=function(){this.nodeId&&this.getNode(this.nodeId)},e.prototype.getNode=function(e){var t=this;this.loading=!0,this.nodesApiService.getNode(e).subscribe((function(e){t.node=e,t.loading=!1,t.nodeContentLoaded.emit(e)}))},e}();dt.decorators=[{type:t.Component,args:[{selector:"adf-properties-viewer-wrapper",template:'<adf-content-metadata [displayDefaultProperties]="displayDefaultProperties" [expanded]="expanded" [node]="node"\n    [preset]="preset" [displayEmpty]="displayEmpty" [editable]="editable" [multi]="multi"\n    [displayAspect]="displayAspect" [copyToClipboardAction]="copyToClipboardAction"\n    [useChipsForMultiValueProperty]="useChipsForMultiValueProperty" *ngIf="!loading; else loadingTemplate">\n</adf-content-metadata>\n<ng-template #loadingTemplate>\n    <div class="adf-properties-viewer-wrapper-loading">\n        <mat-progress-spinner></mat-progress-spinner>\n    </div>\n</ng-template>\n',encapsulation:t.ViewEncapsulation.None}]}],dt.ctorParameters=function(){return[{type:r.NodesApiService}]},dt.propDecorators={nodeId:[{type:t.Input}],editable:[{type:t.Input}],displayEmpty:[{type:t.Input}],expanded:[{type:t.Input}],multi:[{type:t.Input}],preset:[{type:t.Input}],displayDefaultProperties:[{type:t.Input}],displayAspect:[{type:t.Input}],copyToClipboardAction:[{type:t.Input}],useChipsForMultiValueProperty:[{type:t.Input}],nodeContentLoaded:[{type:t.Output}]};var ut=function(e){function t(t,r,i){var n=e.call(this,t)||this;return n.formService=t,n.formCloudService=r,n.logService=i,n.typeId="RadioButtonsCloudWidgetComponent",n.onDestroy$=new _.Subject,n}return Q(t,e),t.prototype.ngOnInit=function(){this.field&&this.field.restUrl&&this.getValuesFromRestApi()},t.prototype.getValuesFromRestApi=function(){var e=this;this.formCloudService.getRestWidgetData(this.field.form.id,this.field.id).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){e.field.options=t,e.field.updateForm()}),(function(t){return e.handleError(t)}))},t.prototype.onOptionClick=function(e){this.field.value=e,this.fieldChanged.emit(this.field)},t.prototype.handleError=function(e){this.logService.error(e)},t.prototype.isChecked=function(e){var t,r;if(this.field.value&&"object"==typeof this.field.value){var i="id",n="name";return this.field.restUrl&&(i=null!==(t=this.field.restIdProperty)&&void 0!==t?t:"id",n=null!==(r=this.field.restLabelProperty)&&void 0!==r?r:"name"),this.field.value[i]===e.id||this.field.value[n]===e.name}return this.field.value===e.id},t}(r.WidgetComponent);ut.decorators=[{type:t.Component,args:[{selector:"radio-buttons-cloud-widget",template:'<div class="adf-radio-buttons-widget-cloud {{field.className}}"\n     [class.adf-invalid]="!field.isValid" [class.adf-readonly]="field.readOnly" [id]="field.id">\n    <div class="adf-radio-button-container">\n        <label class="adf-label" [attr.for]="field.id">{{field.name | translate }}<span *ngIf="isRequired()">*</span></label>\n        <mat-radio-group class="adf-radio-group" [(ngModel)]="field.value" [disabled]="field.readOnly">\n            <mat-radio-button\n                [matTooltip]="field.tooltip"\n                matTooltipPosition="above"\n                matTooltipShowDelay="1000"\n                [id]="field.id + \'-\' + opt.id"\n                [name]="field.id"\n                [value]="opt.id"\n                [checked]="isChecked(opt)"\n                (change)="onOptionClick(opt.id)"\n                color="primary"\n                class="adf-radio-button" *ngFor="let opt of field.options" >\n                {{opt.name}}\n            </mat-radio-button>\n        </mat-radio-group>\n    </div>\n    <error-widget [error]="field.validationSummary" ></error-widget>\n    <error-widget *ngIf="isInvalidFieldRequired()" required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n</div>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:t.ViewEncapsulation.None,styles:[".adf-radio-button-container{display:flex;flex-direction:column;margin-bottom:15px}.adf-radio-group{display:inline-flex;flex-direction:column;margin-left:5px;margin-top:15px}.adf-radio-button{margin:5px}"]}]}],ut.ctorParameters=function(){return[{type:r.FormService},{type:We},{type:r.LogService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ft=function(){function e(e,r){this.localizedDatePipe=e,this.thumbnailService=r,this.rowClick=new t.EventEmitter,this.attachFileClick=new t.EventEmitter,this.downloadFile=new t.EventEmitter,this.contentModelFileHandler=new t.EventEmitter,this.removeAttachFile=new t.EventEmitter}return e.prototype.onRowClicked=function(e){this.rowClick.emit(e)},e.prototype.onAttachFileClicked=function(e){this.attachFileClick.emit(e)},e.prototype.downloadContent=function(e){this.downloadFile.emit(e)},e.prototype.contentModelFormFileHandler=function(e){this.contentModelFileHandler.emit(e)},e.prototype.onRemoveAttachFile=function(e){this.removeAttachFile.emit(e)},e.prototype.getIcon=function(e){return this.thumbnailService.getMimeTypeIcon(e)},e.prototype.getColumnValue=function(e,t){var r;if(!e.properties[t.prefixedName]){var i=null===(r=this.field.params.displayableCMProperties)||void 0===r?void 0:r.find((function(e){return e.name===t.name}));return i.defaultValue?this.checkDateTypeAndTransform(t.dataType,i.defaultValue):"--"}return e.properties[t.prefixedName]?this.checkDateTypeAndTransform(t.dataType,e.properties[t.prefixedName]):"--"},e.prototype.checkDateTypeAndTransform=function(e,t){return"d:date"===e?this.localizedDatePipe.transform(t):"d:datetime"===e?this.localizedDatePipe.transform(t,"medium"):t},e.prototype.displayMenuOption=function(t){var r,i;return(null===(i=null===(r=this.field)||void 0===r?void 0:r.params)||void 0===i?void 0:i.menuOptions)?this.field.params.menuOptions[t]:t!==e.RETRIEVE_METADATA_OPTION},e}();ft.RETRIEVE_METADATA_OPTION="retrieveMetadata",ft.decorators=[{type:t.Component,args:[{selector:"adf-cloud-file-properties-table",template:'<div class="adf-file-properties-table">\n    <table mat-table [dataSource]="uploadedFiles" class="mat-elevation-z0" *ngIf="hasFile">\n        <ng-container matColumnDef="icon">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef="let element">\n                <mat-icon mat-list-icon class="adf-datatable-selected"\n                    *ngIf="selectedNode && element.id === selectedNode.id" (click)="onRowClicked(element)">\n                    check_circle\n                </mat-icon>\n                <img mat-list-icon class="adf-attach-widget__icon"\n                    *ngIf="!selectedNode || element.id !== selectedNode.id" [id]="\'file-\'+element?.id+\'-icon\'"\n                    (click)="onRowClicked(element)"\n                    [src]="element.content ? getIcon(element.content.mimeType) : getIcon(element[\'mimeType\'])"\n                    [alt]="mimeTypeIcon" role="button" tabindex="0" />\n            </td>\n        </ng-container>\n    \n        <ng-container matColumnDef="fileName">\n            <th mat-header-cell *matHeaderCellDef>{{ \'FORM.FIELD.FILE_NAME\' | translate }}</th>\n            <td mat-cell *matCellDef="let element">\n                <span matLine id="{{\'file-\'+element?.id}}" role="button" tabindex="0" class="adf-file"\n                    (click)="onRowClicked(element)">{{element.name}}</span>\n            </td>\n        </ng-container>\n    \n        <ng-container *ngFor="let columnName of field?.params?.displayableCMProperties" [matColumnDef]="columnName.name">\n            <th mat-header-cell *matHeaderCellDef>{{ columnName.title ? columnName.title : columnName.name | titlecase\n                }}</th>\n            <td mat-cell *matCellDef="let row">\n                <span matLine id="{{\'fileProperty-\'+row?.id+\'-\'+columnName?.name}}" role="button" tabindex="0"\n                    (click)="onRowClicked(row)">{{ getColumnValue(row, columnName) }}</span>\n            </td>\n        </ng-container>\n    \n        <ng-container matColumnDef="action">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef="let element">\n                <button id="{{\'file-\'+element?.id+\'-option-menu\'}}" mat-icon-button [matMenuTriggerFor]="fileActionMenu"\n                    *ngIf="!!element.content?.mimeType">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #fileActionMenu="matMenu" xPosition="before">\n                    <button *ngIf="displayMenuOption(\'show\') && !!element.content?.mimeType"\n                        id="{{\'file-\'+element?.id+\'-show-file\'}}" mat-menu-item (click)="onAttachFileClicked(element)">\n                        <mat-icon>visibility</mat-icon>\n                        <span>{{ \'FORM.FIELD.VIEW_FILE\' | translate }}</span>\n                    </button>\n                    <button *ngIf="displayMenuOption(\'download\') && !!element.content?.mimeType"\n                        id="{{\'file-\'+element?.id+\'-download-file\'}}" mat-menu-item (click)="downloadContent(element)">\n                        <mat-icon>file_download</mat-icon>\n                        <span>{{ \'FORM.FIELD.DOWNLOAD_FILE\' | translate }}</span>\n                    </button>\n                    <button *ngIf="displayMenuOption(\'retrieveMetadata\') && !!element.content?.mimeType"\n                        id="{{\'file-\'+element?.id+\'-retrieve-file-metadata\'}}" mat-menu-item\n                        (click)="contentModelFormFileHandler(element)">\n                        <mat-icon class="mat-24">low_priority</mat-icon>\n                        <span>{{ \'ADF_CLOUD_FORM_COMPONENT.RETRIEVE_METADATA\' | translate }}</span>\n                    </button>\n                    <button *ngIf="!field.readOnly && displayMenuOption(\'remove\')"\n                        id="{{\'file-\'+element?.id+\'-remove-file\'}}" mat-menu-item [id]="\'file-\'+element?.id+\'-remove\'"\n                        (click)="onRemoveAttachFile(element);" (keyup.enter)="onRemoveAttachFile(element);">\n                        <mat-icon class="mat-24">highlight_off</mat-icon>\n                        <span>{{ \'FORM.FIELD.REMOVE_FILE\' | translate }}</span>\n                    </button>\n                </mat-menu>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n    \n    </table>\n</div>\n',styles:[".adf-file-properties-table table{border:1px solid var(--theme-border-color);box-shadow:none;width:100%}.adf-file-properties-table table .adf-datatable-selected{padding:6px}.adf-file-properties-table table tr.mat-header-row{height:32px}.adf-file-properties-table table th{font-weight:700;padding-right:0!important}.adf-file-properties-table table td{max-width:50px;overflow:hidden;padding-right:0!important;text-overflow:ellipsis;white-space:nowrap}.adf-file-properties-table table td.mat-cell:first-of-type,.adf-file-properties-table table td.mat-cell:last-of-type,.adf-file-properties-table table td.mat-footer-cell:first-of-type,.adf-file-properties-table table td.mat-footer-cell:last-of-type{width:18%!important}"]}]}],ft.ctorParameters=function(){return[{type:r.LocalizedDatePipe},{type:r.ThumbnailService}]},ft.propDecorators={uploadedFiles:[{type:t.Input}],hasFile:[{type:t.Input}],selectedNode:[{type:t.Input}],field:[{type:t.Input}],displayedColumns:[{type:t.Input}],mimeTypeIcon:[{type:t.Input}],rowClick:[{type:t.Output}],attachFileClick:[{type:t.Output}],downloadFile:[{type:t.Output}],contentModelFileHandler:[{type:t.Output}],removeAttachFile:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var mt=function(){};mt.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,i.FlexLayoutModule,$,P.FormsModule,P.ReactiveFormsModule,r.CoreModule,B.ContentNodeSelectorModule,Le,$e,B.ContentMetadataModule],declarations:[ze,lt,Je,Xe,tt,ut,pt,et,it,rt,dt,ct,ft],exports:[ze,lt,Je,Xe,tt,ut,pt,et,it,rt,ct]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ht=function(){};ht.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,i.FlexLayoutModule,$,P.FormsModule,P.ReactiveFormsModule,$e,r.CoreModule,mt,Le],declarations:[He],exports:[He]}]}];var yt=function(){function e(e,r,i,n){this.taskCloudService=e,this.translationService=r,this.appConfig=i,this.cardViewUpdateService=n,this.appName="",this.showTitle=!0,this.claim=new t.EventEmitter,this.unclaim=new t.EventEmitter,this.error=new t.EventEmitter,this.taskDetails={},this.candidateUsers=[],this.candidateGroups=[],this.inEdit=!1,this.displayDateClearAction=!1,this.isLoading=!0,this.onDestroy$=new _.Subject,this.dateFormat=this.appConfig.get("dateValues.defaultDateFormat"),this.dateLocale=this.appConfig.get("dateValues.defaultDateLocale"),this.dateTimeFormat=this.appConfig.get("dateValue.defaultDateTimeFormat")}return e.prototype.ngOnInit=function(){var e=this;this.taskCloudService.dataChangesDetected$.pipe(k.takeUntil(this.onDestroy$)).subscribe((function(){e.loadTaskDetailsById(e.appName,e.taskId)})),this.cardViewUpdateService.itemUpdated$.pipe(k.takeUntil(this.onDestroy$)).subscribe(this.updateTaskDetails.bind(this))},e.prototype.ngOnChanges=function(){this.taskDetails={},(this.appName||""===this.appName)&&this.taskId?this.loadTaskDetailsById(this.appName,this.taskId):this.error.emit("App Name and Task Id are mandatory")},e.prototype.loadTaskDetailsById=function(e,t){var r=this;this.isLoading=!0,this.taskCloudService.getTaskById(e,t).pipe(k.concatMap((function(e){return _.forkJoin(_.of(e),r.taskCloudService.getCandidateUsers(r.appName,r.taskId),r.taskCloudService.getCandidateGroups(r.appName,r.taskId))})),k.finalize((function(){return r.isLoading=!1}))).subscribe((function(e){var t=ee(e,3),i=t[0],n=t[1],o=t[2];r.taskDetails=i,r.candidateGroups=o.map((function(e){return{icon:"group",value:e}})),r.candidateUsers=n.map((function(e){return{icon:"person",value:e}})),r.taskDetails.parentTaskId?r.loadParentName(""+r.taskDetails.parentTaskId):r.refreshData()}),(function(e){r.error.emit(e)}))},e.prototype.initDefaultProperties=function(){return[new r.CardViewTextItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.ASSIGNEE",value:this.taskDetails.assignee,key:"assignee",clickable:this.isAssigneePropertyClickable(),default:this.translationService.instant("ADF_CLOUD_TASK_HEADER.PROPERTIES.ASSIGNEE_DEFAULT"),icon:"create"}),new r.CardViewTextItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.STATUS",value:this.taskDetails.status,key:"status"}),new r.CardViewSelectItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.PRIORITY",value:this.taskDetails.priority.toString(),key:"priority",editable:!0,displayNoneOption:!1,options$:_.of(this.taskCloudService.priorities)}),new r.CardViewDatetimeItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.DUE_DATE",value:this.taskDetails.dueDate,key:"dueDate",default:this.translationService.instant("ADF_CLOUD_TASK_HEADER.PROPERTIES.DUE_DATE_DEFAULT"),editable:!0,format:this.dateTimeFormat,locale:this.dateLocale}),new r.CardViewTextItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.CATEGORY",value:this.taskDetails.category,key:"category",default:this.translationService.instant("ADF_CLOUD_TASK_HEADER.PROPERTIES.CATEGORY_DEFAULT")}),new r.CardViewDateItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.CREATED",value:this.taskDetails.createdDate,key:"created",format:this.dateFormat,locale:this.dateLocale}),new r.CardViewTextItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.PARENT_NAME",value:this.parentTaskName,default:this.translationService.instant("ADF_CLOUD_TASK_HEADER.PROPERTIES.PARENT_NAME_DEFAULT"),key:"parentName",clickable:!0}),new r.CardViewTextItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.PARENT_TASK_ID",value:this.taskDetails.parentTaskId,key:"parentTaskId",clickable:!0}),new r.CardViewDateItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.END_DATE",value:this.taskDetails.completedDate,key:"endDate",format:this.dateFormat,locale:this.dateLocale}),new r.CardViewTextItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.ID",value:this.taskDetails.id,key:"id"}),new r.CardViewTextItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.DESCRIPTION",value:this.taskDetails.description,key:"description",default:this.translationService.instant("ADF_CLOUD_TASK_HEADER.PROPERTIES.DESCRIPTION_DEFAULT"),multiline:!0,editable:!0}),new r.CardViewArrayItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_USERS",value:_.of(this.candidateUsers),key:"candidateUsers",icon:"edit",clickable:!1,default:this.translationService.instant("ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_USERS_DEFAULT"),noOfItemsToDisplay:2}),new r.CardViewArrayItemModel({label:"ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_GROUPS",value:_.of(this.candidateGroups),key:"candidateGroups",icon:"edit",clickable:!1,default:this.translationService.instant("ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_GROUPS_DEFAULT"),noOfItemsToDisplay:2})]},e.prototype.refreshData=function(){var e=this;if(this.taskDetails){var t=this.initDefaultProperties(),r=this.appConfig.get("adf-cloud-task-header.presets.properties");this.properties=t.filter((function(t){return e.isValidSelection(r,t)}))}},e.prototype.updateTaskDetails=function(e){var t=this;this.taskCloudService.updateTask(this.appName,this.taskId,e.changed).pipe(k.catchError((function(){return t.cardViewUpdateService.updateElement(e.target),_.of(null)}))).subscribe((function(e){e&&(t.taskDetails=e)}))},e.prototype.loadParentName=function(e){var t=this;this.taskCloudService.getTaskById(this.appName,e).subscribe((function(e){t.parentTaskName=e.name,t.refreshData()}))},e.prototype.isCompleted=function(){return this.taskDetails&&"COMPLETED"===this.taskDetails.status},e.prototype.hasAssignee=function(){return!!this.taskDetails.assignee},e.prototype.isTaskValid=function(){return(this.appName||""===this.appName)&&!!this.taskId},e.prototype.isTaskAssigned=function(){return void 0!==this.taskDetails.assignee},e.prototype.isTaskEditable=function(){return this.taskCloudService.isTaskEditable(this.taskDetails)},e.prototype.isAssigneePropertyClickable=function(){return this.taskCloudService.isAssigneePropertyClickable(this.taskDetails,this.candidateUsers,[])},e.prototype.isValidSelection=function(e,t){return!e||e.indexOf(t.key)>=0},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e}();yt.decorators=[{type:t.Component,args:[{selector:"adf-cloud-task-header",template:'<h3 *ngIf="showTitle" class="adf-task-title">{{ taskDetails?.name }}</h3>\n\n<div class="adf-task-header-container">\n    <mat-card *ngIf="isTaskValid()" class="adf-card-container">\n        <mat-card-content>\n            <adf-card-view\n                *ngIf="!isLoading; else loadingTemplate"\n                [displayNoneOption]="false"\n                [properties]="properties"\n                [editable]="isTaskEditable()"\n                [displayClearAction]="displayDateClearAction">\n            </adf-card-view>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<ng-template #loadingTemplate>\n    <div class="adf-task-header-loading">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-template>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-controls{display:flex;justify-content:space-between}.adf-edit-controls{display:flex;justify-content:flex-end;margin-left:auto}.adf-save-edit-mode,.adf-switch-to-edit-mode{color:var(--theme-primary-color)}.adf-cancel-edit-mode,.adf-claim-controls{color:#838383}@media screen and (max-width:959px){adf-card-view .adf-property-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}.adf-task-header-loading{display:flex;justify-content:center}"]}]}],yt.ctorParameters=function(){return[{type:fe},{type:r.TranslationService},{type:r.AppConfigService},{type:r.CardViewUpdateService}]},yt.propDecorators={appName:[{type:t.Input}],taskId:[{type:t.Input}],showTitle:[{type:t.Input}],claim:[{type:t.Output}],unclaim:[{type:t.Output}],error:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var gt=function(){};gt.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,$,r.CoreModule.forChild()],declarations:[yt],exports:[yt]}]}];var vt=function(){function e(e){this.taskListService=e,this.appName="",this.success=new t.EventEmitter,this.error=new t.EventEmitter,this.invalidParams=[]}return e.prototype.ngOnInit=function(){this.validateInputs()},e.prototype.validateInputs=function(){if(this.isTaskValid()||this.invalidParams.push("taskId"),this.isAppValid()||this.invalidParams.push("appName"),this.invalidParams.length)throw new Error("Attribute "+this.invalidParams.join(", ")+" is required")},e.prototype.isTaskValid=function(){return this.taskId&&this.taskId.length>0},e.prototype.isAppValid=function(){return!!this.appName||""===this.appName},e.prototype.onClick=function(){return J(this,void 0,void 0,(function(){var e,t;return X(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,this.taskListService.completeTask(this.appName,this.taskId).toPromise()];case 1:return(e=r.sent())&&this.success.emit(e),[3,3];case 2:return t=r.sent(),this.error.emit(t),[3,3];case 3:return[2]}}))}))},e}();vt.decorators=[{type:t.Directive,args:[{selector:"[adf-cloud-complete-task]"}]}],vt.ctorParameters=function(){return[{type:fe}]},vt.propDecorators={taskId:[{type:t.Input}],appName:[{type:t.Input}],success:[{type:t.Output}],error:[{type:t.Output}],onClick:[{type:t.HostListener,args:["click"]}]};var Dt=function(){function e(e,r){this.taskListService=e,this.identityUserService=r,this.appName="",this.success=new t.EventEmitter,this.error=new t.EventEmitter,this.invalidParams=[]}return e.prototype.ngOnInit=function(){this.validateInputs()},e.prototype.validateInputs=function(){if(this.isTaskValid()||this.invalidParams.push("taskId"),this.isAppValid()||this.invalidParams.push("appName"),this.invalidParams.length)throw new Error("Attribute "+this.invalidParams.join(", ")+" is required")},e.prototype.isTaskValid=function(){return this.taskId&&this.taskId.length>0},e.prototype.isAppValid=function(){return!!this.appName||""===this.appName},e.prototype.onClick=function(){return J(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this.claimTask()];case 1:return t.sent(),[3,3];case 2:return e=t.sent(),this.error.emit(e),[3,3];case 3:return[2]}}))}))},e.prototype.claimTask=function(){return J(this,void 0,void 0,(function(){var e,t,r;return X(this,(function(i){switch(i.label){case 0:e=this.identityUserService.getCurrentUserInfo().username,i.label=1;case 1:return i.trys.push([1,3,,4]),[4,this.taskListService.claimTask(this.appName,this.taskId,e).toPromise()];case 2:return(t=i.sent())&&this.success.emit(t),[3,4];case 3:return r=i.sent(),this.error.emit(r),[3,4];case 4:return[2]}}))}))},e}();Dt.decorators=[{type:t.Directive,args:[{selector:"[adf-cloud-claim-task]"}]}],Dt.ctorParameters=function(){return[{type:fe},{type:r.IdentityUserService}]},Dt.propDecorators={taskId:[{type:t.Input}],appName:[{type:t.Input}],success:[{type:t.Output}],error:[{type:t.Output}],onClick:[{type:t.HostListener,args:["click"]}]};var St=function(){function e(e){this.taskListService=e,this.appName="",this.success=new t.EventEmitter,this.error=new t.EventEmitter,this.invalidParams=[]}return e.prototype.ngOnInit=function(){this.validateInputs()},e.prototype.validateInputs=function(){if(this.isTaskValid()||this.invalidParams.push("taskId"),this.isAppValid()||this.invalidParams.push("appName"),this.invalidParams.length)throw new Error("Attribute "+this.invalidParams.join(", ")+" is required")},e.prototype.isTaskValid=function(){return this.taskId&&this.taskId.length>0},e.prototype.isAppValid=function(){return!!this.appName||""===this.appName},e.prototype.onClick=function(){return J(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this.taskListService.unclaimTask(this.appName,this.taskId).toPromise()];case 1:return t.sent(),this.success.emit(this.taskId),[3,3];case 2:return e=t.sent(),this.error.emit(e),[3,3];case 3:return[2]}}))}))},e}();St.decorators=[{type:t.Directive,args:[{selector:"[adf-cloud-unclaim-task]"}]}],St.ctorParameters=function(){return[{type:fe}]},St.propDecorators={taskId:[{type:t.Input}],appName:[{type:t.Input}],success:[{type:t.Output}],error:[{type:t.Output}],onClick:[{type:t.HostListener,args:["click"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Tt=function(){};Tt.decorators=[{type:t.NgModule,args:[{declarations:[vt,Dt,St],exports:[vt,Dt,St]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Et=function(){function e(e,r){this.taskCloudService=e,this.formRenderingService=r,this.appName="",this.showTitle=!0,this.showRefreshButton=!1,this.showValidationIcon=!0,this.showCancelButton=!0,this.showCompleteButton=!0,this.readOnly=!1,this.formSaved=new t.EventEmitter,this.formCompleted=new t.EventEmitter,this.taskCompleted=new t.EventEmitter,this.taskClaimed=new t.EventEmitter,this.taskUnclaimed=new t.EventEmitter,this.cancelClick=new t.EventEmitter,this.error=new t.EventEmitter,this.formContentClicked=new t.EventEmitter,this.candidateUsers=[],this.candidateGroups=[],this.loading=!1,this.formRenderingService.setComponentTypeResolver("upload",(function(){return pt}),!0),this.formRenderingService.setComponentTypeResolver("dropdown",(function(){return tt}),!0),this.formRenderingService.setComponentTypeResolver("date",(function(){return et}),!0)}return e.prototype.ngOnInit=function(){""===this.appName&&this.taskId&&this.loadTask()},e.prototype.ngOnChanges=function(e){var t=e.appName;if(t&&t.currentValue!==t.previousValue&&this.taskId)this.loadTask();else{var r=e.taskId;r&&r.currentValue&&this.appName&&this.loadTask()}},e.prototype.loadTask=function(){var e=this;this.loading=!0,this.taskCloudService.getTaskById(this.appName,this.taskId).subscribe((function(t){e.taskDetails=t,e.loading=!1})),this.taskCloudService.getCandidateUsers(this.appName,this.taskId).subscribe((function(t){return e.candidateUsers=t||[]})),this.taskCloudService.getCandidateGroups(this.appName,this.taskId).subscribe((function(t){return e.candidateGroups=t||[]}))},e.prototype.hasForm=function(){return this.taskDetails&&!!this.taskDetails.formKey},e.prototype.canCompleteTask=function(){return this.showCompleteButton&&!this.readOnly&&this.taskCloudService.canCompleteTask(this.taskDetails)},e.prototype.canClaimTask=function(){return!this.readOnly&&this.taskCloudService.canClaimTask(this.taskDetails)},e.prototype.hasCandidateUsers=function(){return 0!==this.candidateUsers.length},e.prototype.hasCandidateGroups=function(){return 0!==this.candidateGroups.length},e.prototype.hasCandidateUsersOrGroups=function(){var e,t=!1;return"ASSIGNED"===(null===(e=this.taskDetails)||void 0===e?void 0:e.status)&&(t=this.hasCandidateUsers()||this.hasCandidateGroups()),t},e.prototype.canUnclaimTask=function(){return!this.readOnly&&this.taskCloudService.canUnclaimTask(this.taskDetails)},e.prototype.isReadOnly=function(){return this.readOnly||!this.taskCloudService.canCompleteTask(this.taskDetails)},e.prototype.onCompleteTask=function(){this.loadTask(),this.taskCompleted.emit(this.taskId)},e.prototype.onClaimTask=function(){this.loadTask(),this.taskClaimed.emit(this.taskId)},e.prototype.onUnclaimTask=function(){this.loadTask(),this.taskUnclaimed.emit(this.taskId)},e.prototype.onCancelClick=function(){this.cancelClick.emit(this.taskId)},e.prototype.onFormSaved=function(e){this.formSaved.emit(e)},e.prototype.onFormCompleted=function(e){this.formCompleted.emit(e),this.taskCompleted.emit(this.taskId)},e.prototype.onError=function(e){this.error.emit(e)},e.prototype.onFormContentClicked=function(e){this.formContentClicked.emit(e)},e}();Et.decorators=[{type:t.Component,args:[{selector:"adf-cloud-task-form",template:'<div *ngIf="!loading; else loadingTemplate">\n    <adf-cloud-form *ngIf="hasForm(); else withoutForm"\n                    [appName]="appName"\n                    [appVersion]="taskDetails.appVersion"\n                    [taskId]="taskId"\n                    [showTitle]="showTitle"\n                    [processInstanceId]="taskDetails.processInstanceId"\n                    [readOnly]="isReadOnly()"\n                    [showRefreshButton]="showRefreshButton"\n                    [showValidationIcon]="showValidationIcon"\n                    [showCompleteButton]="canCompleteTask()"\n                    [showSaveButton]="canCompleteTask()"\n                    (formSaved)="onFormSaved($event)"\n                    (formCompleted)="onFormCompleted($event)"\n                    (formError)="onError($event)"\n                    (error)="onError($event)"\n                    (formContentClicked)="onFormContentClicked($event)">\n        <adf-cloud-form-custom-outcomes>\n            <ng-template [ngTemplateOutlet]="taskFormCloudButtons">\n            </ng-template>\n        </adf-cloud-form-custom-outcomes>\n    </adf-cloud-form>\n\n    <ng-template #withoutForm>\n        <mat-card class="adf-task-form-container">\n            <mat-card-header *ngIf="showTitle">\n                <mat-card-title>\n                    <h4>\n                        <span class="adf-form-title">\n                            {{ taskDetails?.name || \'FORM.FORM_RENDERER.NAMELESS_TASK\' | translate }}\n                        </span>\n                    </h4>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-empty-content\n                    [icon]="\'description\'"\n                    [title]="\'ADF_CLOUD_TASK_FORM.EMPTY_FORM.TITLE\'"\n                    [subtitle]="\'ADF_CLOUD_TASK_FORM.EMPTY_FORM.SUBTITLE\'">\n                </adf-empty-content>\n            </mat-card-content>\n            <mat-card-actions class="adf-task-form-actions">\n                <ng-template [ngTemplateOutlet]="taskFormCloudButtons">\n                </ng-template>\n                <button mat-button *ngIf="canCompleteTask()" adf-cloud-complete-task [appName]="appName"\n                        [taskId]="taskId" (success)="onCompleteTask()" (error)="onError($event)" color="primary" id="adf-form-complete">\n                    {{\'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE\' | translate}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </ng-template>\n    <ng-template #taskFormCloudButtons>\n        <button mat-button *ngIf="showCancelButton" id="adf-cloud-cancel-task" (click)="onCancelClick()">\n            {{\'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL\' | translate}}\n        </button>\n        <button mat-button *ngIf="canClaimTask()" adf-cloud-claim-task [appName]="appName" [taskId]="taskId"\n                (success)="onClaimTask()" (error)="onError($event)">\n            {{\'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM\' | translate}}\n        </button>\n        <button mat-button *ngIf="hasCandidateUsersOrGroups()" adf-cloud-unclaim-task [appName]="appName" [taskId]="taskId"\n                (success)="onUnclaimTask()" (error)="onError($event)">\n            {{\'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM\' | translate}}\n        </button>\n    </ng-template>\n</div>\n\n<ng-template #loadingTemplate>\n    <div fxLayout="row" fxLayoutAlign="center stretch">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-template>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"]}]}],Et.ctorParameters=function(){return[{type:fe},{type:r.FormRenderingService}]},Et.propDecorators={appName:[{type:t.Input}],taskId:[{type:t.Input}],showTitle:[{type:t.Input}],showRefreshButton:[{type:t.Input}],showValidationIcon:[{type:t.Input}],showCancelButton:[{type:t.Input}],showCompleteButton:[{type:t.Input}],readOnly:[{type:t.Input}],formSaved:[{type:t.Output}],formCompleted:[{type:t.Output}],taskCompleted:[{type:t.Output}],taskClaimed:[{type:t.Output}],taskUnclaimed:[{type:t.Output}],cancelClick:[{type:t.Output}],error:[{type:t.Output}],formContentClicked:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ft=function(){};Ft.decorators=[{type:t.NgModule,args:[{imports:[r.CoreModule,A.CommonModule,$,mt,Tt,i.FlexLayoutModule],declarations:[Et],exports:[Et]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ct=function(){};Ct.decorators=[{type:t.NgModule,args:[{imports:[De,je,ht,gt,Tt,Ft],exports:[De,je,ht,gt,Tt,Ft]}]}];var It=function(){function e(e){this.dateRangeFilterService=new Se,e&&(this.id=e.id||Math.random().toString(36).substring(2,9),this.name=e.name||null,this.key=e.key||null,this.icon=e.icon||null,this.index=e.index||null,this.appName=e.appName||""===e.appName?e.appName:null,this.appVersion=e.appVersion||null,e.appVersionMultiple&&Array.isArray(e.appVersionMultiple)&&(this.appVersion=e.appVersionMultiple),this.processInstanceId=e.processInstanceId||null,this.processName=e.processName||null,this.initiator=e.initiator||null,this.status=e.status||null,this.sort=e.sort||null,this.order=e.order||null,this.processDefinitionId=e.processDefinitionId||null,this.processDefinitionName=e.processDefinitionName||null,this.processDefinitionKey=e.processDefinitionKey||null,this.lastModified=e.lastModified||null,this.lastModifiedTo=e.lastModifiedTo||null,this.lastModifiedFrom=e.lastModifiedFrom||null,this.startedDate=e.startedDate||null,this.startFrom=e._startFrom||null,this.startTo=e._startTo||null,this.completedDateType=e.completedDateType||null,this.startedDateType=e.startedDateType||null,this.suspendedDateType=e.suspendedDateType||null,this.completedFrom=e._completedFrom||null,this.completedTo=e._completedTo||null,this.completedDate=e.completedDate||null,this._suspendedFrom=e._suspendedFrom||null,this._suspendedTo=e._suspendedTo||null)}return Object.defineProperty(e.prototype,"completedFrom",{get:function(){return this.isDateRangeType(this.completedDateType)?this._completedFrom:this.getStartDate(this.completedDateType)},set:function(e){this._completedFrom=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"completedTo",{get:function(){return this.isDateRangeType(this.completedDateType)?this._completedTo:this.getEndDate(this.completedDateType)},set:function(e){this._completedTo=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"startFrom",{get:function(){return this.isDateRangeType(this.startedDateType)?this._startFrom:this.getStartDate(this.startedDateType)},set:function(e){this._startFrom=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"startTo",{get:function(){return this.isDateRangeType(this.startedDateType)?this._startTo:this.getEndDate(this.startedDateType)},set:function(e){this._startTo=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"suspendedFrom",{get:function(){return this.isDateRangeType(this.suspendedDateType)?this._suspendedFrom:this.getStartDate(this.suspendedDateType)},set:function(e){this._suspendedFrom=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"suspendedTo",{get:function(){return this.isDateRangeType(this.suspendedDateType)?this._suspendedTo:this.getEndDate(this.suspendedDateType)},set:function(e){this._suspendedTo=e},enumerable:!1,configurable:!0}),e.prototype.getStartDate=function(e){return this.dateRangeFilterService.getDateRange(e).startDate},e.prototype.getEndDate=function(e){return this.dateRangeFilterService.getDateRange(e).endDate},e.prototype.isDateRangeType=function(e){return!!this.dateRangeFilterService.isDateRangeType(e)},e}(),At=function(){function e(e,t){this.preferenceService=e,this.identityUserService=t,this.filtersSubject=new _.BehaviorSubject([]),this.filters$=this.filtersSubject.asObservable()}return e.prototype.readQueryParams=function(e){var t=Object.assign({},e);return e.hasOwnProperty("appVersion")&&e.appVersion&&"string"==typeof e.appVersion&&(t.appVersion=e.appVersion.split(",").map((function(e){return parseInt(e,10)}))),e.hasOwnProperty("lastModifiedFrom")&&(t.lastModifiedFrom=new Date(parseInt(e.lastModifiedFrom,10))),e.hasOwnProperty("lastModifiedTo")&&(t.lastModifiedTo=new Date(parseInt(e.lastModifiedTo,10))),t},e.prototype.writeQueryParams=function(e,t,r,i){var n,o;e=e||{};var a={appName:r||e.appName,id:i||e.id};try{for(var s=Z(t),l=s.next();!l.done;l=s.next()){var p=l.value;if("appVersionMultiple"===p){var c=e.appVersion;Array.isArray(c)&&c.length>0&&(a.appVersion=c.join(","))}else"lastModified"===p?(e.lastModifiedFrom&&(a.lastModifiedFrom=e.lastModifiedFrom.valueOf()),e.lastModifiedTo&&(a.lastModifiedTo=e.lastModifiedTo.valueOf())):e.hasOwnProperty(p)&&(a[p]=e[p])}}catch(e){n={error:e}}finally{try{l&&!l.done&&(o=s.return)&&o.call(s)}finally{if(n)throw n.error}}return a},e.prototype.createDefaultFilters=function(e){var t=this,r=this.prepareKey(e);this.preferenceService.getPreferences(e,r).pipe(k.switchMap((function(i){var n=i&&i.list&&i.list.entries?i.list.entries:[];return t.hasPreferences(n)&&t.hasProcessFilters(n,r)?_.of(t.findFiltersByKeyInPreferences(n,r)):t.createProcessFilters(e,r,t.defaultProcessFilters(e))})),k.catchError((function(e){return t.handleProcessError(e)}))).subscribe((function(e){t.addFiltersToStream(e)}))},e.prototype.getProcessFilters=function(e){return this.createDefaultFilters(e),this.filters$},e.prototype.getFilterById=function(e,t){var r=this,i=this.prepareKey(e);return this.getProcessFiltersByKey(e,i).pipe(k.switchMap((function(t){return t&&0===t.length?r.createProcessFilters(e,i,r.defaultProcessFilters(e)):_.of(t)})),k.map((function(e){return e.filter((function(e){return e.id===t}))[0]})),k.catchError((function(e){return r.handleProcessError(e)})))},e.prototype.addFilter=function(e){var t=this,r=e.appName,i=e.name,n=this.prepareKey(r);return this.getProcessFiltersByKey(r,n).pipe(k.switchMap((function(o){if(o&&0===o.length)return t.createProcessFilters(r,n,[e]);var a=o.findIndex((function(e){return e.name===i}));return a>=0&&o.splice(a,1),o.push(e),t.preferenceService.updatePreference(r,n,o)})),k.map((function(e){return t.addFiltersToStream(e),e})),k.catchError((function(e){return t.handleProcessError(e)})))},e.prototype.updateFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getProcessFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){if(i&&0===i.length)return t.createProcessFilters(e.appName,r,[e]);var n=i.findIndex((function(t){return t.id===e.id}));return i[n]=e,t.updateProcessFilters(e.appName,r,i)})),k.map((function(e){return t.addFiltersToStream(e),e})),k.catchError((function(e){return t.handleProcessError(e)})))},e.prototype.deleteFilter=function(e){var t=this,r=this.prepareKey(e.appName);return this.getProcessFiltersByKey(e.appName,r).pipe(k.switchMap((function(i){return i&&i.length>0?(i=i.filter((function(t){return t.id!==e.id})),t.updateProcessFilters(e.appName,r,i)):_.of([])})),k.map((function(e){return t.addFiltersToStream(e),e})),k.catchError((function(e){return t.handleProcessError(e)})))},e.prototype.isDefaultFilter=function(e){return-1!==this.defaultProcessFilters().findIndex((function(t){return e===t.name}))},e.prototype.hasPreferences=function(e){return e&&e.length>0},e.prototype.hasProcessFilters=function(e,t){var r=e.find((function(e){return e.entry.key===t}));return!(!r||!r.entry)&&JSON.parse(r.entry.value).length>0},e.prototype.createProcessFilters=function(e,t,r){return this.preferenceService.createPreference(e,t,r)},e.prototype.getProcessFiltersByKey=function(e,t){return this.preferenceService.getPreferenceByKey(e,t)},e.prototype.updateProcessFilters=function(e,t,r){return this.preferenceService.updatePreference(e,t,r)},e.prototype.prepareKey=function(e){return"process-filters-"+e+"-"+this.identityUserService.getCurrentUserInfo().username},e.prototype.findFiltersByKeyInPreferences=function(e,t){var r=e.find((function(e){return e.entry.key===t}));return r&&r.entry?JSON.parse(r.entry.value):[]},e.prototype.addFiltersToStream=function(e){this.filtersSubject.next(e)},e.prototype.handleProcessError=function(e){return _.throwError(e||"Server error")},e.prototype.defaultProcessFilters=function(e){return[new It({name:"ADF_CLOUD_PROCESS_FILTERS.RUNNING_PROCESSES",icon:"inbox",key:"running-processes",appName:e,sort:"startDate",status:"RUNNING",order:"DESC"}),new It({name:"ADF_CLOUD_PROCESS_FILTERS.COMPLETED_PROCESSES",icon:"done",key:"completed-processes",appName:e,sort:"startDate",status:"COMPLETED",order:"DESC"}),new It({name:"ADF_CLOUD_PROCESS_FILTERS.ALL_PROCESSES",key:"all-processes",icon:"adjust",appName:e,sort:"startDate",status:"",order:"DESC"})]},e}();At.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new At(t.ɵɵinject(Fe),t.ɵɵinject(r.IdentityUserService))},token:At,providedIn:"root"}),At.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],At.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[Fe]}]},{type:r.IdentityUserService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var _t=function(){function e(e,r){this.processFilterCloudService=e,this.translationService=r,this.appName="",this.showIcons=!1,this.filterSelected=new t.EventEmitter,this.filterClicked=new t.EventEmitter,this.success=new t.EventEmitter,this.error=new t.EventEmitter,this.filters=[],this.onDestroy$=new _.Subject}return e.prototype.ngOnInit=function(){""===this.appName&&this.getFilters(this.appName)},e.prototype.ngOnChanges=function(e){var t=e.appName,r=e.filterParam;t&&t.currentValue?this.getFilters(t.currentValue):r&&r.currentValue!==r.previousValue&&this.selectFilterAndEmit(r.currentValue)},e.prototype.getFilters=function(e){var t=this;this.filters$=this.processFilterCloudService.getProcessFilters(e),this.filters$.pipe(k.takeUntil(this.onDestroy$)).subscribe((function(e){t.resetFilter(),t.filters=e||[],t.selectFilterAndEmit(t.filterParam),t.success.emit(e)}),(function(e){t.error.emit(e)}))},e.prototype.selectFilter=function(e){var t=this;e&&(this.currentFilter=this.filters.find((function(r,i){return e.id===r.id||e.name&&t.checkFilterNamesEquality(e.name,r.name)||e.key&&e.key===r.key||e.index===i})))},e.prototype.checkFilterNamesEquality=function(e,t){var r=this.translationService.instant(e),i=this.translationService.instant(t);return r.toLocaleLowerCase()===i.toLocaleLowerCase()},e.prototype.selectFilterAndEmit=function(e){e?(this.selectFilter(e),this.filterSelected.emit(this.currentFilter)):this.currentFilter=void 0},e.prototype.selectFilterById=function(e){this.selectFilterAndEmit({id:e})},e.prototype.onFilterClick=function(e){e?(this.selectFilter(e),this.filterClicked.emit(this.currentFilter)):this.currentFilter=void 0},e.prototype.selectDefaultProcessFilter=function(){this.isFilterListEmpty()||(this.currentFilter=this.filters[0])},e.prototype.getCurrentFilter=function(){return this.currentFilter},e.prototype.isFilterListEmpty=function(){return void 0===this.filters||this.filters&&0===this.filters.length},e.prototype.resetFilter=function(){this.filters=[],this.currentFilter=void 0},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e.prototype.isActiveFilter=function(e){return this.currentFilter.name===e.name},e}();_t.decorators=[{type:t.Component,args:[{selector:"adf-cloud-process-filters",template:'\n<ng-container *ngIf="filters$ | async as filterList; else loading">\n    <div *ngFor="let filter of filterList" class="adf-filters__entry" [class.adf-active]="currentFilter === filter">\n        <button (click)="onFilterClick(filter)"\n          [attr.aria-label]="filter.name | translate"\n          [id]="filter.id"\n          [attr.data-automation-id]="filter.key + \'_filter\'"\n          mat-button\n          class="adf-filter-action-button adf-full-width" fxLayout="row" fxLayoutAlign="space-between center">\n          <adf-icon data-automation-id="adf-filter-icon" *ngIf="showIcons" [value]="filter.icon"></adf-icon>\n          <span data-automation-id="adf-filter-label" class="adf-filter-action-button__label">{{ filter.name | translate }}</span>\n        </button>\n    </div>\n</ng-container>\n<ng-template #loading>\n    <ng-container>\n        <div class="adf-app-list-spinner">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-filters__entry{cursor:pointer;font-size:14px!important;font-weight:700;height:24px;opacity:1;padding:12px 0!important;width:100%}.adf-filters__entry .adf-full-width{display:flex;width:100%}.adf-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-filters__entry.adf-active,.adf-filters__entry:hover{color:var(--theme-primary-color);opacity:1}"]}]}],_t.ctorParameters=function(){return[{type:At},{type:r.TranslationService}]},_t.propDecorators={appName:[{type:t.Input}],filterParam:[{type:t.Input}],showIcons:[{type:t.Input}],filterSelected:[{type:t.Output}],filterClicked:[{type:t.Output}],success:[{type:t.Output}],error:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var kt=function(){function e(e,t,r){this.fb=e,this.dialogRef=t,this.data=r,this.defaultIcon="inbox"}return e.prototype.ngOnInit=function(){this.filterForm=this.fb.group({name:[this.data.name,P.Validators.required]})},e.prototype.onSaveClick=function(){this.dialogRef.close({action:e.ACTION_SAVE,icon:this.defaultIcon,name:this.nameController.value})},e.prototype.onCancelClick=function(){this.dialogRef.close()},Object.defineProperty(e.prototype,"nameController",{get:function(){return this.filterForm.get("name")},enumerable:!1,configurable:!0}),e.prototype.isValid=function(){return this.filterForm.valid},e}();kt.ACTION_SAVE="SAVE",kt.decorators=[{type:t.Component,args:[{selector:"adf-cloud-process-filter-dialog-cloud",template:'<div class="adf-process-filter-dialog">\n    <span mat-dialog-title id="adf-process-filter-dialog-title">\n         {{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.DIALOG.TITLE\' | translate}}\n    </span>\n    <mat-card>\n        <mat-card-content>\n        <form [formGroup]="filterForm">\n            <mat-form-field fxFlex [floatLabel]="\'auto\'">\n                <input matInput placeholder="{{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.FILTER_NAME\' | translate }}" formControlName="name" id="adf-filter-name-id">\n            </mat-form-field>\n        </form>\n        </mat-card-content>\n        <mat-card-actions fxLayout="row" fxLayoutAlign="end end">\n            <button mat-button (click)="onSaveClick()" id="adf-save-button-id" [disabled]="!isValid()">\n                {{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.DIALOG.SAVE\' | translate}}\n            </button>\n            <button mat-button (click)="onCancelClick()" id="adf-cancel-button-id">\n               {{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.DIALOG.CANCEL\' | translate}}\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n',styles:[".adf-process-filter-dialog .mat-card,.adf-process-filter-dialog .mat-card-content{box-shadow:none;padding:0}"]}]}],kt.ctorParameters=function(){return[{type:P.FormBuilder},{type:u.MatDialogRef},{type:void 0,decorators:[{type:t.Inject,args:[u.MAT_DIALOG_DATA]}]}]};var Pt=function(e){function t(t,r,i){var n=e.call(this,t,r)||this;return n.logService=i,n.dataChangesDetected=new _.Subject,n}return Q(t,e),t.prototype.getProcessInstanceById=function(e,t){var r=this;if(e&&t){var i=this.getBasePath(e)+"/query/v1/process-instances/"+t;return this.get(i).pipe(k.map((function(e){return r.dataChangesDetected.next(e.entry),e.entry})))}return this.logService.error("AppName and ProcessInstanceId are mandatory for querying a process"),_.throwError("AppName/ProcessInstanceId not configured")},t.prototype.getProcessDefinitions=function(e){if(e||""===e){var t=this.getBasePath(e)+"/rb/v1/process-definitions";return this.get(t).pipe(k.map((function(e){return e.list.entries.map((function(e){return new pe(e.entry)}))})))}return this.logService.error("AppName is mandatory for querying task"),_.throwError("AppName not configured")},t.prototype.getApplicationVersions=function(e){var t=this;if(e){var r=this.getBasePath(e)+"/query/v1/applications";return this.get(r).pipe(k.map((function(e){return e.list.entries})),k.catchError((function(e){return t.handleError(e)})))}return this.logService.error("AppName is mandatory for querying the versions of an application"),_.throwError("AppName not configured")},t.prototype.cancelProcess=function(e,t){var r=this;if(e&&t){var i=this.getBasePath(e)+"/rb/v1/process-instances/"+t;return this.delete(i).pipe(k.map((function(e){return r.dataChangesDetected.next(e.entry),e.entry})))}return this.logService.error("App name and Process id are mandatory for deleting a process"),_.throwError("App name and process id not configured")},t.prototype.handleError=function(e){return this.logService.error(e),_.throwError(e||"Server error")},t}(ie);Pt.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Pt(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(r.LogService))},token:Pt,providedIn:"root"}),Pt.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Pt.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:r.LogService}]};var bt=function(){function i(e,r,n,o,a,s,l,p){this.formBuilder=e,this.dialog=r,this.dateAdapter=n,this.userPreferencesService=o,this.translateService=a,this.processFilterCloudService=s,this.appsProcessCloudService=l,this.processCloudService=p,this.DATE_FORMAT="DD/MM/YYYY",this.appName="",this.role="",this.filterProperties=i.DEFAULT_PROCESS_FILTER_PROPERTIES,this.sortProperties=i.DEFAULT_SORT_PROPERTIES,this.actions=i.DEFAULT_ACTIONS,this.showFilterActions=!0,this.showTitle=!0,this.showProcessFilterName=!0,this.filterChange=new t.EventEmitter,this.action=new t.EventEmitter,this.filterHasBeenChanged=!1,this.status=[{value:"",label:"ADF_CLOUD_PROCESS_FILTERS.STATUS.ALL"},{value:"RUNNING",label:"ADF_CLOUD_PROCESS_FILTERS.STATUS.RUNNING"},{value:"SUSPENDED",label:"ADF_CLOUD_PROCESS_FILTERS.STATUS.SUSPENDED"},{value:"CANCELLED",label:"ADF_CLOUD_PROCESS_FILTERS.STATUS.CANCELLED"},{value:"COMPLETED",label:"ADF_CLOUD_PROCESS_FILTERS.STATUS.COMPLETED"}],this.directions=[{value:"ASC",label:"ADF_CLOUD_PROCESS_FILTERS.DIRECTION.ASCENDING"},{value:"DESC",label:"ADF_CLOUD_PROCESS_FILTERS.DIRECTION.DESCENDING"}],this.actionDisabledForDefault=[i.ACTION_SAVE,i.ACTION_DELETE],this.applicationNames=[],this.allProcessDefinitionNamesOption={label:"ADF_CLOUD_PROCESS_FILTERS.STATUS.ALL",value:""},this.processDefinitionNames=[],this.processFilterProperties=[],this.processFilterActions=[],this.toggleFilterActions=!1,this.appVersionOptions=[],this.initiatorOptions=[],this.onDestroy$=new _.Subject,this.isLoading=!1}return Object.defineProperty(i.prototype,"processFilter",{get:function(){return this._filter},set:function(e){var t=this.isFilterChanged(this._filter,e);this._filter=e,(null==e?void 0:e.appName)&&(this.appName=e.appName),(null==e?void 0:e.id)&&(this.id=e.id),this.processFilterProperties=this.createAndFilterProperties(),this.processFilterActions=this.createAndFilterActions(),this.buildForm(this.processFilterProperties),t&&this.filterChange.emit(e)},enumerable:!1,configurable:!0}),i.prototype.ngOnInit=function(){var e=this;this.userPreferencesService.select(r.UserPreferenceValues.Locale).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){return e.dateAdapter.setLocale(t)}))},i.prototype.ngOnChanges=function(e){var t=e.id;t&&t.currentValue!==t.previousValue&&this.retrieveProcessFilterAndBuildForm()},i.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},i.prototype.buildForm=function(e){this.editProcessFilterForm=this.formBuilder.group(this.getFormControlsConfig(e)),this.onFilterChange()},i.prototype.getFormControlsConfig=function(e){var t=this;return e.map((function(e){var r;return e.attributes?t.getAttributesControlConfig(e):((r={})[e.key]=e.value,r)})).reduce((function(e,t){return Object.assign(e,t)}),{})},i.prototype.getAttributesControlConfig=function(e){return Object.values(e.attributes).reduce((function(t,r){return t[r]=e.value[r],t}),{})},i.prototype.retrieveProcessFilterAndBuildForm=function(){var e=this;this.isLoading=!0,this.processFilterCloudService.getFilterById(this.appName,this.id).pipe(k.finalize((function(){return e.isLoading=!1}))).subscribe((function(t){e.filterHasBeenChanged=!1,e.processFilter=new It(Object.assign({},t||{},e.processFilter||{}))}))},i.prototype.onFilterChange=function(){var e=this;this.filterChangeSub&&(this.filterChangeSub.unsubscribe(),this.filterChangeSub=null),this.filterChangeSub=this.editProcessFilterForm.valueChanges.pipe(k.debounceTime(500),k.filter((function(){return e.isFormValid()})),k.takeUntil(this.onDestroy$)).subscribe((function(t){e.setLastModifiedToFilter(t);var r=new It(Object.assign({},e.processFilter,t)),i=!e.compareFilters(r,e.processFilter);e.filterHasBeenChanged=i,i&&(e._filter=r,e.filterChange.emit(r))}))},i.prototype.createAndFilterProperties=function(){var e=this;this.checkMandatoryFilterProperties(),this.filterProperties.includes("appName")&&this.getRunningApplications(),this.filterProperties.includes("processDefinitionName")&&this.getProcessDefinitions(),this.filterProperties.includes("appVersionMultiple")&&this.getAppVersionOptions(),this.filterProperties.includes("initiator")&&(this.initiatorOptions=this.processFilter.initiator?this.processFilter.initiator.split(",").map((function(e){return Object.assign({},{username:e})})):[]);var t=this.createProcessFilterProperties(this.processFilter).filter((function(t){return e.isValidProperty(e.filterProperties,t.key)}));return this.filterProperties.includes("sort")||(t=t.filter((function(e){return"order"!==e.key}))),this.filterProperties.includes("lastModified")&&(t=te(t,this.createLastModifiedProperty(this.processFilter))),t},i.prototype.checkMandatoryFilterProperties=function(){void 0!==this.filterProperties&&0!==this.filterProperties.length||(this.filterProperties=i.DEFAULT_PROCESS_FILTER_PROPERTIES)},i.prototype.isValidProperty=function(e,t){return!e||e.indexOf(t)>=0},Object.defineProperty(i.prototype,"createSortProperties",{get:function(){var e=this;return this.checkMandatorySortProperties(),this.createProcessSortProperties().filter((function(t){return e.isValidProperty(e.sortProperties,t.key)}))},enumerable:!1,configurable:!0}),i.prototype.getAppVersionOptions=function(){var e=this;this.appVersionOptions=[],this.processCloudService.getApplicationVersions(this.appName).subscribe((function(t){t.forEach((function(t){e.appVersionOptions.push({label:t.entry.version,value:t.entry.version})}))}))},i.prototype.checkMandatorySortProperties=function(){void 0!==this.sortProperties&&0!==this.sortProperties.length||(this.sortProperties=i.DEFAULT_SORT_PROPERTIES)},i.prototype.createAndFilterActions=function(){var e=this;return this.checkMandatoryActions(),this.createFilterActions().filter((function(t){return e.isValidAction(e.actions,t)}))},i.prototype.checkMandatoryActions=function(){void 0!==this.actions&&0!==this.actions.length||(this.actions=i.DEFAULT_ACTIONS)},i.prototype.isValidAction=function(e,t){return!e||e.indexOf(t.actionType)>=0},i.prototype.isFormValid=function(){return this.editProcessFilterForm.valid},i.prototype.getPropertyController=function(e){return this.editProcessFilterForm.get(e.key)},i.prototype.onDateChanged=function(e,t){if(e){var r=this.getPropertyController(t);e.isValid()?(r.setValue(e),r.setErrors(null)):r.setErrors({invalid:!0})}},i.prototype.onDateTypeChange=function(e,t){this.editProcessFilterForm.get(t.attributes.dateType).setValue(e)},i.prototype.onDateRangeFilterChanged=function(t,r){var i,n;this.editProcessFilterForm.get(null===(i=r.attributes)||void 0===i?void 0:i.from).setValue(t.startDate?t.startDate:null),this.editProcessFilterForm.get(null===(n=r.attributes)||void 0===n?void 0:n.to).setValue(t.endDate?t.endDate:null),this.editProcessFilterForm.get(r.attributes.dateType).setValue(e.DateCloudFilterType.RANGE)},i.prototype.onChangedUser=function(e,t){this.getPropertyController(t).setValue(e.map((function(e){return e.username})).join(","))},i.prototype.hasError=function(e){var t=this.getPropertyController(e);return t.errors&&t.errors.invalid},i.prototype.compareFilters=function(e,t){return JSON.stringify(e).toLowerCase()===JSON.stringify(t).toLowerCase()},i.prototype.getRunningApplications=function(){var e=this;this.applicationNames=[],this.appsProcessCloudService.getDeployedApplicationsByStatus("RUNNING",this.role).subscribe((function(t){t&&t.length>0&&t.map((function(t){e.applicationNames.push({label:t.name,value:t.name})}))}))},i.prototype.getProcessDefinitions=function(){var e=this;this.processDefinitionNames=[],this.processCloudService.getProcessDefinitions(this.appName).subscribe((function(t){t&&t.length>0&&(e.processDefinitionNames.push(e.allProcessDefinitionNamesOption),t.map((function(t){e.processDefinitionNames.push({label:t.name,value:t.name})})))}))},i.prototype.executeFilterActions=function(e){e.actionType===i.ACTION_SAVE?this.save(e):e.actionType===i.ACTION_SAVE_AS?this.saveAs(e):e.actionType===i.ACTION_DELETE&&this.delete(e)},i.prototype.save=function(e){var t=this;this.processFilterCloudService.updateFilter(this.processFilter).subscribe((function(){e.filter=t.processFilter,t.filterHasBeenChanged=!1,t.action.emit(e)}))},i.prototype.delete=function(e){var t=this;this.processFilterCloudService.deleteFilter(this.processFilter).pipe(k.filter((function(r){return e.filter=t.processFilter,t.action.emit(e),0===r.length})),k.switchMap((function(){return t.restoreDefaultProcessFilters()}))).subscribe((function(){}))},i.prototype.saveAs=function(e){var t=this;this.dialog.open(kt,{data:{name:this.translateService.instant(this.processFilter.name)},height:"auto",minWidth:"30%"}).afterClosed().subscribe((function(r){if(r&&r.action===kt.ACTION_SAVE){var i=Math.random().toString(36).substr(2,9),n=t.getSanitizeFilterName(r.name),o={name:r.name,icon:r.icon,id:i,key:"custom-"+n},a=Object.assign({},t.processFilter,o);t.processFilterCloudService.addFilter(a).subscribe((function(){e.filter=a,t.filterHasBeenChanged=!1,t.action.emit(e)}))}}))},i.prototype.getSanitizeFilterName=function(e){return this.replaceSpaceWithHyphen(e.trim()).toLowerCase()},i.prototype.replaceSpaceWithHyphen=function(e){var t=new RegExp(" ","g");return e.replace(t,"-")},i.prototype.restoreDefaultProcessFilters=function(){return this.processFilterCloudService.getProcessFilters(this.appName)},i.prototype.onExpand=function(){this.toggleFilterActions=!0},i.prototype.onClose=function(){this.toggleFilterActions=!1},i.prototype.isDisabledAction=function(e){return!(!this.processFilterCloudService.isDefaultFilter(this.processFilter.name)||!this.actionDisabledForDefault.includes(e.actionType))||this.hasFilterChanged(e)},i.prototype.hasFilterChanged=function(e){return(e.actionType===i.ACTION_SAVE||e.actionType===i.ACTION_SAVE_AS)&&!this.filterHasBeenChanged},i.prototype.setLastModifiedToFilter=function(e){if(e.lastModifiedTo&&Date.parse(e.lastModifiedTo.toString())){var t=b(e.lastModifiedTo);t.set({hour:23,minute:59,second:59}),e.lastModifiedTo=t.toDate()}},i.prototype.createFilterActions=function(){return[{actionType:i.ACTION_SAVE,icon:"adf:save",tooltip:"ADF_CLOUD_EDIT_PROCESS_FILTER.TOOL_TIP.SAVE"},{actionType:i.ACTION_SAVE_AS,icon:"adf:save-as",tooltip:"ADF_CLOUD_EDIT_PROCESS_FILTER.TOOL_TIP.SAVE_AS"},{actionType:i.ACTION_DELETE,icon:"delete",tooltip:"ADF_CLOUD_EDIT_PROCESS_FILTER.TOOL_TIP.DELETE"}]},i.prototype.createLastModifiedProperty=function(e){var t,r;return e.lastModifiedFrom&&(t=b(e.lastModifiedFrom)),e.lastModifiedTo&&(r=b(e.lastModifiedTo)),[{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.LAST_MODIFIED_DATE_FORM",type:"date",key:"lastModifiedFrom",value:t},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.LAST_MODIFIED_TO",type:"date",key:"lastModifiedTo",value:r}]},i.prototype.createProcessSortProperties=function(){return[{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.ID",key:"id",value:"id"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_NAME",key:"name",value:"name"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.START_DATE",key:"startDate",value:"startDate"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STATUS",key:"status",value:"status"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STARTED_BY",key:"initiator",value:"initiator"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_NAME",key:"appName",value:"appName"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_VERSION",key:"appVersion",value:"appVersion"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_INS_ID",key:"processInstanceId",value:"processInstanceId"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_ID",key:"processDefinitionId",value:"processDefinitionId"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_NAME",key:"processDefinitionName",value:"processDefinitionName"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_KEY",key:"processDefinitionKey",value:"processDefinitionKey"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.LAST_MODIFIED",key:"lastModified",value:"lastModified"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.BUSINESS_KEY",key:"businessKey",value:"businessKey"}]},i.prototype.isFilterChanged=function(e,t){return JSON.stringify(this.processFilterCloudService.writeQueryParams(e||{},this.filterProperties))!==JSON.stringify(this.processFilterCloudService.writeQueryParams(t||{},this.filterProperties))},i.prototype.createProcessFilterProperties=function(e){var t=[];return e.appVersion&&t.push(Array.isArray(e.appVersion)?e.appVersion.map((function(e){return e.toString()})):""+e.appVersion),[{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_NAME",type:"select",key:"appName",value:e.appName||"",options:this.applicationNames},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_VERSION",type:"number",key:"appVersion",value:e.appVersion},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_VERSION",type:"multi-select",key:"appVersionMultiple",value:t,options:this.appVersionOptions},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_INS_ID",type:"text",key:"processInstanceId",value:e.processInstanceId||""},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_NAME",type:"text",key:"processName",value:e.processName||""},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_NAME",type:"select",key:"processDefinitionName",value:e.processDefinitionName||"",options:this.processDefinitionNames},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STATUS",type:"select",key:"status",value:e.status||this.status[0].value,options:this.status},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_ID",type:"text",key:"processDefinitionId",value:e.processDefinitionId||""},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_KEY",type:"text",key:"processDefinitionKey",value:e.processDefinitionKey||""},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.SORT",type:"select",key:"sort",value:e.sort||this.createSortProperties[0].value,options:this.createSortProperties},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DIRECTION",type:"select",key:"order",value:e.order||this.directions[0].value,options:this.directions},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.COMPLETED_DATE",type:"date",key:"completedDate",value:e.completedDate||!1},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STARTED_BY",type:"people",key:"initiator",value:e.initiator,selectionMode:"multiple"},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.COMPLETED_DATE",type:"date-range",key:"completedDateRange",attributes:{dateType:"completedDateType",from:"_completedFrom",to:"_completedTo"},value:{completedDateType:e.completedDateType||null,_completedFrom:e.completedFrom||null,_completedTo:e.completedTo||null}},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STARTED_DATE",type:"date-range",key:"startedDateRange",attributes:{dateType:"startedDateType",from:"_startFrom",to:"_startTo"},value:{startedDateType:e.startedDateType||null,_startFrom:e.startFrom||null,_startTo:e.startTo||null}},{label:"ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.SUSPENDED_DATE",type:"date-range",key:"suspendedDateRange",attributes:{dateType:"suspendedDateType",from:"_suspendedFrom",to:"_suspendedTo"},value:{suspendedDateType:e.suspendedDateType||null,_suspendedFrom:e.suspendedFrom||null,_suspendedTo:e.suspendedTo||null}}]},i}();bt.ACTION_SAVE="save",bt.ACTION_SAVE_AS="saveAs",bt.ACTION_DELETE="delete",bt.DEFAULT_PROCESS_FILTER_PROPERTIES=["status","sort","order","lastModified"],bt.DEFAULT_SORT_PROPERTIES=["id","name","status","startDate"],bt.DEFAULT_ACTIONS=["save","saveAs","delete"],bt.decorators=[{type:t.Component,args:[{selector:"adf-cloud-edit-process-filter",template:'<mat-accordion [hideToggle]="isLoading">\n    <mat-expansion-panel (afterExpand)="onExpand()" (closed)="onClose()">\n        <mat-expansion-panel-header *ngIf="processFilter" id="adf-edit-process-filter-expansion-header">\n            <ng-container *ngIf="!isLoading; else loadingTemplate">\n                <mat-panel-title *ngIf="showProcessFilterName" fxLayoutAlign="space-between center" id="adf-edit-process-filter-title-id">{{processFilter.name | translate}}</mat-panel-title>\n                <mat-panel-description fxLayoutAlign="space-between center" id="adf-edit-process-filter-sub-title-id">\n                    <span *ngIf="showTitle"> {{ \'ADF_CLOUD_EDIT_PROCESS_FILTER.TITLE\' | translate}}</span>\n                    <div *ngIf="showFilterActions" class="adf-cloud-edit-process-filter-actions">\n                        <ng-container *ngIf="toggleFilterActions">\n                            <button *ngFor="let filterAction of processFilterActions" mat-icon-button matTooltip="{{ filterAction.tooltip | translate}}" [attr.data-automation-id]="\'adf-filter-action-\' + filterAction.actionType" [disabled]="isDisabledAction(filterAction)" (click)="executeFilterActions(filterAction)">\n                                <adf-icon [value]="filterAction.icon"></adf-icon>\n                            </button>\n                        </ng-container>\n                    </div>\n                </mat-panel-description>\n            </ng-container>\n            <ng-template #loadingTemplate>\n                <div class="adf-cloud-edit-process-filter-loading-margin">\n                    <mat-spinner [diameter]="30"></mat-spinner>\n                </div>\n            </ng-template>\n        </mat-expansion-panel-header>\n        <ng-container *ngIf="!isLoading">\n            <form [formGroup]="editProcessFilterForm" *ngIf="editProcessFilterForm">\n                <div fxLayout="row wrap" fxLayout.xs="column" fxLayoutGap="10px" fxLayoutAlign="start center">\n                    <ng-container *ngFor="let processFilterProperty of processFilterProperties">\n                        <mat-form-field [floatLabel]="\'auto\'" fxFlex="23%" *ngIf="processFilterProperty.type === \'select\'" [attr.data-automation-id]="processFilterProperty.key">\n                            <mat-select\n                                placeholder="{{processFilterProperty.label | translate}}"\n                                [formControlName]="processFilterProperty.key"\n                                [attr.data-automation-id]="\'adf-cloud-edit-process-property-\' + processFilterProperty.key">\n                                <mat-option\n                                    *ngFor="let propertyOption of processFilterProperty.options"\n                                    [value]="propertyOption.value"\n                                    [attr.data-automation-id]="\'adf-cloud-edit-process-property-options-\' + processFilterProperty.key"\n                                >{{ propertyOption.label | translate }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]="\'auto\'" fxFlex="23%" *ngIf="processFilterProperty.type === \'multi-select\'" [attr.data-automation-id]="processFilterProperty.key">\n                            <mat-select\n                                placeholder="{{processFilterProperty.label | translate}}"\n                                [formControlName]="processFilterProperty.key"\n                                [attr.data-automation-id]="\'adf-cloud-edit-process-property-\' + processFilterProperty.key"\n                                [multiple]="true">\n                                <mat-option *ngFor="let propertyOption of processFilterProperty.options" [value]="propertyOption.value" [attr.data-automation-id]="\'adf-cloud-edit-process-property-options-\' + processFilterProperty.key">\n                                    {{ propertyOption.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]="\'auto\'" fxFlex="23%" *ngIf="processFilterProperty.type === \'text\'" [attr.data-automation-id]="processFilterProperty.key">\n                            <input matInput\n                                [formControlName]="processFilterProperty.key"\n                                type="text"\n                                placeholder="{{processFilterProperty.label | translate}}"\n                                [attr.data-automation-id]="\'adf-cloud-edit-process-property-\' + processFilterProperty.key"/>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]="\'auto\'" fxFlex="23%" *ngIf="processFilterProperty.type === \'number\'" [attr.data-automation-id]="processFilterProperty.key">\n                            <input matInput\n                                [formControlName]="processFilterProperty.key"\n                                type="number" min="0"\n                                placeholder="{{processFilterProperty.label | translate}}"\n                                [attr.data-automation-id]="\'adf-cloud-edit-process-property-\' + processFilterProperty.key"/>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]="\'auto\'" fxFlex="23%" *ngIf="processFilterProperty.type === \'date\'" [attr.data-automation-id]="processFilterProperty.key">\n                            <mat-label>{{processFilterProperty.label | translate}}</mat-label>\n                            <input\n                                matInput\n                                [formControlName]="processFilterProperty.key"\n                                (keyup)="onDateChanged($any($event).srcElement.value, processFilterProperty)"\n                                (dateChange)="onDateChanged($event.value, processFilterProperty)"\n                                [matDatepicker]="dateController"\n                                placeholder="{{processFilterProperty.label | translate}}"\n                                [attr.data-automation-id]="\'adf-cloud-edit-process-property-\' + processFilterProperty.key">\n                        <mat-datepicker-toggle matSuffix [for]="dateController" [attr.data-automation-id]="\'adf-cloud-edit-process-property-date-toggle-\' + processFilterProperty.key"></mat-datepicker-toggle>\n                        <mat-datepicker #dateController [attr.data-automation-id]="\'adf-cloud-edit-process-property-date-picker-\' + processFilterProperty.key"></mat-datepicker>\n                        <div class="adf-edit-process-filter-date-error-container">\n                            <div *ngIf="hasError(processFilterProperty)">\n                                <div class="adf-error-text">{{\'ADF_CLOUD_EDIT_PROCESS_FILTER.ERROR.DATE\' | translate}}</div>\n                                <mat-icon class="adf-error-icon">warning</mat-icon>\n                            </div>\n                        </div>\n                        </mat-form-field>\n\n                        <adf-cloud-date-range-filter *ngIf="processFilterProperty.type === \'date-range\'"\n                            [processFilterProperty]="processFilterProperty"\n                            [options]="processFilterProperty.dateFilterOptions"\n                            (dateTypeChange)="onDateTypeChange($event, processFilterProperty)"\n                            (dateChanged)="onDateRangeFilterChanged($event, processFilterProperty)"></adf-cloud-date-range-filter>\n\n                        <div fxFlex="23%" *ngIf="processFilterProperty.type === \'people\'">\n                            <adf-cloud-people\n                                [preSelectUsers]="initiatorOptions"\n                                [title]="processFilterProperty.label"\n                                [validate]="true"\n                                [appName]="appName"\n                                [mode]="processFilterProperty.selectionMode"\n                                (changedUsers)="onChangedUser($event, processFilterProperty)"></adf-cloud-people>\n                        </div>\n                    </ng-container>\n                </div>\n            </form>\n        </ng-container>\n    </mat-expansion-panel>\n</mat-accordion>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-edit-process-filter-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-edit-process-filter-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-edit-process-filter-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:11px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-edit-process-filter-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:16px}.adf-cloud-edit-process-filter-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],bt.ctorParameters=function(){return[{type:P.FormBuilder},{type:u.MatDialog},{type:p.DateAdapter},{type:r.UserPreferencesService},{type:r.TranslationService},{type:At},{type:H},{type:Pt}]},bt.propDecorators={appName:[{type:t.Input}],role:[{type:t.Input}],id:[{type:t.Input}],filterProperties:[{type:t.Input}],sortProperties:[{type:t.Input}],actions:[{type:t.Input}],showFilterActions:[{type:t.Input}],showTitle:[{type:t.Input}],showProcessFilterName:[{type:t.Input}],filterChange:[{type:t.Output}],action:[{type:t.Output}],processFilter:[{type:t.Input}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ot=r.MOMENT_DATE_FORMATS,Lt=function(){};Lt.decorators=[{type:t.NgModule,args:[{imports:[P.FormsModule,P.ReactiveFormsModule,M.HttpClientModule,A.CommonModule,i.FlexLayoutModule,$,W,r.CoreModule,be,Le],declarations:[_t,bt,kt],exports:[_t,bt,kt],providers:[{provide:p.DateAdapter,useClass:r.MomentDateAdapter},{provide:p.MAT_DATE_FORMATS,useValue:Ot}]}]}];var Rt=function(e){function t(t,r,i){var n=e.call(this,t,r)||this;return n.logService=i,n}return Q(t,e),t.prototype.getProcessByRequest=function(e,t){if(e.appName||""===e.appName){t=t||this.getBasePath(e.appName)+"/query/v1/process-instances";var r=this.buildQueryParams(e),i=this.buildSortingParam(e.sorting);return i&&(r.sort=i),this.get(t,r).pipe(k.map((function(e){var t=e.list&&e.list.entries;return t&&(e.list.entries=t.map((function(e){return e.entry}))),e})))}return this.logService.error("Appname is mandatory for querying task"),_.throwError("Appname not configured")},t.prototype.isPropertyValueValid=function(e,t){return""!==e[t]&&null!==e[t]&&void 0!==e[t]},t.prototype.buildQueryParams=function(e){var t={};for(var r in e)e.hasOwnProperty(r)&&!this.isExcludedField(r)&&this.isPropertyValueValid(e,r)&&(t[r]=e[r]);return t.status||(t.status=this.buildFilterForAllStatus()),t},t.prototype.buildFilterForAllStatus=function(){return["RUNNING","SUSPENDED","CANCELLED","COMPLETED"]},t.prototype.isExcludedField=function(e){return"appName"===e||"sorting"===e},t.prototype.buildSortingParam=function(e){var t,r,i="";if(e)try{for(var n=Z(e),o=n.next();!o.done;o=n.next()){var a=o.value;i=i?i+"&"+a.orderBy+","+a.direction:a.orderBy+","+a.direction}}catch(e){t={error:e}}finally{try{o&&!o.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}return encodeURI(i)},t}(ie);Rt.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Rt(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(r.LogService))},token:Rt,providedIn:"root"}),Rt.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Rt.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:r.LogService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var wt={default:[{key:"name",type:"text",title:"ADF_CLOUD_PROCESS_LIST.PROPERTIES.NAME",sortable:!0},{key:"startDate",type:"date",title:"ADF_CLOUD_PROCESS_LIST.PROPERTIES.START_DATE",cssClass:"hidden",sortable:!0,format:"timeAgo"}]},Nt=function(e){e&&(this.appName=e.appName,this.appVersion=e.appVersion,this.initiator=e.initiator,this.id=e.id,this.name=e.name,this.processDefinitionId=e.processDefinitionId,this.processDefinitionName=e.processDefinitionName,this.processDefinitionKey=e.processDefinitionKey,this.status=e.status,this.startDate=e.startDate,this.businessKey=e.businessKey,this.lastModified=e.lastModified,this.lastModifiedTo=e.lastModifiedTo,this.lastModifiedFrom=e.lastModifiedFrom,this.startFrom=e.startFrom,this.startTo=e.startTo,this.completedFrom=e.completedFrom,this.completedTo=e.completedTo,this.suspendedFrom=e.suspendedFrom,this.suspendedTo=e.suspendedTo,this.completedDate=e.completedDate,this.maxItems=e.maxItems,this.skipCount=e.skipCount,this.sorting=e.sorting)},Ut=function(e){e&&(this.orderBy=e.orderBy,this.direction=e.direction)},Mt=function(e){function i(n,o,a){var s=e.call(this,o,i.PRESET_KEY,wt)||this;return s.processListCloudService=n,s.userPreferences=a,s.appName="",s.initiator="",s.id="",s.name="",s.processDefinitionId="",s.processDefinitionName="",s.processDefinitionKey="",s.status="",s.businessKey="",s.startFrom="",s.startTo="",s.completedFrom="",s.completedTo="",s.completedDate="",s.suspendedFrom="",s.suspendedTo="",s.selectionMode="single",s.multiselect=!1,s.showActions=!1,s.actionsPosition="right",s.stickyHeader=!1,s.showContextMenu=!1,s.rowClick=new t.EventEmitter,s.rowsSelected=new t.EventEmitter,s.showRowContextMenu=new t.EventEmitter,s.showRowActionsMenu=new t.EventEmitter,s.executeRowAction=new t.EventEmitter,s.error=new t.EventEmitter,s.success=new t.EventEmitter,s.skipCount=0,s.isLoading=!0,s.rows=[],s.defaultSorting={key:"startDate",direction:"desc"},s.size=a.paginationSize,s.userPreferences.select(r.UserPreferenceValues.PaginationSize).subscribe((function(e){s.size=e})),s.pagination=new _.BehaviorSubject({maxItems:s.size,skipCount:0,totalItems:0}),s}return Q(i,e),i.prototype.ngAfterContentInit=function(){this.createDatatableSchema()},i.prototype.ngOnChanges=function(e){this.isPropertyChanged(e,"sorting")&&this.formatSorting(e.sorting.currentValue),this.isAnyPropertyChanged(e)&&this.reload()},i.prototype.getCurrentId=function(){return this.currentInstanceId},i.prototype.reload=function(){this.requestNode=this.createRequestNode(),this.requestNode.appName||""===this.requestNode.appName?this.load(this.requestNode):this.rows=[]},i.prototype.load=function(e){var t=this;this.isLoading=!0,this.processListCloudService.getProcessByRequest(e).subscribe((function(e){t.rows=e.list.entries,t.success.emit(e),t.isLoading=!1,t.pagination.next(e.list.pagination)}),(function(e){t.error.emit(e),t.isLoading=!1}))},i.prototype.isAnyPropertyChanged=function(e){for(var t in e)if(this.isPropertyChanged(e,t))return!0;return!1},i.prototype.isPropertyChanged=function(e,t){return e.hasOwnProperty(t)},i.prototype.isListEmpty=function(){return!this.rows||0===this.rows.length},i.prototype.resetPagination=function(){this.skipCount=0,this.size=this.userPreferences.paginationSize,this.pagination.next({skipCount:0,maxItems:this.size})},i.prototype.updatePagination=function(e){this.size=e.maxItems,this.skipCount=e.skipCount,this.pagination.next(e),this.reload()},i.prototype.onSortingChanged=function(e){this.setSorting(e.detail),this.formatSorting(this.sorting),this.reload()},i.prototype.onRowClick=function(e){this.currentInstanceId=e.value.getValue("id"),this.rowClick.emit(this.currentInstanceId)},i.prototype.onRowSelect=function(e){this.selectedInstances=te(e.detail.selection),this.rowsSelected.emit(this.selectedInstances)},i.prototype.onRowUnselect=function(e){this.selectedInstances=te(e.detail.selection),this.rowsSelected.emit(this.selectedInstances)},i.prototype.onRowKeyUp=function(e){"Enter"===e.detail.keyboardEvent.key&&(e.preventDefault(),this.currentInstanceId=e.detail.row.getValue("id"),this.rowClick.emit(this.currentInstanceId))},i.prototype.onShowRowActionsMenu=function(e){this.showRowActionsMenu.emit(e)},i.prototype.onShowRowContextMenu=function(e){this.showRowContextMenu.emit(e)},i.prototype.onExecuteRowAction=function(e){this.executeRowAction.emit(e)},i.prototype.createRequestNode=function(){var e={appName:this.appName,appVersion:this.getAppVersions(),maxItems:this.size,skipCount:this.skipCount,initiator:this.initiator,id:this.id,name:this.name,processDefinitionId:this.processDefinitionId,processDefinitionName:this.processDefinitionName,processDefinitionKey:this.processDefinitionKey,status:this.status,businessKey:this.businessKey,lastModifiedFrom:this.lastModifiedFrom,lastModifiedTo:this.lastModifiedTo,startFrom:this.startFrom,startTo:this.startTo,completedFrom:this.completedFrom,completedTo:this.completedTo,suspendedFrom:this.suspendedFrom,suspendedTo:this.suspendedTo,completedDate:this.completedDate,sorting:this.sorting};return new Nt(e)},i.prototype.getAppVersions=function(){return this.appVersion instanceof Array?this.appVersion.join(","):this.appVersion?String(this.appVersion):""},i.prototype.setSorting=function(e){var t=e?{orderBy:e.key,direction:e.direction.toUpperCase()}:Object.assign({},this.defaultSorting);this.sorting=[new Ut(t)]},i.prototype.formatSorting=function(e){this.formattedSorting=this.isValidSorting(e)?[e[0].orderBy,e[0].direction.toLocaleLowerCase()]:null},i.prototype.isValidSorting=function(e){return e.length&&e[0].orderBy&&e[0].direction},i}(r.DataTableSchema);
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */Mt.PRESET_KEY="adf-cloud-process-list.presets",Mt.decorators=[{type:t.Component,args:[{selector:"adf-cloud-process-list",template:'<adf-datatable #dataTable\n        [rows]="rows"\n        [columns]="columns"\n        [stickyHeader]="stickyHeader"\n        [loading]="isLoading"\n        [sorting]="formattedSorting"\n        [selectionMode]="selectionMode"\n        [multiselect]="multiselect"\n        [actions]="showActions"\n        [actionsPosition]="actionsPosition"\n        [contextMenu]="showContextMenu"\n        (showRowActionsMenu)="onShowRowActionsMenu($event)"\n        (showRowContextMenu)="onShowRowContextMenu($event)"\n        (executeRowAction)="onExecuteRowAction($event)"\n        (rowClick)="onRowClick($any($event))"\n        (row-select)="onRowSelect($any($event))"\n        (row-unselect)="onRowUnselect($any($event))"\n        (row-keyup)="onRowKeyUp($any($event))"\n        (sorting-changed)="onSortingChanged($any($event))">\n        <adf-loading-content-template>\n            <ng-template>\n                <mat-progress-spinner\n                    *ngIf="!customLoadingContent"\n                    class="adf-cloud-process-list-loading-margin"\n                    [color]="\'primary\'"\n                    [mode]="\'indeterminate\'">\n                </mat-progress-spinner>\n                <ng-content select="adf-custom-loading-content-template"></ng-content>\n            </ng-template>\n        </adf-loading-content-template>\n        <adf-no-content-template>\n            <ng-template>\n                <adf-empty-content *ngIf="!emptyCustomContent"\n                    icon="assessment"\n                    [title]="\'ADF_CLOUD_PROCESS_LIST.MESSAGES.TITLE\' | translate"\n                    [subtitle]="\'ADF_CLOUD_PROCESS_LIST.MESSAGES.SUBTITLE\'| translate">\n                </adf-empty-content>\n                <ng-content select="adf-custom-empty-content-template"></ng-content>\n            </ng-template>\n        </adf-no-content-template>\n</adf-datatable>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-cloud-process-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.adf-no-content-message{font-size:16px;font-weight:700;opacity:.54;text-align:center}"]}]}],Mt.ctorParameters=function(){return[{type:Rt},{type:r.AppConfigService},{type:r.UserPreferencesService}]},Mt.propDecorators={dataTable:[{type:t.ViewChild,args:[r.DataTableComponent]}],emptyCustomContent:[{type:t.ContentChild,args:[r.CustomEmptyContentTemplateDirective]}],customLoadingContent:[{type:t.ContentChild,args:[r.CustomLoadingContentTemplateDirective]}],appName:[{type:t.Input}],appVersion:[{type:t.Input}],initiator:[{type:t.Input}],id:[{type:t.Input}],name:[{type:t.Input}],processDefinitionId:[{type:t.Input}],processDefinitionName:[{type:t.Input}],processDefinitionKey:[{type:t.Input}],status:[{type:t.Input}],businessKey:[{type:t.Input}],lastModifiedFrom:[{type:t.Input}],lastModifiedTo:[{type:t.Input}],startFrom:[{type:t.Input}],startTo:[{type:t.Input}],completedFrom:[{type:t.Input}],completedTo:[{type:t.Input}],completedDate:[{type:t.Input}],suspendedFrom:[{type:t.Input}],suspendedTo:[{type:t.Input}],selectionMode:[{type:t.Input}],multiselect:[{type:t.Input}],sorting:[{type:t.Input}],showActions:[{type:t.Input}],actionsPosition:[{type:t.Input}],stickyHeader:[{type:t.Input}],showContextMenu:[{type:t.Input}],rowClick:[{type:t.Output}],rowsSelected:[{type:t.Output}],showRowContextMenu:[{type:t.Output}],showRowActionsMenu:[{type:t.Output}],executeRowAction:[{type:t.Output}],error:[{type:t.Output}],success:[{type:t.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var xt=function(){};xt.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,$,r.CoreModule],declarations:[Mt],exports:[Mt]}]}];var Vt=function(e){function t(t,r,i){var n=e.call(this,t,i)||this;return n.logService=r,n}return Q(t,e),t.prototype.getProcessDefinitions=function(e){if(e||""===e){var t=this.getBasePath(e)+"/rb/v1/process-definitions";return this.get(t).pipe(k.map((function(e){return e.list.entries.map((function(e){return new pe(e.entry)}))})))}return this.logService.error("AppName is mandatory for querying task"),_.throwError("AppName not configured")},t.prototype.createProcess=function(e,t){var r=this.getBasePath(e)+"/rb/v1/process-instances/create";return t.payloadType="CreateProcessInstancePayload",this.post(r,t).pipe(k.map((function(e){return e.entry})))},t.prototype.startCreatedProcess=function(e,t,r){var i=this.getBasePath(e)+"/rb/v1/process-instances/"+t+"/start";return this.post(i,r).pipe(k.map((function(e){return e.entry})))},t.prototype.startProcess=function(e,t){var r=this.getBasePath(e)+"/rb/v1/process-instances";return t.payloadType="StartProcessPayload",this.post(r,t)},t.prototype.updateProcess=function(e,t,r){var i=this.getBasePath(e)+"/rb/v1/process-instances/"+t;return r.payloadType="UpdateProcessPayload",this.put(i,r).pipe(k.map((function(e){return e.entry})))},t.prototype.deleteProcess=function(e,t){var r=this.getBasePath(e)+"/rb/v1/process-instances/"+t;return this.delete(r)},t}(ie);Vt.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Vt(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.LogService),t.ɵɵinject(r.AppConfigService))},token:Vt,providedIn:"root"}),Vt.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Vt.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.LogService},{type:r.AppConfigService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Gt=function(e){this.payloadType="StartProcessPayload",this.processDefinitionKey=e&&e.processDefinitionKey?e.processDefinitionKey:null,this.name=e&&e.name?e.name:null,this.businessKey=e&&e.businessKey?e.businessKey:null,this.variables=e&&e.variables?e.variables:{}},Bt=function(){function e(e){this.localizedDatePipe=e}return e.prototype.transform=function(t,r){var i=t;if(i.match(e.DATE_TIME_IDENTIFIER_REG_EXP)){var n=b.now();i=i.replace(e.DATE_TIME_IDENTIFIER_REG_EXP,this.localizedDatePipe.transform(n,"medium"))}if(i.match(e.PROCESS_DEFINITION_IDENTIFIER_REG_EXP)){var o=r?r.processDefinitionName:"";i=i.replace(e.PROCESS_DEFINITION_IDENTIFIER_REG_EXP,o)}return i},e}();
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */Bt.DATE_TIME_IDENTIFIER_REG_EXP=new RegExp("%{datetime}","i"),Bt.PROCESS_DEFINITION_IDENTIFIER_REG_EXP=new RegExp("%{processdefinition}","i"),Bt.decorators=[{type:t.Pipe,args:[{name:"processNameCloud"}]}],Bt.ctorParameters=function(){return[{type:r.LocalizedDatePipe}]};var $t=function(){function e(r,i,n){this.startProcessCloudService=r,this.formBuilder=i,this.processNameCloudPipe=n,this.appName="",this.maxNameLength=e.MAX_NAME_LENGTH,this.name="",this.showSelectProcessDropdown=!0,this.success=new t.EventEmitter,this.cancel=new t.EventEmitter,this.error=new t.EventEmitter,this.formContentClicked=new t.EventEmitter,this.processDefinitionSelection=new t.EventEmitter,this.processDefinitionList=[],this.errorMessageId="",this.processPayloadCloud=new Gt,this.filteredProcesses=[],this.isLoading=!1,this.isFormCloudLoaded=!1,this.disableStartButton=!0,this.onDestroy$=new _.Subject,this.processDefinitionLoaded=!1}return e.prototype.ngOnInit=function(){var t=this;this.processForm=this.formBuilder.group({processInstanceName:new P.FormControl("",[P.Validators.required,P.Validators.maxLength(this.getMaxNameLength()),P.Validators.pattern("^[^\\s]+(\\s+[^\\s]+)*$")]),processDefinition:new P.FormControl(this.processDefinitionName,[P.Validators.required,this.processDefinitionNameValidator()])}),this.processDefinition.valueChanges.pipe(k.debounceTime(e.PROCESS_DEFINITION_DEBOUNCE)).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(e){t.selectProcessDefinitionByProcesDefinitionName(e)})),this.processForm.valueChanges.pipe(k.debounceTime(e.PROCESS_FORM_DEBOUNCE),k.tap((function(){return t.disableStartButton=!0})),k.distinctUntilChanged(),k.filter((function(){return t.isProcessSelectionValid()})),k.switchMap((function(){return t.generateProcessInstance()}))).pipe(k.takeUntil(this.onDestroy$)).subscribe((function(e){t.currentCreatedProcess=e,t.disableStartButton=!1})),this.processDefinitionName&&(this.processDefinition.setValue(this.processDefinitionName),this.processDefinition.markAsDirty(),this.processDefinition.markAsTouched())},e.prototype.ngOnChanges=function(e){e.appName&&e.appName.currentValue!==e.appName.previousValue&&(this.appName=e.appName.currentValue,(this.appName||""===this.appName)&&this.loadProcessDefinitions())},e.prototype.onKeyDown=function(e){e.cancelBubble=!0},e.prototype.hasForm=function(){return this.processDefinitionCurrent&&!!this.processDefinitionCurrent.formKey},e.prototype.onFormLoaded=function(e){this.isFormCloudLoaded=!0,this.formCloud=e},e.prototype.isProcessSelectionValid=function(){return this.processForm.valid&&this.isProcessPayloadValid()},e.prototype.getMaxNameLength=function(){return this.maxNameLength>e.MAX_NAME_LENGTH?e.MAX_NAME_LENGTH:this.maxNameLength},e.prototype.generateProcessInstance=function(){var e=new Gt({name:this.processInstanceName.value,processDefinitionKey:this.processPayloadCloud.processDefinitionKey});return this.currentCreatedProcess&&this.processPayloadCloud.processDefinitionKey===this.currentCreatedProcess.processDefinitionKey?this.startProcessCloudService.updateProcess(this.appName,this.currentCreatedProcess.id,e):this.startProcessCloudService.createProcess(this.appName,e)},e.prototype.selectProcessDefinitionByProcesDefinitionName=function(e){this.filteredProcesses=this.getProcessDefinitionListByNameOrKey(e),this.isProcessFormValid()&&this.filteredProcesses&&1===this.filteredProcesses.length&&this.setProcessDefinitionOnForm(this.filteredProcesses[0].name)},e.prototype.setProcessDefinitionOnForm=function(e){this.processDefinitionCurrent=this.filteredProcesses.find((function(t){return t.name===e||t.key===e})),this.isFormCloudLoaded=!1,this.processPayloadCloud.processDefinitionKey=this.processDefinitionCurrent.key},e.prototype.getProcessDefinitionListByNameOrKey=function(e){var t=this;return this.processDefinitionList.filter((function(r){return!e||t.getProcessDefinition(r,e)}))},e.prototype.getProcessIfExists=function(e){var t=this,r=this.processDefinitionList.find((function(r){return t.getProcessDefinition(r,e)}));return r||(r=new pe),r},e.prototype.getProcessDefinitionByName=function(e){return e?this.getProcessIfExists(e):this.processDefinitionList[0]},e.prototype.selectDefaultProcessDefinition=function(){var e=this.getProcessDefinitionByName(this.processDefinitionName);e&&(this.processDefinition.setValue(e.name),this.processDefinitionSelectionChanged(e))},e.prototype.loadProcessDefinitions=function(){var e=this;this.resetErrorMessage(),this.startProcessCloudService.getProcessDefinitions(this.appName).pipe(k.tap((function(){return e.processDefinitionLoaded=!0})),k.takeUntil(this.onDestroy$)).subscribe((function(t){e.processDefinitionList=t,1===t.length?e.selectDefaultProcessDefinition():e.processDefinitionName&&e.processDefinition.setValue(e.processDefinitionName)}),(function(){e.errorMessageId="ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.LOAD_PROCESS_DEFS"}))},e.prototype.isValidName=function(e){return!!e},e.prototype.isProcessFormValid=function(){return this.hasForm()&&this.isFormCloudLoaded?this.formCloud.isValid||this.isLoading:this.processForm.valid||this.isLoading},e.prototype.isProcessPayloadValid=function(){return!!this.processPayloadCloud.processDefinitionKey},e.prototype.getProcessDefinition=function(e,t){return this.isValidName(e.name)&&e.name.toLowerCase().includes(t.toLowerCase())||e.key&&e.key.toLowerCase().includes(t.toLowerCase())},e.prototype.isProcessDefinitionsEmpty=function(){return 0===this.processDefinitionList.length},e.prototype.buildProcessCloudPayload=function(){this.processPayloadCloud.name=this.processInstanceName.value,this.variables&&(this.processPayloadCloud.variables=this.variables),this.hasForm()&&(this.processPayloadCloud.variables=Object.assign(this.processPayloadCloud.variables,this.formCloud.values))},e.prototype.startProcess=function(){var e=this;this.isLoading=!0,this.buildProcessCloudPayload(),this.startProcessCloudService.startCreatedProcess(this.appName,this.currentCreatedProcess.id,this.processPayloadCloud).subscribe((function(t){e.success.emit(t),e.isLoading=!1}),(function(t){e.errorMessageId="ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.START",e.error.emit(t),e.isLoading=!1}))},e.prototype.cancelStartProcess=function(){return J(this,void 0,void 0,(function(){return X(this,(function(e){switch(e.label){case 0:return this.currentCreatedProcess?[4,this.startProcessCloudService.deleteProcess(this.appName,this.currentCreatedProcess.id)]:[3,2];case 1:e.sent(),e.label=2;case 2:return this.currentCreatedProcess=null,this.cancel.emit(),[2]}}))}))},e.prototype.resetErrorMessage=function(){this.errorMessageId=""},e.prototype.resetProcessDefinitionList=function(){this.processDefinition.setValue(""),this.filteredProcesses=this.processDefinitionList},e.prototype.displayProcessNameOnDropdown=function(e){if(e){var t=e;return"string"!=typeof e&&(t=e.name),t}},e.prototype.displayDropdown=function(e){e.stopPropagation(),this.inputAutocomplete.panelOpen?this.inputAutocomplete.closePanel():(this.resetProcessDefinitionList(),this.inputAutocomplete.openPanel())},e.prototype.processDefinitionNameValidator=function(){var e=this;return function(t){var r=t.value,i=!1;r&&(e.getProcessIfExists(r).key||(i=!0));return i?{"invalid name":!0}:null}},e.prototype.getProcessDefinitionValue=function(e){return e.name?e.name:e.key},Object.defineProperty(e.prototype,"processInstanceName",{get:function(){return this.processForm.get("processInstanceName")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"processDefinition",{get:function(){return this.processForm.get("processDefinition")},enumerable:!1,configurable:!0}),e.prototype.onFormContentClicked=function(e){this.formContentClicked.emit(e)},e.prototype.processDefinitionSelectionChanged=function(e){if(e){var t={processDefinitionName:e.name},r=this.processNameCloudPipe.transform(this.name,t);this.processInstanceName.setValue(r),this.processInstanceName.markAsDirty(),this.processInstanceName.markAsTouched(),this.processDefinitionSelection.emit(e)}},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e}();$t.MAX_NAME_LENGTH=255,$t.PROCESS_DEFINITION_DEBOUNCE=300,$t.PROCESS_FORM_DEBOUNCE=400,$t.decorators=[{type:t.Component,args:[{selector:"adf-cloud-start-process",template:'<mat-card class="adf-start-process">\n\n    <mat-card-title class="adf-title">{{\'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.TITLE\' | translate}}\n    </mat-card-title>\n\n    <mat-card-content>\n        <mat-card-subtitle id="error-message" *ngIf="errorMessageId">\n            {{ errorMessageId | translate }}\n        </mat-card-subtitle>\n\n        <div *ngIf="!isProcessDefinitionsEmpty(); else emptyProcessDefinitionsList">\n            <form [formGroup]="processForm">\n                <mat-form-field class="adf-process-input-container"  [floatLabel]="\'always\'">\n                    <mat-label>{{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.LABEL.TYPE\' | translate }}</mat-label>\n                    <input\n                        #inputAutocomplete\n                        matInput\n                        formControlName="processDefinition"\n                        [matAutocomplete]="auto"\n                        id="processDefinitionName">\n                    <div class="adf-process-input-autocomplete">\n                        <mat-autocomplete #auto="matAutocomplete" id="processDefinitionOptions" [displayWith]="displayProcessNameOnDropdown" (optionSelected)="setProcessDefinitionOnForm($event.option.value)" >\n                            <mat-option *ngFor="let processDef of filteredProcesses" [value]="getProcessDefinitionValue(processDef)"\n                                        (click)="processDefinitionSelectionChanged(processDef)">\n                                {{ getProcessDefinitionValue(processDef) }}\n                            </mat-option>\n                        </mat-autocomplete>\n                        <button id="adf-select-process-dropdown" *ngIf="showSelectProcessDropdown" mat-icon-button (click)="displayDropdown($event)">\n                            <mat-icon>arrow_drop_down</mat-icon>\n                        </button>\n                    </div>\n                    <mat-error *ngIf="processDefinition.hasError(\'required\')" class="adf-error-pb">\n                            {{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.PROCESS_DEFINITION_REQUIRED\' | translate }}\n                        </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class="adf-process-input-container"  [floatLabel]="\'always\'">\n                    <mat-label>{{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.LABEL.NAME\' | translate }}</mat-label>\n                    <input\n                        matInput\n                        formControlName="processInstanceName"\n                        id="processName">\n                    <mat-error id="adf-start-process-required-error" *ngIf="processInstanceName.hasError(\'required\')">\n                        {{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.PROCESS_NAME_REQUIRED\' | translate }}\n                    </mat-error>\n                    <mat-error id="adf-start-process-maxlength-error" *ngIf="processInstanceName.hasError(\'maxlength\')">\n                        {{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.MAXIMUM_LENGTH\' | translate : { characters : maxNameLength } }}\n                    </mat-error>\n                    <mat-error *ngIf="processInstanceName.hasError(\'pattern\')">\n                        {{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.SPACE_VALIDATOR\' | translate }}\n                    </mat-error>\n                </mat-form-field>\n            </form>\n\n            <ng-container *ngIf="hasForm() else taskFormCloudButtons">\n                <adf-cloud-form\n                    [appName]="appName"\n                    [appVersion]="processDefinitionCurrent.appVersion"\n                    [data]="values"\n                    [formId]="processDefinitionCurrent.formKey"\n                    [showSaveButton]="false"\n                    [showCompleteButton]="false"\n                    [showRefreshButton]="false"\n                    [showValidationIcon]="false"\n                    [showTitle]="false"\n                    (formContentClicked)="onFormContentClicked($event)"\n                    (formLoaded)="onFormLoaded($event)">\n                    <adf-cloud-form-custom-outcomes>\n                        <ng-template [ngTemplateOutlet]="taskFormCloudButtons">\n                        </ng-template>\n                    </adf-cloud-form-custom-outcomes>\n                </adf-cloud-form>\n            </ng-container>\n        </div>\n\n    </mat-card-content>\n\n    <ng-template #taskFormCloudButtons>\n        <div fxLayout="row" fxLayoutAlign="end end">\n            <button mat-button (click)="cancelStartProcess()" id="cancel_process">\n                {{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.ACTION.CANCEL\' | translate | uppercase}}\n            </button>\n            <button color="primary" mat-button [disabled]="disableStartButton || !isProcessFormValid()" (click)="startProcess()"\n                data-automation-id="btn-start" id="button-start" class="btn-start">\n                {{\'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.ACTION.START\' | translate | uppercase}}\n            </button>\n        </div>\n    </ng-template>\n\n    <ng-template #emptyProcessDefinitionsList>\n        <mat-card-content *ngIf="processDefinitionLoaded">\n            <mat-card-subtitle class="error-message" id="no-process-message">\n                {{ \'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.NO_PROCESS_DEFINITIONS\' | translate | uppercase}}\n            </mat-card-subtitle>\n        </mat-card-content>\n    </ng-template>\n</mat-card>\n',encapsulation:t.ViewEncapsulation.None,styles:[".adf-start-process mat-form-field{width:100%}.adf-start-process .mat-form-field-label{color:var(--theme-colors-mat-grey-dark)}.adf-start-process mat-card-actions{text-align:right}.adf-start-process mat-card-actions .mat-button{text-transform:uppercase!important}.adf-title{padding-bottom:1.25em}.adf-process-input-container mat-form-field{width:100%}.adf-process-input-autocomplete{display:flex}.adf-process-input-autocomplete button{position:absolute;right:-14px;top:0}.adf-start-form-container .mat-card{box-shadow:none!important;padding:0!important}.adf-start-form-actions{text-align:right!important}"]}]}],$t.ctorParameters=function(){return[{type:Vt},{type:P.FormBuilder},{type:Bt}]},$t.propDecorators={inputAutocomplete:[{type:t.ViewChild,args:[n.MatAutocompleteTrigger]}],appName:[{type:t.Input}],maxNameLength:[{type:t.Input}],name:[{type:t.Input}],processDefinitionName:[{type:t.Input}],variables:[{type:t.Input}],values:[{type:t.Input}],showSelectProcessDropdown:[{type:t.Input}],success:[{type:t.Output}],cancel:[{type:t.Output}],error:[{type:t.Output}],formContentClicked:[{type:t.Output}],processDefinitionSelection:[{type:t.Output}],onKeyDown:[{type:t.HostListener,args:["keydown",["$event"]]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Kt=function(){};Kt.decorators=[{type:t.NgModule,args:[{imports:[P.FormsModule,A.CommonModule,mt,$,i.FlexLayoutModule,P.ReactiveFormsModule,r.CoreModule],declarations:[$t],exports:[$t]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var jt=function(){function e(e,r,i){this.processCloudService=e,this.translationService=r,this.appConfig=i,this.appName="",this.loaded=new t.EventEmitter,this.onDestroy$=new _.Subject}return e.prototype.ngOnInit=function(){var e=this;this.dateFormat=this.appConfig.get("dateValues.defaultDateFormat"),this.dateLocale=this.appConfig.get("dateValues.defaultDateLocale"),this.processCloudService.dataChangesDetected.pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){return e.onLoaded(t)}))},e.prototype.ngOnChanges=function(){(this.appName||""===this.appName)&&this.processInstanceId&&this.loadProcessInstanceDetails(this.appName,this.processInstanceId)},e.prototype.loadProcessInstanceDetails=function(e,t){var r=this;this.processCloudService.getProcessInstanceById(e,t).subscribe((function(e){return r.onLoaded(e)}))},e.prototype.onLoaded=function(e){this.processInstanceDetails=e,this.refreshData(),this.loaded.emit(e)},e.prototype.refreshData=function(){var e=this;if(this.processInstanceDetails){var t=this.initDefaultProperties(),r=this.appConfig.get("adf-cloud-process-header.presets.properties");this.properties=t.filter((function(t){return e.isValidSelection(r,t)}))}},e.prototype.initDefaultProperties=function(){return[new r.CardViewTextItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.ID",value:this.processInstanceDetails.id,key:"id"}),new r.CardViewTextItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NAME",value:this.processInstanceDetails.name,key:"name",default:this.translationService.instant("ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NAME_DEFAULT")}),new r.CardViewTextItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.STATUS",value:this.processInstanceDetails.status,key:"status"}),new r.CardViewTextItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.INITIATOR",value:this.processInstanceDetails.initiator,key:"initiator"}),new r.CardViewDateItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.START_DATE",value:this.processInstanceDetails.startDate,key:"startDate",format:this.dateFormat,locale:this.dateLocale}),new r.CardViewDateItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.LAST_MODIFIED",value:this.processInstanceDetails.lastModified,key:"lastModified",format:this.dateFormat,locale:this.dateLocale}),new r.CardViewTextItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.PARENT_ID",value:this.processInstanceDetails.parentId,key:"parentId",default:this.translationService.instant("ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NONE")}),new r.CardViewTextItemModel({label:"ADF_CLOUD_PROCESS_HEADER.PROPERTIES.BUSINESS_KEY",value:this.processInstanceDetails.businessKey,key:"businessKey",default:this.translationService.instant("ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NONE")})]},e.prototype.isValidSelection=function(e,t){return!e||e.indexOf(t.key)>=0},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e}();jt.decorators=[{type:t.Component,args:[{selector:"adf-cloud-process-header",template:'<mat-card *ngIf="processInstanceDetails">\n  <mat-card-content>\n    <adf-card-view [properties]="properties"></adf-card-view>\n  </mat-card-content>\n</mat-card>',encapsulation:t.ViewEncapsulation.None,host:{class:"adf-cloud-process-header"}}]}],jt.ctorParameters=function(){return[{type:Pt},{type:r.TranslationService},{type:r.AppConfigService}]},jt.propDecorators={appName:[{type:t.Input}],processInstanceId:[{type:t.Input}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var qt=function(){};qt.decorators=[{type:t.NgModule,args:[{imports:[A.CommonModule,$,r.CoreModule],declarations:[jt],exports:[jt]}]}];var Ht=function(){function e(e,r,i){this.elementRef=e,this.processCloudService=r,this.identityUserService=i,this.success=new t.EventEmitter,this.error=new t.EventEmitter,this.canCancelProcess=!1,this.onDestroy$=new _.Subject}return e.prototype.ngOnInit=function(){var e=this;this.processCloudService.dataChangesDetected.pipe(k.takeUntil(this.onDestroy$)).subscribe((function(t){e.processInstanceDetails=t,e.canCancelProcess=e.checkCanCancelProcess(),e.setElementVisibility()}))},e.prototype.onClick=function(){this.cancelProcess()},e.prototype.setElementVisibility=function(){this.elementRef.nativeElement.disabled=!this.canCancelProcess},e.prototype.checkCanCancelProcess=function(){var e=this.identityUserService.getCurrentUserInfo().username;return this.processInstanceDetails.initiator===e&&"RUNNING"===this.processInstanceDetails.status},e.prototype.cancelProcess=function(){var e=this;this.canCancelProcess?this.processCloudService.cancelProcess(this.processInstanceDetails.appName,this.processInstanceDetails.id).subscribe((function(t){return e.success.emit(t)}),(function(t){return e.error.emit(t)})):this.error.emit("Permission denied, only process initiator can cancel the process")},e.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},e}();Ht.decorators=[{type:t.Directive,args:[{selector:"[adf-cloud-cancel-process]"}]}],Ht.ctorParameters=function(){return[{type:t.ElementRef},{type:Pt},{type:r.IdentityUserService}]},Ht.propDecorators={success:[{type:t.Output}],error:[{type:t.Output}],onClick:[{type:t.HostListener,args:["click"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Yt=function(){};Yt.decorators=[{type:t.NgModule,args:[{declarations:[Ht],exports:[Ht]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Wt=function(){};Wt.decorators=[{type:t.NgModule,args:[{imports:[r.CoreModule,Lt,xt,Kt,qt,Yt],exports:[Lt,xt,Kt,qt,Yt],providers:[Bt]}]}];var zt=function(e){function t(t,r,i){var n=e.call(this,t,r)||this;return n.logService=i,n}return Q(t,e),t.prototype.getPreferences=function(e){if(e){var t=this.getBasePath(e)+"/preference/v1/preferences";return this.get(t)}return this.logService.error("Appname is mandatory for querying preferences"),_.throwError("Appname not configured")},t.prototype.getPreferenceByKey=function(e,t){if(e){var r=this.getBasePath(e)+"/preference/v1/preferences/"+t;return this.get(r)}return this.logService.error("Appname and key are mandatory for querying preference"),_.throwError("Appname not configured")},t.prototype.createPreference=function(e,t,r){if(e){var i=this.getBasePath(e)+"/preference/v1/preferences/"+t,n=JSON.stringify(r);return this.put(i,n)}return this.logService.error("Appname  and key are  mandatory for creating preference"),_.throwError("Appname not configured")},t.prototype.updatePreference=function(e,t,r){return this.createPreference(e,t,r)},t.prototype.deletePreference=function(e,t){if(e){var r=this.getBasePath(e)+"/preference/v1/preferences/"+t;return this.delete(r)}return this.logService.error("Appname and key are mandatory to delete preference"),_.throwError("Appname not configured")},t}(ie);zt.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new zt(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService),t.ɵɵinject(r.LogService))},token:zt,providedIn:"root"}),zt.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],zt.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService},{type:r.LogService}]};var Qt,Jt,Xt=function(){function e(e){this.storage=e}return e.prototype.getPreferences=function(e,t){return t||""===t?_.of(this.prepareLocalPreferenceResponse(t)):_.of({list:{entries:[]}})},e.prototype.getPreferenceByKey=function(e,t){return _.of(JSON.parse(this.storage.getItem(t))||[])},e.prototype.createPreference=function(e,t,r){var i=JSON.parse(this.storage.getItem(t)||"[]");return i.push.apply(i,te(r)),this.storage.setItem(t,JSON.stringify(i)),_.of(i)},e.prototype.updatePreference=function(e,t,r){return t&&this.storage.setItem(t,JSON.stringify(r)),_.of(r)},e.prototype.deletePreference=function(e,t){return e&&this.storage.setItem(e,JSON.stringify(t)),_.of(t)},e.prototype.prepareLocalPreferenceResponse=function(e){return{list:{entries:[{entry:{key:e,value:this.storage.getItem(e)||"[]"}}]}}},e}();Xt.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Xt(t.ɵɵinject(r.StorageService))},token:Xt,providedIn:"root"}),Xt.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Xt.ctorParameters=function(){return[{type:r.StorageService}]},(
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
Qt=e.PeopleModeOptions||(e.PeopleModeOptions={})).single="single",Qt.multiple="multiple",(Jt=e.FormFieldType||(e.FormFieldType={})).text="text",Jt.multiline="multi-line-text",Jt.number="integer",Jt.checkbox="boolean",Jt.date="date",Jt.datetime="datetime",Jt.dropdown="dropdown",Jt.typeahead="typeahead",Jt.amount="amount",Jt.radio="radio-buttons",Jt.people="people",Jt.groupOfPeople="functional-group",Jt.dynamicTable="dynamicTable",Jt.hyperlink="hyperlink",Jt.header="group",Jt.uploadFile="upload",Jt.uploadFolder="uploadFolder",Jt.displayValue="readonly",Jt.displayText="readonly-text",Jt.fileViewer="file-viewer";
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Zt=function(e){function t(){var t=e.call(this)||this;return t.register({upload:function(){return pt},dropdown:function(){return tt},date:function(){return et},people:function(){return it},"functional-group":function(){return rt},"properties-viewer":function(){return ct},"radio-buttons":function(){return ut}},!0),t}return Q(t,e),t}(r.FormRenderingService);Zt.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Zt},token:Zt,providedIn:"root"}),Zt.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Zt.ctorParameters=function(){return[]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var er=function(){};er.decorators=[{type:t.NgModule,args:[{declarations:[Bt],exports:[Bt]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var tr={name:"adf-process-services-cloud",source:"assets/adf-process-services-cloud"},rr=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:r.TRANSLATION_PROVIDER,multi:!0,useValue:{name:"adf-process-services-cloud",source:"assets/adf-process-services-cloud"}},{provide:Fe,useExisting:null!=t?t:Xt},{provide:Ce,useExisting:null!=t?t:Xt},r.FormRenderingService,{provide:r.FormRenderingService,useClass:Zt}]}},e.forChild=function(){return{ngModule:e}},e}();rr.decorators=[{type:t.NgModule,args:[{imports:[r.CoreModule,W,Wt,Ct,$e,Le,mt,Ft,er],providers:[{provide:r.TRANSLATION_PROVIDER,multi:!0,useValue:tr}],exports:[W,Wt,Ct,$e,mt,Ft,Le,er]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ir=function(e){function t(t,r){return e.call(this,t,r)||this}return Q(t,e),t.prototype.createNewTask=function(e){var t=this.getBasePath(e.appName)+"/rb/v1/tasks",r=JSON.stringify(new le(e));return this.post(t,r).pipe(k.map((function(e){return e.entry})))},t}(ie);ir.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new ir(t.ɵɵinject(r.AlfrescoApiService),t.ɵɵinject(r.AppConfigService))},token:ir,providedIn:"root"}),ir.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],ir.ctorParameters=function(){return[{type:r.AlfrescoApiService},{type:r.AppConfigService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var nr=function(){},or=function(){};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
e.AppDetailsCloudComponent=q,e.AppListCloudComponent=Y,e.AppListCloudModule=W,e.ApplicationVersionModel=nr,e.ApplicationVersionResponseModel=or,e.AppsProcessCloudService=H,e.AttachFileCloudWidgetComponent=pt,e.CancelProcessDirective=Ht,e.ClaimTaskCloudDirective=Dt,e.CloudFormRenderingService=Zt,e.CompleteTaskDirective=vt,e.ContentCloudNodeSelectorService=nt,e.DEFAULT_APP_INSTANCE_ICON=j,e.DEFAULT_APP_INSTANCE_THEME=K,e.DEFAULT_TASK_PRIORITIES=ce,e.DateCloudWidgetComponent=et,e.DropdownCloudWidgetComponent=tt,e.EditProcessFilterCloudComponent=bt,e.EditServiceTaskFilterCloudComponent=Ue,e.EditTaskFilterCloudComponent=Me,e.FormCloudComponent=ze,e.FormCloudModule=mt,e.FormCloudService=We,e.FormCustomOutcomesComponent=Xe,e.FormDefinitionSelectorCloudComponent=Je,e.FormDefinitionSelectorCloudService=Qe,e.GroupCloudComponent=Ge,e.GroupCloudModule=$e,e.GroupCloudWidgetComponent=rt,e.InitialGroupNamePipe=Be,e.LocalPreferenceCloudService=Xt,e.NotificationCloudService=Ie,e.PROCESS_FILTERS_SERVICE_TOKEN=Fe,e.PeopleCloudComponent=Oe,e.PeopleCloudModule=Le,e.PeopleCloudWidgetComponent=it,e.ProcessCloudContentService=ot,e.ProcessCloudModule=Wt,e.ProcessCloudService=Pt,e.ProcessDefinitionCloud=pe,e.ProcessDirectiveModule=Yt,e.ProcessFilterCloudModel=It,e.ProcessFilterCloudService=At,e.ProcessFilterDialogCloudComponent=kt,e.ProcessFiltersCloudComponent=_t,e.ProcessFiltersCloudModule=Lt,e.ProcessHeaderCloudComponent=jt,e.ProcessHeaderCloudModule=qt,e.ProcessListCloudComponent=Mt,e.ProcessListCloudModule=xt,e.ProcessListCloudService=Rt,e.ProcessListCloudSortingModel=Ut,e.ProcessNameCloudPipe=Bt,e.ProcessPayloadCloud=Gt,e.ProcessQueryCloudRequestModel=Nt,e.ProcessServicesCloudModule=rr,e.ProcessServicesCloudPipeModule=er,e.PropertiesViewerWidgetComponent=ct,e.ServiceTaskFilterCloudService=Re,e.ServiceTaskFiltersCloudComponent=xe,e.ServiceTaskListCloudComponent=ge,e.ServiceTaskListCloudService=ye,e.StartProcessCloudComponent=$t,e.StartProcessCloudModule=Kt,e.StartProcessCloudService=Vt,e.StartTaskCloudComponent=He,e.StartTaskCloudModule=ht,e.StartTaskCloudService=ir,e.TASK_ASSIGNED_STATE=de,e.TASK_CREATED_STATE=ue,e.TASK_FILTERS_SERVICE_TOKEN=Ce,e.TaskCloudModule=Ct,e.TaskCloudService=fe,e.TaskDirectiveModule=Tt,e.TaskFilterCloudModel=Ee,e.TaskFilterCloudService=Ae,e.TaskFiltersCloudComponent=ke,e.TaskFiltersCloudModule=je,e.TaskFormCloudComponent=Et,e.TaskFormModule=Ft,e.TaskHeaderCloudComponent=yt,e.TaskHeaderCloudModule=gt,e.TaskListCloudComponent=he,e.TaskListCloudModule=De,e.TaskListCloudService=ne,e.TaskListCloudSortingModel=se,e.TaskQueryCloudRequestModel=re,e.TaskVariableCloud=Ye,e.UnClaimTaskCloudDirective=St,e.UploadCloudWidgetComponent=lt,e.UserPreferenceCloudService=zt,e.processCloudPresetsDefaultModel=wt,e.serviceTaskPresetsCloudDefaultModel={default:[{key:"activityName",type:"text",title:"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.ACTIVITY_NAME",sortable:!0},{key:"status",type:"text",title:"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.STATUS",sortable:!0},{key:"startedDate",type:"text",title:"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.STARTED_DATE",cssClass:"hidden",sortable:!0},{key:"completedDate",type:"text",title:"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.COMPLETED_DATE",cssClass:"hidden",sortable:!0}]},e.taskPresetsCloudDefaultModel=ae,e.ɵ0=tr,e.ɵa=$,e.ɵb=be,e.ɵc=Pe,e.ɵd=Se,e.ɵe=ie,e.ɵf=ut,e.ɵg=dt,e.ɵh=ft,e.ɵi=me,e.ɵj=_e,e.ɵk=Ne,e.ɵl=we,e.ɵm=Ve,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=adf-process-services-cloud.umd.min.js.map