/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnChanges, SimpleChanges, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { TaskFilterCloudService } from '../services/task-filter-cloud.service';
import { TaskFilterCloudModel, FilterParamsModel } from '../models/filter-cloud.model';
import { AppConfigService, TranslationService } from '@alfresco/adf-core';
import { BaseTaskFiltersCloudComponent } from './base-task-filters-cloud.component';
import { TaskDetailsCloudModel } from '../../start-task/models/task-details-cloud.model';
import { TaskCloudEngineEvent } from '../../../models/engine-event-cloud.model';
import * as ɵngcc0 from '@angular/core';
export declare class TaskFiltersCloudComponent extends BaseTaskFiltersCloudComponent implements OnInit, OnChanges {
    private taskFilterCloudService;
    private translationService;
    private appConfigService;
    filterSelected: EventEmitter<TaskFilterCloudModel>;
    filterClicked: EventEmitter<TaskFilterCloudModel>;
    filterCounterUpdated: EventEmitter<TaskCloudEngineEvent[]>;
    filters$: Observable<TaskFilterCloudModel[]>;
    filters: TaskFilterCloudModel[];
    currentFilter: TaskFilterCloudModel;
    enableNotifications: boolean;
    constructor(taskFilterCloudService: TaskFilterCloudService, translationService: TranslationService, appConfigService: AppConfigService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    getFilters(appName: string): void;
    updateFilterCounters(): void;
    updateFilterCounter(filter: TaskFilterCloudModel): void;
    initFilterCounterNotifications(): void;
    checkFilterCounter(filterNotification: TaskDetailsCloudModel): void;
    isFilterPresent(filter: TaskFilterCloudModel, filterNotification: TaskDetailsCloudModel): boolean;
    selectFilter(paramFilter: FilterParamsModel): void;
    selectFilterAndEmit(newParamFilter: FilterParamsModel): void;
    onFilterClick(filter: FilterParamsModel): void;
    selectDefaultTaskFilter(): void;
    isFilterListEmpty(): boolean;
    private resetFilter;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TaskFiltersCloudComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TaskFiltersCloudComponent, "adf-cloud-task-filters", never, {}, { "filterSelected": "filterSelected"; "filterClicked": "filterClicked"; "filterCounterUpdated": "filterCounterUpdated"; }, never, never>;
}

//# sourceMappingURL=task-filters-cloud.component.d.ts.map