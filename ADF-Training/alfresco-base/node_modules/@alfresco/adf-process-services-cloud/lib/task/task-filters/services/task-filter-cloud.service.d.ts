/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AlfrescoApiService, AppConfigService, IdentityUserService } from '@alfresco/adf-core';
import { Observable } from 'rxjs';
import { TaskFilterCloudModel } from '../models/filter-cloud.model';
import { BaseCloudService } from '../../../services/base-cloud.service';
import { PreferenceCloudServiceInterface } from '../../../services/preference-cloud.interface';
import { NotificationCloudService } from '../../../services/notification-cloud.service';
import { TaskCloudEngineEvent } from '../../../models/engine-event-cloud.model';
import * as ɵngcc0 from '@angular/core';
export declare class TaskFilterCloudService extends BaseCloudService {
    private identityUserService;
    preferenceService: PreferenceCloudServiceInterface;
    private notificationCloudService;
    private filtersSubject;
    filters$: Observable<TaskFilterCloudModel[]>;
    constructor(identityUserService: IdentityUserService, preferenceService: PreferenceCloudServiceInterface, apiService: AlfrescoApiService, appConfigService: AppConfigService, notificationCloudService: NotificationCloudService);
    private createDefaultFilters;
    private hasPreferences;
    private hasTaskFilters;
    private createTaskFilters;
    private getTaskFiltersByKey;
    getTaskListFilters(appName?: string): Observable<TaskFilterCloudModel[]>;
    getTaskFilterById(appName: string, id: string): Observable<TaskFilterCloudModel>;
    addFilter(newFilter: TaskFilterCloudModel): Observable<TaskFilterCloudModel[]>;
    private addFiltersToStream;
    updateFilter(updatedFilter: TaskFilterCloudModel): Observable<TaskFilterCloudModel[]>;
    deleteFilter(deletedFilter: TaskFilterCloudModel): Observable<TaskFilterCloudModel[]>;
    isDefaultFilter(filterName: string): boolean;
    getTaskFilterCounter(taskFilter: TaskFilterCloudModel): Observable<any>;
    private updateTaskFilters;
    private prepareKey;
    private findFiltersByKeyInPreferences;
    private defaultTaskFilters;
    getTaskNotificationSubscription(appName: string): Observable<TaskCloudEngineEvent[]>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TaskFilterCloudService, never>;
}

//# sourceMappingURL=task-filter-cloud.service.d.ts.map