{"version":3,"file":"base-edit-task-filter-cloud.component.d.ts","sources":["base-edit-task-filter-cloud.component.d.ts"],"names":[],"mappingssourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnChanges, SimpleChanges, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { FilterOptions, TaskFilterAction, TaskFilterProperties } from '../../models/filter-cloud.model';\nimport { TaskCloudService } from './../../../services/task-cloud.service';\nimport { AppsProcessCloudService } from './../../../../app/services/apps-process-cloud.service';\nimport { DateCloudFilterType, DateRangeFilter } from '../../../../models/date-cloud-filter.model';\nimport { Moment } from 'moment';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { DateAdapter } from '@angular/material/core';\nimport { IdentityGroupModel, IdentityUserModel, TranslationService, UserPreferencesService } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material/dialog';\nexport interface DropdownOption {\n    value: string;\n    label: string;\n}\nexport declare abstract class BaseEditTaskFilterCloudComponent<T> implements OnInit, OnChanges, OnDestroy {\n    protected formBuilder: FormBuilder;\n    protected dateAdapter: DateAdapter<Moment>;\n    protected userPreferencesService: UserPreferencesService;\n    protected appsProcessCloudService: AppsProcessCloudService;\n    protected taskCloudService: TaskCloudService;\n    protected dialog: MatDialog;\n    protected translateService: TranslationService;\n    static ACTION_SAVE: string;\n    static ACTION_SAVE_AS: string;\n    static ACTION_DELETE: string;\n    static APP_RUNNING_STATUS: string;\n    static APPLICATION_NAME: string;\n    static PROCESS_DEFINITION_NAME: string;\n    static LAST_MODIFIED: string;\n    static SORT: string;\n    static ORDER: string;\n    static DEFAULT_ACTIONS: string[];\n    static FORMAT_DATE: string;\n    static ACTIONS_DISABLED_BY_DEFAULT: string[];\n    appName: string;\n    id: string;\n    showTitle: boolean;\n    showTaskFilterName: boolean;\n    filterProperties: string[];\n    role: string;\n    showFilterActions: boolean;\n    actions: string[];\n    sortProperties: string[];\n    action: EventEmitter<TaskFilterAction>;\n    protected applicationNames: DropdownOption[];\n    protected processDefinitionNames: DropdownOption[];\n    protected formHasBeenChanged: boolean;\n    editTaskFilterForm: FormGroup;\n    taskFilterProperties: TaskFilterProperties[];\n    taskFilterActions: TaskFilterAction[];\n    toggleFilterActions: boolean;\n    sortDirections: DropdownOption[];\n    allProcessDefinitionNamesOption: DropdownOption;\n    taskFilter: T;\n    changedTaskFilter: T;\n    filterChange: EventEmitter<T>;\n    protected onDestroy$: Subject<boolean>;\n    isLoading: boolean;\n    constructor(formBuilder: FormBuilder, dateAdapter: DateAdapter<Moment>, userPreferencesService: UserPreferencesService, appsProcessCloudService: AppsProcessCloudService, taskCloudService: TaskCloudService, dialog: MatDialog, translateService: TranslationService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    createFilterActions(): TaskFilterAction[];\n    hasFormChanged(action: TaskFilterAction): boolean;\n    onExpand(): void;\n    onClose(): void;\n    isDisabledAction(action: TaskFilterAction): boolean;\n    protected deepCompare(left: any, right: any): boolean;\n    getSanitizeFilterName(filterName: string): string;\n    private replaceSpaceWithHyphen;\n    executeFilterActions(action: TaskFilterAction): void;\n    getRunningApplications(): void;\n    getProcessDefinitions(): void;\n    checkMandatoryActions(): void;\n    private isValidAction;\n    isFormValid(): boolean;\n    getPropertyController(property: TaskFilterProperties): AbstractControl;\n    onDateChanged(newDateValue: any, dateProperty: TaskFilterProperties): void;\n    onDateRangeFilterChanged(dateRange: DateRangeFilter, property: TaskFilterProperties): void;\n    onChangedUser(users: IdentityUserModel[], userProperty: TaskFilterProperties): void;\n    onAssignedChange(assignedValue: IdentityUserModel): void;\n    onAssignedGroupsChange(groups: IdentityGroupModel[]): void;\n    hasError(property: TaskFilterProperties): boolean;\n    hasLastModifiedProperty(): boolean;\n    get createSortProperties(): FilterOptions[];\n    createAndFilterActions(): TaskFilterAction[];\n    isValidProperty(filterProperties: string[], key: string): boolean;\n    checkForProperty(property: string): boolean;\n    hasSortProperty(): boolean;\n    removeOrderProperty(filteredProperties: TaskFilterProperties[]): TaskFilterProperties[];\n    createAndFilterProperties(): TaskFilterProperties[];\n    onFilterChange(): void;\n    getFormControlsConfig(taskFilterProperties: TaskFilterProperties[]): any;\n    private getAttributesControlConfig;\n    buildForm(taskFilterProperties: TaskFilterProperties[]): void;\n    onDateTypeChange(dateType: DateCloudFilterType, property: TaskFilterProperties): void;\n    protected retrieveTaskFilterAndBuildForm(): void;\n    delete(deleteAction: TaskFilterAction): void;\n    save(saveAction: TaskFilterAction): void;\n    saveAs(saveAsAction: TaskFilterAction): void;\n    checkMandatoryFilterProperties(): void;\n    checkMandatorySortProperties(): void;\n    abstract getDefaultFilterProperties(): string[];\n    abstract getDefaultSortProperties(): string[];\n    abstract isDisabledForDefaultFilters(action: TaskFilterAction): boolean;\n    abstract createTaskFilterProperties(): TaskFilterProperties[];\n    protected abstract getTaskFilterById(appName: string, id: string): any;\n    abstract assignNewFilter(formValues: any): void;\n    protected abstract restoreDefaultTaskFilters(): Observable<T[]>;\n    protected abstract addFilter(filterToAdd: T): Observable<any>;\n    protected abstract deleteFilter(filterToDelete: T): Observable<T[]>;\n    protected abstract updateFilter(filterToUpdate: T): Observable<any>;\n}\n"]}