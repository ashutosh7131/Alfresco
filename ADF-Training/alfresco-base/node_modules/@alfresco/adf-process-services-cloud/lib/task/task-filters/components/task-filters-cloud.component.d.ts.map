{"version":3,"file":"task-filters-cloud.component.d.ts","sources":["task-filters-cloud.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnChanges, SimpleChanges, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskFilterCloudService } from '../services/task-filter-cloud.service';\nimport { TaskFilterCloudModel, FilterParamsModel } from '../models/filter-cloud.model';\nimport { AppConfigService, TranslationService } from '@alfresco/adf-core';\nimport { BaseTaskFiltersCloudComponent } from './base-task-filters-cloud.component';\nimport { TaskDetailsCloudModel } from '../../start-task/models/task-details-cloud.model';\nimport { TaskCloudEngineEvent } from '../../../models/engine-event-cloud.model';\nexport declare class TaskFiltersCloudComponent extends BaseTaskFiltersCloudComponent implements OnInit, OnChanges {\n    private taskFilterCloudService;\n    private translationService;\n    private appConfigService;\n    filterSelected: EventEmitter<TaskFilterCloudModel>;\n    filterClicked: EventEmitter<TaskFilterCloudModel>;\n    filterCounterUpdated: EventEmitter<TaskCloudEngineEvent[]>;\n    filters$: Observable<TaskFilterCloudModel[]>;\n    filters: TaskFilterCloudModel[];\n    currentFilter: TaskFilterCloudModel;\n    enableNotifications: boolean;\n    constructor(taskFilterCloudService: TaskFilterCloudService, translationService: TranslationService, appConfigService: AppConfigService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    getFilters(appName: string): void;\n    updateFilterCounters(): void;\n    updateFilterCounter(filter: TaskFilterCloudModel): void;\n    initFilterCounterNotifications(): void;\n    checkFilterCounter(filterNotification: TaskDetailsCloudModel): void;\n    isFilterPresent(filter: TaskFilterCloudModel, filterNotification: TaskDetailsCloudModel): boolean;\n    selectFilter(paramFilter: FilterParamsModel): void;\n    selectFilterAndEmit(newParamFilter: FilterParamsModel): void;\n    onFilterClick(filter: FilterParamsModel): void;\n    selectDefaultTaskFilter(): void;\n    isFilterListEmpty(): boolean;\n    private resetFilter;\n}\n"]}