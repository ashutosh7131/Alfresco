/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { IdentityUserService } from '@alfresco/adf-core';
import { Observable } from 'rxjs';
import { ServiceTaskFilterCloudModel } from '../models/filter-cloud.model';
import { PreferenceCloudServiceInterface } from '../../../services/preference-cloud.interface';
import * as ɵngcc0 from '@angular/core';
export declare class ServiceTaskFilterCloudService {
    private identityUserService;
    preferenceService: PreferenceCloudServiceInterface;
    private filtersSubject;
    filters$: Observable<ServiceTaskFilterCloudModel[]>;
    constructor(identityUserService: IdentityUserService, preferenceService: PreferenceCloudServiceInterface);
    private createDefaultFilters;
    private hasPreferences;
    private hasTaskFilters;
    private createTaskFilters;
    private getTaskFiltersByKey;
    getTaskListFilters(appName?: string): Observable<ServiceTaskFilterCloudModel[]>;
    getTaskFilterById(appName: string, id: string): Observable<ServiceTaskFilterCloudModel>;
    addFilter(newFilter: ServiceTaskFilterCloudModel): Observable<ServiceTaskFilterCloudModel[]>;
    private addFiltersToStream;
    updateFilter(updatedFilter: ServiceTaskFilterCloudModel): Observable<ServiceTaskFilterCloudModel[]>;
    deleteFilter(deletedFilter: ServiceTaskFilterCloudModel): Observable<ServiceTaskFilterCloudModel[]>;
    isDefaultFilter(filterName: string): boolean;
    private updateTaskFilters;
    private prepareKey;
    private findFiltersByKeyInPreferences;
    private defaultServiceTaskFilters;
    generateRandomId(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ServiceTaskFilterCloudService, never>;
}

//# sourceMappingURL=service-task-filter-cloud.service.d.ts.map