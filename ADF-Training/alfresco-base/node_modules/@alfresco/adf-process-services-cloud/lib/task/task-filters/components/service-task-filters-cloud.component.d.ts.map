{"version":3,"file":"service-task-filters-cloud.component.d.ts","sources":["service-task-filters-cloud.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnChanges, SimpleChanges, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FilterParamsModel, ServiceTaskFilterCloudModel } from '../models/filter-cloud.model';\nimport { TranslationService } from '@alfresco/adf-core';\nimport { BaseTaskFiltersCloudComponent } from './base-task-filters-cloud.component';\nimport { ServiceTaskFilterCloudService } from '../services/service-task-filter-cloud.service';\nexport declare class ServiceTaskFiltersCloudComponent extends BaseTaskFiltersCloudComponent implements OnInit, OnChanges {\n    private serviceTaskFilterCloudService;\n    private translationService;\n    filterSelected: EventEmitter<ServiceTaskFilterCloudModel>;\n    filterClicked: EventEmitter<ServiceTaskFilterCloudModel>;\n    filters$: Observable<ServiceTaskFilterCloudModel[]>;\n    filters: ServiceTaskFilterCloudModel[];\n    currentFilter: ServiceTaskFilterCloudModel;\n    constructor(serviceTaskFilterCloudService: ServiceTaskFilterCloudService, translationService: TranslationService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    getFilters(appName: string): void;\n    selectFilter(paramFilter: FilterParamsModel): void;\n    selectFilterAndEmit(newParamFilter: FilterParamsModel): void;\n    onFilterClick(filter: FilterParamsModel): void;\n    selectDefaultTaskFilter(): void;\n    isFilterListEmpty(): boolean;\n    private resetFilter;\n}\n"]}