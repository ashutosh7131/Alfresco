/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnChanges, SimpleChanges, OnInit } from '@angular/core';
import { TaskDetailsCloudModel } from '../../start-task/models/task-details-cloud.model';
import { TaskCloudService } from '../../services/task-cloud.service';
import { FormRenderingService, FormModel, ContentLinkModel } from '@alfresco/adf-core';
export declare class TaskFormCloudComponent implements OnInit, OnChanges {
    private taskCloudService;
    private formRenderingService;
    appName: string;
    taskId: string;
    showTitle: boolean;
    showRefreshButton: boolean;
    showValidationIcon: boolean;
    showCancelButton: boolean;
    showCompleteButton: boolean;
    readOnly: boolean;
    formSaved: EventEmitter<FormModel>;
    formCompleted: EventEmitter<FormModel>;
    taskCompleted: EventEmitter<string>;
    taskClaimed: EventEmitter<string>;
    taskUnclaimed: EventEmitter<string>;
    cancelClick: EventEmitter<string>;
    error: EventEmitter<any>;
    formContentClicked: EventEmitter<ContentLinkModel>;
    taskDetails: TaskDetailsCloudModel;
    candidateUsers: string[];
    candidateGroups: string[];
    loading: boolean;
    constructor(taskCloudService: TaskCloudService, formRenderingService: FormRenderingService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    loadTask(): void;
    hasForm(): boolean;
    canCompleteTask(): boolean;
    canClaimTask(): boolean;
    hasCandidateUsers(): boolean;
    hasCandidateGroups(): boolean;
    hasCandidateUsersOrGroups(): boolean;
    canUnclaimTask(): boolean;
    isReadOnly(): boolean;
    onCompleteTask(): void;
    onClaimTask(): void;
    onUnclaimTask(): void;
    onCancelClick(): void;
    onFormSaved(form: FormModel): void;
    onFormCompleted(form: FormModel): void;
    onError(data: any): void;
    onFormContentClicked(content: ContentLinkModel): void;
}
