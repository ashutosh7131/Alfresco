/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AlfrescoApiService, LogService, NotificationService } from '@alfresco/adf-core';
import { MatDialog } from '@angular/material/dialog';
import { Node, NodesApi } from '@alfresco/js-api';
import { Observable } from 'rxjs';
import { DestinationFolderPathModel } from '../models/form-cloud-representation.model';
import * as ɵngcc0 from '@angular/core';
export declare class ContentCloudNodeSelectorService {
    private apiService;
    private notificationService;
    private logService;
    private dialog;
    private _nodesApi;
    get nodesApi(): NodesApi;
    sourceNodeNotFound: boolean;
    constructor(apiService: AlfrescoApiService, notificationService: NotificationService, logService: LogService, dialog: MatDialog);
    openUploadFileDialog(currentFolderId?: string, selectionMode?: string, isAllFileSources?: boolean, restrictRootToCurrentFolderId?: boolean): Observable<Node[]>;
    getNodeIdFromPath(destinationFolderPath: DestinationFolderPathModel): Promise<string>;
    getNodeIdFromFolderVariableValue(variableValue: string, defaultAlias?: string): Promise<string>;
    isExistingNode(nodeId: string): Promise<boolean>;
    private getNodeId;
    private openContentNodeDialog;
    close(): void;
    private handleError;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ContentCloudNodeSelectorService, never>;
}

//# sourceMappingURL=content-cloud-node-selector.service.d.ts.map