{"version":3,"file":"form-cloud.component.d.ts","sources":["form-cloud.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { FormBaseComponent, FormFieldModel, FormOutcomeModel, WidgetVisibilityService, FormService, FormFieldValidator, FormModel, ContentLinkModel } from '@alfresco/adf-core';\nimport { FormCloudService } from '../services/form-cloud.service';\nimport { TaskVariableCloud } from '../models/task-variable-cloud.model';\nimport { TaskDetailsCloudModel } from '../../task/start-task/models/task-details-cloud.model';\nexport declare class FormCloudComponent extends FormBaseComponent implements OnChanges, OnDestroy {\n    protected formCloudService: FormCloudService;\n    protected formService: FormService;\n    protected visibilityService: WidgetVisibilityService;\n    appName: string;\n    appVersion?: number;\n    formId: string;\n    processInstanceId: string;\n    form: FormModel;\n    taskId: string;\n    data: TaskVariableCloud[];\n    fieldValidators: FormFieldValidator[];\n    formSaved: EventEmitter<FormModel>;\n    formCompleted: EventEmitter<FormModel>;\n    formLoaded: EventEmitter<FormModel>;\n    formDataRefreshed: EventEmitter<FormModel>;\n    formContentClicked: EventEmitter<ContentLinkModel>;\n    protected subscriptions: Subscription[];\n    nodeId: string;\n    formCloudRepresentationJSON: any;\n    protected onDestroy$: Subject<boolean>;\n    constructor(formCloudService: FormCloudService, formService: FormService, visibilityService: WidgetVisibilityService);\n    onKeyDown(event: KeyboardEvent): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    onRefreshClicked(): void;\n    loadForm(): void;\n    findProcessVariablesByTaskId(appName: string, taskId: string): Observable<TaskVariableCloud[]>;\n    isAProcessTask(taskRepresentation: TaskDetailsCloudModel): boolean;\n    getFormByTaskId(appName: string, taskId: string, version?: number): Promise<FormModel>;\n    getFormById(appName: string, formId: string, appVersion?: number): void;\n    saveTaskForm(): void;\n    completeTaskForm(outcome?: string): void;\n    parseForm(formCloudRepresentationJSON: any): FormModel;\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[];\n    checkVisibility(field: FormFieldModel): void;\n    private refreshFormData;\n    protected onFormLoaded(form: FormModel): void;\n    protected onFormDataRefreshed(form: FormModel): void;\n    protected onTaskSaved(form: FormModel): void;\n    protected onTaskSavedError(error: any): void;\n    protected onTaskCompleted(form: FormModel): void;\n    protected onTaskCompletedError(error: any): void;\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean;\n    protected storeFormAsMetadata(): void;\n    ngOnDestroy(): void;\n}\n"]}