{"version":3,"file":"upload-cloud.widget.d.ts","sources":["upload-cloud.widget.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ElementRef, OnInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { WidgetComponent, LogService, FormService, ThumbnailService, NotificationService } from '@alfresco/adf-core';\nimport { ProcessCloudContentService } from '../../../services/process-cloud-content.service';\nexport declare class UploadCloudWidgetComponent extends WidgetComponent implements OnInit {\n    private thumbnailService;\n    protected processCloudContentService: ProcessCloudContentService;\n    protected notificationService: NotificationService;\n    protected logService: LogService;\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string;\n    mimeTypeIcon: string;\n    fileInput: ElementRef;\n    constructor(formService: FormService, thumbnailService: ThumbnailService, processCloudContentService: ProcessCloudContentService, notificationService: NotificationService, logService: LogService);\n    ngOnInit(): void;\n    removeFile(file: any): void;\n    onFileChanged(event: any): void;\n    private isUploaded;\n    protected fixIncompatibilityFromPreviousAndNewForm(filesSaved: Node[]): void;\n    getIcon(mimeType: string): string;\n    private uploadRawContent;\n    getMultipleFileParam(): void;\n    get uploadedFiles(): any[];\n    private removeElementFromList;\n    private resetFormValues;\n    fileClicked(file: any): void;\n    isAlfrescoAndLocal(): boolean;\n    isPathVariableType(type: string): boolean;\n    setDestinationFolderPathFromMappedVariable(): void;\n    private prepareUploadWidgetDestinationFolderPathFromStringVariable;\n    private prepareUploadWidgetDestinationFolderPathFromFolderVariable;\n    private setUploadWidgetDestinationFolderPath;\n    private getDestinationFolderPathValue;\n}\n"]}