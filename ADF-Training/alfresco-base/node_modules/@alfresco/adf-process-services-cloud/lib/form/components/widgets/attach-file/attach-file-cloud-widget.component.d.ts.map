{"version":3,"file":"attach-file-cloud-widget.component.d.ts","sources":["attach-file-cloud-widget.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnDestroy, OnInit } from '@angular/core';\nimport { FormService, LogService, ThumbnailService, NotificationService, AppConfigService, AlfrescoApiService, DestinationFolderPath } from '@alfresco/adf-core';\nimport { Node, NodesApi, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { ContentCloudNodeSelectorService } from '../../../services/content-cloud-node-selector.service';\nimport { ProcessCloudContentService } from '../../../services/process-cloud-content.service';\nimport { UploadCloudWidgetComponent } from './upload-cloud.widget';\nimport { DestinationFolderPathModel } from '../../../models/form-cloud-representation.model';\nimport { ContentNodeSelectorPanelService } from '@alfresco/adf-content-services';\nexport declare class AttachFileCloudWidgetComponent extends UploadCloudWidgetComponent implements OnInit, OnDestroy {\n    private contentNodeSelectorService;\n    private appConfigService;\n    private apiService;\n    private contentNodeSelectorPanelService;\n    static ALIAS_ROOT_FOLDER: string;\n    static ALIAS_USER_FOLDER: string;\n    static APP_NAME: string;\n    static VALID_ALIAS: string[];\n    static RETRIEVE_METADATA_OPTION: string;\n    typeId: string;\n    rootNodeId: string;\n    selectedNode: Node;\n    _nodesApi: NodesApi;\n    get nodesApi(): NodesApi;\n    displayedColumns: string[];\n    constructor(formService: FormService, logger: LogService, thumbnails: ThumbnailService, processCloudContentService: ProcessCloudContentService, notificationService: NotificationService, contentNodeSelectorService: ContentCloudNodeSelectorService, appConfigService: AppConfigService, apiService: AlfrescoApiService, contentNodeSelectorPanelService: ContentNodeSelectorPanelService);\n    ngOnInit(): void;\n    isPathStaticType(): boolean;\n    isUploadButtonVisible(): boolean;\n    onRemoveAttachFile(file: File | RelatedContentRepresentation | Node): void;\n    fetchAppNameFromAppConfig(): string;\n    replaceAppNameAliasWithValue(path: string): string;\n    openSelectDialog(): Promise<void>;\n    private getDestinationFolderNodeId;\n    getNodeIdFromPath(destinationFolderPath: DestinationFolderPath): Promise<string>;\n    getNodeIdFromFolderVariableValue(destinationFolderPath: DestinationFolderPath): Promise<string>;\n    getAliasAndRelativePathFromDestinationFolderPath(destinationFolderPath: string): DestinationFolderPathModel;\n    removeExistingSelection(selections: Node[]): Node[];\n    downloadContent(file: Node): void;\n    onAttachFileClicked(nodeSelector: any): void;\n    getWidgetIcon(): string;\n    onRowClicked(file?: Node): void;\n    contentModelFormFileHandler(file?: any): void;\n    isRetrieveMetadataOptionEnabled(): boolean;\n    isValidAlias(alias: string): boolean;\n    ngOnDestroy(): void;\n}\n"]}