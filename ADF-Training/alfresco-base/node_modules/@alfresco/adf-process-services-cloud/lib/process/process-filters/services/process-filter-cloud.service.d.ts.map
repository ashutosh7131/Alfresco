{"version":3,"file":"process-filter-cloud.service.d.ts","sources":["process-filter-cloud.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdentityUserService } from '@alfresco/adf-core';\nimport { Observable } from 'rxjs';\nimport { ProcessFilterCloudModel } from '../models/process-filter-cloud.model';\nimport { PreferenceCloudServiceInterface } from '../../../services/preference-cloud.interface';\nexport declare class ProcessFilterCloudService {\n    preferenceService: PreferenceCloudServiceInterface;\n    private identityUserService;\n    private filtersSubject;\n    filters$: Observable<ProcessFilterCloudModel[]>;\n    constructor(preferenceService: PreferenceCloudServiceInterface, identityUserService: IdentityUserService);\n    readQueryParams(obj: Object): ProcessFilterCloudModel;\n    writeQueryParams(value: Object, filterProperties: string[], appName?: string, id?: string): Object;\n    private createDefaultFilters;\n    getProcessFilters(appName: string): Observable<ProcessFilterCloudModel[]>;\n    getFilterById(appName: string, id: string): Observable<ProcessFilterCloudModel>;\n    addFilter(newFilter: ProcessFilterCloudModel): Observable<ProcessFilterCloudModel[]>;\n    updateFilter(updatedFilter: ProcessFilterCloudModel): Observable<ProcessFilterCloudModel[]>;\n    deleteFilter(deletedFilter: ProcessFilterCloudModel): Observable<ProcessFilterCloudModel[]>;\n    isDefaultFilter(filterName: string): boolean;\n    private hasPreferences;\n    private hasProcessFilters;\n    private createProcessFilters;\n    private getProcessFiltersByKey;\n    private updateProcessFilters;\n    private prepareKey;\n    private findFiltersByKeyInPreferences;\n    private addFiltersToStream;\n    private handleProcessError;\n    private defaultProcessFilters;\n}\n"]}