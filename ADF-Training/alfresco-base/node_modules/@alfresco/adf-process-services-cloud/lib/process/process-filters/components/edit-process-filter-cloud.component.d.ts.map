{"version":3,"file":"edit-process-filter-cloud.component.d.ts","sources":["edit-process-filter-cloud.component.d.ts"],"names":[],"mappingssourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter, OnInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { Moment } from 'moment';\nimport { AppsProcessCloudService } from '../../../app/services/apps-process-cloud.service';\nimport { ProcessFilterCloudModel, ProcessFilterProperties, ProcessFilterAction, ProcessFilterOptions } from '../models/process-filter-cloud.model';\nimport { IdentityUserModel, TranslationService, UserPreferencesService } from '@alfresco/adf-core';\nimport { ProcessFilterCloudService } from '../services/process-filter-cloud.service';\nimport { ProcessCloudService } from '../../services/process-cloud.service';\nimport { DateCloudFilterType, DateRangeFilter } from '../../../models/date-cloud-filter.model';\nexport interface DropdownOption {\n    value: string;\n    label: string;\n}\nexport declare class EditProcessFilterCloudComponent implements OnInit, OnChanges, OnDestroy {\n    private formBuilder;\n    dialog: MatDialog;\n    private dateAdapter;\n    private userPreferencesService;\n    private translateService;\n    private processFilterCloudService;\n    private appsProcessCloudService;\n    private processCloudService;\n    static ACTION_SAVE: string;\n    static ACTION_SAVE_AS: string;\n    static ACTION_DELETE: string;\n    static DEFAULT_PROCESS_FILTER_PROPERTIES: string[];\n    static DEFAULT_SORT_PROPERTIES: string[];\n    static DEFAULT_ACTIONS: string[];\n    DATE_FORMAT: string;\n    appName: string;\n    role: string;\n    id: string;\n    filterProperties: string[];\n    sortProperties: string[];\n    actions: string[];\n    showFilterActions: boolean;\n    showTitle: boolean;\n    showProcessFilterName: boolean;\n    filterChange: EventEmitter<ProcessFilterCloudModel>;\n    action: EventEmitter<ProcessFilterAction>;\n    private _filter;\n    protected filterHasBeenChanged: boolean;\n    get processFilter(): ProcessFilterCloudModel;\n    set processFilter(value: ProcessFilterCloudModel);\n    status: Array<DropdownOption>;\n    directions: Array<DropdownOption>;\n    actionDisabledForDefault: string[];\n    applicationNames: any[];\n    allProcessDefinitionNamesOption: DropdownOption;\n    processDefinitionNames: any[];\n    editProcessFilterForm: FormGroup;\n    processFilterProperties: ProcessFilterProperties[];\n    processFilterActions: ProcessFilterAction[];\n    toggleFilterActions: boolean;\n    appVersionOptions: ProcessFilterOptions[];\n    initiatorOptions: IdentityUserModel[];\n    private onDestroy$;\n    isLoading: boolean;\n    private filterChangeSub;\n    constructor(formBuilder: FormBuilder, dialog: MatDialog, dateAdapter: DateAdapter<Moment>, userPreferencesService: UserPreferencesService, translateService: TranslationService, processFilterCloudService: ProcessFilterCloudService, appsProcessCloudService: AppsProcessCloudService, processCloudService: ProcessCloudService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    buildForm(processFilterProperties: ProcessFilterProperties[]): void;\n    getFormControlsConfig(processFilterProperties: ProcessFilterProperties[]): any;\n    private getAttributesControlConfig;\n    retrieveProcessFilterAndBuildForm(): void;\n    onFilterChange(): void;\n    createAndFilterProperties(): ProcessFilterProperties[];\n    checkMandatoryFilterProperties(): void;\n    private isValidProperty;\n    get createSortProperties(): ProcessFilterOptions[];\n    getAppVersionOptions(): void;\n    checkMandatorySortProperties(): void;\n    createAndFilterActions(): ProcessFilterAction[];\n    checkMandatoryActions(): void;\n    private isValidAction;\n    isFormValid(): boolean;\n    getPropertyController(property: ProcessFilterProperties): AbstractControl;\n    onDateChanged(newDateValue: Moment, dateProperty: ProcessFilterProperties): void;\n    onDateTypeChange(dateType: DateCloudFilterType, property: ProcessFilterProperties): void;\n    onDateRangeFilterChanged(dateRange: DateRangeFilter, property: ProcessFilterProperties): void;\n    onChangedUser(users: IdentityUserModel[], processProperty: ProcessFilterProperties): void;\n    hasError(property: ProcessFilterProperties): boolean;\n    compareFilters(editedQuery: ProcessFilterCloudModel, currentQuery: ProcessFilterCloudModel): boolean;\n    getRunningApplications(): void;\n    getProcessDefinitions(): void;\n    executeFilterActions(action: ProcessFilterAction): void;\n    save(saveAction: ProcessFilterAction): void;\n    delete(deleteAction: ProcessFilterAction): void;\n    saveAs(saveAsAction: ProcessFilterAction): void;\n    getSanitizeFilterName(filterName: string): string;\n    replaceSpaceWithHyphen(name: string): string;\n    restoreDefaultProcessFilters(): Observable<ProcessFilterCloudModel[]>;\n    onExpand(): void;\n    onClose(): void;\n    isDisabledAction(action: ProcessFilterAction): boolean;\n    hasFilterChanged(action: ProcessFilterAction): boolean;\n    private setLastModifiedToFilter;\n    private createFilterActions;\n    private createLastModifiedProperty;\n    private createProcessSortProperties;\n    private isFilterChanged;\n    private createProcessFilterProperties;\n}\n"]}