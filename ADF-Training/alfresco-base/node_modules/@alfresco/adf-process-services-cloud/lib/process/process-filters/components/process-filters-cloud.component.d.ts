/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnChanges, SimpleChanges, OnDestroy, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { ProcessFilterCloudService } from '../services/process-filter-cloud.service';
import { ProcessFilterCloudModel } from '../models/process-filter-cloud.model';
import { TranslationService } from '@alfresco/adf-core';
import { FilterParamsModel } from '../../../task/task-filters/models/filter-cloud.model';
import * as ɵngcc0 from '@angular/core';
export declare class ProcessFiltersCloudComponent implements OnInit, OnChanges, OnDestroy {
    private processFilterCloudService;
    private translationService;
    appName: string;
    filterParam: FilterParamsModel;
    showIcons: boolean;
    filterSelected: EventEmitter<ProcessFilterCloudModel>;
    filterClicked: EventEmitter<ProcessFilterCloudModel>;
    success: EventEmitter<any>;
    error: EventEmitter<any>;
    filters$: Observable<ProcessFilterCloudModel[]>;
    currentFilter: ProcessFilterCloudModel;
    filters: ProcessFilterCloudModel[];
    private onDestroy$;
    constructor(processFilterCloudService: ProcessFilterCloudService, translationService: TranslationService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    getFilters(appName: string): void;
    selectFilter(paramFilter: FilterParamsModel): void;
    private checkFilterNamesEquality;
    selectFilterAndEmit(newParamFilter: FilterParamsModel): void;
    selectFilterById(id: string): void;
    onFilterClick(filter: ProcessFilterCloudModel): void;
    selectDefaultProcessFilter(): void;
    getCurrentFilter(): ProcessFilterCloudModel;
    isFilterListEmpty(): boolean;
    private resetFilter;
    ngOnDestroy(): void;
    isActiveFilter(filter: any): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProcessFiltersCloudComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ProcessFiltersCloudComponent, "adf-cloud-process-filters", never, { "appName": "appName"; "showIcons": "showIcons"; "filterParam": "filterParam"; }, { "filterSelected": "filterSelected"; "filterClicked": "filterClicked"; "success": "success"; "error": "error"; }, never, never>;
}

//# sourceMappingURL=process-filters-cloud.component.d.ts.map