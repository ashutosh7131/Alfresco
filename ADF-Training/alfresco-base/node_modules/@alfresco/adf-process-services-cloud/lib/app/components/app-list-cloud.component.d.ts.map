{"version":3,"file":"app-list-cloud.component.d.ts","sources":["app-list-cloud.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CustomEmptyContentTemplateDirective } from '@alfresco/adf-core';\nimport { AfterContentInit, EventEmitter, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AppsProcessCloudService } from '../services/apps-process-cloud.service';\nimport { ApplicationInstanceModel } from '../models/application-instance.model';\nexport declare class AppListCloudComponent implements OnInit, AfterContentInit {\n    private appsProcessCloudService;\n    static LAYOUT_LIST: string;\n    static LAYOUT_GRID: string;\n    static RUNNING_STATUS: string;\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n    layoutType: string;\n    appClick: EventEmitter<ApplicationInstanceModel>;\n    apps$: Observable<any>;\n    loadingError$: Subject<boolean>;\n    hasEmptyCustomContentTemplate: boolean;\n    constructor(appsProcessCloudService: AppsProcessCloudService);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    onSelectApp(app: ApplicationInstanceModel): void;\n    isValidType(): boolean;\n    setDefaultLayoutType(): void;\n    isList(): boolean;\n    isGrid(): boolean;\n}\n"]}