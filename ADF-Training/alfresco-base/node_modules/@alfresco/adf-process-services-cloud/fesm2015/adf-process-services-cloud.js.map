{"version":3,"file":"adf-process-services-cloud.js","sources":["../../../process-services-cloud/src/lib/material.module.ts","../../../process-services-cloud/src/lib/app/models/application-instance.model.ts","../../../process-services-cloud/src/lib/app/components/app-details-cloud.component.ts","../../../process-services-cloud/src/lib/app/services/apps-process-cloud.service.ts","../../../process-services-cloud/src/lib/app/components/app-list-cloud.component.ts","../../../process-services-cloud/src/lib/app/app-list-cloud.module.ts","../../../process-services-cloud/src/lib/task/task-list/models/filter-cloud-model.ts","../../../process-services-cloud/src/lib/services/base-cloud.service.ts","../../../process-services-cloud/src/lib/task/task-list/services/task-list-cloud.service.ts","../../../process-services-cloud/src/lib/task/task-list/models/task-preset-cloud.model.ts","../../../process-services-cloud/src/lib/task/task-list/models/task-list-sorting.model.ts","../../../process-services-cloud/src/lib/task/start-task/models/start-task-cloud-request.model.ts","../../../process-services-cloud/src/lib/models/process-definition-cloud.model.ts","../../../process-services-cloud/src/lib/task/models/task.model.ts","../../../process-services-cloud/src/lib/task/services/task-cloud.service.ts","../../../process-services-cloud/src/lib/task/task-list/components/base-task-list-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-list/components/task-list-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-list/services/service-task-list-cloud.service.ts","../../../process-services-cloud/src/lib/task/task-list/components/service-task-list-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-list/task-list-cloud.module.ts","../../../process-services-cloud/src/lib/models/date-cloud-filter.model.ts","../../../process-services-cloud/src/lib/common/date-range-filter/date-range-filter.service.ts","../../../process-services-cloud/src/lib/task/task-filters/models/filter-cloud.model.ts","../../../process-services-cloud/src/lib/services/cloud-token.service.ts","../../../process-services-cloud/src/lib/services/notification-cloud.service.ts","../../../process-services-cloud/src/lib/task/task-filters/services/task-filter-cloud.service.ts","../../../process-services-cloud/src/lib/task/task-filters/components/base-task-filters-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-filters/components/task-filters-cloud.component.ts","../../../process-services-cloud/src/lib/common/date-range-filter/date-range-filter.component.ts","../../../process-services-cloud/src/lib/common/process-common.module.ts","../../../process-services-cloud/src/lib/people/components/people-cloud.component.ts","../../../process-services-cloud/src/lib/people/people-cloud.module.ts","../../../process-services-cloud/src/lib/task/task-filters/services/service-task-filter-cloud.service.ts","../../../process-services-cloud/src/lib/task/task-filters/components/task-filter-dialog/task-filter-dialog-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-filters/components/edit-task-filters/base-edit-task-filter-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-filters/components/edit-task-filters/edit-service-task-filter-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-filters/components/edit-task-filters/edit-task-filter-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-filters/components/service-task-filters-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-filters/components/task-assignment-filter/task-assignment-filter.component.ts","../../../process-services-cloud/src/lib/group/components/group-cloud.component.ts","../../../process-services-cloud/src/lib/group/pipe/group-initial.pipe.ts","../../../process-services-cloud/src/lib/group/group-cloud.module.ts","../../../process-services-cloud/src/lib/task/task-filters/task-filters-cloud.module.ts","../../../process-services-cloud/src/lib/task/start-task/components/start-task-cloud.component.ts","../../../process-services-cloud/src/lib/form/models/task-variable-cloud.model.ts","../../../process-services-cloud/src/lib/form/services/form-cloud.service.ts","../../../process-services-cloud/src/lib/form/components/form-cloud.component.ts","../../../process-services-cloud/src/lib/form/services/form-definition-selector-cloud.service.ts","../../../process-services-cloud/src/lib/form/components/form-definition-selector-cloud.component.ts","../../../process-services-cloud/src/lib/form/components/form-cloud-custom-outcomes.component.ts","../../../process-services-cloud/src/lib/form/components/widgets/date/date-cloud.widget.ts","../../../process-services-cloud/src/lib/form/components/widgets/dropdown/dropdown-cloud.widget.ts","../../../process-services-cloud/src/lib/form/components/widgets/group/group-cloud.widget.ts","../../../process-services-cloud/src/lib/form/components/widgets/people/people-cloud.widget.ts","../../../process-services-cloud/src/lib/form/services/content-cloud-node-selector.service.ts","../../../process-services-cloud/src/lib/form/services/process-cloud-content.service.ts","../../../process-services-cloud/src/lib/form/models/form-cloud-representation.model.ts","../../../process-services-cloud/src/lib/form/components/widgets/attach-file/upload-cloud.widget.ts","../../../process-services-cloud/src/lib/form/components/widgets/attach-file/attach-file-cloud-widget.component.ts","../../../process-services-cloud/src/lib/form/components/widgets/properties-viewer/properties-viewer.widget.ts","../../../process-services-cloud/src/lib/form/components/widgets/properties-viewer/properties-viewer-wrapper/properties-viewer-wrapper.component.ts","../../../process-services-cloud/src/lib/form/components/widgets/radio-buttons/radio-buttons-cloud.widget.ts","../../../process-services-cloud/src/lib/form/components/widgets/attach-file/file-properties-table-cloud.component.ts","../../../process-services-cloud/src/lib/form/form-cloud.module.ts","../../../process-services-cloud/src/lib/task/start-task/start-task-cloud.module.ts","../../../process-services-cloud/src/lib/task/task-header/components/task-header-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-header/task-header-cloud.module.ts","../../../process-services-cloud/src/lib/task/directives/complete-task.directive.ts","../../../process-services-cloud/src/lib/task/directives/claim-task-cloud.directive.ts","../../../process-services-cloud/src/lib/task/directives/unclaim-task-cloud.directive.ts","../../../process-services-cloud/src/lib/task/directives/task-directive.module.ts","../../../process-services-cloud/src/lib/task/task-form/components/task-form-cloud.component.ts","../../../process-services-cloud/src/lib/task/task-form/task-form.module.ts","../../../process-services-cloud/src/lib/task/task-cloud.module.ts","../../../process-services-cloud/src/lib/process/process-filters/models/process-filter-cloud.model.ts","../../../process-services-cloud/src/lib/process/process-filters/services/process-filter-cloud.service.ts","../../../process-services-cloud/src/lib/process/process-filters/components/process-filters-cloud.component.ts","../../../process-services-cloud/src/lib/process/process-filters/components/process-filter-dialog-cloud.component.ts","../../../process-services-cloud/src/lib/process/services/process-cloud.service.ts","../../../process-services-cloud/src/lib/process/process-filters/components/edit-process-filter-cloud.component.ts","../../../process-services-cloud/src/lib/process/process-filters/process-filters-cloud.module.ts","../../../process-services-cloud/src/lib/process/process-list/services/process-list-cloud.service.ts","../../../process-services-cloud/src/lib/process/process-list/models/process-cloud-preset.model.ts","../../../process-services-cloud/src/lib/process/process-list/models/process-cloud-query-request.model.ts","../../../process-services-cloud/src/lib/process/process-list/models/process-list-sorting.model.ts","../../../process-services-cloud/src/lib/process/process-list/components/process-list-cloud.component.ts","../../../process-services-cloud/src/lib/process/process-list/process-list-cloud.module.ts","../../../process-services-cloud/src/lib/process/start-process/services/start-process-cloud.service.ts","../../../process-services-cloud/src/lib/process/start-process/models/process-payload-cloud.model.ts","../../../process-services-cloud/src/lib/pipes/process-name-cloud.pipe.ts","../../../process-services-cloud/src/lib/process/start-process/components/start-process-cloud.component.ts","../../../process-services-cloud/src/lib/process/start-process/start-process-cloud.module.ts","../../../process-services-cloud/src/lib/process/process-header/components/process-header-cloud.component.ts","../../../process-services-cloud/src/lib/process/process-header/process-header-cloud.module.ts","../../../process-services-cloud/src/lib/process/directives/cancel-process.directive.ts","../../../process-services-cloud/src/lib/process/directives/process-directive.module.ts","../../../process-services-cloud/src/lib/process/process-cloud.module.ts","../../../process-services-cloud/src/lib/services/user-preference-cloud.service.ts","../../../process-services-cloud/src/lib/services/local-preference-cloud.service.ts","../../../process-services-cloud/src/lib/services/preference-cloud.interface.ts","../../../process-services-cloud/src/lib/services/form-fields.interfaces.ts","../../../process-services-cloud/src/lib/services/public-api.ts","../../../process-services-cloud/src/lib/form/components/cloud-form-rendering.service.ts","../../../process-services-cloud/src/lib/pipes/process-services-cloud-pipe.module.ts","../../../process-services-cloud/src/lib/process-services-cloud.module.ts","../../../process-services-cloud/src/lib/app/public-api.ts","../../../process-services-cloud/src/lib/process/process-list/public-api.ts","../../../process-services-cloud/src/lib/process/process-filters/public-api.ts","../../../process-services-cloud/src/lib/process/start-process/models/process-instance-cloud.model.ts","../../../process-services-cloud/src/lib/process/start-process/public-api.ts","../../../process-services-cloud/src/lib/process/process-header/public-api.ts","../../../process-services-cloud/src/lib/process/directives/public-api.ts","../../../process-services-cloud/src/lib/process/public-api.ts","../../../process-services-cloud/src/lib/task/task-list/models/service-task-cloud.model.ts","../../../process-services-cloud/src/lib/task/task-list/public-api.ts","../../../process-services-cloud/src/lib/task/task-filters/public-api.ts","../../../process-services-cloud/src/lib/task/start-task/models/task-details-cloud.model.ts","../../../process-services-cloud/src/lib/task/start-task/public-api.ts","../../../process-services-cloud/src/lib/task/task-header/public-api.ts","../../../process-services-cloud/src/lib/task/task-form/public-api.ts","../../../process-services-cloud/src/lib/task/directives/public-api.ts","../../../process-services-cloud/src/lib/task/models/public-api.ts","../../../process-services-cloud/src/lib/task/services/start-task-cloud.service.ts","../../../process-services-cloud/src/lib/task/public-api.ts","../../../process-services-cloud/src/lib/group/public-api.ts","../../../process-services-cloud/src/lib/people/public-api.ts","../../../process-services-cloud/src/lib/form/public-api.ts","../../../process-services-cloud/src/lib/types.ts","../../../process-services-cloud/src/lib/models/application-version.model.ts","../../../process-services-cloud/src/lib/models/engine-event-cloud.model.ts","../../../process-services-cloud/src/public-api.ts"],"names":["moment"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MCSa,qBAAsB,SAAQ,gBAAgB;AAC3D,IACI,YACI,UAA8B,EAC9B,gBAAkC;AAC1C,QAAQ,KAAK,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;AAC5C,KAAK;AACL,IAOI,aAAa,CAAC,WAAkC;AAAI,QAChD,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC;AAC3E,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,0BAA0B,CAAC,WAAW,CAAC,CAAC,CAAC;AACpF,QACQ,OAAO,IAAI,CAAC,IAAI,CAAmC,GAAG,EAAE,OAAO,CAAC;AACxE,aAAa,IAAI,CACD,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,CAClC,CAAC;AACd,KAAK;AACL;0MAAC;AACD,0PAxBK;AAAC;EADL,UAAU,SAAC,EAAE,UAAU,jCAC6B,YAR5C,kBAAkB;CAOD,MAAM,EAAE,TAPH,YAAF,gBAAgB;AAAG;;;;sHAAE;AAAC;AClBnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAGa,uBAAuB;AACpC,CAMC;AACD,MACa,+BAA+B;AAC5C;AAAE;AC7BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAe4vE","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatOptionModule, MatRippleModule } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { floatLabel: 'never' } }\n    ],\n    imports: [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule, MatExpansionModule\n    ],\n    exports: [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule, MatExpansionModule\n    ]\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_APP_INSTANCE_THEME = 'theme-2';\nexport const DEFAULT_APP_INSTANCE_ICON = 'favorite_border';\n\nexport interface ApplicationInstanceModel {\n    name?: string;\n    createdAt?: any;\n    status?: string;\n    theme?: string;\n    icon?: string;\n    description?: string;\n    connectors?: any;\n    descriptor?: Descriptor;\n}\n\nexport interface Descriptor {\n    name?: string;\n    projectId?: string;\n    releaseId?: string;\n    releaseVersion?: number;\n    security?: DescriptorSecurity[];\n    infrastructure?: DescriptorInfrastructure;\n    variables?: DescriptorVariables;\n    version?: string;\n}\n\nexport interface DescriptorSecurity {\n    role: string;\n    groups: string[];\n    users: string[];\n}\n\nexport interface DescriptorVariables {\n    [key: string]: any;\n    connectors?: { [key: string]: any; };\n}\n\nexport interface DescriptorInfrastructure {\n    [key: string]: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { ApplicationInstanceModel, DEFAULT_APP_INSTANCE_ICON, DEFAULT_APP_INSTANCE_THEME } from '../models/application-instance.model';\n\n@Component({\n  selector: 'adf-cloud-app-details',\n  templateUrl: './app-details-cloud.component.html',\n  styleUrls: ['./app-details-cloud.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AppDetailsCloudComponent {\n\n  @Input()\n  applicationInstance: ApplicationInstanceModel;\n\n  @Output()\n  selectedApp = new EventEmitter<ApplicationInstanceModel>();\n\n  /**\n   * Pass the selected app as next\n   * @param app\n   */\n  onSelectApp(app: ApplicationInstanceModel): void {\n    this.selectedApp.emit(app);\n  }\n\n  getTheme(): string {\n    return this.applicationInstance.theme || DEFAULT_APP_INSTANCE_THEME;\n  }\n\n  getIcon(): string {\n    return this.applicationInstance.icon || DEFAULT_APP_INSTANCE_ICON;\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';\nimport { Oauth2Auth } from '@alfresco/js-api';\nimport { ApplicationInstanceModel } from '../models/application-instance.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AppsProcessCloudService {\n\n    deployedApps: ApplicationInstanceModel[];\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private logService: LogService,\n        private appConfigService: AppConfigService) {\n        this.loadApps();\n    }\n\n    /**\n     * Gets a list of deployed apps for this user by status.\n     * @param status Required status value\n     * @param role to filter the apps\n     * @returns The list of deployed apps\n     */\n    getDeployedApplicationsByStatus(status: string, role?: string): Observable<ApplicationInstanceModel[]> {\n        return this.hasDeployedApps() ? of(this.deployedApps) : this.getApplicationsByStatus(status, role);\n    }\n\n    hasDeployedApps(): boolean {\n        return this.deployedApps && this.deployedApps.length > 0;\n    }\n\n    loadApps() {\n        const apps = this.appConfigService.get<any>('alfresco-deployed-apps', []);\n        apps.map((app) => {\n            app.theme = app.theme ? app.theme : 'theme-1';\n            app.icon = app.icon ? app.icon : 'favorite';\n        });\n        this.deployedApps = apps;\n    }\n\n    private getApplicationsByStatus(status: string, role?: string): Observable<ApplicationInstanceModel[]> {\n        if (status === '') {\n            return of([]);\n        }\n        const api: Oauth2Auth = this.apiService.getInstance().oauth2Auth;\n        const path = this.getApplicationUrl();\n        const pathParams = {}, queryParams = { status: status, roles : role, sort: 'name' },\n            headerParams = {}, formParams = {}, bodyParam = {},\n            contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(api.callCustomApi(path, 'GET', pathParams, queryParams, headerParams, formParams, bodyParam,\n            contentTypes, accepts))\n            .pipe(\n                map((applications: any) => {\n                    return applications.list.entries.map((application) => application.entry);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getApplicationUrl(): string {\n        return `${this.appConfigService.get('bpmHost')}/deployment-service/v1/applications`;\n    }\n\n    private handleError(error?: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CustomEmptyContentTemplateDirective } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, EventEmitter, Input, OnInit, Output, ContentChild } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { AppsProcessCloudService } from '../services/apps-process-cloud.service';\nimport { ApplicationInstanceModel } from '../models/application-instance.model';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-cloud-app-list',\n    templateUrl: './app-list-cloud.component.html',\n    styleUrls: ['./app-list-cloud.component.scss']\n})\nexport class AppListCloudComponent implements OnInit, AfterContentInit {\n\n    public static LAYOUT_LIST: string = 'LIST';\n    public static LAYOUT_GRID: string = 'GRID';\n    public static RUNNING_STATUS: string = 'RUNNING';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n\n    /** (**required**) Defines the layout of the apps. There are two possible\n     * values, \"GRID\" and \"LIST\".\n     */\n    @Input()\n    layoutType: string = AppListCloudComponent.LAYOUT_GRID;\n\n    /** Emitted when an app entry is clicked. */\n    @Output()\n    appClick = new EventEmitter<ApplicationInstanceModel>();\n\n    apps$: Observable<any>;\n    loadingError$ = new Subject<boolean>();\n    hasEmptyCustomContentTemplate: boolean = false;\n\n    constructor(private appsProcessCloudService: AppsProcessCloudService) { }\n\n    ngOnInit() {\n        if (!this.isValidType()) {\n            this.setDefaultLayoutType();\n        }\n\n        this.apps$ = this.appsProcessCloudService.getDeployedApplicationsByStatus(AppListCloudComponent.RUNNING_STATUS)\n            .pipe(\n                catchError(() => {\n                    this.loadingError$.next(true);\n                    return of();\n                })\n            );\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyCustomContent) {\n            this.hasEmptyCustomContentTemplate = true;\n        }\n    }\n\n    onSelectApp(app: ApplicationInstanceModel): void {\n        this.appClick.emit(app);\n    }\n\n    /**\n     * Check if the value of the layoutType property is an allowed value\n     */\n    isValidType(): boolean {\n        if (this.layoutType && (this.layoutType === AppListCloudComponent.LAYOUT_LIST || this.layoutType === AppListCloudComponent.LAYOUT_GRID)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Assign the default value to LayoutType\n     */\n    setDefaultLayoutType(): void {\n        this.layoutType = AppListCloudComponent.LAYOUT_GRID;\n    }\n\n    /**\n     * Return true if the layout type is LIST\n     */\n    isList(): boolean {\n        return this.layoutType === AppListCloudComponent.LAYOUT_LIST;\n    }\n\n    /**\n     * Return true if the layout type is GRID\n     */\n    isGrid(): boolean {\n        return this.layoutType === AppListCloudComponent.LAYOUT_GRID;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '../material.module';\nimport { CommonModule } from '@angular/common';\nimport { AppDetailsCloudComponent } from './components/app-details-cloud.component';\nimport { AppListCloudComponent } from './components/app-list-cloud.component';\nimport { TemplateModule, CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TemplateModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule\n    ],\n    declarations: [\n        AppListCloudComponent,\n        AppDetailsCloudComponent\n    ],\n    exports: [\n        AppListCloudComponent,\n        AppDetailsCloudComponent\n    ]\n})\nexport class AppListCloudModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskListCloudSortingModel } from './task-list-sorting.model';\n\nexport class TaskQueryCloudRequestModel {\n    appName: string;\n    appVersion?: string;\n    assignee?: string;\n    claimedDate?: string;\n    createdDate?: Date;\n    createdFrom?: string;\n    createdTo?: string;\n    description?: string;\n    dueDate?: any;\n    lastModifiedFrom?: any;\n    lastModifiedTo?: any;\n    dueDateFrom?: any;\n    dueDateTo?: any;\n    id?: string;\n    name?: string;\n    owner?: string;\n    parentTaskId?: string;\n    standalone?: boolean;\n    priority?: number;\n    processDefinitionId?: string;\n    processDefinitionName?: string;\n    processInstanceId?: string;\n    status?: string;\n    completedBy?: string;\n    maxItems: number;\n    skipCount: number;\n    sorting?: TaskListCloudSortingModel[];\n    completedDate?: Date;\n    completedFrom?: string;\n    completedTo?: string;\n    candidateGroupId?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.appName = obj.appName;\n            this.appVersion = obj.appVersion;\n            this.assignee = obj.assignee;\n            this.claimedDate = obj.claimedDate;\n            this.createdDate = obj.createdDate;\n            this.createdFrom = obj.createdFrom;\n            this.createdTo = obj.createdTo;\n            this.description = obj.description;\n            this.dueDate = obj.dueDate;\n            this.lastModifiedFrom = obj.lastModifiedFrom;\n            this.lastModifiedTo = obj.lastModifiedTo;\n            this.dueDateFrom = obj.dueDateFrom;\n            this.dueDateTo = obj.dueDateTo;\n            this.id = obj.id;\n            this.name = obj.name;\n            this.owner = obj.owner;\n            this.parentTaskId = obj.parentTaskId;\n            this.standalone = obj.standalone;\n            this.priority = obj.priority;\n            this.processDefinitionId = obj.processDefinitionId;\n            this.processDefinitionName = obj.processDefinitionName;\n            this.processInstanceId = obj.processInstanceId;\n            this.status = obj.status;\n            this.completedBy = obj.completedBy;\n            this.maxItems = obj.maxItems;\n            this.skipCount = obj.skipCount;\n            this.sorting = obj.sorting;\n            this.completedFrom = obj.completedFrom;\n            this.completedTo = obj.completedTo;\n            this.completedDate = obj.completedDate;\n            this.candidateGroupId = obj.candidateGroupId;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport { from, Observable } from 'rxjs';\n\nexport interface CallApiParams {\n    path: string;\n    httpMethod: string;\n    pathParams?: any;\n    queryParams?: any;\n    headerParams?: any;\n    formParams?: any;\n    bodyParam?: any;\n    contentTypes?: string[];\n    accepts?: string[];\n    returnType?: any;\n    contextRoot?: string;\n    responseType?: string;\n}\n\nexport class BaseCloudService {\n\n    protected defaultParams: CallApiParams = {\n        path: '',\n        httpMethod: '',\n        contentTypes: ['application/json'],\n        accepts: ['application/json'],\n        returnType: Object\n    };\n\n    constructor(\n        protected apiService: AlfrescoApiService,\n        protected appConfigService: AppConfigService) {}\n\n    getBasePath(appName: string): string {\n        return appName\n            ? `${this.contextRoot}/${appName}`\n            : this.contextRoot;\n    }\n\n    protected post<T, R>(url: string, data?: T): Observable<R> {\n        return from(\n            this.callApi<R>({\n                ...this.defaultParams,\n                path: url,\n                httpMethod: 'POST',\n                bodyParam: data\n            })\n        );\n    }\n\n    protected put<T, R>(url: string, data?: T): Observable<R> {\n        return from(\n            this.callApi<R>({\n                ...this.defaultParams,\n                path: url,\n                httpMethod: 'PUT',\n                bodyParam: data\n            })\n        );\n    }\n\n    protected delete(url: string): Observable<void> {\n        return from(\n            this.callApi<void>({\n                ...this.defaultParams,\n                path: url,\n                httpMethod: 'DELETE'\n            })\n        );\n    }\n\n    protected get<T>(url: string, queryParams?: any): Observable<T> {\n        return from(\n            this.callApi<T>({\n                ...this.defaultParams,\n                path: url,\n                httpMethod: 'GET',\n                queryParams\n            })\n        );\n    }\n\n    protected callApi<T>(params: CallApiParams): Promise<T> {\n        return this.apiService.getInstance()\n            .oauth2Auth.callCustomApi(\n                params.path,\n                params.httpMethod,\n                params.pathParams,\n                params.queryParams,\n                params.headerParams,\n                params.formParams,\n                params.bodyParam,\n                params.contentTypes,\n                params.accepts,\n                params.returnType,\n                params.contextRoot,\n                params.responseType\n            );\n    }\n\n    protected get contextRoot() {\n        return this.appConfigService.get('bpmHost', '');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';\nimport { TaskQueryCloudRequestModel } from '../models/filter-cloud-model';\nimport { Observable, throwError } from 'rxjs';\nimport { TaskListCloudSortingModel } from '../models/task-list-sorting.model';\nimport { BaseCloudService } from '../../../services/base-cloud.service';\nimport { TaskCloudNodePaging } from '../models/task-cloud.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class TaskListCloudService extends BaseCloudService {\n\n    constructor(apiService: AlfrescoApiService,\n                appConfigService: AppConfigService,\n                protected logService: LogService) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Finds a task using an object with optional query properties.\n     * @param requestNode Query object\n     * @param queryUrl Query url\n     * @returns Task information\n     */\n    getTaskByRequest(requestNode: TaskQueryCloudRequestModel, queryUrl?: string): Observable<any> {\n        if (requestNode.appName || requestNode.appName === '') {\n            queryUrl = queryUrl || `${this.getBasePath(requestNode.appName)}/query/v1/tasks`;\n            const queryParams = this.buildQueryParams(requestNode);\n            const sortingParams = this.buildSortingParam(requestNode.sorting);\n            if (sortingParams) {\n                queryParams['sort'] = sortingParams;\n            }\n            return this.get<TaskCloudNodePaging>(queryUrl, queryParams).pipe(\n                map((response: any) => {\n                    const entries = response.list && response.list.entries;\n                    if (entries) {\n                        response.list.entries = entries.map((entryData: any) => entryData.entry);\n                    }\n                    return response;\n                })\n            );\n        } else {\n            this.logService.error('Appname is mandatory for querying task');\n            return throwError('Appname not configured');\n        }\n    }\n\n    protected buildQueryParams(requestNode: TaskQueryCloudRequestModel): Object {\n        const queryParam: Object = {};\n        for (const property in requestNode) {\n            if (requestNode.hasOwnProperty(property) &&\n                !this.isExcludedField(property) &&\n                this.isPropertyValueValid(requestNode, property)) {\n                queryParam[property] = requestNode[property];\n            }\n        }\n        return queryParam;\n    }\n\n    protected isExcludedField(property: string): boolean {\n        return property === 'appName' || property === 'sorting';\n    }\n\n    protected isPropertyValueValid(requestNode: any, property: string): boolean {\n        return requestNode[property] !== '' && requestNode[property] !== null && requestNode[property] !== undefined;\n    }\n\n    protected buildSortingParam(models: TaskListCloudSortingModel[]): string {\n        let finalSorting: string = '';\n        if (models) {\n            for (const sort of models) {\n                if (!finalSorting) {\n                    finalSorting = `${sort.orderBy},${sort.direction}`;\n                } else {\n                    finalSorting = `${finalSorting}&${sort.orderBy},${sort.direction}`;\n                }\n            }\n        }\n        return encodeURI(finalSorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const taskPresetsCloudDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_CLOUD_TASK_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_CLOUD_TASK_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        },\n        {\n            'key': 'assignee',\n            'type': 'text',\n            'title': 'ADF_CLOUD_TASK_LIST.PROPERTIES.ASSIGNEE',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n\nexport const serviceTaskPresetsCloudDefaultModel = {\n    'default': [\n        {\n            'key': 'activityName',\n            'type': 'text',\n            'title': 'ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.ACTIVITY_NAME',\n            'sortable': true\n        },\n        {\n            'key': 'status',\n            'type': 'text',\n            'title': 'ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.STATUS',\n            'sortable': true\n        },\n        {\n            'key': 'startedDate',\n            'type': 'text',\n            'title': 'ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.STARTED_DATE',\n            'cssClass': 'hidden',\n            'sortable': true\n        },\n        {\n            'key': 'completedDate',\n            'type': 'text',\n            'title': 'ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.COMPLETED_DATE',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class TaskListCloudSortingModel {\n    orderBy: string;\n    direction: string;\n\n    constructor(obj: any) {\n        if (obj) {\n            this.orderBy = obj.orderBy;\n            this.direction = obj.direction;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class StartTaskCloudRequestModel {\n\n    name: string;\n    description: string;\n    assignee: string;\n    priority: string;\n    dueDate: Date;\n    candidateUsers: string[];\n    candidateGroups: string[];\n    payloadType: string;\n    formKey: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.name = obj.name || null;\n            this.description = obj.description || null;\n            this.assignee = obj.assignee || null;\n            this.priority = obj.priority || null;\n            this.dueDate = obj.dueDate || null;\n            this.candidateUsers = obj.candidateUsers || null;\n            this.candidateGroups = obj.candidateGroups || null;\n            this.formKey = obj.formKey || null;\n            this.payloadType = 'CreateTaskPayload';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessDefinitionCloud {\n    id: string;\n    appName: string;\n    key: string;\n    formKey?: string;\n    appVersion: number;\n    version: number;\n    name: string;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.name = obj && obj.name || null;\n        this.appName = obj && obj.appName || null;\n        this.key = obj && obj.key || null;\n        this.formKey = obj && obj.formKey || null;\n        this.version = obj && obj.version || 0;\n        this.appVersion = obj && obj.appVersion || 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum ClaimTaskEnum {\n    claim = 'claim',\n    unclaim = 'unclaim'\n}\nexport interface TaskPriorityOption {\n    label: string;\n    key: string;\n    value: string;\n}\n\nexport const DEFAULT_TASK_PRIORITIES: TaskPriorityOption[] = [\n    { label: 'ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.NONE', value: '0', key: '0' },\n    { label: 'ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.LOW', value: '1', key: '1' },\n    { label: 'ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.NORMAL', value: '2', key: '2' },\n    { label: 'ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.HIGH', value: '3', key: '3' }\n];\n\nexport const TASK_ASSIGNED_STATE = 'ASSIGNED';\n\nexport const TASK_CREATED_STATE = 'CREATED';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, LogService, AppConfigService, IdentityUserService, CardViewArrayItem, TranslationService } from '@alfresco/adf-core';\nimport { throwError, Observable, of, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TaskDetailsCloudModel, StartTaskCloudResponseModel } from '../start-task/models/task-details-cloud.model';\nimport { BaseCloudService } from '../../services/base-cloud.service';\nimport { StartTaskCloudRequestModel } from '../start-task/models/start-task-cloud-request.model';\nimport { ProcessDefinitionCloud } from '../../models/process-definition-cloud.model';\nimport { DEFAULT_TASK_PRIORITIES, TaskPriorityOption, TASK_ASSIGNED_STATE, TASK_CREATED_STATE } from '../models/task.model';\nimport { TaskCloudServiceInterface } from './task-cloud.service.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskCloudService extends BaseCloudService implements TaskCloudServiceInterface {\n\n    dataChangesDetected$ = new Subject();\n\n    constructor(\n        apiService: AlfrescoApiService,\n        appConfigService: AppConfigService,\n        private logService: LogService,\n        private translateService: TranslationService,\n        private identityUserService: IdentityUserService\n    ) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Complete a task.\n     * @param appName Name of the app\n     * @param taskId ID of the task to complete\n     * @returns Details of the task that was completed\n     */\n    completeTask(appName: string, taskId: string): Observable<TaskDetailsCloudModel> {\n        if ((appName || appName === '') && taskId) {\n            const url = `${this.getBasePath(appName)}/rb/v1/tasks/${taskId}/complete`;\n            const payload = { 'payloadType': 'CompleteTaskPayload' };\n\n            return this.post<any, TaskDetailsCloudModel>(url, payload);\n        } else {\n            this.logService.error('AppName and TaskId are mandatory for complete a task');\n            return throwError('AppName/TaskId not configured');\n        }\n    }\n\n    /**\n     * Validate if a task can be completed.\n     * @param taskDetails task details object\n     * @returns Boolean value if the task can be completed\n     */\n    canCompleteTask(taskDetails: TaskDetailsCloudModel): boolean {\n        return taskDetails && taskDetails.status === TASK_ASSIGNED_STATE && this.isAssignedToMe(taskDetails.assignee);\n    }\n\n    /**\n     * Validate if a task is editable.\n     * @param taskDetails task details object\n     * @returns Boolean value if the task is editable\n     */\n    isTaskEditable(taskDetails: TaskDetailsCloudModel): boolean {\n        return taskDetails && taskDetails.status === TASK_ASSIGNED_STATE && this.isAssignedToMe(taskDetails.assignee);\n    }\n\n    isAssigneePropertyClickable(taskDetails: TaskDetailsCloudModel, candidateUsers: CardViewArrayItem[], candidateGroups: CardViewArrayItem[]): boolean {\n        let isClickable = false;\n        const states = [TASK_ASSIGNED_STATE];\n        if (candidateUsers?.length || candidateGroups?.length) {\n            isClickable = states.includes(taskDetails.status);\n        }\n        return isClickable;\n    }\n\n    /**\n     * Validate if a task can be claimed.\n     * @param taskDetails task details object\n     * @returns Boolean value if the task can be completed\n     */\n    canClaimTask(taskDetails: TaskDetailsCloudModel): boolean {\n        return taskDetails && taskDetails.status === TASK_CREATED_STATE;\n    }\n\n    /**\n     * Validate if a task can be unclaimed.\n     * @param taskDetails task details object\n     * @returns Boolean value if the task can be completed\n     */\n    canUnclaimTask(taskDetails: TaskDetailsCloudModel): boolean {\n        const currentUser = this.identityUserService.getCurrentUserInfo().username;\n        return taskDetails && taskDetails.status === TASK_ASSIGNED_STATE && taskDetails.assignee === currentUser;\n    }\n\n    /**\n     * Claims a task for an assignee.\n     * @param appName Name of the app\n     * @param taskId ID of the task to claim\n     * @param assignee User to assign the task to\n     * @returns Details of the claimed task\n     */\n    claimTask(appName: string, taskId: string, assignee: string): Observable<TaskDetailsCloudModel> {\n        if ((appName || appName === '') && taskId) {\n            const queryUrl = `${this.getBasePath(appName)}/rb/v1/tasks/${taskId}/claim?assignee=${assignee}`;\n\n            return this.post(queryUrl).pipe(\n                map((res: any) => {\n                    this.dataChangesDetected$.next();\n                    return res.entry;\n                })\n            );\n        } else {\n            this.logService.error('AppName and TaskId are mandatory for querying a task');\n            return throwError('AppName/TaskId not configured');\n        }\n    }\n\n    /**\n     * Un-claims a task.\n     * @param appName Name of the app\n     * @param taskId ID of the task to unclaim\n     * @returns Details of the task that was unclaimed\n     */\n    unclaimTask(appName: string, taskId: string): Observable<TaskDetailsCloudModel> {\n        if ((appName || appName === '') && taskId) {\n            const queryUrl = `${this.getBasePath(appName)}/rb/v1/tasks/${taskId}/release`;\n\n            return this.post(queryUrl).pipe(\n                map((res: any) => {\n                    this.dataChangesDetected$.next();\n                    return res.entry;\n                })\n            );\n        } else {\n            this.logService.error('AppName and TaskId are mandatory for querying a task');\n            return throwError('AppName/TaskId not configured');\n        }\n    }\n\n    /**\n     * Gets details of a task.\n     * @param appName Name of the app\n     * @param taskId ID of the task whose details you want\n     * @returns Task details\n     */\n    getTaskById(appName: string, taskId: string): Observable<TaskDetailsCloudModel> {\n        if ((appName || appName === '') && taskId) {\n            const queryUrl = `${this.getBasePath(appName)}/query/v1/tasks/${taskId}`;\n\n            return this.get(queryUrl).pipe(\n                map((res: any) => res.entry)\n            );\n        } else {\n            this.logService.error('AppName and TaskId are mandatory for querying a task');\n            return throwError('AppName/TaskId not configured');\n        }\n    }\n\n     /**\n      * Creates a new standalone task.\n      * @param taskDetails Details of the task to create\n      * @returns Details of the newly created task\n      */\n    createNewTask(startTaskRequest: StartTaskCloudRequestModel, appName: string): Observable<TaskDetailsCloudModel> {\n        const queryUrl = `${this.getBasePath(appName)}/rb/v1/tasks`;\n        const payload = JSON.stringify(new StartTaskCloudRequestModel(startTaskRequest));\n\n        return this.post<any, StartTaskCloudResponseModel>(queryUrl, payload)\n            .pipe(\n                map(response => response.entry)\n            );\n    }\n\n    /**\n     * Updates the details (name, description, due date) for a task.\n     * @param appName Name of the app\n     * @param taskId ID of the task to update\n     * @param payload Data to update the task\n     * @returns Updated task details\n     */\n    updateTask(appName: string, taskId: string, payload: any): Observable<TaskDetailsCloudModel> {\n        if ((appName || appName === '') && taskId) {\n            payload.payloadType = 'UpdateTaskPayload';\n            const queryUrl = `${this.getBasePath(appName)}/rb/v1/tasks/${taskId}`;\n\n            return this.put(queryUrl, payload).pipe(\n                map((res: any) => res.entry)\n            );\n        } else {\n            this.logService.error('AppName and TaskId are mandatory for querying a task');\n            return throwError('AppName/TaskId not configured');\n        }\n    }\n\n    /**\n     * Gets candidate users of the task.\n     * @param appName Name of the app\n     * @param taskId ID of the task\n     * @returns Candidate users\n     */\n    getCandidateUsers(appName: string, taskId: string): Observable<string[]> {\n        if ((appName || appName === '') && taskId) {\n            const queryUrl = `${this.getBasePath(appName)}/query/v1/tasks/${taskId}/candidate-users`;\n            return this.get<string[]>(queryUrl);\n        } else {\n            this.logService.error('AppName and TaskId are mandatory to get candidate user');\n            return of([]);\n        }\n    }\n\n    /**\n     * Gets candidate groups of the task.\n     * @param appName Name of the app\n     * @param taskId ID of the task\n     * @returns Candidate groups\n     */\n    getCandidateGroups(appName: string, taskId: string): Observable<string[]> {\n        if ((appName || appName === '') && taskId) {\n            const queryUrl = `${this.getBasePath(appName)}/query/v1/tasks/${taskId}/candidate-groups`;\n            return this.get<string[]>(queryUrl);\n        } else {\n            this.logService.error('AppName and TaskId are mandatory to get candidate groups');\n            return of([]);\n        }\n    }\n\n    /**\n     * Gets the process definitions associated with an app.\n     * @param appName Name of the target app\n     * @returns Array of process definitions\n     */\n    getProcessDefinitions(appName: string): Observable<ProcessDefinitionCloud[]> {\n        if (appName || appName === '') {\n            const url = `${this.getBasePath(appName)}/rb/v1/process-definitions`;\n\n            return this.get(url).pipe(\n                map((res: any) => {\n                    return res.list.entries.map((processDefs) => new ProcessDefinitionCloud(processDefs.entry));\n                })\n            );\n        } else {\n            this.logService.error('AppName is mandatory for querying task');\n            return throwError('AppName not configured');\n        }\n    }\n\n    /**\n     * Updates the task assignee.\n     * @param appName Name of the app\n     * @param taskId ID of the task to update assignee\n     * @param assignee assignee to update current user task assignee\n     * @returns Updated task details with new assignee\n     */\n    assign(appName: string, taskId: string, assignee: string): Observable<TaskDetailsCloudModel> {\n        if (appName && taskId) {\n            const payLoad = { 'assignee': assignee, 'taskId': taskId, 'payloadType': 'AssignTaskPayload' };\n            const url = `${this.getBasePath(appName)}/rb/v1/tasks/${taskId}/assign`;\n\n            return this.post(url, payLoad).pipe(\n                map((res: any) => {\n                    return res.entry;\n                })\n            );\n        } else {\n            this.logService.error('AppName and TaskId are mandatory to change/update the task assignee');\n            return throwError('AppName/TaskId not configured');\n        }\n      }\n\n    getPriorityLabel(priority: number): string {\n        const priorityItem = this.priorities.find(item => item.value === priority.toString()) || this.priorities[0];\n        return this.translateService.instant(priorityItem.label);\n    }\n\n    get priorities(): TaskPriorityOption[] {\n        return this.appConfigService.get('adf-cloud-priority-values') || DEFAULT_TASK_PRIORITIES;\n    }\n\n    private isAssignedToMe(assignee: string): boolean {\n        const currentUser = this.identityUserService.getCurrentUserInfo().username;\n        return assignee === currentUser;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnChanges, Input, SimpleChanges, Output, EventEmitter, ContentChild, AfterContentInit, OnDestroy, OnInit, Directive } from '@angular/core';\nimport {\n    AppConfigService, UserPreferencesService,\n    DataTableSchema, UserPreferenceValues,\n    PaginatedComponent, PaginationModel,\n    DataRowEvent, CustomEmptyContentTemplateDirective, DataCellEvent, DataRowActionEvent, DataRow, DataColumn\n} from '@alfresco/adf-core';\nimport { taskPresetsCloudDefaultModel } from '../models/task-preset-cloud.model';\nimport { TaskQueryCloudRequestModel } from '../models/filter-cloud-model';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { TaskListCloudSortingModel } from '../models/task-list-sorting.model';\nimport { takeUntil } from 'rxjs/operators';\nimport { TaskCloudService } from '../../services/task-cloud.service';\n\n@Directive()\n// tslint:disable-next-line: directive-class-suffix\nexport abstract class BaseTaskListCloudComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent, OnDestroy, OnInit {\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n\n    /** The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /**\n     * Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use the Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, rendering a checkbox at the beginning of each row. */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /**\n     * Specifies how the table should be sorted. The parameters are for BE sorting.\n     */\n    @Input()\n    sorting: TaskListCloudSortingModel[];\n\n    /** Toggles the data actions column. */\n    @Input()\n    showActions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    showContextMenu: boolean = false;\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Emitted when a task in the list is clicked */\n    @Output()\n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when rows are selected/unselected */\n    @Output()\n    rowsSelected: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    /** Emitted when the task list is loaded */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    pagination: BehaviorSubject<PaginationModel>;\n\n    requestNode: TaskQueryCloudRequestModel;\n    rows: any[] = [];\n    size: number;\n    skipCount: number = 0;\n    currentInstanceId: any;\n    isLoading = true;\n    selectedInstances: any[];\n    formattedSorting: any[];\n    private defaultSorting = { key: 'startDate', direction: 'desc' };\n    boundReplacePriorityValues: (row: DataRow, col: DataColumn) => any;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(appConfigService: AppConfigService,\n                private taskCloudService: TaskCloudService,\n                private userPreferences: UserPreferencesService,\n                presetKey: string) {\n        super(appConfigService, presetKey, taskPresetsCloudDefaultModel);\n        this.size = userPreferences.paginationSize;\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n\n        this.boundReplacePriorityValues = this.replacePriorityValues.bind(this);\n    }\n\n    ngOnInit() {\n        this.userPreferences\n            .select(UserPreferenceValues.PaginationSize)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(pageSize => this.size = pageSize);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['sorting']) {\n            this.formatSorting(changes['sorting'].currentValue);\n        }\n        this.reload();\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n    }\n\n    reload() {\n        this.requestNode = this.createRequestNode();\n        if (this.requestNode.appName || this.requestNode.appName === '') {\n            this.load(this.requestNode);\n        } else {\n            this.rows = [];\n        }\n    }\n\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    /**\n     * Resets the pagination values\n     */\n    resetPagination() {\n        this.skipCount = 0;\n        this.size = this.userPreferences.paginationSize;\n        this.pagination.next({\n            skipCount: 0,\n            maxItems: this.size\n        });\n    }\n\n    /**\n     * Resets the pagination values and\n     * Reloads the task list\n     * @param pagination Pagination values to be set\n     */\n    updatePagination(pagination: PaginationModel) {\n        this.size = pagination.maxItems;\n        this.skipCount = pagination.skipCount;\n        this.pagination.next(pagination);\n        this.reload();\n    }\n\n    onSortingChanged(event: CustomEvent) {\n        this.setSorting(event.detail);\n        this.formatSorting(this.sorting);\n        this.reload();\n    }\n\n    onRowClick(item: DataRowEvent) {\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    onRowSelect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowUnselect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        this.showRowActionsMenu.emit(event);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        this.showRowContextMenu.emit(event);\n    }\n\n    onExecuteRowAction(row: DataRowActionEvent) {\n        this.executeRowAction.emit(row);\n    }\n\n    setSorting(sortDetail) {\n        const sorting = sortDetail ? {\n            orderBy: sortDetail.key,\n            direction: sortDetail.direction.toUpperCase()\n        } : { ... this.defaultSorting };\n        this.sorting = [new TaskListCloudSortingModel(sorting)];\n    }\n\n    formatSorting(sorting: TaskListCloudSortingModel[]) {\n        this.formattedSorting = this.isValidSorting(sorting) ? [\n            sorting[0].orderBy,\n            sorting[0].direction.toLocaleLowerCase()\n        ] : null;\n    }\n\n    isValidSorting(sorting: TaskListCloudSortingModel[]) {\n        return sorting && sorting.length && sorting[0].orderBy && sorting[0].direction;\n    }\n\n    replacePriorityValues(row: DataRow, column: DataColumn) {\n        return column.key.split('.').reduce((source, key) => {\n            if (key === 'priority' && source && typeof(source[key]) === 'number') {\n                return source[key] = this.taskCloudService.getPriorityLabel(source[key]);\n            }\n            return source && typeof(source) === 'object' ? source[key] : undefined;\n        }, row.obj);\n    }\n\n    abstract load(requestNode);\n    abstract createRequestNode();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { AppConfigService, UserPreferencesService } from '@alfresco/adf-core';\nimport { TaskQueryCloudRequestModel } from '../models/filter-cloud-model';\nimport { TaskListCloudService } from '../services/task-list-cloud.service';\nimport { BaseTaskListCloudComponent } from './base-task-list-cloud.component';\nimport { TaskCloudService } from '../../services/task-cloud.service';\n\n@Component({\n    selector: 'adf-cloud-task-list',\n    templateUrl: './base-task-list-cloud.component.html',\n    styleUrls: ['./base-task-list-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskListCloudComponent extends BaseTaskListCloudComponent {\n\n    static PRESET_KEY = 'adf-cloud-task-list.presets';\n\n    /**\n     * The assignee of the process. Possible values are: \"assignee\" (the current user is the assignee),\n     * \"candidate\" (the current user is a task candidate\", \"group_x\" (the task is assigned to a group\n     * where the current user is a member, no value (the current user is involved).\n     */\n    @Input()\n    assignee: string = '';\n\n    /** Filter the tasks. Display only tasks created on the supplied date. */\n    @Input()\n    createdDate: Date;\n\n    /** Filter the tasks. Display only tasks with createdFrom equal to the supplied date. */\n    @Input()\n    createdFrom: string = '';\n\n    /** Filter the tasks. Display only tasks with createdTo equal to the supplied date. */\n    @Input()\n    createdTo: string = '';\n\n    /** Filter the tasks. Display only tasks with dueDate equal to the supplied date. */\n    @Input()\n    dueDate: Date;\n\n    /** Filter the tasks. Display only tasks with lastModifiedFrom equal to the supplied date. */\n    @Input()\n    lastModifiedFrom: string = '';\n\n    /** Filter the tasks. Display only tasks with lastModifiedTo equal to the supplied date. */\n    @Input()\n    lastModifiedTo: string = '';\n\n    /** Filter the tasks. Display only tasks with dueDate greater or equal than the supplied date. */\n    @Input()\n    dueDateFrom: string = '';\n\n    /** Filter the tasks. Display only tasks with dueDate less or equal to the supplied date. */\n    @Input()\n    dueDateTo: string = '';\n\n    /** Filter the tasks. Display only tasks with id equal to the supplied value. */\n    @Input()\n    id: string = '';\n\n    /** Filter the tasks. Display only tasks with the supplied name. */\n    @Input()\n    name: string = '';\n\n    /** Filter the tasks. Display only tasks with parentTaskId equal to the supplied value. */\n    @Input()\n    parentTaskId: string = '';\n\n    /** Filter the tasks. Display only tasks with processDefinitionName equal to the supplied value. */\n    @Input()\n    processDefinitionName: string = '';\n\n    /** Filter the tasks. Display only tasks with processDefinitionId equal to the supplied value. */\n    @Input()\n    processDefinitionId: string = '';\n\n    /** Filter the tasks. Display only tasks with processInstanceId equal to the supplied value. */\n    @Input()\n    processInstanceId: string = '';\n\n    /** Filter the tasks. Display only tasks with status equal to the supplied value. */\n    @Input()\n    status: string = '';\n\n    /** Filter the tasks. Display only tasks with owner equal to the supplied value. */\n    @Input()\n    owner: string = '';\n\n    /** Filter the tasks. Display only tasks with priority equal to the supplied value. */\n    @Input()\n    priority: number;\n\n    /** Filter the tasks. Display only tasks with createdBy equal to the supplied value. */\n    @Input()\n    completedBy: number;\n\n    /** Filter the tasks. Display only the tasks that belong to a process in case is false or tasks that doesn't belong to a process in case of true. */\n    @Input()\n    standalone: boolean = false;\n\n    /** Filter the tasks. Display only tasks with completedDate equal to the supplied date. */\n    @Input()\n    completedDate: string = '';\n\n    /** Filter the tasks. Display only tasks with completedFrom equal to the supplied date. */\n    @Input()\n    completedFrom: string = '';\n\n    /** Filter the tasks. Display only tasks with completedTo equal to the supplied date. */\n    @Input()\n    completedTo: string = '';\n\n    /** Filter the tasks. Display only tasks with candidateGroups equal to the supplied value. */\n    @Input()\n    candidateGroupId: string = '';\n\n    constructor(private taskListCloudService: TaskListCloudService,\n                appConfigService: AppConfigService,\n                taskCloudService: TaskCloudService,\n                userPreferences: UserPreferencesService) {\n        super(appConfigService, taskCloudService, userPreferences, TaskListCloudComponent.PRESET_KEY);\n    }\n\n    load(requestNode: TaskQueryCloudRequestModel) {\n        this.isLoading = true;\n        this.taskListCloudService.getTaskByRequest(requestNode).subscribe(\n            (tasks) => {\n                this.rows = tasks.list.entries;\n                this.success.emit(tasks);\n                this.isLoading = false;\n                this.pagination.next(tasks.list.pagination);\n            }, (error) => {\n                this.error.emit(error);\n                this.isLoading = false;\n            });\n    }\n\n    createRequestNode(): TaskQueryCloudRequestModel {\n        const requestNode = {\n            appName: this.appName,\n            assignee: this.assignee,\n            id: this.id,\n            name: this.name,\n            parentTaskId: this.parentTaskId,\n            processDefinitionName: this.processDefinitionName,\n            processDefinitionId: this.processDefinitionId,\n            processInstanceId: this.processInstanceId,\n            owner: this.owner,\n            priority: this.priority,\n            lastModifiedFrom: this.lastModifiedFrom,\n            lastModifiedTo: this.lastModifiedTo,\n            dueDateFrom: this.dueDateFrom,\n            dueDateTo: this.dueDateTo,\n            status: this.status,\n            dueDate: this.dueDate,\n            createdDate: this.createdDate,\n            createdFrom: this.createdFrom,\n            createdTo: this.createdTo,\n            maxItems: this.size,\n            skipCount: this.skipCount,\n            sorting: this.sorting,\n            standalone: this.standalone,\n            completedBy: this.completedBy,\n            completedFrom: this.completedFrom,\n            completedTo: this.completedTo,\n            completedDate: this.completedDate,\n            candidateGroupId: this.candidateGroupId\n        };\n        return new TaskQueryCloudRequestModel(requestNode);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';\nimport { ServiceTaskQueryCloudRequestModel, ServiceTaskIntegrationContextCloudModel } from '../models/service-task-cloud.model';\nimport { Observable, throwError } from 'rxjs';\nimport { TaskListCloudSortingModel } from '../models/task-list-sorting.model';\nimport { BaseCloudService } from '../../../services/base-cloud.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ServiceTaskListCloudService extends BaseCloudService {\n\n    constructor(apiService: AlfrescoApiService,\n                appConfigService: AppConfigService,\n                private logService: LogService) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Finds a task using an object with optional query properties.\n     * @param requestNode Query object\n     * @returns Task information\n     */\n    getServiceTaskByRequest(requestNode: ServiceTaskQueryCloudRequestModel): Observable<any> {\n        if (requestNode.appName || requestNode.appName === '') {\n            const queryUrl = `${this.getBasePath(requestNode.appName)}/query/admin/v1/service-tasks`;\n            const queryParams = this.buildQueryParams(requestNode);\n            const sortingParams = this.buildSortingParam(requestNode.sorting);\n            if (sortingParams) {\n                queryParams['sort'] = sortingParams;\n            }\n            return this.get(queryUrl, queryParams);\n        } else {\n            this.logService.error('Appname is mandatory for querying task');\n            return throwError('Appname not configured');\n        }\n    }\n\n    /**\n     * Finds a service task integration context using an object with optional query properties.\n     * @param appName string\n     * @param serviceTaskId string\n     * @returns Service Task Integration Context information\n     */\n    getServiceTaskStatus(appName: string, serviceTaskId: string): Observable<ServiceTaskIntegrationContextCloudModel> {\n        if (appName) {\n            const queryUrl = `${this.getBasePath(appName)}/query/admin/v1/service-tasks/${serviceTaskId}/integration-context`;\n            return this.get(queryUrl).pipe(\n                map((response: any) => response.entry)\n            );\n        } else {\n            this.logService.error('Appname is mandatory for querying task');\n            return throwError('Appname not configured');\n        }\n    }\n\n    protected buildQueryParams(requestNode: ServiceTaskQueryCloudRequestModel): Object {\n        const queryParam: Object = {};\n        for (const property in requestNode) {\n            if (requestNode.hasOwnProperty(property) &&\n                !this.isExcludedField(property) &&\n                this.isPropertyValueValid(requestNode, property)) {\n                queryParam[property] = requestNode[property];\n            }\n        }\n        return queryParam;\n    }\n\n    protected isExcludedField(property: string): boolean {\n        return property === 'appName' || property === 'sorting';\n    }\n\n    protected isPropertyValueValid(requestNode: any, property: string): boolean {\n        return requestNode[property] !== '' && requestNode[property] !== null && requestNode[property] !== undefined;\n    }\n\n    protected buildSortingParam(models: TaskListCloudSortingModel[]): string {\n        let finalSorting: string = '';\n        if (models) {\n            for (const sort of models) {\n                if (!finalSorting) {\n                    finalSorting = `${sort.orderBy},${sort.direction}`;\n                } else {\n                    finalSorting = `${finalSorting}&${sort.orderBy},${sort.direction}`;\n                }\n            }\n        }\n        return encodeURI(finalSorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport {\n    AppConfigService, UserPreferencesService\n} from '@alfresco/adf-core';\nimport { ServiceTaskQueryCloudRequestModel } from '../models/service-task-cloud.model';\nimport { BaseTaskListCloudComponent } from './base-task-list-cloud.component';\nimport { ServiceTaskListCloudService } from '../services/service-task-list-cloud.service';\nimport { TaskCloudService } from '../../services/task-cloud.service';\n\n@Component({\n    selector: 'adf-cloud-service-task-list',\n    templateUrl: './base-task-list-cloud.component.html',\n    styleUrls: ['./base-task-list-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ServiceTaskListCloudComponent extends BaseTaskListCloudComponent {\n\n    static PRESET_KEY = 'adf-cloud-service-task-list.presets';\n\n    @Input()\n    queryParams: { [key: string]: any } = {};\n\n    constructor(private serviceTaskListCloudService: ServiceTaskListCloudService,\n                appConfigService: AppConfigService,\n                taskCloudService: TaskCloudService,\n                userPreferences: UserPreferencesService) {\n        super(appConfigService, taskCloudService, userPreferences, ServiceTaskListCloudComponent.PRESET_KEY);\n    }\n\n    load(requestNode: ServiceTaskQueryCloudRequestModel) {\n        this.isLoading = true;\n        this.serviceTaskListCloudService.getServiceTaskByRequest(requestNode).subscribe(\n            (tasks) => {\n                this.rows = tasks.list.entries;\n                this.success.emit(tasks);\n                this.isLoading = false;\n                this.pagination.next(tasks.list.pagination);\n            }, (error) => {\n                this.error.emit(error);\n                this.isLoading = false;\n            });\n    }\n\n    createRequestNode(): ServiceTaskQueryCloudRequestModel {\n        const requestNode: ServiceTaskQueryCloudRequestModel = {\n            appName: this.appName,\n            maxItems: this.size,\n            skipCount: this.skipCount,\n            sorting: this.sorting,\n            id: this.queryParams?.serviceTaskId,\n            activityName: this.queryParams?.activityName,\n            activityType: this.queryParams?.activityType,\n            completedDate: this.queryParams?.completedDate,\n            elementId: this.queryParams?.elementId,\n            executionId: this.queryParams?.executionId,\n            processDefinitionId: this.queryParams?.processDefinitionId,\n            processDefinitionKey: this.queryParams?.processDefinitionKey,\n            processDefinitionVersion: this.queryParams?.processDefinitionVersion,\n            processInstanceId: this.queryParams?.processInstanceId,\n            serviceFullName: this.queryParams?.serviceFullName,\n            serviceName: this.queryParams?.serviceName,\n            serviceVersion: this.queryParams?.serviceVersion,\n            startedDate: this.queryParams?.startedDate,\n            status: this.queryParams?.status\n        } as ServiceTaskQueryCloudRequestModel;\n        return requestNode;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../../material.module';\nimport { TaskListCloudComponent } from './components/task-list-cloud.component';\nimport { ServiceTaskListCloudComponent } from './components/service-task-list-cloud.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule\n    ],\n    declarations: [\n        TaskListCloudComponent,\n        ServiceTaskListCloudComponent\n    ],\n    exports: [\n        TaskListCloudComponent,\n        ServiceTaskListCloudComponent\n    ]\n})\nexport class TaskListCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DateCloudFilterType {\n    NO_DATE = 'NO_DATE',\n    TODAY = 'TODAY',\n    TOMORROW = 'TOMORROW',\n    NEXT_7_DAYS = 'NEXT_7_DAYS',\n    WEEK = 'WEEK',\n    MONTH = 'MONTH',\n    QUARTER = 'QUARTER',\n    YEAR = 'YEAR',\n    RANGE = 'RANGE'\n}\n\nexport interface DateRangeFilter {\n    startDate: string;\n    endDate: string;\n}\nexport interface RangeKeys {\n    from: string;\n    to: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport moment from 'moment-es6';\nimport { DateRangeFilter, DateCloudFilterType } from '../../models/date-cloud-filter.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DateRangeFilterService {\n\n    currentDate = new Date();\n\n    getDateRange(type: DateCloudFilterType): DateRangeFilter {\n        switch (type) {\n            case DateCloudFilterType.TODAY: return this.getTodayDateRange();\n            case DateCloudFilterType.TOMORROW: return this.getTomorrowDateRange();\n            case DateCloudFilterType.NEXT_7_DAYS: return this.getNext7DaysDateRange();\n            case DateCloudFilterType.WEEK: return this.getCurrentWeekRange();\n            case DateCloudFilterType.MONTH: return this.getCurrentMonthDateRange();\n            case DateCloudFilterType.QUARTER: return this.getQuarterDateRange();\n            case DateCloudFilterType.YEAR: return this.getCurrentYearDateRange();\n            default: return this.resetDateRange();\n        }\n    }\n\n    isDateRangeType(type: DateCloudFilterType) {\n        return type === DateCloudFilterType.RANGE;\n    }\n\n    private resetDateRange(): DateRangeFilter {\n        return {\n            startDate: null,\n            endDate: null\n        };\n    }\n\n    private getNext7DaysDateRange(): DateRangeFilter {\n        return {\n            startDate: moment().startOf('day').toISOString(true),\n            endDate: moment().add(7, 'days').endOf('day').toISOString(true)\n        };\n    }\n\n    private getTomorrowDateRange(): DateRangeFilter {\n        return {\n            startDate: moment().endOf('day').toISOString(true),\n            endDate: moment().add(1, 'days').endOf('day').toISOString(true)\n        };\n    }\n\n    private getCurrentYearDateRange(): DateRangeFilter {\n        return {\n            startDate: moment().startOf('year').toISOString(true),\n            endDate: moment().endOf('year').toISOString(true)\n        };\n    }\n\n    private getTodayDateRange(): DateRangeFilter {\n        return {\n            startDate: moment().startOf('day').toISOString(true),\n            endDate: moment().endOf('day').toISOString(true)\n        };\n    }\n\n    private getCurrentWeekRange(): DateRangeFilter {\n        return  {\n            startDate: moment().startOf('week').toISOString(true),\n            endDate: moment().endOf('week').toISOString(true)\n        };\n    }\n\n    private getCurrentMonthDateRange(): DateRangeFilter {\n        return {\n            startDate: moment().startOf('month').toISOString(true),\n            endDate: moment().endOf('month').toISOString(true)\n        };\n    }\n\n    private getQuarterDateRange(): DateRangeFilter {\n        return {\n            startDate: moment().startOf('quarter').toISOString(true),\n            endDate: moment().endOf('quarter').toISOString(true)\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateCloudFilterType } from '../../../models/date-cloud-filter.model';\nimport { DateRangeFilterService } from '../../../common/date-range-filter/date-range-filter.service';\nimport { ComponentSelectionMode } from '../../../types';\nimport { IdentityUserModel, IdentityGroupModel } from '@alfresco/adf-core';\n\nexport class TaskFilterCloudModel  {\n    id: string;\n    name: string;\n    key: string;\n    icon: string;\n    index: number;\n    appName: string;\n    status: string;\n    sort: string;\n    assignee: string;\n    candidateGroups: IdentityGroupModel[];\n    order: string;\n    owner: string;\n    processDefinitionName?: string;\n    processDefinitionId: string;\n    processInstanceId: string;\n    createdDate: Date;\n    dueDateType: DateCloudFilterType;\n    dueDate: Date;\n    taskName: string;\n    taskId: string;\n    parentTaskId: string;\n    priority: number;\n    standalone: boolean;\n    lastModifiedFrom: string;\n    lastModifiedTo: string;\n    completedDateType: DateCloudFilterType;\n    createdDateType: DateCloudFilterType;\n    assignmentType: AssignmentType;\n    completedDate: Date;\n    completedBy: IdentityUserModel;\n    showCounter: boolean;\n\n    private _completedFrom: string;\n    private _completedTo: string;\n    private _dueDateFrom: string;\n    private _dueDateTo: string;\n    private _createdFrom: string;\n    private _createdTo: string;\n    private dateRangeFilterService = new DateRangeFilterService();\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || Math.random().toString(36).substr(2, 9);\n            this.name = obj.name || null;\n            this.key = obj.key || null;\n            this.icon = obj.icon || null;\n            this.index = obj.index || null;\n            this.appName = obj.appName || obj.appName === '' ? obj.appName : null;\n            this.status = obj.status || null;\n            this.sort = obj.sort || null;\n            this.assignee = obj.assignee || null;\n            this.order = obj.order || null;\n            this.owner = obj.owner || null;\n            this.processDefinitionName = obj.processDefinitionName || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processInstanceId = obj.processInstanceId || null;\n            this.createdDate = obj.createdDate || null;\n            this.dueDateType = obj.dueDateType || null;\n            this.dueDate = obj.dueDate || null;\n            this._dueDateFrom = obj._dueDateFrom || null;\n            this._dueDateTo = obj._dueDateTo || null;\n            this.taskName = obj.taskName || null;\n            this.taskId = obj.taskId || null;\n            this.parentTaskId = obj.parentTaskId || null;\n            this.priority = obj.priority || null;\n            this.standalone = obj.standalone || null;\n            this.lastModifiedFrom = obj.lastModifiedFrom || null;\n            this.lastModifiedTo = obj.lastModifiedTo || null;\n            this.completedBy = obj.completedBy || null;\n            this.completedDateType = obj.completedDateType || null;\n            this.completedFrom = obj._completedFrom || null;\n            this.completedTo = obj._completedTo || null;\n            this.completedDate = obj.completedDate || null;\n            this.createdDateType = obj.createdDateType || null;\n            this.createdFrom = obj._createdFrom || null;\n            this.createdTo = obj._createdTo || null;\n            this.candidateGroups = obj.candidateGroups || null;\n            this.showCounter = obj.showCounter || false;\n        }\n    }\n\n    set dueDateFrom(dueDateFrom: string) {\n        this._dueDateFrom = dueDateFrom;\n    }\n\n    set dueDateTo(dueDateTo: string) {\n        this._dueDateTo = dueDateTo;\n    }\n\n    get dueDateFrom() {\n        if (this.isDateRangeType(this.dueDateType)) {\n            return this._dueDateFrom;\n        }\n        return this.getStartDate(this.dueDateType);\n    }\n\n    get dueDateTo() {\n        if (this.isDateRangeType(this.dueDateType)) {\n            return this._dueDateTo;\n        }\n        return this.getEndDate(this.dueDateType);\n    }\n\n    set completedFrom(completedFrom: string) {\n        this._completedFrom = completedFrom;\n    }\n\n    set completedTo(completedTo: string) {\n        this._completedTo = completedTo;\n    }\n\n    get completedFrom(): string {\n        if (this.isDateRangeType(this.completedDateType)) {\n            return this._completedFrom;\n        }\n        return this.getStartDate(this.completedDateType);\n    }\n\n    get completedTo(): string {\n        if (this.isDateRangeType(this.completedDateType)) {\n            return this._completedTo;\n        }\n        return this.getEndDate(this.completedDateType);\n    }\n\n    set createdFrom(createdFrom: string) {\n        this._createdFrom = createdFrom;\n    }\n\n    set createdTo(createdTo: string) {\n        this._createdTo = createdTo;\n    }\n\n    get createdFrom() {\n        if (this.isDateRangeType(this.createdDateType)) {\n            return this._createdFrom;\n        }\n        return this.getStartDate(this.createdDateType);\n    }\n\n    get createdTo() {\n        if (this.isDateRangeType(this.createdDateType)) {\n            return this._createdTo;\n        }\n        return this.getEndDate(this.createdDateType);\n    }\n\n    private getStartDate(key: DateCloudFilterType) {\n        return this.dateRangeFilterService.getDateRange(key).startDate;\n    }\n\n    private getEndDate(key: DateCloudFilterType) {\n        return this.dateRangeFilterService.getDateRange(key).endDate;\n    }\n\n    private isDateRangeType(type: DateCloudFilterType) {\n        return !!this.dateRangeFilterService.isDateRangeType(type);\n    }\n}\n\nexport interface ServiceTaskFilterCloudModel {\n    id?: string;\n    name?: string;\n    key?: string;\n    icon?: string;\n    index?: number;\n    appName?: string;\n    status?: string;\n    sort?: string;\n    order?: string;\n    activityName?: string;\n    activityType?: string;\n    completedDate?: Date;\n    elementId?: string;\n    executionId?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionVersion?: number;\n    processInstanceId?: string;\n    serviceTaskId?: string;\n    serviceFullName?: string;\n    serviceName?: string;\n    serviceVersion?: string;\n    startedDate?: Date;\n}\n\nexport interface FilterParamsModel {\n    id?: string;\n    name?: string;\n    key?: string;\n    index?: number;\n}\n\nexport interface TaskFilterAction {\n    actionType?: string;\n    icon?: string;\n    tooltip?: string;\n    filter?: TaskFilterCloudModel | ServiceTaskFilterCloudModel;\n}\n\nexport interface FilterOptions {\n    label?: string;\n    value?: string;\n}\n\nexport enum AssignmentType {\n    CURRENT_USER = 'CURRENT_USER',\n    UNASSIGNED = 'UNASSIGNED',\n    CANDIDATE_GROUPS = 'CANDIDATE_GROUPS'\n}\n\nexport interface TaskFilterProperties {\n    label?: string;\n    type?: string;\n    value?: any;\n    key?: string;\n    attributes?: { [key: string]: string; };\n    options?: FilterOptions[];\n    dateFilterOptions?: DateCloudFilterType[];\n    selectionMode?: ComponentSelectionMode;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { PreferenceCloudServiceInterface } from './preference-cloud.interface';\n\nexport const PROCESS_FILTERS_SERVICE_TOKEN = new InjectionToken<PreferenceCloudServiceInterface>('proccess-filters-cloud');\n\nexport const TASK_FILTERS_SERVICE_TOKEN = new InjectionToken<PreferenceCloudServiceInterface>('task-filters-cloud');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Apollo } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { split, gql, InMemoryCache, ApolloLink, InMemoryCacheConfig } from '@apollo/client/core';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { onError } from '@apollo/client/link/error';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { BaseCloudService } from './base-cloud.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationCloudService extends BaseCloudService {\n\n    appsListening = [];\n\n    constructor(apiService: AlfrescoApiService,\n                appConfigService: AppConfigService,\n                public apollo: Apollo,\n                private http: HttpLink) {\n        super(apiService, appConfigService);\n    }\n\n    private get webSocketHost() {\n        return this.contextRoot.split('://')[1];\n    }\n\n    private get protocol() {\n        return this.contextRoot.split('://')[0] === 'https' ? 'wss' : 'ws';\n    }\n\n    initNotificationsForApp(appName: string) {\n        if (!this.appsListening.includes(appName)) {\n            this.appsListening.push(appName);\n            const httpLink = this.http.create({\n                uri: `${this.getBasePath(appName)}/notifications/graphql`\n            });\n\n            const webSocketLink = new WebSocketLink({\n                uri: `${this.protocol}://${this.webSocketHost}/${appName}/notifications/ws/graphql`,\n                options: {\n                    reconnect: true,\n                    lazy: true,\n                    connectionParams: {\n                        kaInterval: 2000,\n                        'X-Authorization': 'Bearer ' + this.apiService.getInstance().oauth2Auth.token\n                    }\n                }\n            });\n\n            const link = split(\n                ({ query }) => {\n                    const definition = getMainDefinition(query);\n                    return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n                },\n                webSocketLink,\n                httpLink\n            );\n\n            const errorLink = onError(({ graphQLErrors, operation, forward }) => {\n                if (graphQLErrors) {\n                    for (const err of graphQLErrors) {\n                        switch (err.extensions.code) {\n                            case 'UNAUTHENTICATED':\n                                const oldHeaders = operation.getContext().headers;\n                                operation.setContext({\n                                    headers: {\n                                        ...oldHeaders,\n                                        'X-Authorization': 'Bearer ' + this.apiService.getInstance().oauth2Auth.token\n                                    }\n                                });\n                                forward(operation);\n                                break;\n                            default:\n                        }\n                    }\n                }\n            });\n\n            this.apollo.createNamed(appName, {\n                link: ApolloLink.from([errorLink, link]),\n                cache: new InMemoryCache({ merge: true } as InMemoryCacheConfig),\n                defaultOptions: {\n                    watchQuery: {\n                        errorPolicy: 'all'\n                    }\n                }\n            });\n        }\n    }\n\n    makeGQLQuery(appName: string, gqlQuery: string) {\n        this.initNotificationsForApp(appName);\n        return this.apollo.use(appName).subscribe({ query: gql(gqlQuery) });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, IdentityUserService } from '@alfresco/adf-core';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, of, BehaviorSubject, throwError } from 'rxjs';\nimport { TaskFilterCloudModel } from '../models/filter-cloud.model';\nimport { switchMap, map } from 'rxjs/operators';\nimport { BaseCloudService } from '../../../services/base-cloud.service';\nimport { PreferenceCloudServiceInterface } from '../../../services/preference-cloud.interface';\nimport { TASK_FILTERS_SERVICE_TOKEN } from '../../../services/cloud-token.service';\nimport { TaskCloudNodePaging } from '../../task-list/models/task-cloud.model';\nimport { NotificationCloudService } from '../../../services/notification-cloud.service';\nimport { TaskCloudEngineEvent } from '../../../models/engine-event-cloud.model';\n\nconst TASK_EVENT_SUBSCRIPTION_QUERY = `\n    subscription {\n        engineEvents(eventType: [\n            TASK_COMPLETED\n            TASK_ASSIGNED\n            TASK_ACTIVATED\n            TASK_SUSPENDED\n            TASK_CANCELLED,\n            TASK_CREATED\n        ]) {\n            eventType\n            entity\n        }\n    }\n`;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskFilterCloudService extends BaseCloudService {\n    private filtersSubject: BehaviorSubject<TaskFilterCloudModel[]>;\n    filters$: Observable<TaskFilterCloudModel[]>;\n\n    constructor(\n        private identityUserService: IdentityUserService,\n        @Inject(TASK_FILTERS_SERVICE_TOKEN)\n        public preferenceService: PreferenceCloudServiceInterface,\n        apiService: AlfrescoApiService,\n        appConfigService: AppConfigService,\n        private notificationCloudService: NotificationCloudService) {\n        super(apiService, appConfigService);\n        this.filtersSubject = new BehaviorSubject([]);\n        this.filters$ = this.filtersSubject.asObservable();\n    }\n\n    /**\n     * Creates and returns the default task filters for an app.\n     * @param appName Name of the target app\n     * @returns Observable of default filters task filters just created or created filters\n     */\n    private createDefaultFilters(appName: string) {\n        const key: string = this.prepareKey(appName);\n        this.preferenceService.getPreferences(appName, key).pipe(\n            switchMap((response: any) => {\n                const preferences = (response && response.list && response.list.entries) ? response.list.entries : [];\n                if (!this.hasPreferences(preferences) || !this.hasTaskFilters(preferences, key)) {\n                    return this.createTaskFilters(appName, key, this.defaultTaskFilters(appName));\n                } else {\n                    return of(this.findFiltersByKeyInPreferences(preferences, key));\n                }\n            })\n        ).subscribe((filters) => {\n            this.addFiltersToStream(filters);\n        });\n    }\n\n    /**\n     * Checks user preference are empty or not\n     * @param preferences User preferences of the target app\n     * @returns Boolean value if the preferences are not empty\n     */\n    private hasPreferences(preferences: any): boolean {\n        return preferences && preferences.length > 0;\n    }\n\n    /**\n     * Checks for task filters in given user preferences\n     * @param preferences User preferences of the target app\n     * @param key Key of the task filters\n     * @param filters Details of create filter\n     * @returns Boolean value if the preference has task filters\n     */\n    private hasTaskFilters(preferences: any, key: string): boolean {\n        const filters = preferences.find((filter: any) => { return filter.entry.key === key; });\n        return (filters && filters.entry) ? JSON.parse(filters.entry.value).length > 0 : false;\n    }\n\n    /**\n     * Calls create preference api to create task filters\n     * @param appName Name of the target app\n     * @param key Key of the task instance filters\n     * @param filters Details of new task filter\n     * @returns Observable of created task filters\n     */\n    private createTaskFilters(appName: string, key: string, filters: TaskFilterCloudModel[]): Observable<TaskFilterCloudModel[]> {\n        return this.preferenceService.createPreference(appName, key, filters);\n    }\n\n    /**\n     * Calls get preference api to get task filter by preference key\n     * @param appName Name of the target app\n     * @param key Key of the task filters\n     * @returns Observable of task filters\n     */\n    private getTaskFiltersByKey(appName: string, key: string): Observable<TaskFilterCloudModel[]> {\n        return this.preferenceService.getPreferenceByKey(appName, key);\n    }\n\n    /**\n     * Gets all task filters for a task app.\n     * @param appName Name of the target app\n     * @returns Observable of task filter details\n     */\n    getTaskListFilters(appName?: string): Observable<TaskFilterCloudModel[]> {\n        this.createDefaultFilters(appName);\n        return this.filters$;\n    }\n\n    /**\n     * Gets a task filter.\n     * @param appName Name of the target app\n     * @param id ID of the task\n     * @returns Details of the task filter\n     */\n    getTaskFilterById(appName: string, id: string): Observable<TaskFilterCloudModel> {\n        const key: string = this.prepareKey(appName);\n        return this.getTaskFiltersByKey(appName, key).pipe(\n            switchMap((filters: TaskFilterCloudModel[]) => {\n                if (filters && filters.length === 0) {\n                    return this.createTaskFilters(appName, key, this.defaultTaskFilters(appName));\n                } else {\n                    return of(filters);\n                }\n            }),\n            map((filters: any) => {\n                return filters.filter((filter: TaskFilterCloudModel) => {\n                    return filter.id === id;\n                })[0];\n            })\n        );\n    }\n\n    /**\n     * Adds a new task filter.\n     * @param filter The new filter to add\n     * @returns Observable of task instance filters with newly added filter\n     */\n    addFilter(newFilter: TaskFilterCloudModel): Observable<TaskFilterCloudModel[]> {\n        const key: string = this.prepareKey(newFilter.appName);\n        return this.getTaskFiltersByKey(newFilter.appName, key).pipe(\n            switchMap((filters: any) => {\n                if (filters && filters.length === 0) {\n                    return this.createTaskFilters(newFilter.appName, key, <TaskFilterCloudModel[]> [newFilter]);\n                } else {\n                    filters.push(newFilter);\n                    return this.preferenceService.updatePreference(newFilter.appName, key, filters);\n                }\n            }),\n            map((filters: TaskFilterCloudModel[]) => {\n                this.addFiltersToStream(filters);\n                return filters;\n            })\n        );\n    }\n\n    private addFiltersToStream(filters: TaskFilterCloudModel[]) {\n        this.filtersSubject.next(filters);\n    }\n\n    /**\n     * Updates a task filter.\n     * @param filter The filter to update\n     * @returns Observable of task instance filters with updated filter\n     */\n    updateFilter(updatedFilter: TaskFilterCloudModel): Observable<TaskFilterCloudModel[]> {\n        const key: string = this.prepareKey(updatedFilter.appName);\n        return this.getTaskFiltersByKey(updatedFilter.appName, key).pipe(\n            switchMap((filters: TaskFilterCloudModel[]) => {\n                if (filters && filters.length === 0) {\n                    return this.createTaskFilters(updatedFilter.appName, key, <TaskFilterCloudModel[]> [updatedFilter]);\n                } else {\n                    const itemIndex = filters.findIndex((filter: TaskFilterCloudModel) => filter.id === updatedFilter.id);\n                    filters[itemIndex] = updatedFilter;\n                    return this.updateTaskFilters(updatedFilter.appName, key, filters);\n                }\n            }),\n            map((updatedFilters: TaskFilterCloudModel[]) => {\n                this.addFiltersToStream(updatedFilters);\n                return updatedFilters;\n            })\n        );\n    }\n\n    /**\n     * Deletes a task filter\n     * @param filter The filter to delete\n     * @returns Observable of task instance filters without deleted filter\n     */\n    deleteFilter(deletedFilter: TaskFilterCloudModel): Observable<TaskFilterCloudModel[]> {\n        const key = this.prepareKey(deletedFilter.appName);\n        return this.getTaskFiltersByKey(deletedFilter.appName, key).pipe(\n            switchMap((filters: TaskFilterCloudModel[]) => {\n                if (filters && filters.length > 0) {\n                    filters = filters.filter(filter => filter.id !== deletedFilter.id);\n                    return this.updateTaskFilters(deletedFilter.appName, key, filters);\n                }\n                return of([]);\n            }),\n            map(filters => {\n                this.addFiltersToStream(filters);\n                return filters;\n            })\n        );\n    }\n\n    /**\n     * Checks if given filter is a default filter\n     * @param filterName Name of the target task filter\n     * @returns Boolean value for whether the filter is a default filter\n     */\n    isDefaultFilter(filterName: string): boolean {\n        const defaultFilters = this.defaultTaskFilters();\n        return defaultFilters.findIndex((filter) => filterName === filter.name) !== -1;\n    }\n\n    /**\n     * Finds a task using an object with optional query properties.\n     * @param requestNode Query object\n     * @returns Task information\n     */\n    getTaskFilterCounter(taskFilter: TaskFilterCloudModel): Observable<any> {\n        if (taskFilter.appName || taskFilter.appName === '') {\n            const queryUrl = `${this.getBasePath(taskFilter.appName)}/query/v1/tasks`;\n            const queryParams = {\n                assignee: taskFilter.assignee,\n                status: taskFilter.status,\n                appName: taskFilter.appName,\n                maxItems: 1\n            };\n            return this.get<TaskCloudNodePaging>(queryUrl, queryParams).pipe(\n                map((tasks) => tasks.list.pagination.totalItems)\n            );\n        } else {\n            return throwError('Appname not configured');\n        }\n    }\n\n    /**\n     * Calls update preference api to update task filter\n     * @param appName Name of the target app\n     * @param key Key of the task filters\n     * @param filters Details of update filter\n     * @returns Observable of updated task filters\n     */\n    private updateTaskFilters(appName: string, key: string, filters: TaskFilterCloudModel[]): Observable<TaskFilterCloudModel[]> {\n        return this.preferenceService.updatePreference(appName, key, filters);\n    }\n\n    /**\n     * Creates a uniq key with appName and username\n     * @param appName Name of the target app\n     * @returns String of task filters preference key\n     */\n    private prepareKey(appName: string): string {\n        return `task-filters-${appName}-${this.identityUserService.getCurrentUserInfo().username}`;\n    }\n\n    /**\n     * Finds and returns the task filters from preferences\n     * @param appName Name of the target app\n     * @returns Array of TaskFilterCloudModel\n     */\n    private findFiltersByKeyInPreferences(preferences: any, key: string): TaskFilterCloudModel[] {\n        const result = preferences.find((filter: any) => { return filter.entry.key === key; });\n        return result && result.entry ? JSON.parse(result.entry.value) : [];\n    }\n\n    /**\n     * Creates and returns the default filters for a task app.\n     * @param appName Name of the target app\n     * @returns Array of TaskFilterCloudModel\n     */\n    private defaultTaskFilters(appName?: string): TaskFilterCloudModel[] {\n        return [\n            new TaskFilterCloudModel({\n                name: 'ADF_CLOUD_TASK_FILTERS.MY_TASKS',\n                key: 'my-tasks',\n                icon: 'inbox',\n                appName,\n                status: 'ASSIGNED',\n                assignee: this.identityUserService.getCurrentUserInfo().username,\n                sort: 'createdDate',\n                order: 'DESC',\n                showCounter: true\n            }),\n            new TaskFilterCloudModel({\n                name: 'ADF_CLOUD_TASK_FILTERS.QUEUED_TASKS',\n                key: 'queued-tasks',\n                icon: 'queue',\n                appName,\n                status: 'CREATED',\n                assignee: '',\n                sort: 'createdDate',\n                order: 'DESC',\n                showCounter: true\n            }),\n            new TaskFilterCloudModel({\n                name: 'ADF_CLOUD_TASK_FILTERS.COMPLETED_TASKS',\n                key: 'completed-tasks',\n                icon: 'done',\n                appName,\n                status: 'COMPLETED',\n                assignee: '',\n                sort: 'createdDate',\n                order: 'DESC'\n            })\n        ];\n    }\n\n    getTaskNotificationSubscription(appName: string): Observable<TaskCloudEngineEvent[]> {\n        return this.notificationCloudService.makeGQLQuery(appName, TASK_EVENT_SUBSCRIPTION_QUERY)\n            .pipe(map((events: any) => events.data.engineEvents));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Input, Output, OnDestroy, Directive } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { FilterParamsModel } from '../models/filter-cloud.model';\n\n@Directive()\n// tslint:disable-next-line: directive-class-suffix\nexport abstract class BaseTaskFiltersCloudComponent implements OnDestroy {\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string = '';\n\n    /**\n     * Parameters to use for the task filter cloud. If there is no match then the default filter\n     * (the first one in the list) is selected.\n     */\n    @Input()\n    filterParam: FilterParamsModel;\n\n    /** Toggles display of the filter's icons. */\n    @Input()\n    showIcons: boolean = false;\n\n    /** Emitted when the list is loaded. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs during loading. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    counters$: {[key: string]: Observable<number>} = {};\n    updatedCounters: string[] = [];\n\n    protected onDestroy$ = new Subject<boolean>();\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    wasFilterUpdated(filterKey: string): boolean {\n        return this.updatedCounters.includes(filterKey);\n    }\n\n    addToUpdatedCounters(filterKey: string) {\n        if (!this.updatedCounters.includes(filterKey)) {\n            this.updatedCounters.push(filterKey);\n        }\n    }\n\n    resetFilterCounter(filterKey: string) {\n        const filterIndex = this.updatedCounters.indexOf(filterKey);\n        if (filterIndex > -1) {\n            this.updatedCounters.splice(filterIndex, 1);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnChanges, Output, SimpleChanges, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskFilterCloudService } from '../services/task-filter-cloud.service';\nimport { TaskFilterCloudModel, FilterParamsModel } from '../models/filter-cloud.model';\nimport { AppConfigService, TranslationService } from '@alfresco/adf-core';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { BaseTaskFiltersCloudComponent } from './base-task-filters-cloud.component';\nimport { TaskDetailsCloudModel } from '../../start-task/models/task-details-cloud.model';\nimport { TaskCloudEngineEvent } from '../../../models/engine-event-cloud.model';\n\n@Component({\n    selector: 'adf-cloud-task-filters',\n    templateUrl: './base-task-filters-cloud.component.html',\n    styleUrls: ['./base-task-filters-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskFiltersCloudComponent extends BaseTaskFiltersCloudComponent implements OnInit, OnChanges {\n\n    /** Emitted when a filter is being selected based on the filterParam input. */\n    @Output()\n    filterSelected = new EventEmitter<TaskFilterCloudModel>();\n\n    /** Emitted when a filter is being clicked from the UI. */\n    @Output()\n    filterClicked = new EventEmitter<TaskFilterCloudModel>();\n\n    /** Emitted when filter counters are updated. */\n    @Output()\n    filterCounterUpdated: EventEmitter<TaskCloudEngineEvent[]> = new EventEmitter<TaskCloudEngineEvent[]>();\n\n    filters$: Observable<TaskFilterCloudModel[]>;\n    filters: TaskFilterCloudModel[] = [];\n    currentFilter: TaskFilterCloudModel;\n    enableNotifications: boolean;\n\n    constructor(private taskFilterCloudService: TaskFilterCloudService,\n                private translationService: TranslationService,\n                private appConfigService: AppConfigService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.enableNotifications = this.appConfigService.get('notifications', true);\n        this.initFilterCounterNotifications();\n        this.getFilters(this.appName);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        const filter = changes['filterParam'];\n        if (appName && appName.currentValue !== appName.previousValue) {\n            this.getFilters(appName.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectFilterAndEmit(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     */\n    getFilters(appName: string) {\n        this.filters$ = this.taskFilterCloudService.getTaskListFilters(appName);\n\n        this.filters$.pipe(takeUntil(this.onDestroy$)).subscribe(\n            (res: TaskFilterCloudModel[]) => {\n                this.resetFilter();\n                this.filters = res || [];\n                this.selectFilterAndEmit(this.filterParam);\n                this.updateFilterCounters();\n                this.success.emit(res);\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    updateFilterCounters() {\n        this.filters.forEach((filter: TaskFilterCloudModel) => this.updateFilterCounter(filter));\n    }\n\n    updateFilterCounter(filter: TaskFilterCloudModel) {\n        if (filter?.showCounter) {\n            this.counters$[filter.key] = this.taskFilterCloudService.getTaskFilterCounter(filter);\n        }\n    }\n\n    initFilterCounterNotifications() {\n        if (this.appName && this.enableNotifications) {\n            this.taskFilterCloudService.getTaskNotificationSubscription(this.appName)\n                .pipe(debounceTime(3000))\n                .subscribe((result: TaskCloudEngineEvent[]) => {\n                    result.map((taskEvent: TaskCloudEngineEvent) => {\n                        this.checkFilterCounter(taskEvent.entity);\n                    });\n\n                    if (this.updatedCounters.length) {\n                        this.updateFilterCounters();\n                        this.filterCounterUpdated.emit(result);\n                    }\n                });\n        }\n    }\n\n    checkFilterCounter(filterNotification: TaskDetailsCloudModel) {\n        this.filters.map((filter) => {\n            if (this.isFilterPresent(filter, filterNotification)) {\n                this.addToUpdatedCounters(filter.key);\n            }\n        });\n    }\n\n    isFilterPresent(filter: TaskFilterCloudModel, filterNotification: TaskDetailsCloudModel): boolean {\n        return filter.status === filterNotification.status\n            && (filter.assignee === filterNotification.assignee || filterNotification.assignee === undefined);\n    }\n\n    public selectFilter(paramFilter: FilterParamsModel) {\n        if (paramFilter) {\n            this.currentFilter = this.filters.find((filter, index) =>\n                paramFilter.index === index ||\n                paramFilter.key === filter.key ||\n                paramFilter.id === filter.id ||\n                (paramFilter.name &&\n                    (paramFilter.name.toLocaleLowerCase() === this.translationService.instant(filter.name).toLocaleLowerCase())\n                ));\n        }\n    }\n\n    public selectFilterAndEmit(newParamFilter: FilterParamsModel) {\n        if (newParamFilter) {\n            this.selectFilter(newParamFilter);\n\n            if (this.currentFilter) {\n                this.resetFilterCounter(this.currentFilter.key);\n                this.filterSelected.emit(this.currentFilter);\n            }\n        } else {\n            this.currentFilter = undefined;\n        }\n    }\n\n    /**\n     * Selects and emits the clicked filter.\n     */\n    public onFilterClick(filter: FilterParamsModel) {\n        if (filter) {\n            this.selectFilter(filter);\n            this.updateFilterCounter(this.currentFilter);\n            this.filterClicked.emit(this.currentFilter);\n        } else {\n            this.currentFilter = undefined;\n        }\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { ProcessFilterProperties, ProcessFilterOptions } from '../../process/process-filters/models/process-filter-cloud.model';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { DateRangeFilter, DateCloudFilterType } from '../../models/date-cloud-filter.model';\nimport moment from 'moment-es6';\n\n@Component({\n     selector: 'adf-cloud-date-range-filter',\n     styleUrls: ['./date-range-filter.component.scss'],\n     templateUrl: './date-range-filter.component.html'\n })\n export class DateRangeFilterComponent {\n\n    @Input()\n    processFilterProperty: ProcessFilterProperties;\n\n    @Input()\n    options: DateCloudFilterType[];\n\n    @Output()\n    dateChanged = new EventEmitter<DateRangeFilter>();\n\n    @Output()\n    dateTypeChange = new EventEmitter<DateCloudFilterType>();\n\n    type: DateCloudFilterType;\n    filteredProperties: ProcessFilterOptions[] = [];\n    dateRangeForm = new FormGroup({\n        from: new FormControl(),\n        to: new FormControl()\n    });\n\n    ngOnInit() {\n        this.options = this.options ? this.options : this.createDefaultRangeOptions();\n        const defaultProperties = this.createDefaultDateOptions();\n        this.filteredProperties = defaultProperties.filter((filterProperty) => this.isValidProperty(this.options, filterProperty.value.toString()));\n        if (this.hasPreselectedValues()) {\n            this.setPreselectedValues();\n        }\n    }\n\n    onSelectionChange(option: MatSelectChange) {\n        this.type = option.value;\n        if (!this.isDateRangeType()) {\n            this.dateTypeChange.emit(this.type);\n        }\n    }\n\n    isDateRangeType(): boolean {\n        return this.type === DateCloudFilterType.RANGE;\n    }\n\n    onDateRangeClosed() {\n        const dateRange = {\n            startDate: moment(this.dateRangeForm.controls.from.value).startOf('day').toISOString(true),\n            endDate: moment(this.dateRangeForm.controls.to.value).endOf('day').toISOString(true)\n        };\n        this.dateChanged.emit(dateRange);\n    }\n\n    private hasPreselectedValues() {\n        return !!this.processFilterProperty?.attributes && !!this.processFilterProperty?.value;\n    }\n\n    private setPreselectedValues() {\n        const from = this.getFilterAttribute('from');\n        const to = this.getFilterAttribute('to');\n        const type = this.getFilterAttribute('dateType');\n\n        this.dateRangeForm.get('from').setValue(moment(this.getFilterValue(from)));\n        this.dateRangeForm.get('to').setValue(moment(this.getFilterValue(to)));\n        this.type = this.getFilterValue(type);\n    }\n\n    private getFilterAttribute(key: string): string {\n        return this.processFilterProperty.attributes[key];\n    }\n\n    private getFilterValue(attribute: string) {\n        return this.processFilterProperty.value[attribute];\n    }\n\n    private isValidProperty(filterProperties: string[], key: string): boolean {\n        return filterProperties ? filterProperties.indexOf(key) >= 0 : true;\n    }\n\n    private createDefaultRangeOptions(): DateCloudFilterType[] {\n        return [\n            DateCloudFilterType.NO_DATE,\n            DateCloudFilterType.TODAY,\n            DateCloudFilterType.WEEK,\n            DateCloudFilterType.MONTH,\n            DateCloudFilterType.QUARTER,\n            DateCloudFilterType.YEAR,\n            DateCloudFilterType.RANGE\n        ];\n    }\n\n    private createDefaultDateOptions(): ProcessFilterOptions[] {\n        return  [\n            {\n                value: DateCloudFilterType.NO_DATE,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.NO_DATE'\n            },\n            {\n                value: DateCloudFilterType.TODAY,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.TODAY'\n            },\n            {\n                value: DateCloudFilterType.TOMORROW,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.TOMORROW'\n            },\n            {\n                value: DateCloudFilterType.NEXT_7_DAYS,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.NEXT_7_DAYS'\n            },\n            {\n                value: DateCloudFilterType.WEEK,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.WEEK'\n            },\n            {\n                value: DateCloudFilterType.MONTH,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.MONTH'\n            },\n            {\n                value: DateCloudFilterType.QUARTER,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.QUARTER'\n            },\n            {\n                value: DateCloudFilterType.YEAR,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.YEAR'\n            },\n            {\n                value: DateCloudFilterType.RANGE,\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE.RANGE'\n            }\n        ];\n    }\n }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { DateRangeFilterComponent } from './date-range-filter/date-range-filter.component';\nimport { MaterialModule } from '../material.module';\nimport { CommonModule } from '@angular/common';\nimport { DateRangeFilterService } from './date-range-filter/date-range-filter.service';\n\n@NgModule({\n    declarations: [ DateRangeFilterComponent ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        MaterialModule\n    ],\n    exports: [\n        DateRangeFilterComponent\n    ],\n    providers: [\n        DateRangeFilterService\n    ]\n})\nexport class ProcessCommonModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\nimport {\n    Component,\n    OnInit,\n    Output,\n    EventEmitter,\n    ViewEncapsulation,\n    Input,\n    SimpleChanges,\n    OnChanges,\n    OnDestroy,\n    ChangeDetectionStrategy,\n    ViewChild, ElementRef, SimpleChange\n} from '@angular/core';\nimport { Observable, of, BehaviorSubject, Subject } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, mergeMap, tap, filter, map, takeUntil } from 'rxjs/operators';\nimport {\n    FullNamePipe,\n    IdentityUserModel,\n    IdentityUserService,\n    LogService\n} from '@alfresco/adf-core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ComponentSelectionMode } from '../../types';\n\n@Component({\n    selector: 'adf-cloud-people',\n    templateUrl: './people-cloud.component.html',\n    styleUrls: ['./people-cloud.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n            transition('void => enter', [\n                style({ opacity: 0, transform: 'translateY(-100%)' }),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    providers: [FullNamePipe],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleCloudComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** Name of the application. If specified, this shows the users who have access to the app. */\n    @Input()\n    appName: string;\n\n    /** User selection mode (single/multiple). */\n    @Input()\n    mode: ComponentSelectionMode = 'single';\n\n    /** Role names of the users to be listed. */\n    @Input()\n    roles: string[];\n\n    /** This flag enables the validation on the preSelectUsers passed as input.\n     * In case the flag is true the components call the identity service to verify the validity of the information passed as input.\n     * Otherwise, no check will be done.\n     */\n    @Input()\n    validate: boolean = false;\n\n    /** Show the info in readonly mode\n     */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Array of users to be pre-selected. All users in the\n     * array are pre-selected in multi selection mode, but only the first user\n     * is pre-selected in single selection mode.\n     * Mandatory properties are: id, email, username\n     */\n    @Input()\n    preSelectUsers: IdentityUserModel[] = [];\n\n    /** Array of users to be excluded.\n     * Mandatory properties are: id, email, username\n     */\n    @Input()\n    excludedUsers: IdentityUserModel[] = [];\n\n    /** FormControl to list of users */\n    @Input()\n    userChipsCtrl: FormControl = new FormControl({ value: '', disabled: false });\n\n    /** FormControl to search the user */\n    @Input()\n    searchUserCtrl = new FormControl({ value: '', disabled: false });\n\n    /** Placeholder translation key\n     */\n    @Input()\n    title: string;\n\n    /** Emitted when a user is selected. */\n    @Output()\n    selectUser = new EventEmitter<IdentityUserModel>();\n\n    /** Emitted when a selected user is removed in multi selection mode. */\n    @Output()\n    removeUser = new EventEmitter<IdentityUserModel>();\n\n    /** Emitted when a user selection change. */\n    @Output()\n    changedUsers = new EventEmitter<IdentityUserModel[]>();\n\n    /** Emitted when an warning occurs. */\n    @Output()\n    warning = new EventEmitter<any>();\n\n    @ViewChild('userInput')\n    private userInput: ElementRef<HTMLInputElement>;\n\n    private _searchUsers: IdentityUserModel[] = [];\n    private onDestroy$ = new Subject<boolean>();\n\n    selectedUsers: IdentityUserModel[] = [];\n    invalidUsers: IdentityUserModel[] = [];\n\n    searchUsers$ = new BehaviorSubject<IdentityUserModel[]>(this._searchUsers);\n    _subscriptAnimationState: string = 'enter';\n    clientId: string;\n    isFocused: boolean;\n\n    validateUsersMessage: string;\n    searchedValue = '';\n\n    validationLoading = false;\n    searchLoading = false;\n\n    constructor(\n        private identityUserService: IdentityUserService,\n        private logService: LogService) {}\n\n    ngOnInit(): void {\n        this.loadClientId();\n        this.initSearch();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.valueChanged(changes.preSelectUsers)\n            || this.valueChanged(changes.mode)\n            || this.valueChanged(changes.validate)\n        ) {\n            if (this.hasPreSelectUsers()) {\n                this.loadPreSelectUsers();\n            } else if (this.hasPreselectedUsersCleared(changes)) {\n                this.selectedUsers = [];\n                this.invalidUsers = [];\n            }\n\n            if (!this.isValidationEnabled()) {\n                this.invalidUsers = [];\n            }\n        }\n\n        if (changes.appName && this.isAppNameChanged(changes.appName)) {\n            this.loadClientId();\n        }\n    }\n\n    private async loadClientId(): Promise<void> {\n        this.clientId = await this.identityUserService.getClientIdByApplicationName(this.appName).toPromise();\n        if (this.clientId) {\n            this.searchUserCtrl.enable();\n        }\n    }\n\n    private initSearch(): void {\n        this.searchUserCtrl.valueChanges.pipe(\n            filter((value) => {\n                this.searchLoading = true;\n                return typeof value === 'string';\n            }),\n            tap((value: string) => {\n                if (value) {\n                    this.setTypingError();\n                }\n            }),\n            debounceTime(500),\n            distinctUntilChanged(),\n            tap((value: string) => {\n                if (value.trim()) {\n                    this.searchedValue = value;\n                } else {\n                    this.searchUserCtrl.markAsPristine();\n                    this.searchUserCtrl.markAsUntouched();\n                }\n            }),\n            tap(() => {\n                this.resetSearchUsers();\n            }),\n            switchMap((search) =>\n                this.identityUserService.findUsersByName(search.trim())),\n            mergeMap((users) => {\n                this.resetSearchUsers();\n                this.searchLoading = false;\n                return users;\n            }),\n            filter(user => !this.isUserAlreadySelected(user) && !this.isExcludedUser(user)),\n            mergeMap(user => {\n                if (this.appName) {\n                    return this.checkUserHasAccess(user.id).pipe(\n                        mergeMap(\n                            hasRole => hasRole ? of(user) : of()\n                        )\n                    );\n                } else if (this.hasRoles()) {\n                    return this.filterUsersByRoles(user);\n                } else {\n                    return of(user);\n                }\n            }),\n            takeUntil(this.onDestroy$)\n        ).subscribe(user => {\n            this._searchUsers.push(user);\n            this.searchUsers$.next(this._searchUsers);\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    private isAppNameChanged(change: SimpleChange): boolean {\n        return change && change.previousValue !== change.currentValue && this.appName && this.appName.length > 0;\n    }\n\n    isValidationEnabled(): boolean {\n        return this.validate === true;\n    }\n\n    private checkUserHasAccess(userId: string): Observable<boolean> {\n        if (this.hasRoles()) {\n            return this.identityUserService.checkUserHasAnyClientAppRole(userId, this.clientId, this.roles);\n        } else {\n            return this.identityUserService.checkUserHasClientApp(userId, this.clientId);\n        }\n    }\n\n    private hasRoles(): boolean {\n        return this.roles && this.roles.length > 0;\n    }\n\n    filterUsersByRoles(user: IdentityUserModel): Observable<IdentityUserModel> {\n        return this.identityUserService.checkUserHasRole(user.id, this.roles).pipe(\n            map((hasRole: boolean) => ({ hasRole: hasRole, user: user })),\n            filter((filteredUser: { hasRole: boolean, user: IdentityUserModel }) => filteredUser.hasRole),\n            map((filteredUser: { hasRole: boolean, user: IdentityUserModel }) => filteredUser.user));\n    }\n\n    private isUserAlreadySelected(searchUser: IdentityUserModel): boolean {\n        if (this.selectedUsers && this.selectedUsers.length > 0) {\n            const result = this.selectedUsers.find((selectedUser) => {\n                return this.compare(selectedUser, searchUser);\n            });\n\n            return !!result;\n        }\n        return false;\n    }\n\n    private isExcludedUser(searchUser: IdentityUserModel): boolean {\n        if (this.excludedUsers?.length > 0) {\n            return !!this.excludedUsers.find(excludedUser => this.compare(excludedUser, searchUser));\n        }\n        return false;\n    }\n\n    private async loadPreSelectUsers(): Promise<void> {\n        this.selectedUsers = [];\n\n        if (this.isSingleMode()) {\n            this.selectedUsers = [this.preSelectUsers[0]];\n        } else {\n            this.selectedUsers = this.removeDuplicatedUsers(this.preSelectUsers);\n        }\n        this.userChipsCtrl.setValue(this.selectedUsers[0].username);\n        if (this.isValidationEnabled()) {\n            this.validationLoading = true;\n            await this.validatePreselectUsers();\n            this.validationLoading = false;\n        }\n    }\n\n    private getPreselectedUsers(): IdentityUserModel[] {\n        if (this.isSingleMode()) {\n            return [this.preSelectUsers[0]];\n        } else {\n            return this.removeDuplicatedUsers(this.preSelectUsers);\n        }\n    }\n\n    async validatePreselectUsers(): Promise<any> {\n        this.invalidUsers = [];\n        const validUsers: IdentityUserModel[] = [];\n\n        for (const user of this.getPreselectedUsers()) {\n            try {\n                const validationResult = await this.searchUser(user);\n\n                if (this.compare(user, validationResult)) {\n                    validationResult.readonly = user.readonly;\n                    validUsers.push(validationResult);\n                } else {\n                    this.invalidUsers.push(user);\n                }\n            } catch (error) {\n                this.invalidUsers.push(user);\n                this.logService.error(error);\n            }\n        }\n\n        this.checkPreselectValidationErrors();\n        this.selectedUsers = validUsers.concat(this.invalidUsers);\n    }\n\n    compare(preselectedUser: IdentityUserModel, identityUser: IdentityUserModel): boolean {\n        if (preselectedUser && identityUser) {\n            const uniquePropertyIdentifiers = ['id', 'username', 'email'];\n            for (const property of Object.keys(preselectedUser)) {\n                if (preselectedUser[property] !== undefined && uniquePropertyIdentifiers.includes(property)) {\n                    return preselectedUser[property] === identityUser[property];\n                }\n            }\n        }\n        return false;\n    }\n\n    private getSearchKey(user: IdentityUserModel): string {\n        if (user.id) {\n            return 'id';\n        } else if (user.email) {\n            return 'email';\n        } else if (user.username) {\n            return 'username';\n        } else {\n            return null;\n        }\n    }\n\n    async searchUser(user: IdentityUserModel): Promise<IdentityUserModel> {\n        const key = this.getSearchKey(user);\n\n        switch (key) {\n            case 'id':\n                return this.identityUserService.findUserById(user[key]).toPromise();\n            case 'username':\n                return (await this.identityUserService.findUserByUsername(user[key]).toPromise())[0];\n            case 'email':\n                return (await this.identityUserService.findUserByEmail(user[key]).toPromise())[0];\n            default:\n                return null;\n        }\n    }\n\n    removeDuplicatedUsers(users: IdentityUserModel[]): IdentityUserModel[] {\n        return users.filter((user, index, self) =>\n            index === self.findIndex(auxUser =>\n                user.id === auxUser.id && user.username === auxUser.username && user.email === auxUser.email\n            ));\n    }\n\n    checkPreselectValidationErrors(): void {\n        this.invalidUsers = this.removeDuplicatedUsers(this.invalidUsers);\n\n        if (this.invalidUsers.length > 0) {\n            this.generateInvalidUsersMessage();\n        }\n\n        this.warning.emit({\n            message: 'INVALID_PRESELECTED_USERS',\n            users: this.invalidUsers\n        });\n    }\n\n    onSelect(user: IdentityUserModel): void {\n        if (user) {\n            this.selectUser.emit(user);\n\n            if (this.isMultipleMode()) {\n                if (!this.isUserAlreadySelected(user)) {\n                    this.selectedUsers.push(user);\n                }\n            } else {\n                this.invalidUsers = [];\n                this.selectedUsers = [user];\n            }\n\n            this.userInput.nativeElement.value = '';\n            this.searchUserCtrl.setValue('');\n            this.userChipsCtrlValue(this.selectedUsers[0].username);\n\n            this.changedUsers.emit(this.selectedUsers);\n            this.resetSearchUsers();\n        }\n    }\n\n    onRemove(userToRemove: IdentityUserModel): void {\n        this.removeUser.emit(userToRemove);\n        this.removeUserFromSelected(userToRemove);\n        this.changedUsers.emit(this.selectedUsers);\n        if (this.selectedUsers.length === 0) {\n            this.userChipsCtrlValue('');\n\n        } else {\n            this.userChipsCtrlValue(this.selectedUsers[0].username);\n        }\n        this.searchUserCtrl.markAsDirty();\n        this.searchUserCtrl.markAsTouched();\n\n        if (this.isValidationEnabled()) {\n            this.removeUserFromValidation(userToRemove);\n            this.checkPreselectValidationErrors();\n        }\n    }\n\n    private userChipsCtrlValue(value: string) {\n        this.userChipsCtrl.setValue(value);\n        this.userChipsCtrl.markAsDirty();\n        this.userChipsCtrl.markAsTouched();\n    }\n\n    private removeUserFromSelected({ id, username, email }: IdentityUserModel): void {\n        const indexToRemove = this.selectedUsers.findIndex(user => {\n            return user.id === id\n                && user.username === username\n                && user.email === email;\n        });\n\n        if (indexToRemove !== -1) {\n            this.selectedUsers.splice(indexToRemove, 1);\n        }\n    }\n\n    private removeUserFromValidation({ id, username, email }: IdentityUserModel): void {\n        const indexToRemove = this.invalidUsers.findIndex(user => {\n            return user.id === id\n                && user.username === username\n                && user.email === email;\n        });\n\n        if (indexToRemove !== -1) {\n            this.invalidUsers.splice(indexToRemove, 1);\n        }\n    }\n\n    generateInvalidUsersMessage(): void {\n        this.validateUsersMessage = '';\n\n        this.invalidUsers.forEach((invalidUser, index) => {\n            if (index === this.invalidUsers.length - 1) {\n                this.validateUsersMessage += `${invalidUser.username} `;\n            } else {\n                this.validateUsersMessage += `${invalidUser.username}, `;\n            }\n        });\n    }\n\n    setTypingError(): void {\n        this.searchUserCtrl.setErrors({\n            searchTypingError: true,\n            ...this.searchUserCtrl.errors\n        });\n    }\n\n    hasPreselectError(): boolean {\n        return this.invalidUsers\n            && this.invalidUsers.length > 0;\n    }\n\n    getDisplayName(user): string {\n        return FullNamePipe.prototype.transform(user);\n    }\n\n    isMultipleMode(): boolean {\n        return this.mode === 'multiple';\n    }\n\n    isSingleMode(): boolean {\n        return this.mode === 'single';\n    }\n\n    private isSingleSelectionReadonly(): boolean {\n        return this.isSingleMode()\n            && this.selectedUsers.length === 1\n            && this.selectedUsers[0].readonly === true;\n    }\n\n    private hasPreSelectUsers(): boolean {\n        return this.preSelectUsers\n            && this.preSelectUsers.length > 0;\n    }\n\n    private valueChanged(change: SimpleChange): boolean {\n        return change\n            && change.currentValue !== change.previousValue;\n    }\n\n    private hasPreselectedUsersCleared(changes: SimpleChanges): boolean {\n        return changes\n            && changes.preSelectUsers\n            && changes.preSelectUsers.currentValue\n            && changes.preSelectUsers.currentValue.length === 0;\n    }\n\n    private resetSearchUsers(): void {\n        this._searchUsers = [];\n        this.searchUsers$.next(this._searchUsers);\n    }\n\n    getSelectedUsers(): IdentityUserModel[] {\n        return this.selectedUsers;\n    }\n\n    isReadonly(): boolean {\n        return this.readOnly || this.isSingleSelectionReadonly();\n    }\n\n    isValidationLoading(): boolean {\n        return this.isValidationEnabled() && this.validationLoading;\n    }\n\n    setFocus(isFocused: boolean) {\n        this.isFocused = isFocused;\n    }\n\n    hasError(): boolean {\n        return !!this.searchUserCtrl.errors;\n    }\n\n    getValidationPattern(): string {\n        return this.searchUserCtrl.errors.pattern.requiredPattern;\n    }\n\n    getValidationMaxLength(): string {\n        return this.searchUserCtrl.errors.maxlength.requiredLength;\n    }\n\n    getValidationMinLength(): string {\n        return this.searchUserCtrl.errors.minlength.requiredLength;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { PeopleCloudComponent } from './components/people-cloud.component';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule\n    ],\n    declarations: [PeopleCloudComponent],\n    exports: [\n        PeopleCloudComponent\n    ]\n})\nexport class PeopleCloudModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdentityUserService } from '@alfresco/adf-core';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { ServiceTaskFilterCloudModel } from '../models/filter-cloud.model';\nimport { switchMap, map } from 'rxjs/operators';\nimport { PreferenceCloudServiceInterface } from '../../../services/preference-cloud.interface';\nimport { TASK_FILTERS_SERVICE_TOKEN } from '../../../services/cloud-token.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ServiceTaskFilterCloudService {\n    private filtersSubject: BehaviorSubject<ServiceTaskFilterCloudModel[]>;\n    filters$: Observable<ServiceTaskFilterCloudModel[]>;\n\n    constructor(\n        private identityUserService: IdentityUserService,\n        @Inject(TASK_FILTERS_SERVICE_TOKEN)\n        public preferenceService: PreferenceCloudServiceInterface\n    ) {\n        this.filtersSubject = new BehaviorSubject([]);\n        this.filters$ = this.filtersSubject.asObservable();\n    }\n\n    /**\n     * Creates and returns the default task filters for an app.\n     * @param appName Name of the target app\n     * @returns Observable of default filters task filters just created or created filters\n     */\n    private createDefaultFilters(appName: string) {\n        const key: string = this.prepareKey(appName);\n        this.preferenceService.getPreferences(appName, key).pipe(\n            switchMap((response: any) => {\n                const preferences = (response && response.list && response.list.entries) ? response.list.entries : [];\n                if (!this.hasPreferences(preferences) || !this.hasTaskFilters(preferences, key)) {\n                    return this.createTaskFilters(appName, key, this.defaultServiceTaskFilters(appName));\n                } else {\n                    return of(this.findFiltersByKeyInPreferences(preferences, key));\n                }\n            })\n        ).subscribe((filters) => {\n            this.addFiltersToStream(filters);\n        });\n    }\n\n    /**\n     * Checks user preference are empty or not\n     * @param preferences User preferences of the target app\n     * @returns Boolean value if the preferences are not empty\n     */\n    private hasPreferences(preferences: any): boolean {\n        return preferences && preferences.length > 0;\n    }\n\n    /**\n     * Checks for task filters in given user preferences\n     * @param preferences User preferences of the target app\n     * @param key Key of the task filters\n     * @param filters Details of create filter\n     * @returns Boolean value if the preference has task filters\n     */\n    private hasTaskFilters(preferences: any, key: string): boolean {\n        const filters = preferences.find((filter: any) => { return filter.entry.key === key; });\n        return (filters && filters.entry) ? JSON.parse(filters.entry.value).length > 0 : false;\n    }\n\n    /**\n     * Calls create preference api to create task filters\n     * @param appName Name of the target app\n     * @param key Key of the task instance filters\n     * @param filters Details of new task filter\n     * @returns Observable of created task filters\n     */\n    private createTaskFilters(appName: string, key: string, filters: ServiceTaskFilterCloudModel[]): Observable<ServiceTaskFilterCloudModel[]> {\n        return this.preferenceService.createPreference(appName, key, filters);\n    }\n\n    /**\n     * Calls get preference api to get task filter by preference key\n     * @param appName Name of the target app\n     * @param key Key of the task filters\n     * @returns Observable of task filters\n     */\n    private getTaskFiltersByKey(appName: string, key: string): Observable<ServiceTaskFilterCloudModel[]> {\n        return this.preferenceService.getPreferenceByKey(appName, key);\n    }\n\n    /**\n     * Gets all task filters for a task app.\n     * @param appName Name of the target app\n     * @returns Observable of task filter details\n     */\n    getTaskListFilters(appName?: string): Observable<ServiceTaskFilterCloudModel[]> {\n        this.createDefaultFilters(appName);\n        return this.filters$;\n    }\n\n    /**\n     * Gets a task filter.\n     * @param appName Name of the target app\n     * @param id ID of the task\n     * @returns Details of the task filter\n     */\n    getTaskFilterById(appName: string, id: string): Observable<ServiceTaskFilterCloudModel> {\n        const key: string = this.prepareKey(appName);\n        return this.getTaskFiltersByKey(appName, key).pipe(\n            switchMap((filters: ServiceTaskFilterCloudModel[]) => {\n                if (filters && filters.length === 0) {\n                    return this.createTaskFilters(appName, key, this.defaultServiceTaskFilters(appName));\n                } else {\n                    return of(filters);\n                }\n            }),\n            map((filters: any) => {\n                return filters.filter((filter: ServiceTaskFilterCloudModel) => {\n                    return filter.id === id;\n                })[0];\n            })\n        );\n    }\n\n    /**\n     * Adds a new task filter.\n     * @param filter The new filter to add\n     * @returns Observable of task instance filters with newly added filter\n     */\n    addFilter(newFilter: ServiceTaskFilterCloudModel): Observable<ServiceTaskFilterCloudModel[]> {\n        const key: string = this.prepareKey(newFilter.appName);\n        return this.getTaskFiltersByKey(newFilter.appName, key).pipe(\n            switchMap((filters: ServiceTaskFilterCloudModel[]) => {\n                if (filters && filters.length === 0) {\n                    return this.createTaskFilters(newFilter.appName, key, <ServiceTaskFilterCloudModel[]> [newFilter]);\n                } else {\n                    filters.push(newFilter);\n                    return this.preferenceService.updatePreference(newFilter.appName, key, filters);\n                }\n            }),\n            map((filters: ServiceTaskFilterCloudModel[]) => {\n                this.addFiltersToStream(filters);\n                return filters;\n            })\n        );\n    }\n\n    private addFiltersToStream(filters: ServiceTaskFilterCloudModel[]) {\n        this.filtersSubject.next(filters);\n    }\n\n    /**\n     * Updates a task filter.\n     * @param filter The filter to update\n     * @returns Observable of task instance filters with updated filter\n     */\n    updateFilter(updatedFilter: ServiceTaskFilterCloudModel): Observable<ServiceTaskFilterCloudModel[]> {\n        const key: string = this.prepareKey(updatedFilter.appName);\n        return this.getTaskFiltersByKey(updatedFilter.appName, key).pipe(\n            switchMap((filters: ServiceTaskFilterCloudModel[]) => {\n                if (filters && filters.length === 0) {\n                    return this.createTaskFilters(updatedFilter.appName, key, <ServiceTaskFilterCloudModel[]> [updatedFilter]);\n                } else {\n                    const itemIndex = filters.findIndex((filter: ServiceTaskFilterCloudModel) => filter.id === updatedFilter.id);\n                    filters[itemIndex] = updatedFilter;\n                    return this.updateTaskFilters(updatedFilter.appName, key, filters);\n                }\n            }),\n            map((updatedFilters: ServiceTaskFilterCloudModel[]) => {\n                this.addFiltersToStream(updatedFilters);\n                return updatedFilters;\n            })\n        );\n    }\n\n    /**\n     * Deletes a task filter\n     * @param filter The filter to delete\n     * @returns Observable of task instance filters without deleted filter\n     */\n    deleteFilter(deletedFilter: ServiceTaskFilterCloudModel): Observable<ServiceTaskFilterCloudModel[]> {\n        const key = this.prepareKey(deletedFilter.appName);\n        return this.getTaskFiltersByKey(deletedFilter.appName, key).pipe(\n            switchMap((filters: ServiceTaskFilterCloudModel[]) => {\n                if (filters && filters.length > 0) {\n                    filters = filters.filter(filter => filter.id !== deletedFilter.id);\n                    return this.updateTaskFilters(deletedFilter.appName, key, filters);\n                }\n                return of([]);\n            }),\n            map(filters => {\n                this.addFiltersToStream(filters);\n                return filters;\n            })\n        );\n    }\n\n    /**\n     * Checks if given filter is a default filter\n     * @param filterName Name of the target task filter\n     * @returns Boolean value for whether the filter is a default filter\n     */\n    isDefaultFilter(filterName: string): boolean {\n        const defaultFilters = this.defaultServiceTaskFilters();\n        return defaultFilters.findIndex((filter) => filterName === filter.name) !== -1;\n    }\n\n    /**\n     * Calls update preference api to update task filter\n     * @param appName Name of the target app\n     * @param key Key of the task filters\n     * @param filters Details of update filter\n     * @returns Observable of updated task filters\n     */\n    private updateTaskFilters(appName: string, key: string, filters: ServiceTaskFilterCloudModel[]): Observable<ServiceTaskFilterCloudModel[]> {\n        return this.preferenceService.updatePreference(appName, key, filters);\n    }\n\n    /**\n     * Creates a uniq key with appName and username\n     * @param appName Name of the target app\n     * @returns String of task filters preference key\n     */\n    private prepareKey(appName: string): string {\n        return `service-task-filters-${appName}-${this.identityUserService.getCurrentUserInfo().username}`;\n    }\n\n    /**\n     * Finds and returns the task filters from preferences\n     * @param appName Name of the target app\n     * @returns Array of TaskFilterCloudModel\n     */\n    private findFiltersByKeyInPreferences(preferences: any, key: string): ServiceTaskFilterCloudModel[] {\n        const result = preferences.find((filter: any) => { return filter.entry.key === key; });\n        return result && result.entry ? JSON.parse(result.entry.value) : [];\n    }\n\n    /**\n     * Creates and returns the default filters for a task app.\n     * @param appName Name of the target app\n     * @returns Array of TaskFilterCloudModel\n     */\n    private defaultServiceTaskFilters(appName?: string): ServiceTaskFilterCloudModel[] {\n        return [\n            {\n                id: this.generateRandomId(),\n                name: 'ADF_CLOUD_SERVICE_TASK_FILTERS.ALL_SERVICE_TASKS',\n                key: 'my-service-tasks',\n                icon: 'inbox',\n                appName,\n                status: '',\n                sort: 'startedDate',\n                order: 'DESC'\n            } as ServiceTaskFilterCloudModel,\n            {\n                id: this.generateRandomId(),\n                name: 'ADF_CLOUD_SERVICE_TASK_FILTERS.COMPLETED_TASKS',\n                key: 'completed-tasks',\n                icon: 'done',\n                appName,\n                status: 'COMPLETED',\n                sort: 'completedDate',\n                order: 'DESC'\n            } as ServiceTaskFilterCloudModel,\n            {\n                id: this.generateRandomId(),\n                name: 'ADF_CLOUD_SERVICE_TASK_FILTERS.ERRORED_TASKS',\n                key: 'errored-service-tasks',\n                icon: 'error',\n                appName,\n                status: 'ERROR',\n                sort: 'startedDate',\n                order: 'DESC'\n            } as ServiceTaskFilterCloudModel\n        ];\n    }\n\n    generateRandomId(): string {\n        return Math.random().toString(36).substr(2, 9);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'adf-cloud-task-filter-dialog',\n  templateUrl: './task-filter-dialog-cloud.component.html',\n  styleUrls: ['./task-filter-dialog-cloud.component.scss']\n})\nexport class TaskFilterDialogCloudComponent implements OnInit {\n\n    public static ACTION_SAVE = 'SAVE';\n    defaultIcon = 'inbox';\n\n    filterForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        public dialogRef: MatDialogRef<TaskFilterDialogCloudComponent>,\n        @Inject(MAT_DIALOG_DATA) public data) {\n    }\n\n    ngOnInit() {\n        this.filterForm = this.fb.group({\n            name: [this.data.name, Validators.required]\n        });\n    }\n\n    onSaveClick() {\n        this.dialogRef.close({\n            action: TaskFilterDialogCloudComponent.ACTION_SAVE,\n            icon: this.defaultIcon,\n            name: this.nameController.value\n        });\n    }\n\n    onCancelClick() {\n        this.dialogRef.close();\n    }\n\n    get nameController(): AbstractControl {\n        return this.filterForm.get('name');\n    }\n\n    isValid(): boolean {\n        return this.filterForm.valid;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnChanges, SimpleChanges, OnInit, OnDestroy, Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterOptions, TaskFilterAction, TaskFilterProperties } from '../../models/filter-cloud.model';\nimport { TaskCloudService } from './../../../services/task-cloud.service';\nimport { AppsProcessCloudService } from './../../../../app/services/apps-process-cloud.service';\nimport { DateCloudFilterType, DateRangeFilter } from '../../../../models/date-cloud-filter.model';\nimport moment, { Moment } from 'moment';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime, filter, finalize, switchMap, takeUntil } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\nimport { DateAdapter } from '@angular/material/core';\nimport { IdentityGroupModel, IdentityUserModel, TranslationService, UserPreferencesService, UserPreferenceValues } from '@alfresco/adf-core';\nimport { TaskFilterDialogCloudComponent } from '../task-filter-dialog/task-filter-dialog-cloud.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface DropdownOption {\n    value: string;\n    label: string;\n}\n\n@Directive()\n// tslint:disable-next-line: directive-class-suffix\nexport abstract class BaseEditTaskFilterCloudComponent<T> implements OnInit, OnChanges, OnDestroy {\n\n    public static ACTION_SAVE = 'save';\n    public static ACTION_SAVE_AS = 'saveAs';\n    public static ACTION_DELETE = 'delete';\n    public static APP_RUNNING_STATUS: string = 'RUNNING';\n    public static APPLICATION_NAME: string = 'appName';\n    public static PROCESS_DEFINITION_NAME: string = 'processDefinitionName';\n    public static LAST_MODIFIED: string = 'lastModified';\n    public static SORT: string = 'sort';\n    public static ORDER: string = 'order';\n    public static DEFAULT_ACTIONS = ['save', 'saveAs', 'delete'];\n    public static FORMAT_DATE: string = 'DD/MM/YYYY';\n    public static ACTIONS_DISABLED_BY_DEFAULT = [\n        BaseEditTaskFilterCloudComponent.ACTION_SAVE,\n        BaseEditTaskFilterCloudComponent.ACTION_DELETE\n    ];\n\n    /** (required) Name of the app. */\n    @Input()\n    appName: string = '';\n\n    /** (required) ID of the task filter. */\n    @Input()\n    id: string;\n\n    /** Toggles the title. */\n    @Input()\n    showTitle = true;\n\n    /** Toggles display of task filter name */\n    @Input()\n    showTaskFilterName = true;\n\n    /** List of task filter properties to display. */\n    @Input()\n    filterProperties: string[] = [];\n\n    /** user role. */\n    @Input()\n    role: string = '';\n\n    /** Toggles the filter actions. */\n    @Input()\n    showFilterActions = true;\n\n    /** List of task filter actions. */\n    @Input()\n    actions: string[] = BaseEditTaskFilterCloudComponent.DEFAULT_ACTIONS;\n\n    /** List of sort properties to display. */\n    @Input()\n    sortProperties: string[] = [];\n\n    /** Emitted when a filter action occurs (i.e Save, Save As, Delete). */\n    @Output()\n    action = new EventEmitter<TaskFilterAction>();\n\n    protected applicationNames: DropdownOption[] = [];\n    protected processDefinitionNames: DropdownOption[] = [];\n    protected formHasBeenChanged = false;\n\n    editTaskFilterForm: FormGroup;\n    taskFilterProperties: TaskFilterProperties[] = [];\n    taskFilterActions: TaskFilterAction[] = [];\n    toggleFilterActions: boolean = false;\n    sortDirections: DropdownOption[] = [\n        { value: 'ASC', label: 'ADF_CLOUD_TASK_FILTERS.DIRECTION.ASCENDING' },\n        { value: 'DESC', label: 'ADF_CLOUD_TASK_FILTERS.DIRECTION.DESCENDING' }\n    ];\n    allProcessDefinitionNamesOption: DropdownOption = {\n        value: '',\n        label: 'ADF_CLOUD_TASK_FILTERS.STATUS.ALL'\n    };\n\n    taskFilter: T;\n    changedTaskFilter: T;\n\n    /** Emitted when a task filter property changes. */\n    @Output()\n    filterChange = new EventEmitter<T>();\n\n    protected onDestroy$ = new Subject<boolean>();\n    isLoading: boolean = false;\n\n    constructor(\n        protected formBuilder: FormBuilder,\n        protected dateAdapter: DateAdapter<Moment>,\n        protected userPreferencesService: UserPreferencesService,\n        protected appsProcessCloudService: AppsProcessCloudService,\n        protected taskCloudService: TaskCloudService,\n        protected dialog: MatDialog,\n        protected translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const id = changes['id'];\n        if (id && id.currentValue !== id.previousValue) {\n            this.retrieveTaskFilterAndBuildForm();\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    createFilterActions(): TaskFilterAction[] {\n        return [\n            {\n                actionType: BaseEditTaskFilterCloudComponent.ACTION_SAVE,\n                icon: 'adf:save',\n                tooltip: 'ADF_CLOUD_EDIT_TASK_FILTER.TOOL_TIP.SAVE'\n            },\n            {\n                actionType: BaseEditTaskFilterCloudComponent.ACTION_SAVE_AS,\n                icon: 'adf:save-as',\n                tooltip: 'ADF_CLOUD_EDIT_TASK_FILTER.TOOL_TIP.SAVE_AS'\n            },\n            {\n                actionType: BaseEditTaskFilterCloudComponent.ACTION_DELETE,\n                icon: 'delete',\n                tooltip: 'ADF_CLOUD_EDIT_TASK_FILTER.TOOL_TIP.DELETE'\n            }\n        ];\n    }\n\n    hasFormChanged(action: TaskFilterAction): boolean {\n        if (action.actionType === BaseEditTaskFilterCloudComponent.ACTION_SAVE) {\n            return !this.formHasBeenChanged;\n        }\n        if (action.actionType === BaseEditTaskFilterCloudComponent.ACTION_SAVE_AS) {\n            return !this.formHasBeenChanged;\n        }\n        if (action.actionType === BaseEditTaskFilterCloudComponent.ACTION_DELETE) {\n            return false;\n        }\n\n        return false;\n    }\n\n    onExpand(): void {\n        this.toggleFilterActions = true;\n    }\n\n    onClose(): void {\n        this.toggleFilterActions = false;\n    }\n\n    isDisabledAction(action: TaskFilterAction): boolean {\n        return this.isDisabledForDefaultFilters(action) ? true : this.hasFormChanged(action);\n    }\n\n    protected deepCompare(left: any, right: any): boolean {\n        return JSON.stringify(left).toLowerCase() === JSON.stringify(right).toLowerCase();\n    }\n\n    /**\n     * Return filter name\n     * @param filterName\n     */\n    getSanitizeFilterName(filterName: string): string {\n        const nameWithHyphen = this.replaceSpaceWithHyphen(filterName.trim());\n        return nameWithHyphen.toLowerCase();\n    }\n\n    private replaceSpaceWithHyphen(name: string): string {\n        const regExt = new RegExp(' ', 'g');\n        return name.replace(regExt, '-');\n    }\n\n    executeFilterActions(action: TaskFilterAction): void {\n        if (action.actionType === BaseEditTaskFilterCloudComponent.ACTION_SAVE) {\n            this.save(action);\n        } else if (action.actionType === BaseEditTaskFilterCloudComponent.ACTION_SAVE_AS) {\n            this.saveAs(action);\n        } else if (action.actionType === BaseEditTaskFilterCloudComponent.ACTION_DELETE) {\n            this.delete(action);\n        }\n    }\n\n    getRunningApplications() {\n        this.appsProcessCloudService\n            .getDeployedApplicationsByStatus(BaseEditTaskFilterCloudComponent.APP_RUNNING_STATUS, this.role)\n            .subscribe((applications) => {\n                if (applications && applications.length > 0) {\n                    applications.map((application) => {\n                        this.applicationNames.push({ label: application.name, value: application.name });\n                    });\n                }\n            });\n    }\n\n    getProcessDefinitions() {\n        this.taskCloudService.getProcessDefinitions(this.appName)\n            .subscribe((processDefinitions) => {\n                if (processDefinitions && processDefinitions.length > 0) {\n                    this.processDefinitionNames.push(this.allProcessDefinitionNamesOption);\n                    processDefinitions.map((processDefinition) => {\n                        this.processDefinitionNames.push({ label: processDefinition.name, value: processDefinition.name });\n                    });\n                }\n            });\n    }\n\n    checkMandatoryActions(): void {\n        if (this.actions === undefined || this.actions.length === 0) {\n            this.actions = BaseEditTaskFilterCloudComponent.DEFAULT_ACTIONS;\n        }\n    }\n\n    private isValidAction(actions: string[], action: any): boolean {\n        return actions ? actions.indexOf(action.actionType) >= 0 : true;\n    }\n\n    isFormValid(): boolean {\n        return this.editTaskFilterForm.valid;\n    }\n\n    getPropertyController(property: TaskFilterProperties): AbstractControl {\n        return this.editTaskFilterForm.get(property.key);\n    }\n\n    onDateChanged(newDateValue: any, dateProperty: TaskFilterProperties) {\n        if (newDateValue) {\n            const momentDate = moment(newDateValue, BaseEditTaskFilterCloudComponent.FORMAT_DATE, true);\n            const controller = this.getPropertyController(dateProperty);\n\n            if (momentDate.isValid()) {\n                controller.setValue(momentDate.toISOString(true));\n                controller.setErrors(null);\n            } else {\n                controller.setErrors({ invalid: true });\n            }\n        }\n    }\n\n    onDateRangeFilterChanged(dateRange: DateRangeFilter, property: TaskFilterProperties) {\n        this.editTaskFilterForm.get(property.attributes?.from).setValue(\n            dateRange.startDate ? dateRange.startDate : null\n        );\n        this.editTaskFilterForm.get(property.attributes?.to).setValue(\n            dateRange.endDate ? dateRange.endDate : null\n        );\n        this.editTaskFilterForm.get(property.attributes.dateType).setValue(DateCloudFilterType.RANGE);\n    }\n\n    onChangedUser(users: IdentityUserModel[], userProperty: TaskFilterProperties) {\n        let selectedUsers;\n        if (userProperty.selectionMode === 'single') {\n            selectedUsers = users[0];\n        } else {\n            selectedUsers = users;\n        }\n        this.getPropertyController(userProperty).setValue(selectedUsers);\n    }\n\n    onAssignedChange(assignedValue: IdentityUserModel) {\n        this.editTaskFilterForm.get('candidateGroups').setValue([]);\n        this.editTaskFilterForm.get('assignee').setValue(assignedValue?.username);\n    }\n\n    onAssignedGroupsChange(groups: IdentityGroupModel[]) {\n        this.editTaskFilterForm.get('assignee').setValue(null);\n        this.editTaskFilterForm.get('candidateGroups').setValue(groups);\n    }\n\n    hasError(property: TaskFilterProperties): boolean {\n        const controller = this.getPropertyController(property);\n        return controller.errors && controller.errors.invalid;\n    }\n\n    hasLastModifiedProperty(): boolean {\n        return this.filterProperties.indexOf(BaseEditTaskFilterCloudComponent.LAST_MODIFIED) >= 0;\n    }\n\n    get createSortProperties(): FilterOptions[] {\n        this.checkMandatorySortProperties();\n\n        return this.sortProperties.map((property: string) => {\n            return { label: property, value: property };\n        });\n    }\n\n    createAndFilterActions(): TaskFilterAction[] {\n        this.checkMandatoryActions();\n        return this.createFilterActions().filter(action => this.isValidAction(this.actions, action));\n    }\n\n    isValidProperty(filterProperties: string[], key: string): boolean {\n        return filterProperties ? filterProperties.indexOf(key) >= 0 : true;\n    }\n\n    checkForProperty(property: string): boolean {\n        return this.filterProperties ? this.filterProperties.indexOf(property) >= 0 : false;\n    }\n\n    hasSortProperty(): boolean {\n        return this.filterProperties.indexOf(BaseEditTaskFilterCloudComponent.SORT) >= 0;\n    }\n\n    removeOrderProperty(filteredProperties: TaskFilterProperties[]): TaskFilterProperties[] {\n        if (filteredProperties && filteredProperties.length > 0) {\n            return filteredProperties.filter(property => property.key !== BaseEditTaskFilterCloudComponent.ORDER);\n        }\n        return [];\n    }\n\n    createAndFilterProperties() {\n        this.checkMandatoryFilterProperties();\n\n        if (this.checkForProperty(BaseEditTaskFilterCloudComponent.APPLICATION_NAME)) {\n            this.applicationNames = [];\n            this.getRunningApplications();\n        }\n        if (this.checkForProperty(BaseEditTaskFilterCloudComponent.PROCESS_DEFINITION_NAME)) {\n            this.processDefinitionNames = [];\n            this.getProcessDefinitions();\n        }\n\n        const defaultProperties = this.createTaskFilterProperties();\n        let filteredProperties = defaultProperties.filter((filterProperty) => this.isValidProperty(this.filterProperties, filterProperty.key));\n\n        if (!this.hasSortProperty()) {\n            filteredProperties = this.removeOrderProperty(filteredProperties);\n        }\n\n        return filteredProperties;\n    }\n\n    /**\n     * Check for edit task filter form changes\n     */\n    onFilterChange() {\n        this.editTaskFilterForm.valueChanges\n            .pipe(\n                debounceTime(500),\n                filter(() => this.isFormValid()),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe((formValues) => {\n                this.assignNewFilter(formValues);\n            });\n    }\n\n    getFormControlsConfig(taskFilterProperties: TaskFilterProperties[]): any {\n        const properties = taskFilterProperties.map((property) => {\n            if (!!property.attributes) {\n                return this.getAttributesControlConfig(property);\n            } else {\n                return { [property.key]: property.value };\n            }\n        });\n        return properties.reduce(((result, current) => Object.assign(result, current)), {});\n    }\n\n    private getAttributesControlConfig(property: TaskFilterProperties) {\n        return Object.values(property.attributes).reduce((result, key) => {\n            result[key] = property.value[key];\n            return result;\n        }, {});\n    }\n\n    buildForm(taskFilterProperties: TaskFilterProperties[]) {\n        this.formHasBeenChanged = false;\n        this.editTaskFilterForm = this.formBuilder.group(this.getFormControlsConfig(taskFilterProperties));\n        this.onFilterChange();\n    }\n\n    onDateTypeChange(dateType: DateCloudFilterType, property: TaskFilterProperties) {\n        this.editTaskFilterForm.get(property.attributes.dateType).setValue(dateType);\n    }\n\n    protected retrieveTaskFilterAndBuildForm() {\n        this.isLoading = true;\n\n        this.getTaskFilterById(this.appName, this.id)\n            .pipe(\n                finalize(() => this.isLoading = false),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(response => {\n                this.taskFilter = response;\n                this.taskFilterProperties = this.createAndFilterProperties();\n                this.taskFilterActions = this.createAndFilterActions();\n                this.buildForm(this.taskFilterProperties);\n            });\n    }\n\n    delete(deleteAction: TaskFilterAction): void {\n        this.deleteFilter(this.taskFilter)\n            .pipe(\n                filter((filters) => {\n                    deleteAction.filter = this.taskFilter;\n                    this.action.emit(deleteAction);\n                    return filters.length === 0;\n                }),\n                switchMap(() => this.restoreDefaultTaskFilters()),\n                takeUntil(this.onDestroy$))\n            .subscribe(() => { });\n    }\n\n    save(saveAction: TaskFilterAction): void {\n        this.updateFilter(this.changedTaskFilter)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n                saveAction.filter = this.changedTaskFilter;\n                this.action.emit(saveAction);\n                this.formHasBeenChanged = this.deepCompare(this.changedTaskFilter, this.taskFilter);\n            });\n    }\n\n    saveAs(saveAsAction: TaskFilterAction): void {\n        const dialogRef = this.dialog.open(TaskFilterDialogCloudComponent, {\n            data: {\n                name: this.translateService.instant((this.taskFilter as any)?.name)\n            },\n            height: 'auto',\n            minWidth: '30%'\n        });\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result && result.action === TaskFilterDialogCloudComponent.ACTION_SAVE) {\n                const filterId = Math.random().toString(36).substr(2, 9);\n                const filterKey = this.getSanitizeFilterName(result.name);\n                const newFilter = {\n                    name: result.name,\n                    icon: result.icon,\n                    id: filterId,\n                    key: 'custom-' + filterKey\n                };\n                const resultFilter: T = Object.assign({}, this.changedTaskFilter, newFilter);\n                this.addFilter(resultFilter).subscribe(() => {\n                    saveAsAction.filter = resultFilter;\n                    this.action.emit(saveAsAction);\n                });\n            }\n        });\n    }\n\n    checkMandatoryFilterProperties() {\n        if (this.filterProperties === undefined || this.filterProperties.length === 0) {\n            this.filterProperties = this.getDefaultFilterProperties();\n        }\n    }\n\n    checkMandatorySortProperties(): void {\n        if (this.sortProperties === undefined || this.sortProperties.length === 0) {\n            this.sortProperties = this.getDefaultSortProperties();\n        }\n    }\n\n    abstract getDefaultFilterProperties(): string[];\n    abstract getDefaultSortProperties(): string[];\n    abstract isDisabledForDefaultFilters(action: TaskFilterAction): boolean;\n    abstract createTaskFilterProperties(): TaskFilterProperties[];\n    protected abstract getTaskFilterById(appName: string, id: string);\n    abstract assignNewFilter(formValues): void;\n\n    protected abstract restoreDefaultTaskFilters(): Observable<T[]>;\n    protected abstract addFilter(filterToAdd: T): Observable<any>;\n    protected abstract deleteFilter(filterToDelete: T): Observable<T[]>;\n    protected abstract updateFilter(filterToUpdate: T): Observable<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { takeUntil } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Moment } from 'moment';\n\nimport { TaskFilterProperties, TaskFilterAction, ServiceTaskFilterCloudModel } from '../../models/filter-cloud.model';\nimport { TranslationService, UserPreferencesService } from '@alfresco/adf-core';\nimport { AppsProcessCloudService } from '../../../../app/services/apps-process-cloud.service';\nimport { TaskCloudService } from '../../../services/task-cloud.service';\nimport { ServiceTaskFilterCloudService } from '../../services/service-task-filter-cloud.service';\nimport { BaseEditTaskFilterCloudComponent, DropdownOption } from './base-edit-task-filter-cloud.component';\n\n@Component({\n    selector: 'adf-cloud-edit-service-task-filter',\n    templateUrl: './base-edit-task-filter-cloud.component.html',\n    styleUrls: ['./base-edit-task-filter-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class EditServiceTaskFilterCloudComponent extends BaseEditTaskFilterCloudComponent<ServiceTaskFilterCloudModel> {\n    constructor(\n        formBuilder: FormBuilder,\n        dialog: MatDialog,\n        translateService: TranslationService,\n        private serviceTaskFilterCloudService: ServiceTaskFilterCloudService,\n        dateAdapter: DateAdapter<Moment>,\n        userPreferencesService: UserPreferencesService,\n        appsProcessCloudService: AppsProcessCloudService,\n        taskCloudService: TaskCloudService) {\n        super(formBuilder, dateAdapter, userPreferencesService, appsProcessCloudService, taskCloudService, dialog, translateService);\n    }\n\n    assignNewFilter(model: ServiceTaskFilterCloudModel) {\n        this.changedTaskFilter = { ...this.taskFilter, ...model };\n        this.formHasBeenChanged = !this.deepCompare(this.changedTaskFilter, this.taskFilter);\n        this.filterChange.emit(this.changedTaskFilter);\n    }\n\n    protected getTaskFilterById(appName: string, id: string) {\n        return this.serviceTaskFilterCloudService.getTaskFilterById(appName, id);\n    }\n\n    getDefaultFilterProperties(): string[] {\n        return ['appName', 'activityName', 'status', 'sort', 'order'];\n    }\n\n    getDefaultSortProperties(): string[] {\n        return ['id', 'activityName', 'startedDate', 'completedDate'];\n    }\n\n    protected updateFilter(filterToUpdate: ServiceTaskFilterCloudModel) {\n        return this.serviceTaskFilterCloudService.updateFilter(filterToUpdate);\n    }\n\n    protected deleteFilter(filterToDelete: ServiceTaskFilterCloudModel): Observable<ServiceTaskFilterCloudModel[]> {\n        return this.serviceTaskFilterCloudService.deleteFilter(filterToDelete);\n    }\n\n    protected addFilter(filterToAdd: ServiceTaskFilterCloudModel): Observable<any> {\n        return this.serviceTaskFilterCloudService\n            .addFilter(filterToAdd)\n            .pipe(takeUntil(this.onDestroy$));\n    }\n\n    isDisabledForDefaultFilters(action: TaskFilterAction): boolean {\n        return (\n            this.serviceTaskFilterCloudService.isDefaultFilter(this.taskFilter.name) &&\n            EditServiceTaskFilterCloudComponent.ACTIONS_DISABLED_BY_DEFAULT.includes(action.actionType)\n        );\n    }\n\n    restoreDefaultTaskFilters(): Observable<ServiceTaskFilterCloudModel[]> {\n        return this.serviceTaskFilterCloudService.getTaskListFilters(this.appName);\n    }\n\n    private getStatusOptions(): DropdownOption[] {\n        return [\n            { value: '', label: 'ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.ALL' },\n            { value: 'STARTED', label: 'ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.STARTED' },\n            { value: 'COMPLETED', label: 'ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.COMPLETED' },\n            { value: 'CANCELLED', label: 'ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.CANCELLED' },\n            { value: 'ERROR', label: 'ADF_CLOUD_SERVICE_TASK_FILTERS.STATUS.ERROR' }\n        ];\n    }\n\n    createTaskFilterProperties(): TaskFilterProperties[] {\n        const statusOptions = this.getStatusOptions();\n\n        return [\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.APP_NAME',\n                type: 'select',\n                key: 'appName',\n                value: this.taskFilter.appName || '',\n                options: this.applicationNames\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.SERVICE_TASK_ID',\n                type: 'text',\n                key: 'serviceTaskId',\n                value: this.taskFilter.serviceTaskId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.ELEMENT_ID',\n                type: 'text',\n                key: 'elementId',\n                value: this.taskFilter.elementId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.ACTIVITY_NAME',\n                type: 'text',\n                key: 'activityName',\n                value: this.taskFilter.activityName || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.ACTIVITY_TYPE',\n                type: 'text',\n                key: 'activityType',\n                value: this.taskFilter.activityType || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.SORT',\n                type: 'select',\n                key: 'sort',\n                value: this.taskFilter.sort || this.createSortProperties[0].value,\n                options: this.createSortProperties\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.DIRECTION',\n                type: 'select',\n                key: 'order',\n                value: this.taskFilter.order || this.sortDirections[0].value,\n                options: [...this.sortDirections]\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.STATUS',\n                type: 'select',\n                key: 'status',\n                value: this.taskFilter.status || statusOptions[0].value,\n                options: statusOptions\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.STARTED_DATE',\n                type: 'date',\n                key: 'startedDate',\n                value: this.taskFilter.completedDate || false\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.COMPLETED_DATE',\n                type: 'date',\n                key: 'completedDate',\n                value: this.taskFilter.completedDate || false\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.PROCESS_INSTANCE_ID',\n                type: 'text',\n                key: 'processInstanceId',\n                value: this.taskFilter.processInstanceId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.PROCESS_DEF_ID',\n                type: 'text',\n                key: 'processDefinitionId',\n                value: this.taskFilter.processDefinitionId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_SERVICE_TASK_FILTER.LABEL.SERVICE_NAME',\n                type: 'text',\n                key: 'serviceName',\n                value: this.taskFilter.serviceName || ''\n            }\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { takeUntil, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\n\nimport { TaskFilterCloudModel, TaskFilterProperties, TaskFilterAction } from '../../models/filter-cloud.model';\nimport { TaskFilterCloudService } from '../../services/task-filter-cloud.service';\nimport { TranslationService, UserPreferencesService } from '@alfresco/adf-core';\nimport { AppsProcessCloudService } from '../../../../app/services/apps-process-cloud.service';\nimport { DateCloudFilterType } from '../../../../models/date-cloud-filter.model';\nimport { TaskCloudService } from '../../../services/task-cloud.service';\nimport { BaseEditTaskFilterCloudComponent, DropdownOption } from './base-edit-task-filter-cloud.component';\n\n@Component({\n    selector: 'adf-cloud-edit-task-filter',\n    templateUrl: './base-edit-task-filter-cloud.component.html',\n    styleUrls: ['./base-edit-task-filter-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class EditTaskFilterCloudComponent extends BaseEditTaskFilterCloudComponent<TaskFilterCloudModel> {\n    constructor(\n        formBuilder: FormBuilder,\n        dialog: MatDialog,\n        translateService: TranslationService,\n        private taskFilterCloudService: TaskFilterCloudService,\n        dateAdapter: DateAdapter<Moment>,\n        userPreferencesService: UserPreferencesService,\n        appsProcessCloudService: AppsProcessCloudService,\n        taskCloudService: TaskCloudService) {\n        super(formBuilder, dateAdapter, userPreferencesService, appsProcessCloudService, taskCloudService, dialog, translateService);\n    }\n\n    assignNewFilter(model: TaskFilterCloudModel) {\n        this.setLastModifiedToFilter(model);\n        this.changedTaskFilter = new TaskFilterCloudModel(Object.assign({}, this.taskFilter, model));\n        this.formHasBeenChanged = !this.deepCompare(this.changedTaskFilter, this.taskFilter);\n        this.filterChange.emit(this.changedTaskFilter);\n    }\n\n    protected getTaskFilterById(appName: string, id: string) {\n        return this.taskFilterCloudService\n            .getTaskFilterById(appName, id)\n            .pipe(\n                map(response => new TaskFilterCloudModel(response))\n            );\n    }\n\n    createAndFilterProperties() {\n        const result = super.createAndFilterProperties();\n\n        if (this.hasLastModifiedProperty()) {\n            return [\n                ...result,\n                ...this.createLastModifiedProperty()\n            ];\n        }\n\n        return result;\n    }\n\n    getDefaultFilterProperties(): string[] {\n        return ['status', 'assignee', 'sort', 'order'];\n    }\n\n    getDefaultSortProperties(): string[] {\n        return ['id', 'name', 'createdDate', 'priority'];\n    }\n\n    private setLastModifiedToFilter(formValues: TaskFilterCloudModel) {\n        if (formValues.lastModifiedTo && Date.parse(formValues.lastModifiedTo.toString())) {\n            const lastModifiedToFilterValue = moment(formValues.lastModifiedTo);\n            lastModifiedToFilterValue.set({\n                hour: 23,\n                minute: 59,\n                second: 59\n            });\n            formValues.lastModifiedTo = lastModifiedToFilterValue.toISOString(true);\n        }\n    }\n\n    protected updateFilter(filterToUpdate: TaskFilterCloudModel): Observable<any> {\n        return this.taskFilterCloudService.updateFilter(filterToUpdate);\n    }\n\n    protected deleteFilter(filterToDelete: TaskFilterCloudModel): Observable<TaskFilterCloudModel[]> {\n        return this.taskFilterCloudService.deleteFilter(filterToDelete);\n    }\n\n    protected addFilter(filterToAdd: TaskFilterCloudModel): Observable<any> {\n        return this.taskFilterCloudService\n            .addFilter(filterToAdd)\n            .pipe(takeUntil(this.onDestroy$));\n    }\n\n    isDisabledForDefaultFilters(action: TaskFilterAction): boolean {\n        return (\n            this.taskFilterCloudService.isDefaultFilter(this.taskFilter.name) &&\n            EditTaskFilterCloudComponent.ACTIONS_DISABLED_BY_DEFAULT.includes(action.actionType)\n        );\n    }\n\n    restoreDefaultTaskFilters(): Observable<TaskFilterCloudModel[]> {\n        return this.taskFilterCloudService.getTaskListFilters(this.appName);\n    }\n\n    private createLastModifiedProperty(): TaskFilterProperties[] {\n        return [\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.LAST_MODIFIED_FROM',\n                type: 'date',\n                key: 'lastModifiedFrom',\n                value: ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.LAST_MODIFIED_TO',\n                type: 'date',\n                key: 'lastModifiedTo',\n                value: ''\n            }\n        ];\n    }\n\n    private getStatusOptions(): DropdownOption[] {\n        return [\n            { value: '', label: 'ADF_CLOUD_TASK_FILTERS.STATUS.ALL' },\n            { value: 'CREATED', label: 'ADF_CLOUD_TASK_FILTERS.STATUS.CREATED' },\n            { value: 'ASSIGNED', label: 'ADF_CLOUD_TASK_FILTERS.STATUS.ASSIGNED' },\n            { value: 'SUSPENDED', label: 'ADF_CLOUD_TASK_FILTERS.STATUS.SUSPENDED' },\n            { value: 'CANCELLED', label: 'ADF_CLOUD_TASK_FILTERS.STATUS.CANCELLED' },\n            { value: 'COMPLETED', label: 'ADF_CLOUD_TASK_FILTERS.STATUS.COMPLETED' }\n        ];\n    }\n\n    createTaskFilterProperties(): TaskFilterProperties[] {\n        const statusOptions = this.getStatusOptions();\n        const sortProperties = this.createSortProperties;\n\n        return [\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.APP_NAME',\n                type: 'select',\n                key: 'appName',\n                value: this.taskFilter.appName || '',\n                options: this.applicationNames\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.TASK_ID',\n                type: 'text',\n                key: 'taskId',\n                value: ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.STATUS',\n                type: 'select',\n                key: 'status',\n                value: this.taskFilter.status || statusOptions[0].value,\n                options: statusOptions\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.ASSIGNMENT',\n                type: 'text',\n                key: 'assignee',\n                value: this.taskFilter.assignee || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PROCESS_DEF_NAME',\n                type: 'select',\n                key: 'processDefinitionName',\n                value: this.taskFilter.processDefinitionName || '',\n                options: this.processDefinitionNames\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PROCESS_INSTANCE_ID',\n                type: 'text',\n                key: 'processInstanceId',\n                value: this.taskFilter.processInstanceId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PROCESS_DEF_ID',\n                type: 'text',\n                key: 'processDefinitionId',\n                value: this.taskFilter.processDefinitionId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.TASK_NAME',\n                type: 'text',\n                key: 'taskName',\n                value: this.taskFilter.taskName || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PARENT_TASK_ID',\n                type: 'text',\n                key: 'parentTaskId',\n                value: this.taskFilter.parentTaskId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.PRIORITY',\n                type: 'select',\n                key: 'priority',\n                value: this.taskFilter.priority || '',\n                options: this.taskCloudService.priorities\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.OWNER',\n                type: 'text',\n                key: 'owner',\n                value: this.taskFilter.owner || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.CREATED_DATE',\n                type: 'date',\n                key: 'createdDate',\n                value: ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.SORT',\n                type: 'select',\n                key: 'sort',\n                value: this.taskFilter.sort || sortProperties[0].value,\n                options: sortProperties\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.DIRECTION',\n                type: 'select',\n                key: 'order',\n                value: this.taskFilter.order || this.sortDirections[0].value,\n                options: [...this.sortDirections]\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.STAND_ALONE',\n                type: 'checkbox',\n                key: 'standalone',\n                value: this.taskFilter.standalone || false\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.DUE_DATE',\n                type: 'date-range',\n                key: 'dueDateRange',\n                attributes: { dateType: 'dueDateType', from: '_dueDateFrom', to: '_dueDateTo'},\n                value: {\n                    dueDateType: this.taskFilter.dueDateType || null,\n                    _dueDateFrom: this.taskFilter.dueDateFrom || null,\n                    _dueDateTo: this.taskFilter.dueDateTo || null\n                },\n                dateFilterOptions: [\n                    DateCloudFilterType.NO_DATE,\n                    DateCloudFilterType.TODAY,\n                    DateCloudFilterType.TOMORROW,\n                    DateCloudFilterType.NEXT_7_DAYS,\n                    DateCloudFilterType.RANGE\n                ]\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.COMPLETED_DATE',\n                type: 'date-range',\n                key: 'completedDateRange',\n                attributes: { dateType: 'completedDateType', from: '_completedFrom', to: '_completedTo'},\n                value: {\n                    completedDateType: this.taskFilter.completedDateType || null,\n                    _completedFrom: this.taskFilter.completedFrom || null,\n                    _completedTo: this.taskFilter.completedTo || null\n                }\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.CREATED_DATE',\n                type: 'date-range',\n                key: 'createdDateRange',\n                attributes: { dateType: 'createdDateType', from: '_createdFrom', to: '_createdTo'},\n                value: {\n                    createdDateType: this.taskFilter.createdDateType || null,\n                    _createdFrom: this.taskFilter.createdFrom || null,\n                    _createdTo: this.taskFilter.createdTo || null\n                }\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.COMPLETED_BY',\n                type: 'people',\n                key: 'completedBy',\n                value: this.taskFilter.completedBy ? [this.taskFilter.completedBy] : null,\n                selectionMode: 'single'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_TASK_FILTER.LABEL.ASSIGNMENT',\n                type: 'assignment',\n                key: 'assignment',\n                attributes: { assignee: 'assignee', candidateGroups: 'candidateGroups'},\n                value: {\n                    assignee: this.taskFilter.assignee || null,\n                    candidateGroups: this.taskFilter.candidateGroups || []\n                }\n            }\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnChanges, Output, SimpleChanges, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FilterParamsModel, ServiceTaskFilterCloudModel } from '../models/filter-cloud.model';\nimport { TranslationService } from '@alfresco/adf-core';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseTaskFiltersCloudComponent } from './base-task-filters-cloud.component';\nimport { ServiceTaskFilterCloudService } from '../services/service-task-filter-cloud.service';\n\n@Component({\n    selector: 'adf-cloud-service-task-filters',\n    templateUrl: './base-task-filters-cloud.component.html',\n    styleUrls: ['./base-task-filters-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ServiceTaskFiltersCloudComponent extends BaseTaskFiltersCloudComponent implements OnInit, OnChanges {\n\n    /** Emitted when a filter is being selected based on the filterParam input. */\n    @Output()\n    filterSelected = new EventEmitter<ServiceTaskFilterCloudModel>();\n\n    /** Emitted when a filter is being clicked from the UI. */\n    @Output()\n    filterClicked = new EventEmitter<ServiceTaskFilterCloudModel>();\n\n    filters$: Observable<ServiceTaskFilterCloudModel[]>;\n    filters: ServiceTaskFilterCloudModel[] = [];\n    currentFilter: ServiceTaskFilterCloudModel;\n\n    constructor(private serviceTaskFilterCloudService: ServiceTaskFilterCloudService,\n                private translationService: TranslationService) {\n            super();\n    }\n\n    ngOnInit() {\n        this.getFilters(this.appName);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        const filter = changes['filterParam'];\n        if (appName && appName.currentValue !== appName.previousValue) {\n            this.getFilters(appName.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectFilterAndEmit(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     */\n    getFilters(appName: string) {\n        this.filters$ = this.serviceTaskFilterCloudService.getTaskListFilters(appName);\n\n        this.filters$.pipe(takeUntil(this.onDestroy$)).subscribe(\n            (res: ServiceTaskFilterCloudModel[]) => {\n                this.resetFilter();\n                this.filters = res || [];\n                this.selectFilterAndEmit(this.filterParam);\n                this.success.emit(res);\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    public selectFilter(paramFilter: FilterParamsModel) {\n        if (paramFilter) {\n            this.currentFilter = this.filters.find((filter, index) =>\n                paramFilter.index === index ||\n                paramFilter.key === filter.key ||\n                paramFilter.id === filter.id ||\n                (paramFilter.name &&\n                    (paramFilter.name.toLocaleLowerCase() === this.translationService.instant(filter.name).toLocaleLowerCase())\n                ));\n        }\n    }\n\n    public selectFilterAndEmit(newParamFilter: FilterParamsModel) {\n        if (newParamFilter) {\n            this.selectFilter(newParamFilter);\n\n            if (this.currentFilter) {\n                this.filterSelected.emit(this.currentFilter);\n            }\n        } else {\n            this.currentFilter = undefined;\n        }\n    }\n\n    /**\n     * Selects and emits the clicked filter.\n     */\n    public onFilterClick(filter: FilterParamsModel) {\n        if (filter) {\n            this.selectFilter(filter);\n            this.filterClicked.emit(this.currentFilter);\n        } else {\n            this.currentFilter = undefined;\n        }\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { IdentityGroupModel, IdentityUserModel, IdentityUserService } from '@alfresco/adf-core';\nimport { AssignmentType, TaskFilterProperties } from '../../models/filter-cloud.model';\n\n@Component({\n    selector: 'adf-cloud-task-assignment-filter',\n    templateUrl: './task-assignment-filter.component.html',\n    styleUrls: ['./task-assignment-filter.component.scss']\n})\nexport class TaskAssignmentFilterCloudComponent implements OnInit {\n\n    @Input() appName: string;\n\n    @Input() taskFilterProperty: TaskFilterProperties;\n\n    @Output() assignedChange = new EventEmitter<IdentityUserModel>();\n\n    @Output() assignedGroupChange = new EventEmitter<IdentityGroupModel[]>();\n\n    assignmentType: AssignmentType;\n    candidateGroups: IdentityGroupModel[] = [];\n    groupForm = new FormControl('');\n    assignmentTypeList = {\n        unassigned: AssignmentType.UNASSIGNED,\n        currentUser: AssignmentType.CURRENT_USER,\n        candidateGroups: AssignmentType.CANDIDATE_GROUPS\n    };\n\n    constructor(private identityUserService: IdentityUserService) {}\n\n    ngOnInit() {\n        if (this.isFilterPropertyDefined()) {\n            this.setDefaultAssignedGroups();\n            this.setDefaultAssignmentType();\n        }\n    }\n\n    isCandidateGroupsType(): boolean {\n        return this.assignmentType === AssignmentType.CANDIDATE_GROUPS;\n    }\n\n    onAssignmentTypeChange(type: any) {\n        this.candidateGroups = [];\n        if (type === AssignmentType.CURRENT_USER) {\n            this.assignedChange.emit(this.identityUserService.getCurrentUserInfo());\n        } else if (type === AssignmentType.UNASSIGNED) {\n            this.assignedChange.emit(null);\n        }\n    }\n\n    onChangedGroups(groups: IdentityGroupModel[]) {\n        this.assignedGroupChange.emit(groups);\n    }\n\n    private setDefaultAssignmentType() {\n        const assignmentAttr = this.taskFilterProperty.attributes['assignee'];\n        const assignee = this.taskFilterProperty.value[assignmentAttr];\n\n        if (this.candidateGroups.length > 0) {\n            this.assignmentType = AssignmentType.CANDIDATE_GROUPS;\n        } else if (assignee) {\n            this.assignmentType = AssignmentType.CURRENT_USER;\n        } else {\n            this.assignmentType = AssignmentType.UNASSIGNED;\n        }\n    }\n\n    private setDefaultAssignedGroups() {\n        const assignmentGroupsAttr = this.taskFilterProperty.attributes['candidateGroups'];\n        this.candidateGroups = this.taskFilterProperty.value[assignmentGroupsAttr];\n    }\n\n    private isFilterPropertyDefined(): boolean {\n        return !!this.taskFilterProperty.attributes && !!this.taskFilterProperty.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ElementRef,\n    OnInit,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ViewEncapsulation,\n    Input,\n    SimpleChanges,\n    OnChanges,\n    OnDestroy,\n    ChangeDetectionStrategy,\n    SimpleChange\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Observable, of, BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, mergeMap, filter, tap, map, takeUntil, debounceTime } from 'rxjs/operators';\nimport { IdentityGroupModel, IdentityGroupService, LogService } from '@alfresco/adf-core';\nimport { ComponentSelectionMode } from '../../types';\n\n@Component({\n    selector: 'adf-cloud-group',\n    templateUrl: './group-cloud.component.html',\n    styleUrls: ['./group-cloud.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n            transition('void => enter', [\n                style({ opacity: 0, transform: 'translateY(-100%)' }),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class GroupCloudComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** Name of the application. If specified this shows the groups who have access to the app. */\n    @Input()\n    appName: string;\n\n    /** Title of the field */\n    @Input()\n    title: string;\n\n    /** Group selection mode (single/multiple). */\n    @Input()\n    mode: ComponentSelectionMode = 'single';\n\n    /** Array of groups to be pre-selected. This pre-selects all groups in multi selection mode and only the first group of the array in single selection mode. */\n    @Input()\n    preSelectGroups: IdentityGroupModel[] = [];\n\n    /** This flag enables the validation on the preSelectGroups passed as input.\n     * In case the flag is true the components call the identity service to verify the validity of the information passed as input.\n     * Otherwise, no check will be done.\n     */\n    @Input()\n    validate = false;\n\n    /** Show the info in readonly mode\n     */\n    @Input()\n    readOnly = false;\n\n    /** FormControl to list of group */\n    @Input()\n    groupChipsCtrl = new FormControl({ value: '', disabled: false });\n\n    /** FormControl to search the group */\n    @Input()\n    searchGroupsControl = new FormControl({ value: '', disabled: false });\n\n    /** Role names of the groups to be listed. */\n    @Input()\n    roles: string[] = [];\n\n    /** Emitted when a group is selected. */\n    @Output()\n    selectGroup = new EventEmitter<IdentityGroupModel>();\n\n    /** Emitted when a group is removed. */\n    @Output()\n    removeGroup = new EventEmitter<IdentityGroupModel>();\n\n    /** Emitted when a group selection change. */\n    @Output()\n    changedGroups = new EventEmitter<IdentityGroupModel[]>();\n\n    /** Emitted when an warning occurs. */\n    @Output()\n    warning = new EventEmitter<any>();\n\n    @ViewChild('groupInput')\n    private groupInput: ElementRef<HTMLInputElement>;\n\n    private searchGroups: IdentityGroupModel[] = [];\n    private onDestroy$ = new Subject<boolean>();\n\n    selectedGroups: IdentityGroupModel[] = [];\n    invalidGroups: IdentityGroupModel[] = [];\n\n    searchGroups$ = new BehaviorSubject<IdentityGroupModel[]>(this.searchGroups);\n    _subscriptAnimationState = 'enter';\n    clientId: string;\n    isFocused: boolean;\n\n    validateGroupsMessage: string;\n    searchedValue = '';\n\n    validationLoading = false;\n    searchLoading = false;\n\n    constructor(\n        private identityGroupService: IdentityGroupService,\n        private logService: LogService) {}\n\n    ngOnInit(): void {\n        this.loadClientId();\n        this.initSearch();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.hasPreselectedGroupsChanged(changes) || this.hasModeChanged(changes) || this.isValidationChanged(changes)) {\n            if (this.hasPreSelectGroups()) {\n                this.loadPreSelectGroups();\n            } else if (this.hasPreselectedGroupsCleared(changes)) {\n                this.selectedGroups = [];\n                this.invalidGroups = [];\n            }\n\n            if (!this.isValidationEnabled()) {\n                this.invalidGroups = [];\n            }\n        }\n\n        if (changes.appName && this.isAppNameChanged(changes.appName)) {\n            this.loadClientId();\n        }\n    }\n\n    private isAppNameChanged(change: SimpleChange): boolean {\n        return change\n            && change.previousValue !== change.currentValue\n            && this.appName\n            && this.appName.length > 0;\n    }\n\n    private async loadClientId(): Promise<void> {\n        this.clientId = await this.identityGroupService.getClientIdByApplicationName(this.appName).toPromise();\n\n        if (this.clientId) {\n            this.searchGroupsControl.enable();\n        }\n    }\n\n    initSearch(): void {\n        this.searchGroupsControl.valueChanges.pipe(\n            filter((value) => {\n                this.searchLoading = true;\n                return typeof value === 'string';\n            }),\n            tap((value: string) => {\n                if (value) {\n                    this.setTypingError();\n                }\n            }),\n            debounceTime(500),\n            distinctUntilChanged(),\n            tap((value) => {\n                if (value.trim()) {\n                    this.searchedValue = value;\n                } else {\n                    this.searchGroupsControl.markAsPristine();\n                    this.searchGroupsControl.markAsUntouched();\n                }\n            }),\n            tap(() => this.resetSearchGroups()),\n            switchMap((name: string) =>\n                this.identityGroupService.findGroupsByName({ name: name.trim() })\n            ),\n            mergeMap((groups) => {\n                this.resetSearchGroups();\n                this.searchLoading = false;\n                return groups;\n            }),\n            filter(group => !this.isGroupAlreadySelected(group)),\n            mergeMap(group => {\n                if (this.appName) {\n                    return this.checkGroupHasAccess(group.id).pipe(\n                        mergeMap(\n                            hasRole => hasRole ? of(group) : of()\n                        )\n                    );\n                } else if (this.hasRoles()) {\n                    return this.filterGroupsByRoles(group);\n                } else {\n                    return of(group);\n                }\n            }),\n            takeUntil(this.onDestroy$)\n        ).subscribe(searchedGroup => {\n            this.searchGroups.push(searchedGroup);\n            this.searchGroups$.next(this.searchGroups);\n        });\n    }\n\n    checkGroupHasAccess(groupId: string): Observable<boolean> {\n        if (this.hasRoles()) {\n            return this.identityGroupService.checkGroupHasAnyClientAppRole(groupId, this.clientId, this.roles);\n        } else {\n            return this.identityGroupService.checkGroupHasClientApp(groupId, this.clientId);\n        }\n    }\n\n    private isGroupAlreadySelected(group: IdentityGroupModel): boolean {\n        if (this.selectedGroups && this.selectedGroups.length > 0) {\n            const result = this.selectedGroups.find((selectedGroup: IdentityGroupModel) => {\n                return selectedGroup.name === group.name;\n            });\n\n            return !!result;\n        }\n        return false;\n    }\n\n    async searchGroup(name: string): Promise<IdentityGroupModel> {\n        return (await this.identityGroupService.findGroupsByName({ name }).toPromise())[0];\n    }\n\n    private getPreselectedGroups(): IdentityGroupModel[] {\n        if (this.isSingleMode()) {\n           return [this.preSelectGroups[0]];\n        } else {\n            return this.removeDuplicatedGroups(this.preSelectGroups);\n        }\n    }\n\n    async validatePreselectGroups(): Promise<any> {\n        this.invalidGroups = [];\n\n        for (const group of this.getPreselectedGroups()) {\n            try {\n                const validationResult = await this.searchGroup(group.name);\n                if (this.isPreselectedGroupInvalid(group, validationResult)) {\n                    this.invalidGroups.push(group);\n                }\n            } catch (error) {\n                this.invalidGroups.push(group);\n                this.logService.error(error);\n            }\n        }\n\n        this.checkPreselectValidationErrors();\n    }\n\n    checkPreselectValidationErrors(): void {\n        this.invalidGroups = this.removeDuplicatedGroups(this.invalidGroups);\n\n        if (this.invalidGroups.length > 0) {\n            this.generateInvalidGroupsMessage();\n        }\n\n        this.warning.emit({\n            message: 'INVALID_PRESELECTED_GROUPS',\n            groups: this.invalidGroups\n        });\n    }\n\n    generateInvalidGroupsMessage(): void {\n        this.validateGroupsMessage = '';\n\n        this.invalidGroups.forEach((invalidGroup: IdentityGroupModel, index) => {\n            if (index === this.invalidGroups.length - 1) {\n                this.validateGroupsMessage += `${invalidGroup.name} `;\n            } else {\n                this.validateGroupsMessage += `${invalidGroup.name}, `;\n            }\n        });\n    }\n\n    private async loadPreSelectGroups(): Promise<void> {\n        this.selectedGroups = [];\n\n        if (this.isSingleMode()) {\n            this.selectedGroups = [this.preSelectGroups[0]];\n        } else {\n            this.selectedGroups = this.removeDuplicatedGroups(this.preSelectGroups);\n        }\n        this.groupChipsCtrl.setValue(this.selectedGroups[0].name);\n        if (this.isValidationEnabled()) {\n            this.validationLoading = true;\n            await this.validatePreselectGroups();\n            this.validationLoading = false;\n        }\n    }\n\n    filterGroupsByRoles(group: IdentityGroupModel): Observable<IdentityGroupModel> {\n        return this.identityGroupService.checkGroupHasRole(group.id, this.roles).pipe(\n            map((hasRole: boolean) => ({ hasRole: hasRole, group: group })),\n            filter((filteredGroup: { hasRole: boolean, group: IdentityGroupModel }) => filteredGroup.hasRole),\n            map((filteredGroup: { hasRole: boolean, group: IdentityGroupModel }) => filteredGroup.group));\n    }\n\n    onSelect(group: IdentityGroupModel): void {\n        if (group) {\n            this.selectGroup.emit(group);\n\n            if (this.isMultipleMode()) {\n                if (!this.isGroupAlreadySelected(group)) {\n                    this.selectedGroups.push(group);\n                }\n            } else {\n                this.invalidGroups = [];\n                this.selectedGroups = [group];\n            }\n\n            this.groupInput.nativeElement.value = '';\n            this.searchGroupsControl.setValue('');\n            this.groupChipsCtrlValue(this.selectedGroups[0].name);\n\n            this.changedGroups.emit(this.selectedGroups);\n            this.resetSearchGroups();\n        }\n    }\n\n    onRemove(groupToRemove: IdentityGroupModel): void {\n        this.removeGroup.emit(groupToRemove);\n        this.removeGroupFromSelected(groupToRemove);\n        this.changedGroups.emit(this.selectedGroups);\n        if (this.selectedGroups.length === 0) {\n            this.groupChipsCtrlValue('');\n\n        } else {\n            this.groupChipsCtrlValue(this.selectedGroups[0].name);\n        }\n        this.searchGroupsControl.markAsDirty();\n        this.searchGroupsControl.markAsTouched();\n\n        if (this.isValidationEnabled()) {\n            this.removeGroupFromValidation(groupToRemove);\n            this.checkPreselectValidationErrors();\n        }\n    }\n\n    private groupChipsCtrlValue(value: string) {\n        this.groupChipsCtrl.setValue(value);\n        this.groupChipsCtrl.markAsDirty();\n        this.groupChipsCtrl.markAsTouched();\n    }\n\n    private removeGroupFromSelected({ id, name }: IdentityGroupModel): void {\n        const indexToRemove = this.selectedGroups.findIndex(group => {\n            return group.id === id && group.name === name;\n        });\n\n        if (indexToRemove !== -1) {\n            this.selectedGroups.splice(indexToRemove, 1);\n        }\n    }\n\n    private removeGroupFromValidation({ id, name }: IdentityGroupModel): void {\n        const indexToRemove = this.invalidGroups.findIndex(group => {\n            return group.id === id && group.name === name;\n        });\n\n        if (indexToRemove !== -1) {\n            this.invalidGroups.splice(indexToRemove, 1);\n        }\n    }\n\n    private resetSearchGroups(): void {\n        this.searchGroups = [];\n        this.searchGroups$.next(this.searchGroups);\n    }\n\n    isPreselectedGroupInvalid(preselectedGroup: IdentityGroupModel, validatedGroup: IdentityGroupModel): boolean {\n        if (validatedGroup && validatedGroup.name !== undefined) {\n            return preselectedGroup.name !== validatedGroup.name;\n        } else {\n            return true;\n        }\n    }\n\n    isSingleMode(): boolean {\n        return this.mode === 'single';\n    }\n\n    private isSingleSelectionReadonly(): boolean {\n        return this.isSingleMode() && this.selectedGroups.length === 1 && this.selectedGroups[0].readonly === true;\n    }\n\n    hasPreselectError(): boolean {\n        return this.invalidGroups && this.invalidGroups.length > 0;\n    }\n\n    isReadonly(): boolean {\n        return this.readOnly || this.isSingleSelectionReadonly();\n    }\n\n    isMultipleMode(): boolean {\n        return this.mode === 'multiple';\n    }\n\n    getDisplayName(group: IdentityGroupModel): string {\n        return group ? group.name : '';\n    }\n\n    removeDuplicatedGroups(groups: IdentityGroupModel[]): IdentityGroupModel[] {\n        return groups.filter((group, index, self) =>\n            index === self.findIndex((auxGroup) => {\n                return group.id === auxGroup.id && group.name === auxGroup.name;\n            }));\n    }\n\n    private hasPreSelectGroups(): boolean {\n        return this.preSelectGroups && this.preSelectGroups.length > 0;\n    }\n\n    private hasModeChanged(changes: SimpleChanges): boolean {\n        return changes\n            && changes.mode\n            && changes.mode.currentValue !== changes.mode.previousValue;\n    }\n\n    private isValidationChanged(changes: SimpleChanges): boolean {\n        return changes\n            && changes.validate\n            && changes.validate.currentValue !== changes.validate.previousValue;\n    }\n\n    private hasPreselectedGroupsChanged(changes: SimpleChanges): boolean {\n        return changes\n            && changes.preSelectGroups\n            && changes.preSelectGroups.currentValue !== changes.preSelectGroups.previousValue;\n    }\n\n    private hasPreselectedGroupsCleared(changes: SimpleChanges): boolean {\n        return changes\n            && changes.preSelectGroups\n            && changes.preSelectGroups.currentValue.length === 0;\n    }\n\n    private hasRoles(): boolean {\n        return this.roles && this.roles.length > 0;\n    }\n\n    private setTypingError(): void {\n        this.searchGroupsControl.setErrors({\n            searchTypingError: true,\n            ...this.searchGroupsControl.errors\n        });\n    }\n\n    hasError(): boolean {\n        return !!this.searchGroupsControl.errors;\n    }\n\n    isValidationLoading(): boolean {\n        return this.isValidationEnabled() && this.validationLoading;\n    }\n\n    setFocus(isFocused: boolean) {\n        this.isFocused = isFocused;\n    }\n\n    isValidationEnabled(): boolean {\n        return this.validate === true;\n    }\n\n    getValidationPattern(): string {\n        return this.searchGroupsControl.errors.pattern.requiredPattern;\n    }\n\n    getValidationMaxLength(): string {\n        return this.searchGroupsControl.errors.maxlength.requiredLength;\n    }\n\n    getValidationMinLength(): string {\n        return this.searchGroupsControl.errors.minlength.requiredLength;\n    }\n\n    ngOnDestroy(): void {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { IdentityGroupModel } from '@alfresco/adf-core';\n\n@Pipe({\n    name: 'groupNameInitial'\n})\nexport class InitialGroupNamePipe implements PipeTransform {\n\n    transform(group: IdentityGroupModel): string {\n        let result = '';\n        if (group) {\n            result = this.getInitialGroupName(group.name).toUpperCase();\n        }\n        return result;\n    }\n\n    getInitialGroupName(groupName: string) {\n        groupName = (groupName ? groupName[0] : '');\n        return groupName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { GroupCloudComponent } from './components/group-cloud.component';\nimport { InitialGroupNamePipe } from './pipe/group-initial.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule\n    ],\n    declarations: [GroupCloudComponent, InitialGroupNamePipe],\n    exports: [GroupCloudComponent, InitialGroupNamePipe]\n})\nexport class GroupCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TaskFiltersCloudComponent } from './components/task-filters-cloud.component';\nimport { MaterialModule } from '../../material.module';\nimport { CoreModule, MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppListCloudModule } from './../../app/app-list-cloud.module';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { ProcessCommonModule } from '../../common/process-common.module';\nimport { PeopleCloudModule } from '../../people/people-cloud.module';\nimport { EditServiceTaskFilterCloudComponent } from './components/edit-task-filters/edit-service-task-filter-cloud.component';\nimport { EditTaskFilterCloudComponent } from './components/edit-task-filters/edit-task-filter-cloud.component';\nimport { TaskFilterDialogCloudComponent } from './components/task-filter-dialog/task-filter-dialog-cloud.component';\nimport { ServiceTaskFiltersCloudComponent } from './components/service-task-filters-cloud.component';\nimport { TaskAssignmentFilterCloudComponent } from './components/task-assignment-filter/task-assignment-filter.component';\nimport { GroupCloudModule } from '../../group/group-cloud.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        AppListCloudModule,\n        CoreModule,\n        GroupCloudModule,\n        ProcessCommonModule,\n        PeopleCloudModule\n    ],\n    declarations: [\n        TaskFiltersCloudComponent,\n        ServiceTaskFiltersCloudComponent,\n        EditTaskFilterCloudComponent,\n        EditServiceTaskFilterCloudComponent,\n        TaskFilterDialogCloudComponent,\n        TaskAssignmentFilterCloudComponent\n    ],\n    exports: [\n        TaskFiltersCloudComponent,\n        ServiceTaskFiltersCloudComponent,\n        EditTaskFilterCloudComponent,\n        EditServiceTaskFilterCloudComponent\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }\n    ]\n})\nexport class TaskFiltersCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation, OnDestroy, ViewChild } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { Observable, Subject } from 'rxjs';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\nimport {\n    MOMENT_DATE_FORMATS, MomentDateAdapter,\n    LogService,\n    UserPreferencesService,\n    IdentityUserService,\n    IdentityUserModel,\n    UserPreferenceValues\n} from '@alfresco/adf-core';\nimport { PeopleCloudComponent } from '../../../people/components/people-cloud.component';\nimport { GroupCloudComponent } from '../../../group/components/group-cloud.component';\nimport { TaskCloudService } from '../../services/task-cloud.service';\nimport { StartTaskCloudRequestModel } from '../models/start-task-cloud-request.model';\nimport { takeUntil } from 'rxjs/operators';\nimport { TaskPriorityOption } from '../../models/task.model';\n\n@Component({\n    selector: 'adf-cloud-start-task',\n    templateUrl: './start-task-cloud.component.html',\n    styleUrls: ['./start-task-cloud.component.scss'],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class StartTaskCloudComponent implements OnInit, OnDestroy {\n\n    static MAX_NAME_LENGTH = 255;\n\n    public DATE_FORMAT: string = 'DD/MM/YYYY';\n\n    /** (required) Name of the app. */\n    @Input()\n    appName: string = '';\n\n    /** Maximum length of the task name. */\n    @Input()\n    maxNameLength: number = StartTaskCloudComponent.MAX_NAME_LENGTH;\n\n    /** Name of the task. */\n    @Input()\n    name: string = '';\n\n    /** Emitted when the task is successfully created. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the cancel button is clicked by the user. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('peopleInput')\n    assignee: PeopleCloudComponent;\n\n    @ViewChild('groupInput')\n    candidateGroups: GroupCloudComponent;\n\n    users$: Observable<any[]>;\n\n    taskId: string;\n\n    dueDate: Date;\n\n    submitted = false;\n\n    assigneeName: string;\n\n    candidateGroupNames: string[] = [];\n\n    dateError: boolean;\n\n    taskForm: FormGroup;\n\n    currentUser: IdentityUserModel;\n\n    formKey: string;\n\n    priorities: TaskPriorityOption[];\n\n    private assigneeForm = new FormControl('');\n    private groupForm = new FormControl('');\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private taskService: TaskCloudService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService,\n                private formBuilder: FormBuilder,\n                private identityUserService: IdentityUserService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n        this.loadCurrentUser();\n        this.buildForm();\n        this.loadDefaultPriorities();\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    buildForm() {\n        this.taskForm = this.formBuilder.group({\n            name: new FormControl(this.name, [Validators.required, Validators.maxLength(this.getMaxNameLength()), this.whitespaceValidator]),\n            priority: new FormControl(''),\n            description: new FormControl('', [this.whitespaceValidator]),\n            formKey: new FormControl()\n        });\n    }\n\n    private getMaxNameLength(): number {\n        return this.maxNameLength > StartTaskCloudComponent.MAX_NAME_LENGTH ?\n            StartTaskCloudComponent.MAX_NAME_LENGTH : this.maxNameLength;\n    }\n\n    private loadCurrentUser() {\n        this.currentUser = this.identityUserService.getCurrentUserInfo();\n        this.assigneeName = this.currentUser.username;\n    }\n\n    private loadDefaultPriorities() {\n        this.priorities = this.taskService.priorities;\n    }\n\n    public saveTask() {\n        this.submitted = true;\n        const newTask = Object.assign(this.taskForm.value);\n        newTask.dueDate = this.dueDate;\n        newTask.assignee = this.assigneeName;\n        newTask.formKey = this.formKey;\n        newTask.candidateGroups = this.candidateGroupNames;\n\n        this.createNewTask(new StartTaskCloudRequestModel(newTask));\n    }\n\n    private createNewTask(newTask: StartTaskCloudRequestModel) {\n        this.taskService.createNewTask(newTask, this.appName)\n            .subscribe(\n                (res: any) => {\n                    this.submitted = false;\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.submitted = false;\n                    this.error.emit(err);\n                    this.logService.error('An error occurred while creating new task');\n                });\n    }\n\n    public onCancel() {\n        this.cancel.emit();\n    }\n\n    onDateChanged(newDateValue) {\n        this.dateError = false;\n\n        if (newDateValue) {\n            const momentDate = moment(newDateValue, this.DATE_FORMAT, true);\n            if (!momentDate.isValid()) {\n                this.dateError = true;\n            }\n        }\n    }\n\n    onAssigneeSelect(assignee: IdentityUserModel) {\n        this.assigneeName = assignee ? assignee.username : '';\n    }\n\n    onAssigneeRemove() {\n        this.assigneeName = '';\n    }\n\n    onCandidateGroupSelect(candidateGroup: any) {\n        if (candidateGroup.name) {\n            this.candidateGroupNames.push(candidateGroup.name);\n        }\n    }\n\n    onCandidateGroupRemove(candidateGroup: any) {\n        if (candidateGroup.name) {\n            this.candidateGroupNames = this.candidateGroupNames.filter((name: string) => {\n                return name !== candidateGroup.name;\n            });\n        }\n    }\n\n    canStartTask(): boolean {\n        return !(this.dateError ||\n                !this.taskForm.valid ||\n                this.submitted ||\n                this.assignee.hasError() ||\n                this.candidateGroups.hasError());\n    }\n\n    public whitespaceValidator(control: FormControl) {\n        const isWhitespace = (control.value || '').trim().length === 0;\n        const isValid = control.value.length === 0 || !isWhitespace;\n        return isValid ? null : { 'whitespace': true };\n    }\n\n    get nameController(): FormControl {\n        return this.taskForm.get('name') as FormControl;\n    }\n\n    get priorityController(): FormControl {\n        return this.taskForm.get('priority') as FormControl;\n    }\n\n    get assigneeFormControl(): FormControl {\n        return this.assigneeForm;\n    }\n\n    get candidateUserFormControl(): FormControl {\n        return this.groupForm;\n    }\n\n    onFormSelect(formKey: string) {\n        this.formKey = formKey || '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class TaskVariableCloud {\n    name: string;\n    value: any;\n    type?: string;\n    id?: string;\n    constructor(obj) {\n        this.id = obj.name || null;\n        this.name = obj.name || null;\n        this.value = this.hasValue(obj) ? obj.value : null;\n        this.type = obj.type || null;\n    }\n\n    hasValue(obj: TaskVariableCloud): boolean {\n        return typeof obj.value !== undefined && obj.value !== null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApiService,\n    FormValues,\n    AppConfigService,\n    FormOutcomeModel,\n    FormModel,\n    FormFieldOption\n} from '@alfresco/adf-core';\nimport { Observable, from } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TaskDetailsCloudModel } from '../../task/start-task/models/task-details-cloud.model';\nimport { CompleteFormRepresentation, UploadApi } from '@alfresco/js-api';\nimport { TaskVariableCloud } from '../models/task-variable-cloud.model';\nimport { BaseCloudService } from '../../services/base-cloud.service';\nimport { FormContent } from '../../services/form-fields.interfaces';\nimport { FormCloudServiceInterface } from './form-cloud.service.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormCloudService extends BaseCloudService implements FormCloudServiceInterface {\n\n    private _uploadApi;\n    get uploadApi(): UploadApi {\n        this._uploadApi = this._uploadApi ?? new UploadApi(this.apiService.getInstance());\n        return this._uploadApi;\n    }\n\n    constructor(\n        apiService: AlfrescoApiService,\n        appConfigService: AppConfigService\n    ) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Gets the form definition of a task.\n     * @param appName Name of the app\n     * @param taskId ID of the target task\n     * @param version Version of the form\n     * @returns Form definition\n     */\n    getTaskForm(appName: string, taskId: string, version?: number): Observable<any> {\n        return this.getTask(appName, taskId).pipe(\n            switchMap(task => {\n                return this.getForm(appName, task.formKey, version).pipe(\n                    map((form: FormContent) => {\n                        const flattenForm = {\n                            ...form.formRepresentation,\n                            ...form.formRepresentation.formDefinition,\n                            taskId: task.id,\n                            taskName: task.name,\n                            processDefinitionId: task.processDefinitionId,\n                            processInstanceId: task.processInstanceId\n                        };\n                        delete flattenForm.formDefinition;\n                        return flattenForm;\n                    })\n                );\n            })\n        );\n    }\n\n    /**\n     * Saves a task form.\n     * @param appName Name of the app\n     * @param taskId ID of the target task\n     * @param processInstanceId ID of processInstance\n     * @param formId ID of the form to save\n     * @param values Form values object\n     * @returns Updated task details\n     */\n    saveTaskForm(appName: string, taskId: string, processInstanceId: string, formId: string, values: FormValues): Observable<TaskDetailsCloudModel> {\n        const apiUrl = `${this.getBasePath(appName)}/form/v1/forms/${formId}/save`;\n        const saveFormRepresentation: any = {\n            values,\n            taskId,\n            processInstanceId\n        };\n\n        return this.post(apiUrl, saveFormRepresentation).pipe(\n            map((res: any) => res.entry)\n        );\n    }\n\n    createTemporaryRawRelatedContent(file: any, nodeId: string, contentHost: string): Observable<any> {\n\n        const changedConfig = this.apiService.lastConfig;\n        changedConfig.provider = 'ALL';\n        changedConfig.hostEcm = contentHost.replace('/alfresco', '');\n        this.apiService.getInstance().setConfig(changedConfig);\n        return from(this.uploadApi.uploadFile(\n            file,\n            '',\n            nodeId,\n            '',\n            { overwrite: true }\n        )).pipe(\n            map((res: any) => res.entry)\n        );\n    }\n\n    /**\n     * Completes a task form.\n     * @param appName Name of the app\n     * @param taskId ID of the target task\n     * @param processInstanceId ID of processInstance\n     * @param formId ID of the form to complete\n     * @param formValues Form values object\n     * @param outcome Form outcome\n     * @param version of the form\n     * @returns Updated task details\n     */\n    completeTaskForm(appName: string, taskId: string, processInstanceId: string, formId: string, formValues: FormValues, outcome: string, version: number): Observable<TaskDetailsCloudModel> {\n        const apiUrl = `${this.getBasePath(appName)}/form/v1/forms/${formId}/submit/versions/${version}`;\n        const completeFormRepresentation = <CompleteFormRepresentation> {\n            values: formValues,\n            taskId: taskId,\n            processInstanceId: processInstanceId\n        };\n        if (outcome) {\n            completeFormRepresentation.outcome = outcome;\n        }\n\n        return this.post(apiUrl, completeFormRepresentation).pipe(\n            map((res: any) => res.entry)\n        );\n    }\n\n    /**\n     * Gets details of a task\n     * @param appName Name of the app\n     * @param taskId ID of the target task\n     * @returns Details of the task\n     */\n    getTask(appName: string, taskId: string): Observable<TaskDetailsCloudModel> {\n        const apiUrl = `${this.getBasePath(appName)}/query/v1/tasks/${taskId}`;\n\n        return this.get(apiUrl).pipe(\n            map((res: any) => res.entry)\n        );\n    }\n\n    /**\n     * Gets the variables of a task.\n     * @param appName Name of the app\n     * @param taskId ID of the target task\n     * @returns Task variables\n     */\n    getTaskVariables(appName: string, taskId: string): Observable<TaskVariableCloud[]> {\n        const apiUrl = `${this.getBasePath(appName)}/query/v1/tasks/${taskId}/variables`;\n\n        return this.get(apiUrl).pipe(\n            map((res: any) => {\n                return res.list.entries.map((variable) => new TaskVariableCloud(variable.entry));\n            })\n        );\n    }\n\n    /**\n     * Gets a form definition.\n     * @param appName Name of the app\n     * @param formKey key of the target task\n     * @param version Version of the form\n     * @returns Form definition\n     */\n    getForm(appName: string, formKey: string, version?: number): Observable<FormContent> {\n        let url = `${this.getBasePath(appName)}/form/v1/forms/${formKey}`;\n\n        if (version) {\n            url += `/versions/${version}`;\n        }\n\n        return this.get(url);\n    }\n\n    getRestWidgetData(formName: string, widgetId: string, body: any = {}): Observable<FormFieldOption[]> {\n        const appName = this.appConfigService.get('alfresco-deployed-apps')[0]?.name;\n        const apiUrl = `${this.getBasePath(appName)}/form/v1/forms/${formName}/values/${widgetId}`;\n        return this.post(apiUrl, body);\n    }\n\n    /**\n     * Parses JSON data to create a corresponding form.\n     * @param json JSON data to create the form\n     * @param data Values for the form's fields\n     * @param readOnly Toggles whether or not the form should be read-only\n     * @returns Form created from the JSON specification\n     */\n    parseForm(json: any, data?: TaskVariableCloud[], readOnly: boolean = false): FormModel {\n        if (json) {\n            const flattenForm = {\n                ...json.formRepresentation,\n                ...json.formRepresentation.formDefinition\n            };\n            delete flattenForm.formDefinition;\n\n            const formValues: FormValues = {};\n            (data || []).forEach(variable => {\n                formValues[variable.name] = variable.value;\n            });\n\n            const form = new FormModel(flattenForm, formValues, readOnly);\n            if (!json.fields) {\n                form.outcomes = [\n                    new FormOutcomeModel(<any> form, {\n                        id: '$save',\n                        name: FormOutcomeModel.SAVE_ACTION,\n                        isSystem: true\n                    })\n                ];\n            }\n            return form;\n        }\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, OnChanges,\n    Output, SimpleChanges, OnDestroy, HostListener\n} from '@angular/core';\nimport { Observable, of, forkJoin, Subject, Subscription } from 'rxjs';\nimport { switchMap, takeUntil, map } from 'rxjs/operators';\nimport {\n    FormBaseComponent,\n    FormFieldModel,\n    FormOutcomeEvent,\n    FormOutcomeModel,\n    WidgetVisibilityService,\n    FormService,\n    FORM_FIELD_VALIDATORS,\n    FormFieldValidator,\n    FormValues,\n    FormModel,\n    ContentLinkModel,\n    UploadWidgetContentLinkModel\n} from '@alfresco/adf-core';\nimport { FormCloudService } from '../services/form-cloud.service';\nimport { TaskVariableCloud } from '../models/task-variable-cloud.model';\nimport { TaskDetailsCloudModel } from '../../task/start-task/models/task-details-cloud.model';\n\n@Component({\n    selector: 'adf-cloud-form',\n    templateUrl: './form-cloud.component.html'\n})\nexport class FormCloudComponent extends FormBaseComponent implements OnChanges, OnDestroy {\n\n    /** App name to fetch corresponding form and values. */\n    @Input()\n    appName: string = '';\n\n    /** The application version to use when fetching data */\n    @Input()\n    appVersion?: number;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    formId: string;\n\n    /** ProcessInstanceId id to fetch corresponding form and values. */\n    @Input()\n    processInstanceId: string;\n\n    /** Underlying form model instance. */\n    @Input()\n    form: FormModel;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Custom form values map to be used with the rendered form. */\n    @Input()\n    data: TaskVariableCloud[];\n\n    /** FormFieldValidator allow to override the form field validators provided. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [...FORM_FIELD_VALIDATORS];\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded = new EventEmitter<FormModel>();\n\n    /** Emitted when form values are refreshed due to a data property change. */\n    @Output()\n    formDataRefreshed = new EventEmitter<FormModel>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked = new EventEmitter<ContentLinkModel>();\n\n    protected subscriptions: Subscription[] = [];\n    nodeId: string;\n    formCloudRepresentationJSON: any;\n\n    protected onDestroy$ = new Subject<boolean>();\n\n    constructor(protected formCloudService: FormCloudService,\n                protected formService: FormService,\n                protected visibilityService: WidgetVisibilityService) {\n        super();\n\n        this.formService.formContentClicked\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((content) => {\n                if (content instanceof UploadWidgetContentLinkModel) {\n                    this.form.setNodeIdValueForViewersLinkedToUploadWidget(content);\n                    this.onFormDataRefreshed(this.form);\n                } else {\n                    this.formContentClicked.emit(content);\n                }\n            });\n\n        this.formService.updateFormValuesRequested\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((valuesToSetIfNotPresent) => {\n                this.form.addValuesNotPresent(valuesToSetIfNotPresent);\n                this.onFormDataRefreshed(this.form);\n            });\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent) {\n        event.cancelBubble = true;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n\n        if (appName && appName.currentValue) {\n            if (this.taskId) {\n                this.getFormByTaskId(appName.currentValue, this.taskId, this.appVersion);\n            } else if (this.formId) {\n                this.getFormById(appName.currentValue, this.formId, this.appVersion);\n            }\n            return;\n        }\n\n        const formId = changes['formId'];\n        if (formId && formId.currentValue && this.appName) {\n            this.getFormById(this.appName, formId.currentValue, this.appVersion);\n            return;\n        }\n\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue && this.appName) {\n            this.getFormByTaskId(this.appName, taskId.currentValue, this.appVersion);\n            return;\n        }\n\n        const data = changes['data'];\n        if (data && data.currentValue) {\n            this.refreshFormData();\n            return;\n        }\n    }\n\n    /**\n     * Invoked when user clicks form refresh button.\n     */\n    onRefreshClicked() {\n        this.loadForm();\n    }\n\n    loadForm() {\n        if (this.appName && this.taskId) {\n            this.getFormByTaskId(this.appName, this.taskId, this.appVersion);\n        } else if (this.appName && this.formId) {\n            this.getFormById(this.appName, this.formId, this.appVersion);\n        }\n\n    }\n\n    findProcessVariablesByTaskId(appName: string, taskId: string): Observable<TaskVariableCloud[]> {\n        return this.formCloudService.getTask(appName, taskId).pipe(\n            switchMap(task => {\n                if (this.isAProcessTask(task)) {\n                    return this.formCloudService.getTaskVariables(appName, taskId);\n                } else {\n                    return of([]);\n                }\n            })\n        );\n    }\n\n    isAProcessTask(taskRepresentation: TaskDetailsCloudModel): boolean {\n        return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';\n    }\n\n    getFormByTaskId(appName: string, taskId: string, version?: number): Promise<FormModel> {\n        return new Promise<FormModel>(resolve => {\n            forkJoin(\n                this.formCloudService.getTaskForm(appName, taskId, version),\n                this.formCloudService.getTaskVariables(appName, taskId)\n            )\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(\n                (data) => {\n                    this.formCloudRepresentationJSON = data[0];\n\n                    this.formCloudRepresentationJSON.processVariables = data[1];\n                    this.data = data[1];\n\n                    const parsedForm = this.parseForm(this.formCloudRepresentationJSON);\n                    this.visibilityService.refreshVisibility(<any> parsedForm, this.data);\n                    parsedForm.validateForm();\n                    this.form = parsedForm;\n                    this.form.nodeId = '-my-';\n                    this.onFormLoaded(this.form);\n                    resolve(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                    resolve(null);\n                }\n            );\n        });\n    }\n\n    getFormById(appName: string, formId: string, appVersion?: number) {\n        this.formCloudService\n            .getForm(appName, formId, appVersion)\n            .pipe(\n                map((form: any) => {\n                    const flattenForm = { ...form.formRepresentation, ...form.formRepresentation.formDefinition };\n                    delete flattenForm.formDefinition;\n                    return flattenForm;\n                }),\n                takeUntil(this.onDestroy$))\n            .subscribe(\n                (form) => {\n                    this.formCloudRepresentationJSON = form;\n                    const parsedForm = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(<any> parsedForm);\n                    parsedForm.validateForm();\n                    this.form = parsedForm;\n                    this.form.nodeId = '-my-';\n                    this.onFormLoaded(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    saveTaskForm() {\n        if (this.form && this.appName && this.taskId) {\n            this.formCloudService\n                .saveTaskForm(this.appName, this.taskId, this.processInstanceId, `${this.form.id}`, this.form.values)\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe(\n                    () => {\n                        this.onTaskSaved(this.form);\n                    },\n                    (error) => this.onTaskSavedError(error)\n                );\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        if (this.form && this.appName && this.taskId) {\n            this.formCloudService\n                .completeTaskForm(this.appName, this.taskId, this.processInstanceId, `${this.form.id}`, this.form.values, outcome, this.appVersion)\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe(\n                    () => {\n                        this.onTaskCompleted(this.form);\n                    },\n                    (error) => this.onTaskCompletedError(error)\n                );\n        }\n    }\n\n    parseForm(formCloudRepresentationJSON: any): FormModel {\n        if (formCloudRepresentationJSON) {\n            const formValues: FormValues = {};\n            (this.data || []).forEach(variable => {\n                formValues[variable.name] = variable.value;\n            });\n\n            const form = new FormModel(formCloudRepresentationJSON, formValues, this.readOnly);\n            if (!form) {\n                form.outcomes = this.getFormDefinitionOutcomes(form);\n            }\n            if (this.fieldValidators && this.fieldValidators.length > 0) {\n                form.fieldValidators = this.fieldValidators;\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Get custom set of outcomes for a Form Definition.\n     * @param form Form definition model.\n     */\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[] {\n        return [\n            new FormOutcomeModel(<any> form, { id: '$save', name: FormOutcomeModel.SAVE_ACTION, isSystem: true })\n        ];\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        if (field && field.form) {\n            this.visibilityService.refreshVisibility(field.form);\n        }\n    }\n\n    private refreshFormData() {\n        this.form = this.parseForm(this.formCloudRepresentationJSON);\n        this.onFormLoaded(this.form);\n        this.onFormDataRefreshed(this.form);\n    }\n\n    protected onFormLoaded(form: FormModel) {\n        this.formLoaded.emit(form);\n    }\n\n    protected onFormDataRefreshed(form: FormModel) {\n        this.formDataRefreshed.emit(form);\n    }\n\n    protected onTaskSaved(form: FormModel) {\n        this.formSaved.emit(form);\n    }\n\n    protected onTaskSavedError(error: any) {\n        this.handleError(error);\n    }\n\n    protected onTaskCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n    }\n\n    protected onTaskCompletedError(error: any) {\n        this.handleError(error);\n    }\n\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean {\n        const args = new FormOutcomeEvent(outcome);\n\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        this.executeOutcome.emit(args);\n        return !args.defaultPrevented;\n    }\n\n    protected storeFormAsMetadata() {\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport { map } from 'rxjs/operators';\nimport { from, Observable } from 'rxjs';\nimport { BaseCloudService } from '../../services/base-cloud.service';\nimport { FormRepresentation } from '../../services/form-fields.interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormDefinitionSelectorCloudService extends BaseCloudService {\n\n    constructor(apiService: AlfrescoApiService,\n                appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Get all forms of an app.\n     * @param appName Name of the application\n     * @returns Details of the forms\n     */\n    getForms(appName: string): Observable<FormRepresentation[]> {\n        const url = `${this.getBasePath(appName)}/form/v1/forms`;\n\n        return this.get(url).pipe(\n            map((data: any) => {\n                return data.map((formData: any) => {\n                    return <FormRepresentation> formData.formRepresentation;\n                });\n            })\n        );\n    }\n\n    /**\n     * Get all forms of an app.\n     * @param appName Name of the application\n     * @returns Details of the forms\n     */\n    getStandAloneTaskForms(appName: string): Observable<FormRepresentation[]> {\n        return from(this.getForms(appName)).pipe(\n            map((data: any) => {\n                return data.filter((formData: any) => formData.standalone || formData.standalone === undefined);\n            })\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FormDefinitionSelectorCloudService } from '../services/form-definition-selector-cloud.service';\nimport { MatSelectChange } from '@angular/material/select';\nimport { FormRepresentation } from '../../services/form-fields.interfaces';\n\n@Component({\n    selector: 'adf-cloud-form-definition-selector',\n    templateUrl: './form-definition-selector-cloud.component.html',\n    styleUrls: ['./form-definition-selector-cloud.component.scss']\n})\n\nexport class FormDefinitionSelectorCloudComponent implements OnInit {\n\n    /** Name of the application. If specified, this shows the users who have access to the app. */\n    @Input()\n    appName: string = '';\n\n    /** Emitted when a form is selected. */\n    @Output()\n    selectForm: EventEmitter<string> = new EventEmitter<string>();\n\n    forms$: Observable<FormRepresentation[]>;\n\n    constructor(private formDefinitionCloudService: FormDefinitionSelectorCloudService) {\n    }\n\n    ngOnInit(): void {\n        this.forms$ = this.formDefinitionCloudService.getStandAloneTaskForms(this.appName);\n    }\n\n    onSelect(event: MatSelectChange) {\n        this.selectForm.emit(event.value);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-cloud-form-custom-outcomes',\n    template: '<ng-content></ng-content>'\n})\nexport class FormCustomOutcomesComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n    MOMENT_DATE_FORMATS, MomentDateAdapter, WidgetComponent,\n    UserPreferencesService, UserPreferenceValues, FormService\n} from '@alfresco/adf-core';\n\n@Component({\n    selector: 'date-widget',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    templateUrl: './date-cloud.widget.html',\n    styleUrls: ['./date-cloud.widget.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateCloudWidgetComponent extends WidgetComponent implements OnInit, OnDestroy {\n\n    typeId = 'DateCloudWidgetComponent';\n    DATE_FORMAT_CLOUD = 'YYYY-MM-DD';\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, this.DATE_FORMAT_CLOUD);\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, this.DATE_FORMAT_CLOUD);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onDateChanged(newDateValue) {\n        const date = moment(newDateValue, this.field.dateDisplayFormat, true);\n        if (date.isValid()) {\n            this.field.value = date.format(this.field.dateDisplayFormat);\n        } else {\n            this.field.value = newDateValue;\n        }\n        this.onFieldChanged(this.field);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport {\n    WidgetComponent,\n    FormService,\n    LogService,\n    FormFieldOption,\n    FormFieldEvent,\n    FormFieldModel,\n    FormFieldTypes,\n    RuleEntry\n} from '@alfresco/adf-core';\nimport { FormCloudService } from '../../../services/form-cloud.service';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n/* tslint:disable:component-selector  */\n\n@Component({\n    selector: 'dropdown-cloud-widget',\n    templateUrl: './dropdown-cloud.widget.html',\n    styleUrls: ['./dropdown-cloud.widget.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DropdownCloudWidgetComponent extends WidgetComponent implements OnInit, OnDestroy {\n    static DEFAULT_OPTION = {\n        id: 'empty',\n        name: 'Choose one...'\n    };\n\n    typeId = 'DropdownCloudWidgetComponent';\n    protected onDestroy$ = new Subject<boolean>();\n\n    constructor(public formService: FormService,\n                private formCloudService: FormCloudService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.hasRestUrl() && !this.isLinkedWidget()) {\n            this.persistFieldOptionsFromRestApi();\n        }\n\n        if (this.isLinkedWidget()) {\n            this.loadFieldOptionsForLinkedWidget();\n\n            this.formService.formFieldValueChanged\n                .pipe(\n                    filter((event: FormFieldEvent) => this.isFormFieldEventOfTypeDropdown(event) && this.isParentFormFieldEvent(event)),\n                    takeUntil(this.onDestroy$))\n                .subscribe((event: FormFieldEvent) => {\n                    const valueOfParentWidget = event.field.value;\n                    this.parentValueChanged(valueOfParentWidget);\n                });\n        }\n    }\n\n    private persistFieldOptionsFromRestApi() {\n        if (this.isValidRestType()) {\n            const bodyParam = this.buildBodyParam();\n            this.formCloudService.getRestWidgetData(this.field.form.id, this.field.id, bodyParam)\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe((result: FormFieldOption[]) => {\n                    this.field.options = result;\n                    this.field.updateForm();\n                }, (err) => this.handleError(err));\n        }\n    }\n\n    private buildBodyParam(): any {\n        const bodyParam = Object.assign({});\n        if (this.isLinkedWidget()) {\n            const parentWidgetValue = this.getParentWidgetValue();\n            const parentWidgetId = this.getLinkedWidgetId();\n            bodyParam[parentWidgetId] = parentWidgetValue;\n        }\n        return bodyParam;\n    }\n\n    private loadFieldOptionsForLinkedWidget() {\n        const parentWidgetValue = this.getParentWidgetValue();\n        this.parentValueChanged(parentWidgetValue);\n    }\n\n    private getParentWidgetValue(): string {\n        const parentWidgetId = this.getLinkedWidgetId();\n        const parentWidget = this.getFormFieldById(parentWidgetId);\n        return parentWidget?.value;\n    }\n\n    private parentValueChanged(value: string) {\n        if (this.isValidValue(value)) {\n            this.isValidRestType() ? this.persistFieldOptionsFromRestApi() : this.persistFieldOptionsFromManualList(value);\n        } else if (this.isDefaultValue(value)) {\n            this.addDefaultOption();\n        }\n    }\n\n    private isValidValue(value: string): boolean {\n        return !!value && value !== DropdownCloudWidgetComponent.DEFAULT_OPTION.id;\n    }\n\n    private isDefaultValue(value: string): boolean {\n        return value === DropdownCloudWidgetComponent.DEFAULT_OPTION.id;\n    }\n\n    private getFormFieldById(fieldId): FormFieldModel {\n        return this.field.form.getFormFields().filter((field: FormFieldModel) => field.id === fieldId)[0];\n    }\n\n    private persistFieldOptionsFromManualList(value: string) {\n        if (this.hasRuleEntries()) {\n            const rulesEntries = this.getRuleEntries();\n            rulesEntries.forEach((ruleEntry: RuleEntry) => {\n                if (ruleEntry.key === value) {\n                    this.field.options = ruleEntry.options;\n                    this.field.updateForm();\n                }\n            });\n        }\n    }\n\n    private getRuleEntries(): RuleEntry[] {\n        return this.field.rule.entries;\n    }\n\n    private hasRuleEntries(): boolean {\n        return !!this.getRuleEntries().length;\n    }\n\n    private addDefaultOption() {\n        this.field.options = [DropdownCloudWidgetComponent.DEFAULT_OPTION];\n    }\n\n    selectionChangedForField(field: FormFieldModel) {\n        const formFieldValueChangedEvent = new FormFieldEvent(field.form, field);\n        this.formService.formFieldValueChanged.next(formFieldValueChangedEvent);\n        this.onFieldChanged(field);\n    }\n\n    private isParentFormFieldEvent(event: FormFieldEvent): boolean {\n        return event.field.id === this.getLinkedWidgetId();\n    }\n\n    private isFormFieldEventOfTypeDropdown(event: FormFieldEvent): boolean {\n        return event.field.type === FormFieldTypes.DROPDOWN;\n    }\n\n    private hasRestUrl(): boolean {\n        return !!this.field?.restUrl;\n    }\n\n    isLinkedWidget(): boolean {\n        return !!this.getLinkedWidgetId();\n    }\n\n    getLinkedWidgetId(): string {\n        return this.field?.rule?.ruleOn;\n    }\n\n    compareDropdownValues(opt1: FormFieldOption | string, opt2: FormFieldOption | string): boolean {\n        if (!opt1 || !opt2) {\n            return false;\n        }\n\n        if (typeof opt1 === 'string' && typeof opt2 === 'object') {\n            return opt1 === opt2.id || opt1 === opt2.name;\n        }\n\n        if (typeof opt1 === 'object' && typeof opt2 === 'string') {\n            return opt1.id === opt2 || opt1.name === opt2;\n        }\n\n        if (typeof opt1 === 'object' && typeof opt2 === 'object') {\n            return  opt1.id === opt2.id || opt1.name === opt2.name;\n        }\n\n        return opt1 === opt2;\n    }\n\n    getOptionValue(option: FormFieldOption, fieldValue: string): string | FormFieldOption {\n        if (this.field.hasMultipleValues) {\n            return option;\n        }\n\n        let optionValue: string = '';\n        if (option.id === DropdownCloudWidgetComponent.DEFAULT_OPTION.id || option.name !== fieldValue) {\n            optionValue = option.id;\n        } else {\n            optionValue = option.name;\n        }\n        return optionValue;\n    }\n\n    private isValidRestType(): boolean {\n        return this.field.optionType === 'rest' && !!this.field.restUrl;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly';\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetComponent, IdentityGroupModel, FormService } from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ComponentSelectionMode } from '../../../../types';\n\n/* tslint:disable:component-selector  */\n\n@Component({\n    selector: 'group-cloud-widget',\n    templateUrl: './group-cloud.widget.html',\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class GroupCloudWidgetComponent extends WidgetComponent implements OnInit {\n\n    private onDestroy$ = new Subject<boolean>();\n\n    typeId = 'GroupCloudWidgetComponent';\n    roles: string[];\n    mode: ComponentSelectionMode;\n    title: string;\n    preSelectGroup: IdentityGroupModel[];\n    search: FormControl;\n\n    constructor(formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.roles = this.field.roles;\n            this.mode = this.field.optionType as ComponentSelectionMode;\n            this.title = this.field.placeholder;\n            this.preSelectGroup = this.field.value ? this.field.value : [];\n        }\n        this.search =  new FormControl({value: '', disabled: this.field.readOnly}, []),\n\n        this.search.statusChanges\n            .pipe(\n                filter((value: string) => {\n                    return value === 'INVALID';\n                }),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(() => {\n                this.field.markAsInvalid();\n                this.field.form.markAsInvalid();\n            });\n\n        this.search.statusChanges\n            .pipe(\n                filter((value: string) => {\n                    return value === 'VALID';\n                }),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(() => {\n                this.field.validate();\n                this.field.form.validateForm();\n            });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onChangedGroup(groups) {\n        this.field.value = [...groups];\n        this.onFieldChanged(this.field);\n    }\n\n    isMultipleMode(): boolean {\n        return this.mode === 'multiple';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetComponent, IdentityUserModel, FormService } from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ComponentSelectionMode } from '../../../../types';\n\n/* tslint:disable:component-selector  */\n\n@Component({\n    selector: 'people-cloud-widget',\n    templateUrl: './people-cloud.widget.html',\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleCloudWidgetComponent extends WidgetComponent implements OnInit {\n\n    private onDestroy$ = new Subject<boolean>();\n\n    typeId = 'PeopleCloudWidgetComponent';\n    appName: string;\n    roles: string[];\n    mode: ComponentSelectionMode;\n    title: string;\n    preSelectUsers: IdentityUserModel[];\n    search: FormControl;\n\n    constructor(formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.roles = this.field.roles;\n            this.mode = this.field.optionType as ComponentSelectionMode;\n            this.title = this.field.placeholder;\n            this.preSelectUsers = this.field.value ? this.field.value : [];\n        }\n        this.search =  new FormControl({value: '', disabled: this.field.readOnly}, []),\n\n        this.search.statusChanges\n            .pipe(\n                filter((value: string) => {\n                    return value === 'INVALID';\n                }),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(() => {\n                this.field.markAsInvalid();\n                this.field.form.markAsInvalid();\n            });\n\n        this.search.statusChanges\n            .pipe(\n                filter((value: string) => {\n                    return value === 'VALID';\n                }),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(() => {\n                this.field.validate();\n                this.field.form.validateForm();\n            });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onChangedUser(users) {\n        this.field.value = [...users];\n        this.onFieldChanged(this.field);\n    }\n\n    isMultipleMode(): boolean {\n        return this.mode === 'multiple';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, LogService, NotificationService } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ContentNodeSelectorComponent,\n    ContentNodeSelectorComponentData,\n    NodeAction\n} from '@alfresco/adf-content-services';\nimport { Node, NodeEntry, NodesApi } from '@alfresco/js-api';\nimport { from, Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, mapTo } from 'rxjs/operators';\nimport { DestinationFolderPathModel } from '../models/form-cloud-representation.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentCloudNodeSelectorService {\n\n    private _nodesApi: NodesApi;\n    get nodesApi(): NodesApi {\n        this._nodesApi = this._nodesApi ?? new NodesApi(this.apiService.getInstance());\n        return this._nodesApi;\n    }\n\n    sourceNodeNotFound = false;\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private notificationService: NotificationService,\n        private logService: LogService,\n        private dialog: MatDialog) {\n    }\n\n    openUploadFileDialog(currentFolderId?: string, selectionMode?: string, isAllFileSources?: boolean, restrictRootToCurrentFolderId?: boolean): Observable<Node[]> {\n        const select = new Subject<Node[]>();\n        select.subscribe({ complete: this.close.bind(this) });\n        const data = <ContentNodeSelectorComponentData> {\n            title: 'Select a file',\n            actionName: NodeAction.ATTACH,\n            currentFolderId,\n            restrictRootToCurrentFolderId,\n            select,\n            selectionMode,\n            isSelectionValid: (entry: Node) => entry.isFile,\n            showFilesInResult: true,\n            showDropdownSiteList: false,\n            showLocalUploadButton: isAllFileSources\n        };\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '66%');\n        return select;\n    }\n\n    async getNodeIdFromPath(destinationFolderPath: DestinationFolderPathModel): Promise<string> {\n        if (destinationFolderPath.alias && destinationFolderPath.path) {\n            try {\n                return await this.getNodeId(destinationFolderPath.alias, destinationFolderPath.path).toPromise();\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n\n        return this.getNodeId(destinationFolderPath.alias).toPromise();\n    }\n\n    async getNodeIdFromFolderVariableValue(variableValue: string, defaultAlias?: string): Promise<string> {\n        const isExistingNode = await this.isExistingNode(variableValue);\n        return isExistingNode ? variableValue : this.getNodeId(defaultAlias).toPromise();\n    }\n\n    async isExistingNode(nodeId: string): Promise<boolean> {\n        let isExistingNode = false;\n        if (nodeId) {\n            try {\n                isExistingNode = await this.getNodeId(nodeId).pipe(mapTo(true)).toPromise();\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n        return isExistingNode;\n    }\n\n    private getNodeId(nodeId: string, relativePath?: string): Observable<string> {\n        let opts: any;\n        if (relativePath) {\n            opts = { relativePath };\n        }\n        return from(this.nodesApi.getNode(nodeId, opts)).pipe(\n            map((nodeEntry: NodeEntry) => nodeEntry.entry.id),\n            catchError((error) => {\n                this.sourceNodeNotFound = true;\n                return this.handleError(error);\n            })\n        );\n    }\n\n    private openContentNodeDialog(data: ContentNodeSelectorComponentData, currentPanelClass: string, chosenWidth: string) {\n        const contentNodeDialog = this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n        contentNodeDialog.afterOpened().subscribe(() => {\n            if (this.sourceNodeNotFound) {\n                this.notificationService.showWarning('ADF_CLOUD_TASK_FORM.ERROR.DESTINATION_FOLDER_PATH_ERROR');\n            }\n        });\n        contentNodeDialog.afterClosed().subscribe(() => {\n            this.sourceNodeNotFound = false;\n        });\n    }\n\n    close() {\n        this.dialog.closeAll();\n    }\n\n    private handleError(error: any): Observable<any> {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { throwError, Observable, from } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    AlfrescoApiService,\n    LogService,\n    ContentService,\n    DownloadService\n} from '@alfresco/adf-core';\nimport { AuthenticationApi, Node, UploadApi } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessCloudContentService {\n\n    private _uploadApi;\n    get uploadApi(): UploadApi {\n        this._uploadApi = this._uploadApi ?? new UploadApi(this.apiService.getInstance());\n        return this._uploadApi;\n    }\n\n    private _authenticationApi;\n    get authenticationApi(): AuthenticationApi {\n        this._authenticationApi = this._authenticationApi ?? new AuthenticationApi(this.apiService.getInstance());\n        return this._authenticationApi;\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private logService: LogService,\n        public contentService: ContentService,\n        private downloadService: DownloadService\n    ) {\n    }\n\n    createTemporaryRawRelatedContent(\n        file: File,\n        nodeId: string\n    ): Observable<Node> {\n\n        return from(\n            this.uploadApi.uploadFile(file, '', nodeId, '', { overwrite: true })\n        ).pipe(\n            map((res: any) => {\n                return {\n                    ...res.entry,\n                    nodeId: res.entry.id\n                };\n            }),\n            catchError(err => this.handleError(err))\n        );\n    }\n\n    getRawContentNode(nodeId: string): Observable<Blob> {\n        return this.contentService.getNodeContent(nodeId);\n    }\n\n    downloadNodeContent(blob: Blob, fileName: string): void {\n        this.contentService.downloadBlob(blob, fileName);\n    }\n\n    async downloadFile(nodeId: string) {\n\n        const ticket = await this.getAuthTicket();\n        const url = this.contentService.getContentUrl(nodeId, true, ticket);\n\n        this.downloadService.downloadUrl(url, nodeId);\n    }\n\n    async getAuthTicket(): Promise<string> {\n        const ticket = await this.authenticationApi.getTicket();\n\n        if (ticket && ticket.entry) {\n            return ticket.entry.id || '';\n        }\n\n        return '';\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class FormCloudRepresentation {\n\n    id?: string;\n    name?: string;\n    description?: string;\n    version?: number;\n    tabs?: any[];\n    fields?: any[];\n    outcomes?: any[];\n    metadata?: any;\n    variables?: any[];\n    taskId?: string;\n    taskName?: string;\n    processDefinitionId?: string;\n    processInstanceId?: string;\n    selectedOutcome?: string;\n\n    constructor(obj?: any) {\n        this.id = obj.id || null;\n        this.name = obj.name || null;\n        this.description = obj.description || null;\n        this.version = obj.version || null;\n        this.tabs = obj.tabs || null;\n        this.fields = obj.fields || null;\n        this.outcomes = obj.outcomes || null;\n        this.metadata = obj.metadata || null;\n        this.variables = obj.variables || null;\n        this.taskId = obj.taskId || null;\n        this.taskName = obj.taskName || null;\n        this.processDefinitionId = obj.processDefinitionId || null;\n        this.processInstanceId = obj.processInstanceId || null;\n        this.selectedOutcome = obj.selectedOutcome || null;\n    }\n}\n\nexport interface DestinationFolderPathModel {\n    alias: string;\n    path: string;\n}\n\nexport enum FileSourceTypes {\n    ALL_FILE_SOURCES_SERVICE_ID = 'all-file-sources',\n    ALFRESCO_CONTENT_SOURCES_SERVICE_ID = 'alfresco-content'\n}\n\nexport enum DestinationFolderPathType {\n    STATIC_TYPE = 'value',\n    STRING_TYPE = 'string',\n    FOLDER_TYPE = 'folder'\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { Observable, from } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { WidgetComponent, LogService, FormService, ThumbnailService, NotificationService } from '@alfresco/adf-core';\nimport { ProcessCloudContentService } from '../../../services/process-cloud-content.service';\nimport { FileSourceTypes, DestinationFolderPathType } from '../../../models/form-cloud-representation.model';\n\n@Component({\n    selector: 'upload-cloud-widget',\n    templateUrl: './upload-cloud.widget.html',\n    styleUrls: ['./upload-cloud.widget.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadCloudWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string = '';\n    mimeTypeIcon: string;\n\n    @ViewChild('uploadFiles')\n    fileInput: ElementRef;\n\n    constructor(\n        formService: FormService,\n        private thumbnailService: ThumbnailService,\n        protected processCloudContentService: ProcessCloudContentService,\n        protected notificationService: NotificationService,\n        protected logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n            this.fixIncompatibilityFromPreviousAndNewForm([]);\n        }\n        this.getMultipleFileParam();\n        this.setDestinationFolderPathFromMappedVariable();\n    }\n\n    removeFile(file: any) {\n        if (this.field) {\n            this.removeElementFromList(file);\n        }\n    }\n\n    onFileChanged(event: any) {\n        const files: File[] = [];\n        const filesSaved: Node[] = [];\n\n        for (const file of Array.from<File>(event.target.files)) {\n            if (!this.isUploaded(file)) {\n                files.push(file);\n            } else {\n                this.notificationService.showWarning('FORM.FIELD.FILE_ALREADY_UPLOADED');\n            }\n        }\n\n        if (files && files.length > 0) {\n            from(files)\n                .pipe(mergeMap((file) => this.uploadRawContent(file)))\n                .subscribe(\n                    (res) => {\n                        filesSaved.push(res);\n                    },\n                    (error) => this.logService.error(`Error uploading file. See console output for more details. ${error}`),\n                    () => {\n                        this.fixIncompatibilityFromPreviousAndNewForm(filesSaved);\n                        this.hasFile = true;\n                    }\n                );\n        }\n    }\n\n    private isUploaded(file: File): boolean {\n        const current: Node[] = this.field.value || [];\n        return current.some(entry => entry.name === file.name);\n    }\n\n    protected fixIncompatibilityFromPreviousAndNewForm(filesSaved: Node[]) {\n        const value: Node[] = [...this.field.value || []];\n        value.push(...filesSaved || []);\n\n        this.field.value = value;\n        this.field.form.values[this.field.id] = value;\n\n        this.hasFile = value.length > 0;\n    }\n\n    getIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    private uploadRawContent(file: File): Observable<Node> {\n        return this.processCloudContentService.createTemporaryRawRelatedContent(file, this.field.form.nodeId);\n    }\n\n    getMultipleFileParam() {\n        if (this.field &&\n            this.field.params &&\n            this.field.params.multiple) {\n            this.multipleOption = this.field.params.multiple ? 'multiple' : '';\n        }\n    }\n\n    get uploadedFiles(): any[] {\n        const result = this.field.value || this.field.form.values[this.field.id];\n        return result || [];\n    }\n\n    private removeElementFromList(file: any) {\n        const filteredValues = this.uploadedFiles.filter(value => value.id !== file.id);\n        this.resetFormValues(filteredValues);\n    }\n\n    private resetFormValues(values: any[]) {\n        if (values && values.length > 0) {\n            this.field.value = values;\n            this.field.form.values[this.field.id] = values;\n            this.hasFile = true;\n        } else {\n            this.field.value = [];\n            this.field.form.values[this.field.id] = [];\n            this.hasFile = false;\n        }\n    }\n\n    fileClicked(file: any): void {\n        this.formService.formContentClicked.next(file);\n    }\n\n    isAlfrescoAndLocal(): boolean {\n        return this.field?.params?.fileSource?.serviceId === FileSourceTypes.ALL_FILE_SOURCES_SERVICE_ID;\n    }\n\n    isPathVariableType(type: string): boolean {\n        return this.field?.params?.fileSource?.destinationFolderPath?.type === type;\n    }\n\n    setDestinationFolderPathFromMappedVariable() {\n        if (this.isAlfrescoAndLocal()) {\n            this.prepareUploadWidgetDestinationFolderPathFromStringVariable();\n            this.prepareUploadWidgetDestinationFolderPathFromFolderVariable();\n        }\n    }\n\n    private prepareUploadWidgetDestinationFolderPathFromStringVariable() {\n        if (this.isPathVariableType(DestinationFolderPathType.STRING_TYPE)) {\n            this.setUploadWidgetDestinationFolderPath(this.getDestinationFolderPathValue());\n        }\n    }\n\n    private prepareUploadWidgetDestinationFolderPathFromFolderVariable() {\n        if (this.isPathVariableType(DestinationFolderPathType.FOLDER_TYPE)) {\n            const folder = this.getDestinationFolderPathValue();\n            this.setUploadWidgetDestinationFolderPath(folder?.length ? folder[0].id : undefined);\n        }\n    }\n\n    private setUploadWidgetDestinationFolderPath(path: string) {\n        this.field.params.fileSource.destinationFolderPath['value'] = path ? path : undefined;\n    }\n\n    private getDestinationFolderPathValue(): any {\n        return this.field.form.getProcessVariableValue(this.field.params.fileSource?.destinationFolderPath?.name);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector */\n\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n    FormService,\n    LogService,\n    ThumbnailService,\n    NotificationService,\n    FormValues,\n    ContentLinkModel,\n    AppConfigService,\n    AlfrescoApiService,\n    UploadWidgetContentLinkModel,\n    DestinationFolderPath\n} from '@alfresco/adf-core';\nimport { Node, NodesApi, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { ContentCloudNodeSelectorService } from '../../../services/content-cloud-node-selector.service';\nimport { ProcessCloudContentService } from '../../../services/process-cloud-content.service';\nimport { UploadCloudWidgetComponent } from './upload-cloud.widget';\nimport { DestinationFolderPathModel, DestinationFolderPathType } from '../../../models/form-cloud-representation.model';\nimport { ContentNodeSelectorPanelService } from '@alfresco/adf-content-services';\n\n@Component({\n    selector: 'adf-cloud-attach-file-cloud-widget',\n    templateUrl: './attach-file-cloud-widget.component.html',\n    styleUrls: ['./attach-file-cloud-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFileCloudWidgetComponent extends UploadCloudWidgetComponent implements OnInit, OnDestroy {\n\n    static ALIAS_ROOT_FOLDER = '-root-';\n    static ALIAS_USER_FOLDER = '-my-';\n    static APP_NAME = '-appname-';\n    static VALID_ALIAS = [\n        AttachFileCloudWidgetComponent.ALIAS_ROOT_FOLDER,\n        AttachFileCloudWidgetComponent.ALIAS_USER_FOLDER, '-shared-'\n    ];\n    static RETRIEVE_METADATA_OPTION = 'retrieveMetadata';\n\n    typeId = 'AttachFileCloudWidgetComponent';\n    rootNodeId = AttachFileCloudWidgetComponent.ALIAS_USER_FOLDER;\n    selectedNode: Node;\n\n    _nodesApi: NodesApi;\n    get nodesApi(): NodesApi {\n        this._nodesApi = this._nodesApi ?? new NodesApi(this.apiService.getInstance());\n        return this._nodesApi;\n    }\n    displayedColumns = ['icon', 'fileName', 'action'];\n\n    constructor(\n        formService: FormService,\n        logger: LogService,\n        thumbnails: ThumbnailService,\n        processCloudContentService: ProcessCloudContentService,\n        notificationService: NotificationService,\n        private contentNodeSelectorService: ContentCloudNodeSelectorService,\n        private appConfigService: AppConfigService,\n        private apiService: AlfrescoApiService,\n        private contentNodeSelectorPanelService: ContentNodeSelectorPanelService\n    ) {\n        super(formService, thumbnails, processCloudContentService, notificationService, logger);\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        if (this.hasFile && this.field.value.length === 1) {\n            const files = this.field.value || this.field.form.values[this.field.id];\n            this.contentModelFormFileHandler(files[0]);\n        }\n        this.field.params.displayableCMProperties = this.field.params.displayableCMProperties ?? [];\n        this.displayedColumns.splice(2, 0, ...this.field.params.displayableCMProperties?.map(property => property?.name));\n    }\n\n    isPathStaticType(): boolean {\n        return this.field.params?.fileSource?.destinationFolderPath?.type === DestinationFolderPathType.STATIC_TYPE;\n    }\n\n    isUploadButtonVisible(): boolean {\n        return (!this.hasFile || this.multipleOption) && !this.field.readOnly;\n    }\n\n    onRemoveAttachFile(file: File | RelatedContentRepresentation | Node) {\n        this.removeFile(file);\n        if (file['id'] === this.selectedNode?.id) {\n            this.selectedNode = null;\n            this.contentModelFormFileHandler();\n        }\n    }\n\n    fetchAppNameFromAppConfig(): string {\n        return this.appConfigService.get('alfresco-deployed-apps')[0]?.name;\n    }\n\n    replaceAppNameAliasWithValue(path: string): string {\n        if (path?.match(AttachFileCloudWidgetComponent.APP_NAME)) {\n            const appName = this.fetchAppNameFromAppConfig();\n            return path.replace(AttachFileCloudWidgetComponent.APP_NAME, appName);\n        }\n        return path;\n    }\n\n    async openSelectDialog() {\n        const selectedMode = this.field.params.multiple ? 'multiple' : 'single';\n        const nodeId = await this.getDestinationFolderNodeId();\n        this.rootNodeId = nodeId ? nodeId : AttachFileCloudWidgetComponent.ALIAS_USER_FOLDER;\n        this.contentNodeSelectorPanelService.customModels = this.field.params.customModels;\n\n        this.contentNodeSelectorService\n            .openUploadFileDialog(this.rootNodeId, selectedMode, this.isAlfrescoAndLocal(), true)\n            .subscribe((selections: Node[]) => {\n                selections.forEach(node => (node['isExternal'] = true));\n                const selectionWithoutDuplication = this.removeExistingSelection(selections);\n                this.fixIncompatibilityFromPreviousAndNewForm(selectionWithoutDuplication);\n                if (this.field.value.length === 1) {\n                    this.contentModelFormFileHandler(selections && selections.length > 0 ? selections[0] : null);\n                }\n            });\n    }\n\n    private async getDestinationFolderNodeId(): Promise<string> {\n        let rootNodeId: string;\n\n        switch (this.field?.params?.fileSource?.destinationFolderPath?.type) {\n            case DestinationFolderPathType.STATIC_TYPE:\n                rootNodeId = await this.getNodeIdFromPath(this.field.params.fileSource.destinationFolderPath);\n                break;\n            case DestinationFolderPathType.STRING_TYPE:\n                rootNodeId = await this.getNodeIdFromPath(this.field.params.fileSource.destinationFolderPath);\n                break;\n            case DestinationFolderPathType.FOLDER_TYPE:\n                rootNodeId = await this.getNodeIdFromFolderVariableValue(this.field.params.fileSource.destinationFolderPath);\n                break;\n            default:\n                rootNodeId = await this.getNodeIdFromPath({ type: '', value: AttachFileCloudWidgetComponent.ALIAS_USER_FOLDER });\n                break;\n        }\n\n        return rootNodeId;\n    }\n\n   async getNodeIdFromPath(destinationFolderPath: DestinationFolderPath): Promise<string> {\n        let nodeId: string;\n        const destinationPath =  this.getAliasAndRelativePathFromDestinationFolderPath(destinationFolderPath.value);\n        destinationPath.path = this.replaceAppNameAliasWithValue(destinationPath.path);\n        try {\n            nodeId = await this.contentNodeSelectorService.getNodeIdFromPath(destinationPath);\n        } catch (error) {\n            this.logService.error(error);\n        }\n\n        return nodeId;\n    }\n\n    async getNodeIdFromFolderVariableValue(destinationFolderPath: DestinationFolderPath): Promise<string> {\n        let nodeId: string;\n        try {\n            nodeId = await this.contentNodeSelectorService.getNodeIdFromFolderVariableValue(destinationFolderPath.value, AttachFileCloudWidgetComponent.ALIAS_USER_FOLDER);\n        } catch (error) {\n            this.logService.error(error);\n        }\n\n        return nodeId;\n    }\n\n    getAliasAndRelativePathFromDestinationFolderPath(destinationFolderPath: string): DestinationFolderPathModel {\n        let alias: string; let path: string;\n        if (destinationFolderPath) {\n            const startOfRelativePathIndex = destinationFolderPath.indexOf('/');\n            if (startOfRelativePathIndex >= 0) {\n                alias = destinationFolderPath.substring(0, startOfRelativePathIndex);\n                path = destinationFolderPath.substring(startOfRelativePathIndex, destinationFolderPath.length);\n            } else {\n                alias = destinationFolderPath;\n            }\n        }\n\n        return this.isValidAlias(alias) ? { alias, path } : { alias: AttachFileCloudWidgetComponent.ALIAS_USER_FOLDER, path: undefined };\n    }\n\n    removeExistingSelection(selections: Node[]) {\n        const existingNode: Node[] = [...this.field.value || []];\n        return selections.filter(opt => !existingNode.some((node) => node.id === opt.id));\n    }\n\n    downloadContent(file: Node): void {\n        this.processCloudContentService.downloadFile(file.id);\n    }\n\n    onAttachFileClicked(nodeSelector: any) {\n        nodeSelector.nodeId = nodeSelector.id;\n        this.fileClicked(new ContentLinkModel(nodeSelector));\n    }\n\n    getWidgetIcon(): string {\n        return this.isAlfrescoAndLocal() ? 'file_upload' : 'attach_file';\n    }\n\n    onRowClicked(file?: Node) {\n        if (this.selectedNode?.id === file?.id) {\n            this.selectedNode = null;\n        } else {\n            this.selectedNode = file;\n        }\n        this.contentModelFormFileHandler(this.selectedNode);\n    }\n\n    contentModelFormFileHandler(file?: any) {\n        if (file?.id && this.isRetrieveMetadataOptionEnabled()) {\n            const values: FormValues = {};\n            this.nodesApi.getNode(file.id).then(acsNode => {\n                const metadata = acsNode?.entry?.properties;\n                if (metadata) {\n                    const keys = Object.keys(metadata);\n                    keys.forEach(key => {\n                        const sanitizedKey = key.replace(':', '_');\n                        values[sanitizedKey] = metadata[key];\n                    });\n                    this.formService.updateFormValuesRequested.next(values);\n                }\n            });\n        }\n        this.fileClicked(new UploadWidgetContentLinkModel(file, this.field.id));\n    }\n\n    isRetrieveMetadataOptionEnabled(): boolean {\n        return this.field?.params?.menuOptions && this.field.params.menuOptions[AttachFileCloudWidgetComponent.RETRIEVE_METADATA_OPTION];\n    }\n\n    isValidAlias(alias: string): boolean {\n        return alias && AttachFileCloudWidgetComponent.VALID_ALIAS.includes(alias);\n    }\n\n    ngOnDestroy() {\n        this.contentNodeSelectorPanelService.customModels = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\nimport { FormService, WidgetComponent } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\n\n/* tslint:disable:component-selector  */\n\n@Component({\n    selector: 'adf-properties-viewer-widget',\n    templateUrl: './properties-viewer.widget.html',\n    styleUrls: ['./properties-viewer.widget.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PropertiesViewerWidgetComponent extends WidgetComponent {\n\n    @Output()\n    nodeContentLoaded: EventEmitter<Node> = new EventEmitter();\n\n    constructor(formService: FormService) {\n        super(formService);\n    }\n\n    onNodeContentLoaded(node: Node) {\n        this.nodeContentLoaded.emit(node);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\nimport { PresetConfig } from '@alfresco/adf-content-services';\n\n/* tslint:disable:component-selector  */\n\n@Component({\n    selector: 'adf-properties-viewer-wrapper',\n    templateUrl: './properties-viewer-wrapper.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PropertiesViewerWrapperComponent implements OnInit, OnChanges {\n\n    node: Node;\n    loading = true;\n\n    @Input()\n    nodeId: string;\n\n    /** Toggles whether the edit button should be shown */\n    @Input()\n    editable;\n\n    /** Toggles whether to display empty values in the card view */\n    @Input()\n    displayEmpty;\n\n    /** Toggles between expanded (ie, full information) and collapsed\n     * (ie, reduced information) in the display\n     */\n    @Input()\n    expanded;\n\n    /** The multi parameter of the underlying material expansion panel, set to true to allow multi accordion to be expanded at the same time */\n    @Input()\n    multi;\n\n    /** Name or configuration of the metadata preset, which defines aspects and their properties */\n    @Input()\n    preset: string | PresetConfig;\n\n    /** Toggles whether the metadata properties should be shown */\n    @Input()\n    displayDefaultProperties;\n\n    /** (optional) shows the given aspect in the expanded  card */\n    @Input()\n    displayAspect: string = null;\n\n    /** Toggles whether or not to enable copy to clipboard action. */\n    @Input()\n    copyToClipboardAction;\n\n    /** Toggles whether or not to enable chips for multivalued properties. */\n    @Input()\n    useChipsForMultiValueProperty;\n\n    @Output()\n    nodeContentLoaded: EventEmitter<Node> = new EventEmitter();\n\n    constructor(private nodesApiService: NodesApiService) { }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes && changes['nodeId'] && changes['nodeId'].currentValue && !changes['nodeId'].isFirstChange()) {\n            this.getNode(changes['nodeId'].currentValue);\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.nodeId) {\n            this.getNode(this.nodeId);\n        }\n    }\n\n    private getNode(nodeId: string) {\n        this.loading = true;\n        this.nodesApiService.getNode(nodeId).subscribe(retrievedNode => {\n            this.node = retrievedNode;\n            this.loading = false;\n            this.nodeContentLoaded.emit(retrievedNode);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetComponent, FormService, LogService, FormFieldOption } from '@alfresco/adf-core';\nimport { FormCloudService } from '../../../services/form-cloud.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'radio-buttons-cloud-widget',\n    templateUrl: './radio-buttons-cloud.widget.html',\n    styleUrls: ['./radio-buttons-cloud.widget.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonsCloudWidgetComponent extends WidgetComponent implements OnInit {\n\n    typeId = 'RadioButtonsCloudWidgetComponent';\n    protected onDestroy$ = new Subject<boolean>();\n\n    constructor(public formService: FormService,\n                private formCloudService: FormCloudService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            this.getValuesFromRestApi();\n        }\n    }\n\n    getValuesFromRestApi() {\n        this.formCloudService.getRestWidgetData(this.field.form.id, this.field.id)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((result: FormFieldOption[]) => {\n                this.field.options = result;\n                this.field.updateForm();\n            }, (err) => this.handleError(err));\n    }\n\n    onOptionClick(optionSelected: any) {\n        this.field.value = optionSelected;\n        this.fieldChanged.emit(this.field);\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isChecked(option: FormFieldOption): boolean {\n        if (this.field.value && typeof this.field.value === 'object') {\n            let id = 'id';\n            let name = 'name';\n            if (this.field.restUrl) {\n                id = this.field.restIdProperty ?? 'id';\n                name = this.field.restLabelProperty ?? 'name';\n            }\n            return this.field.value[id] === option.id || this.field.value[name] === option.name;\n        }\n        return this.field.value === option.id;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { LocalizedDatePipe, ThumbnailService } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-cloud-file-properties-table',\n    templateUrl: './file-properties-table-cloud.component.html',\n    styleUrls: ['./file-properties-table-cloud.component.scss']\n})\nexport class FilePropertiesTableCloudComponent {\n\n    static RETRIEVE_METADATA_OPTION = 'retrieveMetadata';\n\n    @Input()\n    uploadedFiles;\n\n    @Input()\n    hasFile: boolean;\n\n    @Input()\n    selectedNode: Node;\n\n    @Input()\n    field;\n\n    @Input()\n    displayedColumns;\n\n    @Input()\n    mimeTypeIcon;\n\n    @Output()\n    rowClick: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @Output()\n    attachFileClick: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    downloadFile: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @Output()\n    contentModelFileHandler: EventEmitter<any> = new EventEmitter<Node>();\n\n    @Output()\n    removeAttachFile: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private localizedDatePipe: LocalizedDatePipe, private thumbnailService: ThumbnailService) {}\n\n    onRowClicked(file?: Node) {\n        this.rowClick.emit(file);\n    }\n\n    onAttachFileClicked(nodeSelector: any) {\n        this.attachFileClick.emit(nodeSelector);\n    }\n\n    downloadContent(file: Node) {\n        this.downloadFile.emit(file);\n    }\n\n    contentModelFormFileHandler(file?: any) {\n        this.contentModelFileHandler.emit(file);\n    }\n\n    onRemoveAttachFile(file: any) {\n        this.removeAttachFile.emit(file);\n    }\n\n    getIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    getColumnValue(file, displayableCMProperty): string {\n        if (!file.properties[displayableCMProperty.prefixedName]) {\n            const fieldProperty = this.field.params.displayableCMProperties?.find(property => property.name === displayableCMProperty.name);\n            return fieldProperty.defaultValue ? this.checkDateTypeAndTransform(displayableCMProperty.dataType, fieldProperty.defaultValue) : '--' ;\n        }\n        return file.properties[displayableCMProperty.prefixedName] ?\n            this.checkDateTypeAndTransform(displayableCMProperty.dataType, file.properties[displayableCMProperty.prefixedName]) :\n            '--' ;\n    }\n\n    checkDateTypeAndTransform(dataType, value): string {\n        if (dataType === 'd:date') {\n            return this.localizedDatePipe.transform(value);\n        } else if (dataType === 'd:datetime') {\n            return this.localizedDatePipe.transform(value, 'medium');\n        }\n        return value;\n    }\n\n    displayMenuOption(option: string): boolean {\n        return this.field?.params?.menuOptions ? this.field.params.menuOptions[option] : option !== FilePropertiesTableCloudComponent.RETRIEVE_METADATA_OPTION;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { FormCloudComponent } from './components/form-cloud.component';\nimport { FormDefinitionSelectorCloudComponent } from './components/form-definition-selector-cloud.component';\nimport { FormCustomOutcomesComponent } from './components/form-cloud-custom-outcomes.component';\nimport { ContentMetadataModule, ContentNodeSelectorModule } from '@alfresco/adf-content-services';\n\nimport { DateCloudWidgetComponent } from './components/widgets/date/date-cloud.widget';\nimport { DropdownCloudWidgetComponent } from './components/widgets/dropdown/dropdown-cloud.widget';\nimport { GroupCloudWidgetComponent } from './components/widgets/group/group-cloud.widget';\nimport { PeopleCloudWidgetComponent } from './components/widgets/people/people-cloud.widget';\nimport { AttachFileCloudWidgetComponent } from './components/widgets/attach-file/attach-file-cloud-widget.component';\n\nimport { UploadCloudWidgetComponent } from './components/widgets/attach-file/upload-cloud.widget';\nimport { PeopleCloudModule } from '../people/people-cloud.module';\nimport { GroupCloudModule } from '../group/group-cloud.module';\nimport { PropertiesViewerWidgetComponent } from './components/widgets/properties-viewer/properties-viewer.widget';\nimport { PropertiesViewerWrapperComponent } from './components/widgets/properties-viewer/properties-viewer-wrapper/properties-viewer-wrapper.component';\nimport { RadioButtonsCloudWidgetComponent } from './components/widgets/radio-buttons/radio-buttons-cloud.widget';\nimport { FilePropertiesTableCloudComponent } from './components/widgets/attach-file/file-properties-table-cloud.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule,\n        ContentNodeSelectorModule,\n        PeopleCloudModule,\n        GroupCloudModule,\n        ContentMetadataModule\n    ],\n    declarations: [\n        FormCloudComponent,\n        UploadCloudWidgetComponent,\n        FormDefinitionSelectorCloudComponent,\n        FormCustomOutcomesComponent,\n        DropdownCloudWidgetComponent,\n        RadioButtonsCloudWidgetComponent,\n        AttachFileCloudWidgetComponent,\n        DateCloudWidgetComponent,\n        PeopleCloudWidgetComponent,\n        GroupCloudWidgetComponent,\n        PropertiesViewerWrapperComponent,\n        PropertiesViewerWidgetComponent,\n        FilePropertiesTableCloudComponent\n    ],\n    exports: [\n        FormCloudComponent,\n        UploadCloudWidgetComponent,\n        FormDefinitionSelectorCloudComponent,\n        FormCustomOutcomesComponent,\n        DropdownCloudWidgetComponent,\n        RadioButtonsCloudWidgetComponent,\n        AttachFileCloudWidgetComponent,\n        DateCloudWidgetComponent,\n        PeopleCloudWidgetComponent,\n        GroupCloudWidgetComponent,\n        PropertiesViewerWidgetComponent\n    ]\n})\nexport class FormCloudModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '../../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { StartTaskCloudComponent } from './components/start-task-cloud.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GroupCloudModule } from '../../group/group-cloud.module';\nimport { FormCloudModule } from '../../form/form-cloud.module';\nimport { PeopleCloudModule } from '../../people/people-cloud.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        GroupCloudModule,\n        CoreModule,\n        FormCloudModule,\n        PeopleCloudModule\n    ],\n    declarations: [StartTaskCloudComponent],\n    exports: [\n        StartTaskCloudComponent\n    ]\n})\nexport class StartTaskCloudModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, EventEmitter, Output, OnDestroy, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\nimport { takeUntil, concatMap, catchError, finalize } from 'rxjs/operators';\nimport { Subject, of, forkJoin } from 'rxjs';\nimport {\n    CardViewDateItemModel,\n    CardViewItem,\n    CardViewTextItemModel,\n    CardViewBaseItemModel,\n    CardViewArrayItemModel,\n    TranslationService,\n    AppConfigService,\n    UpdateNotification,\n    CardViewUpdateService,\n    CardViewDatetimeItemModel,\n    CardViewArrayItem,\n    CardViewSelectItemModel\n} from '@alfresco/adf-core';\nimport { TaskDetailsCloudModel } from '../../start-task/models/task-details-cloud.model';\nimport { TaskCloudService } from '../../services/task-cloud.service';\n\n@Component({\n    selector: 'adf-cloud-task-header',\n    templateUrl: './task-header-cloud.component.html',\n    styleUrls: ['./task-header-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskHeaderCloudComponent implements OnInit, OnDestroy, OnChanges {\n\n    /** (Required) The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** Show/Hide the task title */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    claim: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task is unclaimed (ie, requeued). */\n    @Output()\n    unclaim: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the given task has errors. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    taskDetails: TaskDetailsCloudModel = {};\n    candidateUsers: CardViewArrayItem[] = [];\n    candidateGroups: CardViewArrayItem[] = [];\n    properties: CardViewItem[];\n    inEdit: boolean = false;\n    parentTaskName: string;\n    dateFormat: string;\n    dateTimeFormat: string;\n    dateLocale: string;\n    displayDateClearAction = false;\n    isLoading = true;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private taskCloudService: TaskCloudService,\n        private translationService: TranslationService,\n        private appConfig: AppConfigService,\n        private cardViewUpdateService: CardViewUpdateService\n    ) {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n        this.dateLocale = this.appConfig.get('dateValues.defaultDateLocale');\n        this.dateTimeFormat = this.appConfig.get('dateValue.defaultDateTimeFormat');\n    }\n\n    ngOnInit() {\n        this.taskCloudService.dataChangesDetected$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n            this.loadTaskDetailsById(this.appName, this.taskId);\n        });\n\n        this.cardViewUpdateService.itemUpdated$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(this.updateTaskDetails.bind(this)\n        );\n    }\n\n    ngOnChanges() {\n        this.taskDetails = {};\n        if ((this.appName || this.appName === '') && this.taskId) {\n            this.loadTaskDetailsById(this.appName, this.taskId);\n        } else {\n            this.error.emit('App Name and Task Id are mandatory');\n        }\n    }\n\n    loadTaskDetailsById(appName: string, taskId: string) {\n        this.isLoading = true;\n        this.taskCloudService.getTaskById(appName, taskId).pipe(\n            concatMap((task) =>\n                forkJoin(\n                    of(task),\n                    this.taskCloudService.getCandidateUsers(this.appName, this.taskId),\n                    this.taskCloudService.getCandidateGroups(this.appName, this.taskId)\n                )\n            ),\n            finalize(() => (this.isLoading = false))\n        ).subscribe(([taskDetails, candidateUsers, candidateGroups]) => {\n                this.taskDetails = taskDetails;\n                this.candidateGroups = candidateGroups.map((user) => <CardViewArrayItem> { icon: 'group', value: user });\n                this.candidateUsers = candidateUsers.map((group) => <CardViewArrayItem> { icon: 'person', value: group });\n                if (this.taskDetails.parentTaskId) {\n                    this.loadParentName(`${this.taskDetails.parentTaskId}`);\n                } else {\n                    this.refreshData();\n                }\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    private initDefaultProperties() {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.ASSIGNEE',\n                    value: this.taskDetails.assignee,\n                    key: 'assignee',\n                    clickable: this.isAssigneePropertyClickable(),\n                    default: this.translationService.instant('ADF_CLOUD_TASK_HEADER.PROPERTIES.ASSIGNEE_DEFAULT'),\n                    icon: 'create'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.STATUS',\n                    value: this.taskDetails.status,\n                    key: 'status'\n                }\n            ),\n            new CardViewSelectItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.PRIORITY',\n                    value: this.taskDetails.priority.toString(),\n                    key: 'priority',\n                    editable: true,\n                    displayNoneOption: false,\n                    options$: of(this.taskCloudService.priorities)\n                }\n            ),\n            new CardViewDatetimeItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.DUE_DATE',\n                    value: this.taskDetails.dueDate,\n                    key: 'dueDate',\n                    default: this.translationService.instant('ADF_CLOUD_TASK_HEADER.PROPERTIES.DUE_DATE_DEFAULT'),\n                    editable: true,\n                    format: this.dateTimeFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.CATEGORY',\n                    value: this.taskDetails.category,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_CLOUD_TASK_HEADER.PROPERTIES.CATEGORY_DEFAULT')\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.CREATED',\n                    value: this.taskDetails.createdDate,\n                    key: 'created',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.PARENT_NAME',\n                    value: this.parentTaskName,\n                    default: this.translationService.instant('ADF_CLOUD_TASK_HEADER.PROPERTIES.PARENT_NAME_DEFAULT'),\n                    key: 'parentName',\n                    clickable: true\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.PARENT_TASK_ID',\n                    value: this.taskDetails.parentTaskId,\n                    key: 'parentTaskId',\n                    clickable: true\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.END_DATE',\n                    value: this.taskDetails.completedDate,\n                    key: 'endDate',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.ID',\n                    value: this.taskDetails.id,\n                    key: 'id'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.DESCRIPTION',\n                    value: this.taskDetails.description,\n                    key: 'description',\n                    default: this.translationService.instant('ADF_CLOUD_TASK_HEADER.PROPERTIES.DESCRIPTION_DEFAULT'),\n                    multiline: true,\n                    editable: true\n                }\n            ),\n            new CardViewArrayItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_USERS',\n                    value: of(this.candidateUsers),\n                    key: 'candidateUsers',\n                    icon: 'edit',\n                    clickable: false,\n                    default: this.translationService.instant('ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_USERS_DEFAULT'),\n                    noOfItemsToDisplay: 2\n                }\n            ),\n            new CardViewArrayItemModel(\n                {\n                    label: 'ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_GROUPS',\n                    value: of(this.candidateGroups),\n                    key: 'candidateGroups',\n                    icon: 'edit',\n                    clickable: false,\n                    default: this.translationService.instant('ADF_CLOUD_TASK_HEADER.PROPERTIES.CANDIDATE_GROUPS_DEFAULT'),\n                    noOfItemsToDisplay: 2\n                }\n            )\n        ];\n    }\n\n    /**\n     * Refresh the card data\n     */\n    refreshData() {\n        if (this.taskDetails) {\n            const defaultProperties = this.initDefaultProperties();\n            const filteredProperties: string[] = this.appConfig.get('adf-cloud-task-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    /**\n     * Save a task detail and update it after a successful response\n     *\n     * @param updateNotification\n     */\n    private updateTaskDetails(updateNotification: UpdateNotification) {\n        this.taskCloudService.updateTask(this.appName, this.taskId, updateNotification.changed)\n            .pipe(catchError(() => {\n                this.cardViewUpdateService.updateElement(updateNotification.target);\n                return of(null);\n            }))\n            .subscribe((taskDetails) => {\n                    if (taskDetails) {\n                        this.taskDetails = taskDetails;\n                    }\n                });\n    }\n\n    private loadParentName(taskId: string) {\n        this.taskCloudService.getTaskById(this.appName, taskId)\n            .subscribe(\n                (taskDetails) => {\n                    this.parentTaskName = taskDetails.name;\n                    this.refreshData();\n                }\n            );\n    }\n\n    isCompleted(): boolean {\n        return this.taskDetails && this.taskDetails.status === 'COMPLETED';\n    }\n\n    hasAssignee(): boolean {\n        return !!this.taskDetails.assignee ? true : false;\n    }\n\n    isTaskValid(): boolean {\n        return (this.appName || this.appName === '') && !!this.taskId;\n    }\n\n    isTaskAssigned(): boolean {\n        return this.taskDetails.assignee !== undefined;\n    }\n\n    isTaskEditable(): boolean {\n        return this.taskCloudService.isTaskEditable(this.taskDetails);\n    }\n\n    /**\n     * as per [ACA-3960] it required an empty array argument for now\n     * Empty array will be replaced with candidateGroups in feature\n     */\n    isAssigneePropertyClickable(): boolean {\n        return this.taskCloudService.isAssigneePropertyClickable(this.taskDetails, this.candidateUsers, []);\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { TaskHeaderCloudComponent } from './components/task-header-cloud.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        TaskHeaderCloudComponent\n    ],\n    exports: [\n        TaskHeaderCloudComponent\n    ]\n})\nexport class TaskHeaderCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Directive, Input, HostListener, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TaskCloudService } from '../services/task-cloud.service';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[adf-cloud-complete-task]'\n})\nexport class CompleteTaskDirective implements OnInit {\n\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** (Required) The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /** Emitted when the task is completed. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task cannot be completed. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    invalidParams: string[] = [];\n\n    constructor(private taskListService: TaskCloudService) {}\n\n    ngOnInit() {\n        this.validateInputs();\n    }\n\n    validateInputs() {\n\n        if (!this.isTaskValid()) {\n            this.invalidParams.push('taskId');\n        }\n        if (!this.isAppValid()) {\n            this.invalidParams.push('appName');\n        }\n        if (this.invalidParams.length) {\n            throw new Error(`Attribute ${this.invalidParams.join(', ')} is required`);\n        }\n    }\n\n    isTaskValid(): boolean {\n        return this.taskId && this.taskId.length > 0;\n    }\n\n    isAppValid(): boolean {\n        return !!this.appName || this.appName === '';\n    }\n\n    @HostListener('click')\n    async onClick() {\n        try {\n            const result = await this.taskListService.completeTask(this.appName, this.taskId).toPromise();\n            if (result) {\n                this.success.emit(result);\n            }\n        } catch (error) {\n            this.error.emit(error);\n        }\n\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Directive, Input, HostListener, Output, EventEmitter, OnInit } from '@angular/core';\nimport { IdentityUserService } from '@alfresco/adf-core';\nimport { TaskCloudService } from '../services/task-cloud.service';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[adf-cloud-claim-task]'\n})\nexport class ClaimTaskCloudDirective implements OnInit {\n\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** (Required) The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /** Emitted when the task is completed. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task cannot be completed. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    invalidParams: string[] = [];\n\n    constructor(\n        private taskListService: TaskCloudService,\n        private identityUserService: IdentityUserService) { }\n\n    ngOnInit() {\n        this.validateInputs();\n    }\n\n    validateInputs() {\n\n        if (!this.isTaskValid()) {\n            this.invalidParams.push('taskId');\n        }\n        if (!this.isAppValid()) {\n            this.invalidParams.push('appName');\n        }\n        if (this.invalidParams.length) {\n            throw new Error(`Attribute ${this.invalidParams.join(', ')} is required`);\n        }\n    }\n\n    isTaskValid(): boolean {\n        return this.taskId && this.taskId.length > 0;\n    }\n\n    isAppValid(): boolean {\n        return !!this.appName || this.appName === '';\n    }\n\n    @HostListener('click')\n    async onClick() {\n        try {\n            await this.claimTask();\n        } catch (error) {\n            this.error.emit(error);\n        }\n\n    }\n\n    private async claimTask() {\n        const currentUser: string = this.identityUserService.getCurrentUserInfo().username;\n        try {\n            const result = await this.taskListService.claimTask(this.appName, this.taskId, currentUser).toPromise();\n            if (result) {\n                this.success.emit(result);\n            }\n        } catch (error) {\n            this.error.emit(error);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Directive, Input, HostListener, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TaskCloudService } from '../services/task-cloud.service';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[adf-cloud-unclaim-task]'\n})\nexport class UnClaimTaskCloudDirective implements OnInit {\n\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** (Required) The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /** Emitted when the task is completed. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task cannot be completed. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    invalidParams: string[] = [];\n\n    constructor(\n        private taskListService: TaskCloudService) { }\n\n    ngOnInit() {\n        this.validateInputs();\n    }\n\n    validateInputs() {\n\n        if (!this.isTaskValid()) {\n            this.invalidParams.push('taskId');\n        }\n        if (!this.isAppValid()) {\n            this.invalidParams.push('appName');\n        }\n        if (this.invalidParams.length) {\n            throw new Error(`Attribute ${this.invalidParams.join(', ')} is required`);\n        }\n    }\n\n    isTaskValid(): boolean {\n        return this.taskId && this.taskId.length > 0;\n    }\n\n    isAppValid(): boolean {\n        return !!this.appName || this.appName === '';\n    }\n\n    @HostListener('click')\n    async onClick() {\n        try {\n            await this.taskListService.unclaimTask(this.appName, this.taskId).toPromise();\n            this.success.emit(this.taskId);\n        } catch (error) {\n            this.error.emit(error);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CompleteTaskDirective } from './complete-task.directive';\nimport { ClaimTaskCloudDirective } from './claim-task-cloud.directive';\nimport { UnClaimTaskCloudDirective } from './unclaim-task-cloud.directive';\n\n@NgModule({\n    declarations: [\n        CompleteTaskDirective,\n        ClaimTaskCloudDirective,\n        UnClaimTaskCloudDirective\n    ],\n    exports: [\n        CompleteTaskDirective,\n        ClaimTaskCloudDirective,\n        UnClaimTaskCloudDirective\n    ]\n})\nexport class TaskDirectiveModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, OnChanges,\n    Output, SimpleChanges, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { TaskDetailsCloudModel } from '../../start-task/models/task-details-cloud.model';\nimport { TaskCloudService } from '../../services/task-cloud.service';\nimport { FormRenderingService, FormModel, ContentLinkModel } from '@alfresco/adf-core';\nimport { AttachFileCloudWidgetComponent } from '../../../form/components/widgets/attach-file/attach-file-cloud-widget.component';\nimport { DropdownCloudWidgetComponent } from '../../../form/components/widgets/dropdown/dropdown-cloud.widget';\nimport { DateCloudWidgetComponent } from '../../../form/components/widgets/date/date-cloud.widget';\n\n@Component({\n    selector: 'adf-cloud-task-form',\n    templateUrl: './task-form-cloud.component.html',\n    styleUrls: ['./task-form-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskFormCloudComponent implements OnInit, OnChanges {\n\n    /** App id to fetch corresponding form and values. */\n    @Input()\n    appName: string = '';\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Toggle rendering of the form title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggle rendering of the `Refresh` button. */\n    @Input()\n    showRefreshButton = false;\n\n    /** Toggle rendering of the `Validation` icon. */\n    @Input()\n    showValidationIcon = true;\n\n    /** Toggle rendering of the `Cancel` button. */\n    @Input()\n    showCancelButton = true;\n\n    /** Toggle rendering of the `Complete` button. */\n    @Input()\n    showCompleteButton = true;\n\n    /** Toggle readonly state of the task. */\n    @Input()\n    readOnly = false;\n\n    /** Emitted when the form is saved. */\n    @Output()\n    formSaved = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted = new EventEmitter<FormModel>();\n\n    /** Emitted when the task is completed. */\n    @Output()\n    taskCompleted = new EventEmitter<string>();\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    taskClaimed = new EventEmitter<string>();\n\n    /** Emitted when the task is unclaimed. */\n    @Output()\n    taskUnclaimed = new EventEmitter<string>();\n\n    /** Emitted when the cancel button is clicked. */\n    @Output()\n    cancelClick = new EventEmitter<string>();\n\n    /** Emitted when any error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter();\n\n    taskDetails: TaskDetailsCloudModel;\n\n    candidateUsers: string[] = [];\n    candidateGroups: string[] = [];\n\n    loading: boolean = false;\n\n    constructor(\n        private taskCloudService: TaskCloudService,\n        private formRenderingService: FormRenderingService) {\n        this.formRenderingService.setComponentTypeResolver('upload', () => AttachFileCloudWidgetComponent, true);\n        this.formRenderingService.setComponentTypeResolver('dropdown', () => DropdownCloudWidgetComponent, true);\n        this.formRenderingService.setComponentTypeResolver('date', () => DateCloudWidgetComponent, true);\n    }\n\n    ngOnInit() {\n        if (this.appName === '' && this.taskId) {\n            this.loadTask();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        if (appName && (appName.currentValue !== appName.previousValue) && this.taskId) {\n            this.loadTask();\n            return;\n        }\n\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue && this.appName) {\n            this.loadTask();\n            return;\n        }\n    }\n\n    loadTask() {\n        this.loading = true;\n\n        this.taskCloudService\n            .getTaskById(this.appName, this.taskId)\n            .subscribe(details => {\n                this.taskDetails = details;\n                this.loading = false;\n            });\n\n        this.taskCloudService\n            .getCandidateUsers(this.appName, this.taskId)\n            .subscribe(users => this.candidateUsers = users || []);\n\n        this.taskCloudService\n            .getCandidateGroups(this.appName, this.taskId)\n            .subscribe(groups => this.candidateGroups = groups || []);\n    }\n\n    hasForm(): boolean {\n        return this.taskDetails && !!this.taskDetails.formKey;\n    }\n\n    canCompleteTask(): boolean {\n        return this.showCompleteButton && !this.readOnly && this.taskCloudService.canCompleteTask(this.taskDetails);\n    }\n\n    canClaimTask(): boolean {\n        return !this.readOnly && this.taskCloudService.canClaimTask(this.taskDetails);\n    }\n\n    hasCandidateUsers(): boolean {\n        return this.candidateUsers.length !== 0;\n    }\n\n    hasCandidateGroups(): boolean {\n        return this.candidateGroups.length !== 0;\n    }\n\n    hasCandidateUsersOrGroups(): boolean {\n        let hasCandidateUsersOrGroups = false;\n\n        if (this.taskDetails?.status === 'ASSIGNED') {\n            hasCandidateUsersOrGroups = this.hasCandidateUsers() || this.hasCandidateGroups();\n        }\n        return hasCandidateUsersOrGroups;\n    }\n\n    canUnclaimTask(): boolean {\n        return !this.readOnly && this.taskCloudService.canUnclaimTask(this.taskDetails);\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly || !this.taskCloudService.canCompleteTask(this.taskDetails);\n    }\n\n    onCompleteTask() {\n        this.loadTask();\n        this.taskCompleted.emit(this.taskId);\n    }\n\n    onClaimTask() {\n        this.loadTask();\n        this.taskClaimed.emit(this.taskId);\n    }\n\n    onUnclaimTask() {\n        this.loadTask();\n        this.taskUnclaimed.emit(this.taskId);\n    }\n\n    onCancelClick() {\n        this.cancelClick.emit(this.taskId);\n    }\n\n    onFormSaved(form: FormModel) {\n        this.formSaved.emit(form);\n    }\n\n    onFormCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n        this.taskCompleted.emit(this.taskId);\n    }\n\n    onError(data: any) {\n        this.error.emit(data);\n    }\n\n    onFormContentClicked(content: ContentLinkModel) {\n        this.formContentClicked.emit(content);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../../material.module';\nimport { FormCloudModule } from '../../form/form-cloud.module';\nimport { TaskDirectiveModule } from '../directives/task-directive.module';\n\nimport { TaskFormCloudComponent } from './components/task-form-cloud.component';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        CommonModule,\n        MaterialModule,\n        FormCloudModule,\n        TaskDirectiveModule,\n        FlexLayoutModule\n    ],\n    declarations: [\n        TaskFormCloudComponent\n    ],\n    exports: [\n        TaskFormCloudComponent\n    ]\n})\nexport class TaskFormModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { TaskListCloudModule } from './task-list/task-list-cloud.module';\nimport { TaskFiltersCloudModule } from './task-filters/task-filters-cloud.module';\nimport { StartTaskCloudModule } from './start-task/start-task-cloud.module';\nimport { TaskHeaderCloudModule } from './task-header/task-header-cloud.module';\nimport { TaskDirectiveModule } from './directives/task-directive.module';\nimport { TaskFormModule } from './task-form/task-form.module';\n\n@NgModule({\n    imports: [\n        TaskListCloudModule,\n        TaskFiltersCloudModule,\n        StartTaskCloudModule,\n        TaskHeaderCloudModule,\n        TaskDirectiveModule,\n        TaskFormModule\n    ],\n    exports: [\n        TaskListCloudModule,\n        TaskFiltersCloudModule,\n        StartTaskCloudModule,\n        TaskHeaderCloudModule,\n        TaskDirectiveModule,\n        TaskFormModule\n    ]\n})\nexport class TaskCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DateCloudFilterType } from '../../../models/date-cloud-filter.model';\nimport { DateRangeFilterService } from '../../../common/date-range-filter/date-range-filter.service';\nimport { ComponentSelectionMode } from '../../../types';\n\nexport class ProcessFilterCloudModel {\n\n    private dateRangeFilterService = new DateRangeFilterService();\n\n    id: string;\n    name: string;\n    key: string;\n    icon: string;\n    index: number;\n    appName: string;\n    appVersion?: number | number[];\n    processName: string;\n    processInstanceId: string;\n    initiator: string;\n    status: string;\n    sort: string;\n    order: string;\n    processDefinitionId: string;\n    processDefinitionName?: string;\n    processDefinitionKey: string;\n    lastModified: Date;\n    lastModifiedTo: Date;\n    lastModifiedFrom: Date;\n    startedDate: Date;\n    completedDateType: DateCloudFilterType;\n    startedDateType: DateCloudFilterType;\n    suspendedDateType: DateCloudFilterType;\n    completedDate: Date;\n\n    private _completedFrom: string;\n    private _completedTo: string;\n    private _startFrom: string;\n    private _startTo: string;\n    private _suspendedFrom: string;\n    private _suspendedTo: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || Math.random().toString(36).substring(2, 9);\n            this.name = obj.name || null;\n            this.key = obj.key || null;\n            this.icon = obj.icon || null;\n            this.index = obj.index || null;\n            this.appName = obj.appName || obj.appName === '' ? obj.appName : null;\n            this.appVersion = obj.appVersion || null;\n\n            if (obj.appVersionMultiple && Array.isArray(obj.appVersionMultiple)) {\n                this.appVersion = obj.appVersionMultiple;\n            }\n\n            this.processInstanceId = obj.processInstanceId || null;\n            this.processName = obj.processName || null;\n            this.initiator = obj.initiator || null;\n            this.status = obj.status || null;\n            this.sort = obj.sort || null;\n            this.order = obj.order || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processDefinitionName = obj.processDefinitionName || null;\n            this.processDefinitionKey = obj.processDefinitionKey || null;\n            this.lastModified = obj.lastModified || null;\n            this.lastModifiedTo = obj.lastModifiedTo || null;\n            this.lastModifiedFrom = obj.lastModifiedFrom || null;\n            this.startedDate = obj.startedDate || null;\n            this.startFrom = obj._startFrom || null;\n            this.startTo = obj._startTo || null;\n            this.completedDateType = obj.completedDateType || null;\n            this.startedDateType = obj.startedDateType || null;\n            this.suspendedDateType = obj.suspendedDateType || null;\n            this.completedFrom = obj._completedFrom || null;\n            this.completedTo = obj._completedTo || null;\n            this.completedDate = obj.completedDate || null;\n            this._suspendedFrom = obj._suspendedFrom || null;\n            this._suspendedTo = obj._suspendedTo || null;\n        }\n    }\n\n    set completedFrom(completedFrom: string) {\n        this._completedFrom = completedFrom;\n    }\n\n    set completedTo(completedTo: string) {\n        this._completedTo = completedTo;\n    }\n\n    get completedFrom() {\n        if (this.isDateRangeType(this.completedDateType)) {\n            return this._completedFrom;\n        }\n        return this.getStartDate(this.completedDateType);\n    }\n\n    get completedTo() {\n        if (this.isDateRangeType(this.completedDateType)) {\n            return this._completedTo;\n        }\n        return this.getEndDate(this.completedDateType);\n    }\n\n    set startFrom(startFrom: string) {\n        this._startFrom = startFrom;\n    }\n\n    set startTo(startTo: string) {\n        this._startTo = startTo;\n    }\n\n    get startFrom() {\n        if (this.isDateRangeType(this.startedDateType)) {\n            return this._startFrom;\n        }\n        return this.getStartDate(this.startedDateType);\n    }\n\n    get startTo() {\n        if (this.isDateRangeType(this.startedDateType)) {\n            return this._startTo;\n        }\n        return this.getEndDate(this.startedDateType);\n    }\n\n    set suspendedFrom(suspendedFrom: string) {\n        this._suspendedFrom = suspendedFrom;\n    }\n\n    set suspendedTo(suspendedTo: string) {\n        this._suspendedTo = suspendedTo;\n    }\n\n    get suspendedFrom(): string {\n        if (this.isDateRangeType(this.suspendedDateType)) {\n            return this._suspendedFrom;\n        }\n        return this.getStartDate(this.suspendedDateType);\n    }\n\n    get suspendedTo(): string {\n        if (this.isDateRangeType(this.suspendedDateType)) {\n            return this._suspendedTo;\n        }\n        return this.getEndDate(this.suspendedDateType);\n    }\n\n    private getStartDate(key: DateCloudFilterType) {\n        return this.dateRangeFilterService.getDateRange(key).startDate;\n    }\n\n    private getEndDate(key: DateCloudFilterType) {\n        return this.dateRangeFilterService.getDateRange(key).endDate;\n    }\n\n    private isDateRangeType(type: DateCloudFilterType) {\n        return !!this.dateRangeFilterService.isDateRangeType(type);\n    }\n}\n\nexport interface ProcessFilterAction {\n    actionType?: string;\n    icon?: string;\n    tooltip?: string;\n    filter?: ProcessFilterCloudModel;\n}\n\nexport interface ProcessFilterOptions {\n    label?: string;\n    value?: string | object;\n}\n\nexport interface ProcessFilterProperties {\n    label?: string;\n    type?: string;\n    value?: any;\n    key?: string;\n    attributes?: { [key: string]: string; };\n    options?: ProcessFilterOptions[];\n    dateFilterOptions?: DateCloudFilterType[];\n    selectionMode?: ComponentSelectionMode;\n}\n\nexport interface ProcessSortFilterProperty {\n    label: string;\n    value: string | object;\n    key: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdentityUserService } from '@alfresco/adf-core';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, of, BehaviorSubject, throwError } from 'rxjs';\nimport { ProcessFilterCloudModel } from '../models/process-filter-cloud.model';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { PROCESS_FILTERS_SERVICE_TOKEN } from '../../../services/cloud-token.service';\nimport { PreferenceCloudServiceInterface } from '../../../services/preference-cloud.interface';\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessFilterCloudService {\n\n    private filtersSubject: BehaviorSubject<ProcessFilterCloudModel[]>;\n    filters$: Observable<ProcessFilterCloudModel[]>;\n\n    constructor(\n        @Inject(PROCESS_FILTERS_SERVICE_TOKEN) public preferenceService: PreferenceCloudServiceInterface,\n        private identityUserService: IdentityUserService) {\n        this.filtersSubject = new BehaviorSubject([]);\n        this.filters$ = this.filtersSubject.asObservable();\n    }\n\n    readQueryParams(obj: Object): ProcessFilterCloudModel {\n        const model = Object.assign({}, obj) as ProcessFilterCloudModel;\n\n        if (obj.hasOwnProperty('appVersion') && obj['appVersion']) {\n            if (typeof obj['appVersion'] === 'string') {\n                model.appVersion = obj['appVersion'].split(',').map(str => parseInt(str, 10));\n            }\n        }\n\n        if (obj.hasOwnProperty('lastModifiedFrom')) {\n            model.lastModifiedFrom = new Date(parseInt(obj['lastModifiedFrom'], 10));\n        }\n\n        if (obj.hasOwnProperty('lastModifiedTo')) {\n            model.lastModifiedTo = new Date(parseInt(obj['lastModifiedTo'], 10));\n        }\n\n        return model;\n    }\n\n    writeQueryParams(value: Object, filterProperties: string[], appName?: string, id?: string): Object {\n        value = value || {};\n        const result = {\n            appName: appName || value['appName'],\n            id: id || value['id']\n        };\n\n        for (const prop of filterProperties) {\n            if (prop === 'appVersionMultiple') {\n                const versions = value['appVersion'];\n\n                if (Array.isArray(versions) && versions.length > 0) {\n                    result['appVersion'] = versions.join(',');\n                }\n            } else if (prop === 'lastModified') {\n                if (value['lastModifiedFrom']) {\n                    result['lastModifiedFrom'] = value['lastModifiedFrom'].valueOf();\n                }\n\n                if (value['lastModifiedTo']) {\n                    result['lastModifiedTo'] = value['lastModifiedTo'].valueOf();\n                }\n\n            } else if (value.hasOwnProperty(prop)) {\n                result[prop] = value[prop];\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates and returns the default process instance filters for a app.\n     * @param appName Name of the target app\n     * @returns Observable of default process instance filters just created or created filters\n     */\n    private createDefaultFilters(appName: string) {\n        const key: string = this.prepareKey(appName);\n        this.preferenceService.getPreferences(appName, key).pipe(\n            switchMap((response: any) => {\n                const preferences = (response && response.list && response.list.entries) ? response.list.entries : [];\n                if (!this.hasPreferences(preferences)) {\n                    return this.createProcessFilters(appName, key, this.defaultProcessFilters(appName));\n                } else if (!this.hasProcessFilters(preferences, key)) {\n                    return this.createProcessFilters(appName, key, this.defaultProcessFilters(appName));\n                } else {\n                    return of(this.findFiltersByKeyInPreferences(preferences, key));\n                }\n            }),\n            catchError((err) => this.handleProcessError(err))\n        ).subscribe((filters) => {\n            this.addFiltersToStream(filters);\n        });\n    }\n\n    /**\n     * Gets all process instance filters for a process app.\n     * @param appName Name of the target app\n     * @returns Observable of process filters details\n     */\n    getProcessFilters(appName: string): Observable<ProcessFilterCloudModel[]> {\n        this.createDefaultFilters(appName);\n        return this.filters$;\n    }\n\n    /**\n     * Get process instance filter for given filter id\n     * @param appName Name of the target app\n     * @param id Id of the target process instance filter\n     * @returns Observable of process instance filter details\n     */\n    getFilterById(appName: string, id: string): Observable<ProcessFilterCloudModel> {\n        const key: string = this.prepareKey(appName);\n        return this.getProcessFiltersByKey(appName, key).pipe(\n            switchMap((filters: ProcessFilterCloudModel[]) => {\n                if (filters && filters.length === 0) {\n                    return this.createProcessFilters(appName, key, this.defaultProcessFilters(appName));\n                } else {\n                    return of(filters);\n                }\n            }),\n            map((filters: ProcessFilterCloudModel[]) => {\n                return filters.filter((filter: ProcessFilterCloudModel) => {\n                    return filter.id === id;\n                })[0];\n            }),\n            catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Adds a new process instance filter\n     * @param filter The new filter to add\n     * @returns Observable of process instance filters with newly added filter\n     */\n    addFilter(newFilter: ProcessFilterCloudModel): Observable<ProcessFilterCloudModel[]> {\n        const { appName, name } = newFilter;\n        const key: string = this.prepareKey(appName);\n\n        return this.getProcessFiltersByKey(appName, key).pipe(\n            switchMap((filters: ProcessFilterCloudModel[]) => {\n                if (filters && filters.length === 0) {\n                    return this.createProcessFilters(appName, key, [newFilter]);\n                } else {\n                    const index = filters.findIndex(filter => filter.name === name);\n                    if (index >= 0) {\n                        filters.splice(index, 1);\n                    }\n\n                    filters.push(newFilter);\n                    return this.preferenceService.updatePreference(appName, key, filters);\n                }\n            }),\n            map((filters: ProcessFilterCloudModel[]) => {\n                this.addFiltersToStream(filters);\n                return filters;\n            }),\n            catchError((err) => this.handleProcessError(err))\n        );\n    }\n\n    /**\n     *  Update process instance filter\n     * @param filter The new filter to update\n     * @returns Observable of process instance filters with updated filter\n     */\n    updateFilter(updatedFilter: ProcessFilterCloudModel): Observable<ProcessFilterCloudModel[]> {\n        const key: string = this.prepareKey(updatedFilter.appName);\n        return this.getProcessFiltersByKey(updatedFilter.appName, key).pipe(\n            switchMap((filters: any) => {\n                if (filters && filters.length === 0) {\n                    return this.createProcessFilters(updatedFilter.appName, key, [updatedFilter]);\n                } else {\n                    const itemIndex = filters.findIndex((filter: ProcessFilterCloudModel) => filter.id === updatedFilter.id);\n                    filters[itemIndex] = updatedFilter;\n                    return this.updateProcessFilters(updatedFilter.appName, key, filters);\n                }\n            }),\n            map((updatedFilters: ProcessFilterCloudModel[]) => {\n                this.addFiltersToStream(updatedFilters);\n                return updatedFilters;\n            }),\n            catchError((err) => this.handleProcessError(err))\n        );\n    }\n\n    /**\n     *  Delete process instance filter\n     * @param filter The new filter to delete\n     * @returns Observable of process instance filters without deleted filter\n     */\n    deleteFilter(deletedFilter: ProcessFilterCloudModel): Observable<ProcessFilterCloudModel[]> {\n        const key = this.prepareKey(deletedFilter.appName);\n\n        return this.getProcessFiltersByKey(deletedFilter.appName, key).pipe(\n            switchMap(filters => {\n                if (filters && filters.length > 0) {\n                    filters = filters.filter(filter => filter.id !== deletedFilter.id);\n                    return this.updateProcessFilters(deletedFilter.appName, key, filters);\n                } else {\n                    return of([]);\n                }\n            }),\n            map((filters: ProcessFilterCloudModel[]) => {\n                this.addFiltersToStream(filters);\n                return filters;\n            }),\n            catchError((err) => this.handleProcessError(err))\n        );\n    }\n\n    /**\n     * Checks if given filter is a default filter\n     * @param filterName Name of the target process filter\n     * @returns Boolean value for whether the filter is a default filter\n     */\n    isDefaultFilter(filterName: string): boolean {\n        const defaultFilters = this.defaultProcessFilters();\n        return defaultFilters.findIndex((filter) => filterName === filter.name) !== -1;\n    }\n\n    /**\n     * Checks user preference are empty or not\n     * @param preferences User preferences of the target app\n     * @returns Boolean value if the preferences are not empty\n     */\n    private hasPreferences(preferences: any): boolean {\n        return preferences && preferences.length > 0;\n    }\n\n    /**\n     * Checks for process instance filters in given user preferences\n     * @param preferences User preferences of the target app\n     * @param key Key of the process instance filters\n     * @param filters Details of create filter\n     * @returns Boolean value if the preference has process instance filters\n     */\n    private hasProcessFilters(preferences: any, key: string): boolean {\n        const filters = preferences.find((filter: any) => { return filter.entry.key === key; });\n        return (filters && filters.entry) ? JSON.parse(filters.entry.value).length > 0 : false;\n    }\n\n    /**\n     * Calls create preference api to create process instance filters\n     * @param appName Name of the target app\n     * @param key Key of the process instance filters\n     * @param filters Details of new process instance filter\n     * @returns Observable of created process instance filters\n     */\n    private createProcessFilters(appName: string, key: string, filters: ProcessFilterCloudModel[]): Observable<ProcessFilterCloudModel[]> {\n        return this.preferenceService.createPreference(appName, key, filters);\n    }\n\n    /**\n     * Calls get preference api to get process instance filter by preference key\n     * @param appName Name of the target app\n     * @param key Key of the process instance filters\n     * @returns Observable of process instance filters\n     */\n    private getProcessFiltersByKey(appName: string, key: string): Observable<ProcessFilterCloudModel[]> {\n        return this.preferenceService.getPreferenceByKey(appName, key);\n    }\n\n    /**\n     * Calls update preference api to update process instance filter\n     * @param appName Name of the target app\n     * @param key Key of the process instance filters\n     * @param filters Details of update filter\n     * @returns Observable of updated process instance filters\n     */\n    private updateProcessFilters(appName: string, key: string, filters: ProcessFilterCloudModel[]): Observable<ProcessFilterCloudModel[]> {\n        return this.preferenceService.updatePreference(appName, key, filters);\n    }\n\n    /**\n     * Creates a uniq key with appName and username\n     * @param appName Name of the target app\n     * @returns String of process instance filters preference key\n     */\n    private prepareKey(appName: string): string {\n        const user = this.identityUserService.getCurrentUserInfo();\n        return `process-filters-${appName}-${user.username}`;\n    }\n\n    /**\n     * Finds and returns the process instance filters from preferences\n     * @returns Array of ProcessFilterCloudModel\n     * @param preferences\n     * @param key\n     */\n    private findFiltersByKeyInPreferences(preferences: any, key: string): ProcessFilterCloudModel[] {\n        const result = preferences.find((filter: any) => { return filter.entry.key === key; });\n        return result && result.entry ? JSON.parse(result.entry.value) : [];\n    }\n\n    private addFiltersToStream(filters: ProcessFilterCloudModel[]) {\n        this.filtersSubject.next(filters);\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n    /**\n     * Creates and returns the default filters for a process app.\n     * @param appName Name of the target app\n     * @returns Array of ProcessFilterCloudModel\n     */\n    private defaultProcessFilters(appName?: string): ProcessFilterCloudModel[] {\n        return [\n            new ProcessFilterCloudModel({\n                name: 'ADF_CLOUD_PROCESS_FILTERS.RUNNING_PROCESSES',\n                icon: 'inbox',\n                key: 'running-processes',\n                appName,\n                sort: 'startDate',\n                status: 'RUNNING',\n                order: 'DESC'\n            }),\n            new ProcessFilterCloudModel({\n                name: 'ADF_CLOUD_PROCESS_FILTERS.COMPLETED_PROCESSES',\n                icon: 'done',\n                key: 'completed-processes',\n                appName,\n                sort: 'startDate',\n                status: 'COMPLETED',\n                order: 'DESC'\n            }),\n            new ProcessFilterCloudModel({\n                name: 'ADF_CLOUD_PROCESS_FILTERS.ALL_PROCESSES',\n                key: 'all-processes',\n                icon: 'adjust',\n                appName,\n                sort: 'startDate',\n                status: '',\n                order: 'DESC'\n            })\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ProcessFilterCloudService } from '../services/process-filter-cloud.service';\nimport { ProcessFilterCloudModel } from '../models/process-filter-cloud.model';\nimport { TranslationService } from '@alfresco/adf-core';\nimport { FilterParamsModel } from '../../../task/task-filters/models/filter-cloud.model';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-cloud-process-filters',\n    templateUrl: './process-filters-cloud.component.html',\n    styleUrls: ['./process-filters-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessFiltersCloudComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** (required) The application name */\n    @Input()\n    appName: string = '';\n\n    /** (optional) The filter to be selected by default */\n    @Input()\n    filterParam: FilterParamsModel;\n\n    /** (optional) Toggles showing an icon by the side of each filter */\n    @Input()\n    showIcons: boolean = false;\n\n    /** Emitted when a filter is being selected based on the filterParam input. */\n    @Output()\n    filterSelected = new EventEmitter<ProcessFilterCloudModel>();\n\n    /** Emitted when a filter is being clicked from the UI. */\n    @Output()\n    filterClicked = new EventEmitter<ProcessFilterCloudModel>();\n\n    /** Emitted when filters are loaded successfully */\n    @Output()\n    success = new EventEmitter<any>();\n\n    /** Emitted when any error occurs while loading the filters */\n    @Output()\n    error = new EventEmitter<any>();\n\n    filters$: Observable<ProcessFilterCloudModel[]>;\n\n    currentFilter: ProcessFilterCloudModel;\n\n    filters: ProcessFilterCloudModel [] = [];\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private processFilterCloudService: ProcessFilterCloudService,\n        private translationService: TranslationService ) { }\n\n    ngOnInit() {\n        if (this.appName === '') {\n            this.getFilters(this.appName);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        const filter = changes['filterParam'];\n        if (appName && appName.currentValue) {\n            this.getFilters(appName.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectFilterAndEmit(filter.currentValue);\n        }\n    }\n\n    /**\n     * Fetch the filter list based on appName\n     */\n    getFilters(appName: string) {\n        this.filters$ = this.processFilterCloudService.getProcessFilters(appName);\n\n        this.filters$.pipe(takeUntil(this.onDestroy$)).subscribe(\n            (res: ProcessFilterCloudModel[]) => {\n                this.resetFilter();\n                this.filters = res || [];\n                this.selectFilterAndEmit(this.filterParam);\n                this.success.emit(res);\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Pass the selected filter as next\n     */\n    public selectFilter(paramFilter: FilterParamsModel) {\n        if (paramFilter) {\n            this.currentFilter = this.filters.find((filter, index) => {\n                return paramFilter.id === filter.id ||\n                (paramFilter.name && this.checkFilterNamesEquality(paramFilter.name, filter.name)) ||\n                (paramFilter.key && (paramFilter.key === filter.key)) ||\n                paramFilter.index === index;\n            });\n        }\n    }\n\n    /**\n     * Check equality of the filter names by translating the given name strings\n     */\n    private checkFilterNamesEquality(name1: string, name2: string ): boolean {\n        const translatedName1 = this.translationService.instant(name1);\n        const translatedName2 = this.translationService.instant(name2);\n\n        return translatedName1.toLocaleLowerCase() === translatedName2.toLocaleLowerCase();\n    }\n\n    /**\n     * Selects and emits the given filter\n     */\n    public selectFilterAndEmit(newParamFilter: FilterParamsModel) {\n        if (newParamFilter) {\n            this.selectFilter(newParamFilter);\n            this.filterSelected.emit(this.currentFilter);\n        } else {\n            this.currentFilter = undefined;\n        }\n    }\n\n    /**\n     * Select filter with the id\n     */\n    public selectFilterById(id: string) {\n        this.selectFilterAndEmit(<ProcessFilterCloudModel> {id: id});\n    }\n\n    /**\n     * Selects and emits the clicked filter\n     */\n    public onFilterClick(filter: ProcessFilterCloudModel) {\n        if (filter) {\n            this.selectFilter(filter);\n            this.filterClicked.emit(this.currentFilter);\n        } else {\n            this.currentFilter = undefined;\n        }\n    }\n\n    /**\n     * Select as default process filter the first in the list\n     */\n    public selectDefaultProcessFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n\n    /**\n     * Return the current process\n     */\n    getCurrentFilter(): ProcessFilterCloudModel {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    isActiveFilter(filter: any): boolean {\n        return this.currentFilter.name === filter.name;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'adf-cloud-process-filter-dialog-cloud',\n  templateUrl: './process-filter-dialog-cloud.component.html',\n  styleUrls: ['./process-filter-dialog-cloud.component.scss']\n})\nexport class ProcessFilterDialogCloudComponent implements OnInit {\n\n    public static ACTION_SAVE = 'SAVE';\n    defaultIcon = 'inbox';\n\n    filterForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        public dialogRef: MatDialogRef<ProcessFilterDialogCloudComponent>,\n        @Inject(MAT_DIALOG_DATA) public data) {\n    }\n\n    ngOnInit() {\n        this.filterForm = this.fb.group({\n            name: [this.data.name, Validators.required]\n        });\n    }\n\n    onSaveClick() {\n        this.dialogRef.close({\n            action: ProcessFilterDialogCloudComponent.ACTION_SAVE,\n            icon: this.defaultIcon,\n            name: this.nameController.value\n        });\n    }\n\n    onCancelClick() {\n        this.dialogRef.close();\n    }\n\n    get nameController(): AbstractControl {\n        return this.filterForm.get('name');\n    }\n\n    isValid(): boolean {\n        return this.filterForm.valid;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService, AppConfigService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ProcessInstanceCloud } from '../start-process/models/process-instance-cloud.model';\nimport { BaseCloudService } from '../../services/base-cloud.service';\nimport { ProcessDefinitionCloud } from '../../models/process-definition-cloud.model';\nimport { ApplicationVersionModel, ApplicationVersionResponseModel } from '../../models/application-version.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessCloudService extends BaseCloudService {\n\n    dataChangesDetected = new Subject<ProcessInstanceCloud>();\n\n    constructor(apiService: AlfrescoApiService,\n                appConfigService: AppConfigService,\n                private logService: LogService) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Gets details of a process instance.\n     * @param appName Name of the app\n     * @param processInstanceId ID of the process instance whose details you want\n     * @returns Process instance details\n     */\n    getProcessInstanceById(appName: string, processInstanceId: string): Observable<ProcessInstanceCloud> {\n        if (appName && processInstanceId) {\n            const url = `${this.getBasePath(appName)}/query/v1/process-instances/${processInstanceId}`;\n\n            return this.get<{ entry: ProcessInstanceCloud }>(url).pipe(\n                map((res) => {\n                    this.dataChangesDetected.next(res.entry);\n                    return res.entry;\n                })\n            );\n        } else {\n            this.logService.error('AppName and ProcessInstanceId are mandatory for querying a process');\n            return throwError('AppName/ProcessInstanceId not configured');\n        }\n    }\n\n    /**\n     * Gets the process definitions associated with an app.\n     * @param appName Name of the target app\n     * @returns Array of process definitions\n     */\n    getProcessDefinitions(appName: string): Observable<ProcessDefinitionCloud[]> {\n        if (appName || appName === '') {\n            const url = `${this.getBasePath(appName)}/rb/v1/process-definitions`;\n\n            return this.get(url).pipe(\n                map((res: any) => {\n                    return res.list.entries.map((processDefs) => new ProcessDefinitionCloud(processDefs.entry));\n                })\n            );\n        } else {\n            this.logService.error('AppName is mandatory for querying task');\n            return throwError('AppName not configured');\n        }\n    }\n\n    /**\n     * Gets the application versions associated with an app.\n     * @param appName Name of the target app\n     * @returns Array of Application Version Models\n     */\n    getApplicationVersions(appName: string): Observable<ApplicationVersionModel[]> {\n        if (appName) {\n            const url = `${this.getBasePath(appName)}/query/v1/applications`;\n\n            return this.get<any>(url).pipe(\n                map((appEntities: ApplicationVersionResponseModel) => {\n                    return appEntities.list.entries;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n        } else {\n            this.logService.error('AppName is mandatory for querying the versions of an application');\n            return throwError('AppName not configured');\n        }\n    }\n\n    /**\n     * Cancels a process.\n     * @param appName Name of the app\n     * @param processInstanceId Id of the process to cancel\n     * @returns Operation Information\n     */\n    cancelProcess(appName: string, processInstanceId: string): Observable<ProcessInstanceCloud> {\n        if (appName && processInstanceId) {\n            const queryUrl = `${this.getBasePath(appName)}/rb/v1/process-instances/${processInstanceId}`;\n            return this.delete(queryUrl).pipe(\n                map((res: any) => {\n                   this.dataChangesDetected.next(res.entry);\n                   return res.entry;\n                })\n            );\n        } else {\n            this.logService.error('App name and Process id are mandatory for deleting a process');\n            return throwError('App name and process id not configured');\n        }\n    }\n\n    private handleError(error?: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { debounceTime, filter, takeUntil, finalize, switchMap } from 'rxjs/operators';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { AppsProcessCloudService } from '../../../app/services/apps-process-cloud.service';\nimport { ProcessFilterCloudModel, ProcessFilterProperties, ProcessFilterAction, ProcessFilterOptions, ProcessSortFilterProperty } from '../models/process-filter-cloud.model';\nimport { IdentityUserModel, TranslationService, UserPreferencesService, UserPreferenceValues } from '@alfresco/adf-core';\nimport { ProcessFilterCloudService } from '../services/process-filter-cloud.service';\nimport { ProcessFilterDialogCloudComponent } from './process-filter-dialog-cloud.component';\nimport { ProcessCloudService } from '../../services/process-cloud.service';\nimport { DateCloudFilterType, DateRangeFilter } from '../../../models/date-cloud-filter.model';\n\nexport interface DropdownOption {\n    value: string;\n    label: string;\n}\n\n@Component({\n    selector: 'adf-cloud-edit-process-filter',\n    templateUrl: './edit-process-filter-cloud.component.html',\n    styleUrls: ['./edit-process-filter-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class EditProcessFilterCloudComponent implements OnInit, OnChanges, OnDestroy {\n\n    public static ACTION_SAVE = 'save';\n    public static ACTION_SAVE_AS = 'saveAs';\n    public static ACTION_DELETE = 'delete';\n    public static DEFAULT_PROCESS_FILTER_PROPERTIES = ['status', 'sort', 'order', 'lastModified'];\n    public static DEFAULT_SORT_PROPERTIES = ['id', 'name', 'status', 'startDate'];\n    public static DEFAULT_ACTIONS = ['save', 'saveAs', 'delete'];\n    public DATE_FORMAT: string = 'DD/MM/YYYY';\n\n    /** The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /** roles to filter the apps */\n    @Input()\n    role: string = '';\n\n    /** Id of the process instance filter. */\n    @Input()\n    id: string;\n\n    /** List of process filter properties to display */\n    @Input()\n    filterProperties = EditProcessFilterCloudComponent.DEFAULT_PROCESS_FILTER_PROPERTIES;\n\n    /** List of sort properties to display. */\n    @Input()\n    sortProperties = EditProcessFilterCloudComponent.DEFAULT_SORT_PROPERTIES;\n\n    /** List of sort actions. */\n    @Input()\n    actions = EditProcessFilterCloudComponent.DEFAULT_ACTIONS;\n\n    /** Toggles editing of process filter actions. */\n    @Input()\n    showFilterActions = true;\n\n    /** Toggles editing of the process filter title. */\n    @Input()\n    showTitle = true;\n\n     /** Toggles the appearance of the process filter name . */\n    @Input()\n    showProcessFilterName = true;\n\n    /** Emitted when a process instance filter property changes. */\n    @Output()\n    filterChange = new EventEmitter<ProcessFilterCloudModel>();\n\n    /** Emitted when a filter action occurs i.e Save, SaveAs, Delete. */\n    @Output()\n    action = new EventEmitter<ProcessFilterAction>();\n\n    private _filter: ProcessFilterCloudModel;\n    protected filterHasBeenChanged = false;\n\n    get processFilter() {\n        return this._filter;\n    }\n\n    @Input()\n    set processFilter(value: ProcessFilterCloudModel) {\n        const isChanged = this.isFilterChanged(this._filter, value);\n\n        this._filter = value;\n\n        if (value?.appName) {\n            this.appName = value.appName;\n        }\n\n        if (value?.id) {\n            this.id = value.id;\n        }\n\n        this.processFilterProperties = this.createAndFilterProperties();\n        this.processFilterActions = this.createAndFilterActions();\n\n        this.buildForm(this.processFilterProperties);\n\n        if (isChanged) {\n            this.filterChange.emit(value);\n        }\n    }\n\n    status: Array<DropdownOption> = [\n        { value: '', label: 'ADF_CLOUD_PROCESS_FILTERS.STATUS.ALL' },\n        { value: 'RUNNING', label: 'ADF_CLOUD_PROCESS_FILTERS.STATUS.RUNNING' },\n        { value: 'SUSPENDED', label: 'ADF_CLOUD_PROCESS_FILTERS.STATUS.SUSPENDED' },\n        { value: 'CANCELLED', label: 'ADF_CLOUD_PROCESS_FILTERS.STATUS.CANCELLED' },\n        { value: 'COMPLETED', label: 'ADF_CLOUD_PROCESS_FILTERS.STATUS.COMPLETED' }\n    ];\n    directions: Array<DropdownOption> = [\n        { value: 'ASC', label: 'ADF_CLOUD_PROCESS_FILTERS.DIRECTION.ASCENDING' },\n        { value: 'DESC', label: 'ADF_CLOUD_PROCESS_FILTERS.DIRECTION.DESCENDING' }\n    ];\n    actionDisabledForDefault = [\n        EditProcessFilterCloudComponent.ACTION_SAVE,\n        EditProcessFilterCloudComponent.ACTION_DELETE\n    ];\n    applicationNames: any[] = [];\n    allProcessDefinitionNamesOption: DropdownOption = {\n        label: 'ADF_CLOUD_PROCESS_FILTERS.STATUS.ALL',\n        value: ''\n    };\n    processDefinitionNames: any[] = [];\n    editProcessFilterForm: FormGroup;\n    processFilterProperties: ProcessFilterProperties[] = [];\n    processFilterActions: ProcessFilterAction[] = [];\n    toggleFilterActions: boolean = false;\n    appVersionOptions: ProcessFilterOptions[] = [];\n    initiatorOptions: IdentityUserModel[] = [];\n\n    private onDestroy$ = new Subject<boolean>();\n    isLoading: boolean = false;\n    private filterChangeSub: Subscription;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialog: MatDialog,\n        private dateAdapter: DateAdapter<Moment>,\n        private userPreferencesService: UserPreferencesService,\n        private translateService: TranslationService,\n        private processFilterCloudService: ProcessFilterCloudService,\n        private appsProcessCloudService: AppsProcessCloudService,\n        private processCloudService: ProcessCloudService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const id = changes['id'];\n        if (id && id.currentValue !== id.previousValue) {\n            this.retrieveProcessFilterAndBuildForm();\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    buildForm(processFilterProperties: ProcessFilterProperties[]) {\n        this.editProcessFilterForm = this.formBuilder.group(this.getFormControlsConfig(processFilterProperties));\n        this.onFilterChange();\n    }\n\n    getFormControlsConfig(processFilterProperties: ProcessFilterProperties[]): any {\n        const properties = processFilterProperties.map((property) => {\n            if (!!property.attributes) {\n                return this.getAttributesControlConfig(property);\n            } else {\n                return { [property.key]: property.value };\n            }\n        });\n        return properties.reduce(((result, current) => Object.assign(result, current)), {});\n    }\n\n    private getAttributesControlConfig(property: ProcessFilterProperties) {\n        return Object.values(property.attributes).reduce((result, key) => {\n            result[key] = property.value[key];\n            return result;\n        }, {});\n    }\n\n    /**\n     * Fetches process instance filter by application name and filter id and creates filter properties, build form\n     */\n    retrieveProcessFilterAndBuildForm() {\n        this.isLoading = true;\n        this.processFilterCloudService\n            .getFilterById(this.appName, this.id)\n            .pipe(finalize(() => this.isLoading = false))\n            .subscribe(response => {\n                this.filterHasBeenChanged = false;\n                this.processFilter = new ProcessFilterCloudModel(\n                    Object.assign({}, response || {}, this.processFilter || {})\n                );\n            });\n    }\n\n    /**\n     * Check process instance filter changes\n     */\n    onFilterChange() {\n        if (this.filterChangeSub) {\n            this.filterChangeSub.unsubscribe();\n            this.filterChangeSub = null;\n        }\n\n        this.filterChangeSub = this.editProcessFilterForm.valueChanges\n            .pipe(\n                debounceTime(500),\n                filter(() => this.isFormValid()),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe((formValues: ProcessFilterCloudModel) => {\n                this.setLastModifiedToFilter(formValues);\n\n                const newValue = new ProcessFilterCloudModel(Object.assign({}, this.processFilter, formValues));\n                const changed = !this.compareFilters(newValue, this.processFilter);\n                this.filterHasBeenChanged = changed;\n\n                if (changed) {\n                    this._filter = newValue;\n                    this.filterChange.emit(newValue);\n                }\n            });\n    }\n\n    createAndFilterProperties(): ProcessFilterProperties[] {\n        this.checkMandatoryFilterProperties();\n\n        if (this.filterProperties.includes('appName')) {\n            this.getRunningApplications();\n        }\n\n        if (this.filterProperties.includes('processDefinitionName')) {\n            this.getProcessDefinitions();\n        }\n\n        if (this.filterProperties.includes('appVersionMultiple')) {\n            this.getAppVersionOptions();\n        }\n\n        if (this.filterProperties.includes('initiator')) {\n            this.initiatorOptions = !!this.processFilter.initiator\n                ? this.processFilter.initiator.split(',').map( username => Object.assign({}, { username: username }))\n                : [];\n        }\n\n        const defaultProperties = this.createProcessFilterProperties(this.processFilter);\n        let filteredProperties = defaultProperties.filter((filterProperty) => this.isValidProperty(this.filterProperties, filterProperty.key));\n\n        if (!this.filterProperties.includes('sort')) {\n            filteredProperties = filteredProperties.filter(property => property.key !== 'order');\n        }\n\n        if (this.filterProperties.includes('lastModified')) {\n            filteredProperties = [\n                ...filteredProperties,\n                ...this.createLastModifiedProperty(this.processFilter)\n            ];\n        }\n\n        return filteredProperties;\n    }\n\n    checkMandatoryFilterProperties() {\n        if (this.filterProperties === undefined || this.filterProperties.length === 0) {\n            this.filterProperties = EditProcessFilterCloudComponent.DEFAULT_PROCESS_FILTER_PROPERTIES;\n        }\n    }\n\n    private isValidProperty(filterProperties: string[], key: string): boolean {\n        return filterProperties ? filterProperties.indexOf(key) >= 0 : true;\n    }\n\n    get createSortProperties(): ProcessFilterOptions[] {\n        this.checkMandatorySortProperties();\n        const defaultSortProperties = this.createProcessSortProperties();\n        return defaultSortProperties.filter((sortProperty) => this.isValidProperty(this.sortProperties, sortProperty.key));\n    }\n\n    getAppVersionOptions() {\n        this.appVersionOptions = [];\n\n        this.processCloudService.getApplicationVersions(this.appName).subscribe((appVersions) => {\n            appVersions.forEach(appVersion => {\n                this.appVersionOptions.push({ label: appVersion.entry.version, value: appVersion.entry.version });\n            });\n        });\n    }\n\n    checkMandatorySortProperties() {\n        if (this.sortProperties === undefined || this.sortProperties.length === 0) {\n            this.sortProperties = EditProcessFilterCloudComponent.DEFAULT_SORT_PROPERTIES;\n        }\n    }\n\n    createAndFilterActions() {\n        this.checkMandatoryActions();\n        const actions = this.createFilterActions();\n        return actions.filter((action) => this.isValidAction(this.actions, action));\n    }\n\n    checkMandatoryActions() {\n        if (this.actions === undefined || this.actions.length === 0) {\n            this.actions = EditProcessFilterCloudComponent.DEFAULT_ACTIONS;\n        }\n    }\n\n    private isValidAction(actions: string[], action: ProcessFilterAction): boolean {\n        return actions ? actions.indexOf(action.actionType) >= 0 : true;\n    }\n\n    isFormValid(): boolean {\n        return this.editProcessFilterForm.valid;\n    }\n\n    getPropertyController(property: ProcessFilterProperties): AbstractControl {\n        return this.editProcessFilterForm.get(property.key);\n    }\n\n    onDateChanged(newDateValue: Moment, dateProperty: ProcessFilterProperties) {\n        if (newDateValue) {\n            const controller = this.getPropertyController(dateProperty);\n\n            if (newDateValue.isValid()) {\n                controller.setValue(newDateValue);\n                controller.setErrors(null);\n            } else {\n                controller.setErrors({ invalid: true });\n            }\n        }\n    }\n\n    onDateTypeChange(dateType: DateCloudFilterType, property: ProcessFilterProperties) {\n        this.editProcessFilterForm.get(property.attributes.dateType).setValue(dateType);\n    }\n\n    onDateRangeFilterChanged(dateRange: DateRangeFilter, property: ProcessFilterProperties) {\n        this.editProcessFilterForm.get(property.attributes?.from).setValue(\n            dateRange.startDate ? dateRange.startDate : null\n        );\n        this.editProcessFilterForm.get(property.attributes?.to).setValue(\n            dateRange.endDate ? dateRange.endDate : null\n        );\n        this.editProcessFilterForm.get(property.attributes.dateType).setValue(DateCloudFilterType.RANGE);\n    }\n\n    onChangedUser(users: IdentityUserModel[], processProperty: ProcessFilterProperties) {\n        this.getPropertyController(processProperty).setValue(users.map( user => user.username).join(','));\n    }\n\n    hasError(property: ProcessFilterProperties): boolean {\n        const controller = this.getPropertyController(property);\n        return controller.errors && controller.errors.invalid;\n    }\n\n    compareFilters(editedQuery: ProcessFilterCloudModel, currentQuery: ProcessFilterCloudModel): boolean {\n        return JSON.stringify(editedQuery).toLowerCase() === JSON.stringify(currentQuery).toLowerCase();\n    }\n\n    getRunningApplications() {\n        this.applicationNames = [];\n\n        this.appsProcessCloudService\n            .getDeployedApplicationsByStatus('RUNNING', this.role)\n            .subscribe((applications) => {\n                if (applications && applications.length > 0) {\n                    applications.map((application) => {\n                        this.applicationNames.push({ label: application.name, value: application.name });\n                    });\n                }\n            });\n    }\n\n    getProcessDefinitions() {\n        this.processDefinitionNames = [];\n\n        this.processCloudService.getProcessDefinitions(this.appName).subscribe((processDefinitions) => {\n            if (processDefinitions && processDefinitions.length > 0) {\n                this.processDefinitionNames.push(this.allProcessDefinitionNamesOption);\n                processDefinitions.map((processDefinition) => {\n                    this.processDefinitionNames.push({ label: processDefinition.name, value: processDefinition.name });\n                });\n            }\n        });\n    }\n\n    executeFilterActions(action: ProcessFilterAction): void {\n        if (action.actionType === EditProcessFilterCloudComponent.ACTION_SAVE) {\n            this.save(action);\n        } else if (action.actionType === EditProcessFilterCloudComponent.ACTION_SAVE_AS) {\n            this.saveAs(action);\n        } else if (action.actionType === EditProcessFilterCloudComponent.ACTION_DELETE) {\n            this.delete(action);\n        }\n    }\n\n    save(saveAction: ProcessFilterAction) {\n        this.processFilterCloudService\n            .updateFilter(this.processFilter)\n            .subscribe(() => {\n                saveAction.filter = this.processFilter;\n                this.filterHasBeenChanged = false;\n                this.action.emit(saveAction);\n            });\n    }\n\n    /**\n     * Delete a process instance filter\n     */\n    delete(deleteAction: ProcessFilterAction) {\n        this.processFilterCloudService\n            .deleteFilter(this.processFilter)\n            .pipe(\n                filter((filters) => {\n                    deleteAction.filter = this.processFilter;\n                    this.action.emit(deleteAction);\n                    return filters.length === 0;\n                }),\n                switchMap(() => this.restoreDefaultProcessFilters()))\n            .subscribe(() => {});\n    }\n\n    /**\n     * Save As a process instance filter\n     */\n    saveAs(saveAsAction: ProcessFilterAction) {\n        const dialogRef = this.dialog.open(ProcessFilterDialogCloudComponent, {\n            data: {\n                name: this.translateService.instant(this.processFilter.name)\n            },\n            height: 'auto',\n            minWidth: '30%'\n        });\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result && result.action === ProcessFilterDialogCloudComponent.ACTION_SAVE) {\n                const filterId = Math.random().toString(36).substr(2, 9);\n                const filterKey = this.getSanitizeFilterName(result.name);\n                const newFilter = {\n                    name: result.name,\n                    icon: result.icon,\n                    id: filterId,\n                    key: 'custom-' + filterKey\n                };\n                const resultFilter: ProcessFilterCloudModel = Object.assign({}, this.processFilter, newFilter);\n                this.processFilterCloudService\n                    .addFilter(resultFilter)\n                    .subscribe(() => {\n                        saveAsAction.filter = resultFilter;\n                        this.filterHasBeenChanged = false;\n                        this.action.emit(saveAsAction);\n                    });\n            }\n        });\n    }\n\n    /**\n     * Return filter name\n     * @param filterName\n     */\n    getSanitizeFilterName(filterName: string): string {\n        const nameWithHyphen = this.replaceSpaceWithHyphen(filterName.trim());\n        return nameWithHyphen.toLowerCase();\n    }\n\n    /**\n     * Return name with hyphen\n     * @param name\n     */\n    replaceSpaceWithHyphen(name: string): string {\n        const regExt = new RegExp(' ', 'g');\n        return name.replace(regExt, '-');\n    }\n\n    restoreDefaultProcessFilters(): Observable<ProcessFilterCloudModel[]> {\n        return this.processFilterCloudService.getProcessFilters(this.appName);\n    }\n\n    onExpand() {\n        this.toggleFilterActions = true;\n    }\n\n    onClose() {\n        this.toggleFilterActions = false;\n    }\n\n    isDisabledAction(action: ProcessFilterAction): boolean {\n        return (\n            this.processFilterCloudService.isDefaultFilter(this.processFilter.name) &&\n            this.actionDisabledForDefault.includes(action.actionType)\n        ) ? true : this.hasFilterChanged(action);\n    }\n\n    hasFilterChanged(action: ProcessFilterAction): boolean {\n        return action.actionType === EditProcessFilterCloudComponent.ACTION_SAVE ||\n            action.actionType === EditProcessFilterCloudComponent.ACTION_SAVE_AS ?\n            !this.filterHasBeenChanged : false;\n    }\n\n    private setLastModifiedToFilter(formValues: ProcessFilterCloudModel) {\n        if (formValues.lastModifiedTo && Date.parse(formValues.lastModifiedTo.toString())) {\n            const lastModifiedToFilterValue = moment(formValues.lastModifiedTo);\n            lastModifiedToFilterValue.set({\n                hour: 23,\n                minute: 59,\n                second: 59\n            });\n            formValues.lastModifiedTo = lastModifiedToFilterValue.toDate();\n        }\n    }\n\n    private createFilterActions(): ProcessFilterAction[] {\n        return [\n            {\n                actionType: EditProcessFilterCloudComponent.ACTION_SAVE,\n                icon: 'adf:save',\n                tooltip: 'ADF_CLOUD_EDIT_PROCESS_FILTER.TOOL_TIP.SAVE'\n            },\n            {\n                actionType: EditProcessFilterCloudComponent.ACTION_SAVE_AS,\n                icon: 'adf:save-as',\n                tooltip: 'ADF_CLOUD_EDIT_PROCESS_FILTER.TOOL_TIP.SAVE_AS'\n            },\n            {\n                actionType: EditProcessFilterCloudComponent.ACTION_DELETE,\n                icon: 'delete',\n                tooltip: 'ADF_CLOUD_EDIT_PROCESS_FILTER.TOOL_TIP.DELETE'\n            }\n        ];\n    }\n\n    private createLastModifiedProperty(filterModel: ProcessFilterCloudModel): ProcessFilterProperties[] {\n        let lastModifiedFrom;\n        let lastModifiedTo;\n\n        if (filterModel.lastModifiedFrom) {\n            lastModifiedFrom = moment(filterModel.lastModifiedFrom);\n        }\n\n        if (filterModel.lastModifiedTo) {\n            lastModifiedTo = moment(filterModel.lastModifiedTo);\n        }\n\n        return [\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.LAST_MODIFIED_DATE_FORM',\n                type: 'date',\n                key: 'lastModifiedFrom',\n                value: lastModifiedFrom\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.LAST_MODIFIED_TO',\n                type: 'date',\n                key: 'lastModifiedTo',\n                value: lastModifiedTo\n            }\n        ];\n    }\n\n    private createProcessSortProperties(): ProcessSortFilterProperty[] {\n        return [\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.ID',\n                key: 'id',\n                value: 'id'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_NAME',\n                key: 'name',\n                value: 'name'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.START_DATE',\n                key: 'startDate',\n                value: 'startDate'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STATUS',\n                key: 'status',\n                value: 'status'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STARTED_BY',\n                key: 'initiator',\n                value: 'initiator'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_NAME',\n                key: 'appName',\n                value: 'appName'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_VERSION',\n                key: 'appVersion',\n                value: 'appVersion'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_INS_ID',\n                key: 'processInstanceId',\n                value: 'processInstanceId'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_ID',\n                key: 'processDefinitionId',\n                value: 'processDefinitionId'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_NAME',\n                key: 'processDefinitionName',\n                value: 'processDefinitionName'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_KEY',\n                key: 'processDefinitionKey',\n                value: 'processDefinitionKey'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.LAST_MODIFIED',\n                key: 'lastModified',\n                value: 'lastModified'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.BUSINESS_KEY',\n                key: 'businessKey',\n                value: 'businessKey'\n            }\n        ];\n    }\n\n    private isFilterChanged(oldValue: ProcessFilterCloudModel, newValue: ProcessFilterCloudModel): boolean {\n        const oldJson = JSON.stringify(\n            this.processFilterCloudService.writeQueryParams(oldValue || {}, this.filterProperties)\n        );\n        const newJson = JSON.stringify(\n            this.processFilterCloudService.writeQueryParams(newValue || {}, this.filterProperties)\n        );\n\n        return oldJson !== newJson;\n    }\n\n    private createProcessFilterProperties(filterModel: ProcessFilterCloudModel): ProcessFilterProperties[] {\n        const appVersionMultiple = [];\n\n        if (filterModel.appVersion) {\n            appVersionMultiple.push(\n                Array.isArray(filterModel.appVersion)\n                    ? filterModel.appVersion.map(entry => entry.toString())\n                    : `${filterModel.appVersion}`\n            );\n        }\n\n        return [\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_NAME',\n                type: 'select',\n                key: 'appName',\n                value: filterModel.appName || '',\n                options: this.applicationNames\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_VERSION',\n                type: 'number',\n                key: 'appVersion',\n                value: filterModel.appVersion\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.APP_VERSION',\n                type: 'multi-select',\n                key: 'appVersionMultiple',\n                value: appVersionMultiple,\n                options: this.appVersionOptions\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_INS_ID',\n                type: 'text',\n                key: 'processInstanceId',\n                value: filterModel.processInstanceId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_NAME',\n                type: 'text',\n                key: 'processName',\n                value: filterModel.processName || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_NAME',\n                type: 'select',\n                key: 'processDefinitionName',\n                value: filterModel.processDefinitionName || '',\n                options: this.processDefinitionNames\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STATUS',\n                type: 'select',\n                key: 'status',\n                value: filterModel.status || this.status[0].value,\n                options: this.status\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_ID',\n                type: 'text',\n                key: 'processDefinitionId',\n                value: filterModel.processDefinitionId || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.PROCESS_DEF_KEY',\n                type: 'text',\n                key: 'processDefinitionKey',\n                value: filterModel.processDefinitionKey || ''\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.SORT',\n                type: 'select',\n                key: 'sort',\n                value: filterModel.sort || this.createSortProperties[0].value,\n                options: this.createSortProperties\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DIRECTION',\n                type: 'select',\n                key: 'order',\n                value: filterModel.order || this.directions[0].value,\n                options: this.directions\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.COMPLETED_DATE',\n                type: 'date',\n                key: 'completedDate',\n                value: filterModel.completedDate || false\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STARTED_BY',\n                type: 'people',\n                key: 'initiator',\n                value: filterModel.initiator,\n                selectionMode: 'multiple'\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.COMPLETED_DATE',\n                type: 'date-range',\n                key: 'completedDateRange',\n                attributes: { dateType: 'completedDateType', from: '_completedFrom', to: '_completedTo'},\n                value: {\n                    completedDateType: filterModel.completedDateType || null,\n                    _completedFrom: filterModel.completedFrom || null,\n                    _completedTo: filterModel.completedTo || null\n                }\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.STARTED_DATE',\n                type: 'date-range',\n                key: 'startedDateRange',\n                attributes: { dateType: 'startedDateType', from: '_startFrom', to: '_startTo'},\n                value: {\n                    startedDateType: filterModel.startedDateType || null,\n                    _startFrom: filterModel.startFrom || null,\n                    _startTo: filterModel.startTo || null\n                }\n            },\n            {\n                label: 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.SUSPENDED_DATE',\n                type: 'date-range',\n                key: 'suspendedDateRange',\n                attributes: { dateType: 'suspendedDateType', from: '_suspendedFrom', to: '_suspendedTo'},\n                value: {\n                    suspendedDateType: filterModel.suspendedDateType || null,\n                    _suspendedFrom: filterModel.suspendedFrom || null,\n                    _suspendedTo: filterModel.suspendedTo || null\n                }\n            }\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ProcessFiltersCloudComponent } from './components/process-filters-cloud.component';\nimport { MaterialModule } from '../../material.module';\nimport { CoreModule, MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EditProcessFilterCloudComponent } from './components/edit-process-filter-cloud.component';\nimport { ProcessFilterDialogCloudComponent } from './components/process-filter-dialog-cloud.component';\nimport { AppListCloudModule } from './../../app/app-list-cloud.module';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { ProcessCommonModule } from '../../common/process-common.module';\nimport { PeopleCloudModule } from '../../people/people-cloud.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        AppListCloudModule,\n        CoreModule,\n        ProcessCommonModule,\n        PeopleCloudModule\n    ],\n    declarations: [ProcessFiltersCloudComponent, EditProcessFilterCloudComponent, ProcessFilterDialogCloudComponent],\n    exports: [ProcessFiltersCloudComponent, EditProcessFilterCloudComponent, ProcessFilterDialogCloudComponent],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }\n    ]\n})\nexport class ProcessFiltersCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';\nimport { ProcessQueryCloudRequestModel } from '../models/process-cloud-query-request.model';\nimport { Observable, throwError } from 'rxjs';\nimport { ProcessListCloudSortingModel } from '../models/process-list-sorting.model';\nimport { BaseCloudService } from '../../../services/base-cloud.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ProcessListCloudService extends BaseCloudService {\n\n    constructor(apiService: AlfrescoApiService,\n                appConfigService: AppConfigService,\n                private logService: LogService) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Finds a process using an object with optional query properties.\n     * @param requestNode Query object\n     * @param queryUrl Query url\n     * @returns Process information\n     */\n    getProcessByRequest(requestNode: ProcessQueryCloudRequestModel, queryUrl?: string): Observable<any> {\n        if (requestNode.appName || requestNode.appName === '') {\n            queryUrl = queryUrl || `${this.getBasePath(requestNode.appName)}/query/v1/process-instances`;\n            const queryParams = this.buildQueryParams(requestNode);\n            const sortingParams = this.buildSortingParam(requestNode.sorting);\n            if (sortingParams) {\n                queryParams['sort'] = sortingParams;\n            }\n\n            return this.get(queryUrl, queryParams).pipe(\n                map((response: any) => {\n                    const entries = response.list && response.list.entries;\n                    if (entries) {\n                        response.list.entries = entries.map((entryData) => {\n                            return entryData.entry;\n                        });\n                    }\n                    return response;\n                })\n            );\n        } else {\n            this.logService.error('Appname is mandatory for querying task');\n            return throwError('Appname not configured');\n        }\n    }\n\n    protected isPropertyValueValid(requestNode: any, property: string): boolean {\n        return requestNode[property] !== '' && requestNode[property] !== null && requestNode[property] !== undefined;\n    }\n\n    protected buildQueryParams(requestNode: ProcessQueryCloudRequestModel): Object {\n        const queryParam = {};\n\n        for (const property in requestNode) {\n            if (requestNode.hasOwnProperty(property) &&\n                !this.isExcludedField(property) &&\n                this.isPropertyValueValid(requestNode, property)) {\n                queryParam[property] = requestNode[property];\n            }\n        }\n\n        if (!queryParam['status']) {\n            queryParam['status'] = this.buildFilterForAllStatus();\n        }\n\n        return queryParam;\n    }\n\n    protected buildFilterForAllStatus(): string[] {\n        return ['RUNNING', 'SUSPENDED', 'CANCELLED', 'COMPLETED'];\n    }\n\n    protected isExcludedField(property: string): boolean {\n        return property === 'appName' || property === 'sorting';\n    }\n\n    protected buildSortingParam(models: ProcessListCloudSortingModel[]): string {\n        let finalSorting: string = '';\n        if (models) {\n            for (const sort of models) {\n                if (!finalSorting) {\n                    finalSorting = `${sort.orderBy},${sort.direction}`;\n                } else {\n                    finalSorting = `${finalSorting}&${sort.orderBy},${sort.direction}`;\n                }\n            }\n        }\n        return encodeURI(finalSorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let processCloudPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_CLOUD_PROCESS_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'startDate',\n            'type': 'date',\n            'title': 'ADF_CLOUD_PROCESS_LIST.PROPERTIES.START_DATE',\n            'cssClass': 'hidden',\n            'sortable': true,\n            'format': 'timeAgo'\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProcessListCloudSortingModel } from './process-list-sorting.model';\n\nexport class ProcessQueryCloudRequestModel {\n   appName: string;\n   appVersion?: number | string;\n   initiator?: null;\n   id?: string;\n   name?: string;\n   processDefinitionId?: string;\n   processDefinitionName?: string;\n   processDefinitionKey?: string;\n   status?: string;\n   startDate?: string;\n   businessKey?: string;\n   lastModified?: string;\n   lastModifiedTo?: string;\n   lastModifiedFrom?: string;\n   startFrom?: string;\n   startTo?: string;\n   completedFrom?: string;\n   completedTo?: string;\n   suspendedFrom?: string;\n   suspendedTo?: string;\n   completedDate?: string;\n   maxItems: number;\n   skipCount: number;\n   sorting?: ProcessListCloudSortingModel[];\n    constructor(obj?: any) {\n       if (obj) {\n           this.appName = obj.appName;\n           this.appVersion = obj.appVersion;\n           this.initiator = obj.initiator;\n           this.id = obj.id;\n           this.name = obj.name;\n           this.processDefinitionId = obj.processDefinitionId;\n           this.processDefinitionName = obj.processDefinitionName;\n           this.processDefinitionKey = obj.processDefinitionKey;\n           this.status = obj.status;\n           this.startDate = obj.startDate;\n           this.businessKey = obj.businessKey;\n           this.lastModified = obj.lastModified;\n           this.lastModifiedTo = obj.lastModifiedTo;\n           this.lastModifiedFrom = obj.lastModifiedFrom;\n           this.startFrom = obj.startFrom;\n           this.startTo = obj.startTo;\n           this.completedFrom = obj.completedFrom;\n           this.completedTo = obj.completedTo;\n           this.suspendedFrom = obj.suspendedFrom;\n           this.suspendedTo = obj.suspendedTo;\n           this.completedDate = obj.completedDate;\n           this.maxItems = obj.maxItems;\n           this.skipCount = obj.skipCount;\n           this.sorting = obj.sorting;\n       }\n   }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessListCloudSortingModel {\n    orderBy: string;\n    direction: string;\n     constructor(obj: any) {\n        if (obj) {\n            this.orderBy = obj.orderBy;\n            this.direction = obj.direction;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnChanges, AfterContentInit, ContentChild, Output, EventEmitter, SimpleChanges, Input, ViewChild } from '@angular/core';\nimport { DataTableSchema, PaginatedComponent,\n         CustomEmptyContentTemplateDirective, AppConfigService,\n         UserPreferencesService, PaginationModel,\n         UserPreferenceValues, DataRowEvent, CustomLoadingContentTemplateDirective, DataCellEvent, DataRowActionEvent, DataTableComponent } from '@alfresco/adf-core';\nimport { ProcessListCloudService } from '../services/process-list-cloud.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { processCloudPresetsDefaultModel } from '../models/process-cloud-preset.model';\nimport { ProcessQueryCloudRequestModel } from '../models/process-cloud-query-request.model';\nimport { ProcessListCloudSortingModel } from '../models/process-list-sorting.model';\n\n@Component({\n    selector: 'adf-cloud-process-list',\n    templateUrl: './process-list-cloud.component.html',\n    styleUrls: ['./process-list-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessListCloudComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent {\n\n    static PRESET_KEY = 'adf-cloud-process-list.presets';\n\n    @ViewChild(DataTableComponent)\n    dataTable: DataTableComponent;\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    /** The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /** The version of the application. */\n    @Input()\n    appVersion: number | number[];\n\n    /** Name of the initiator of the process. */\n    @Input()\n    initiator: string = '';\n\n    /** Filter the processes to display only the ones with this ID. */\n    @Input()\n    id: string = '';\n\n    /** Filter the processes to display only the ones with this name. */\n    @Input()\n    name: string = '';\n\n    /** Filter the processes to display only the ones with this process definition ID. */\n    @Input()\n    processDefinitionId: string = '';\n\n    /** Filter the processes to display only the ones with this process definition name. */\n    @Input()\n    processDefinitionName: string = '';\n\n    /** Filter the processes to display only the ones with this process definition key. */\n    @Input()\n    processDefinitionKey: string = '';\n\n    /** Filter the processes to display only the ones with this status. */\n    @Input()\n    status: string = '';\n\n    /** Filter the processes to display only the ones with this businessKey value. */\n    @Input()\n    businessKey: string = '';\n\n    /** Filter the processes. Display only process with lastModifiedTo equal to the supplied date. */\n    @Input()\n    lastModifiedFrom: Date;\n\n    /** Filter the processes. Display only process with lastModifiedTo equal to the supplied date. */\n    @Input()\n    lastModifiedTo: Date;\n\n    /** Filter the processes. Display only process with startedDate greater then the supplied date. */\n    @Input()\n    startFrom: string = '';\n\n    /** Filter the processes. Display only process with startedDate less than the supplied date. */\n    @Input()\n    startTo: string = '';\n\n    /** Filter the processes. Display only process with completedFrom equal to the supplied date. */\n    @Input()\n    completedFrom: string = '';\n\n    /** Filter the processes. Display only process with completedTo equal to the supplied date. */\n    @Input()\n    completedTo: string = '';\n\n    /** Filter the processes. Display only process with completedDate equal to the supplied date. */\n    @Input()\n    completedDate: string = '';\n\n    /** Filter the processes. Display only process with suspendedFrom equal to the supplied date. */\n    @Input()\n    suspendedFrom: string = '';\n\n    /** Filter the processes. Display only process with suspendedTo equal to the supplied date. */\n    @Input()\n    suspendedTo: string = '';\n\n    /**\n     * Row selection mode. Can be \"none\", \"single\" or \"multiple\".\n     * For multiple mode, you can use Cmd (macOS) or Ctrl (Win) modifier\n     * key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection and renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /**\n     * Array of objects specifying the sort order and direction for the\n     * list. The sort parameters are for BE sorting.\n     */\n    @Input()\n    sorting: ProcessListCloudSortingModel[];\n\n    /** Toggles the data actions column. */\n    @Input()\n    showActions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    showContextMenu: boolean = false;\n\n    /** Emitted when a row in the process list is clicked. */\n    @Output()\n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when rows are selected/unselected. */\n    @Output()\n    rowsSelected: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Emitted when an error occurs while loading the list of process instances from the server. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the list of process instances has been loaded successfully from the server. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    pagination: BehaviorSubject<PaginationModel>;\n    size: number;\n    skipCount: number = 0;\n    currentInstanceId: string;\n    selectedInstances: any[];\n    isLoading = true;\n    rows: any[] = [];\n    formattedSorting: any[];\n    requestNode: ProcessQueryCloudRequestModel;\n    private defaultSorting = { key: 'startDate', direction: 'desc' };\n\n    constructor(private processListCloudService: ProcessListCloudService,\n                appConfigService: AppConfigService,\n                private userPreferences: UserPreferencesService) {\n        super(appConfigService, ProcessListCloudComponent.PRESET_KEY, processCloudPresetsDefaultModel);\n        this.size = userPreferences.paginationSize;\n        this.userPreferences.select(UserPreferenceValues.PaginationSize).subscribe((pageSize) => {\n            this.size = pageSize;\n        });\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes, 'sorting')) {\n            this.formatSorting(changes['sorting'].currentValue);\n        }\n        if (this.isAnyPropertyChanged(changes)) {\n            this.reload();\n        }\n    }\n\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    reload() {\n        this.requestNode = this.createRequestNode();\n        if (this.requestNode.appName || this.requestNode.appName === '') {\n            this.load(this.requestNode);\n        } else {\n            this.rows = [];\n        }\n    }\n\n    private load(requestNode: ProcessQueryCloudRequestModel) {\n        this.isLoading = true;\n        this.processListCloudService.getProcessByRequest(requestNode).subscribe(\n            (processes) => {\n                this.rows = processes.list.entries;\n                this.success.emit(processes);\n                this.isLoading = false;\n                this.pagination.next(processes.list.pagination);\n            }, (error) => {\n                this.error.emit(error);\n                this.isLoading = false;\n            });\n    }\n\n    private isAnyPropertyChanged(changes: SimpleChanges): boolean {\n        for (const property in changes) {\n            if (this.isPropertyChanged(changes, property)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges, property: string): boolean {\n        return changes.hasOwnProperty(property);\n    }\n\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    /**\n     * Resets the pagination values\n     */\n    resetPagination() {\n        this.skipCount = 0;\n        this.size = this.userPreferences.paginationSize;\n        this.pagination.next({\n            skipCount: 0,\n            maxItems: this.size\n        });\n    }\n\n    /**\n     * Resets the pagination values and\n     * Reloads the process list\n     * @param pagination Pagination values to be set\n     */\n    updatePagination(pagination: PaginationModel) {\n        this.size = pagination.maxItems;\n        this.skipCount = pagination.skipCount;\n        this.pagination.next(pagination);\n        this.reload();\n    }\n\n    onSortingChanged(event: CustomEvent) {\n        this.setSorting(event.detail);\n        this.formatSorting(this.sorting);\n        this.reload();\n    }\n\n    onRowClick(item: DataRowEvent) {\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    onRowSelect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowUnselect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        this.showRowActionsMenu.emit(event);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        this.showRowContextMenu.emit(event);\n    }\n\n    onExecuteRowAction(row: DataRowActionEvent) {\n        this.executeRowAction.emit(row);\n    }\n\n    private createRequestNode(): ProcessQueryCloudRequestModel {\n        const requestNode = {\n            appName: this.appName,\n            appVersion: this.getAppVersions(),\n            maxItems: this.size,\n            skipCount: this.skipCount,\n            initiator: this.initiator,\n            id: this.id,\n            name: this.name,\n            processDefinitionId: this.processDefinitionId,\n            processDefinitionName: this.processDefinitionName,\n            processDefinitionKey: this.processDefinitionKey,\n            status: this.status,\n            businessKey: this.businessKey,\n            lastModifiedFrom: this.lastModifiedFrom,\n            lastModifiedTo: this.lastModifiedTo,\n            startFrom: this.startFrom,\n            startTo: this.startTo,\n            completedFrom: this.completedFrom,\n            completedTo: this.completedTo,\n            suspendedFrom: this.suspendedFrom,\n            suspendedTo: this.suspendedTo,\n            completedDate: this.completedDate,\n            sorting: this.sorting\n        };\n        return new ProcessQueryCloudRequestModel(requestNode);\n    }\n\n    getAppVersions(): string {\n        return this.appVersion instanceof Array ? this.appVersion.join(',') : (this.appVersion ? String(this.appVersion) : '');\n    }\n\n    setSorting(sortDetail) {\n        const sorting = sortDetail ? {\n            orderBy: sortDetail.key,\n            direction: sortDetail.direction.toUpperCase()\n        } : { ... this.defaultSorting };\n        this.sorting = [new ProcessListCloudSortingModel(sorting)];\n    }\n\n    formatSorting(sorting: ProcessListCloudSortingModel[]) {\n        this.formattedSorting = this.isValidSorting(sorting) ? [\n            sorting[0].orderBy,\n            sorting[0].direction.toLocaleLowerCase()\n        ] : null;\n    }\n\n    isValidSorting(sorting: ProcessListCloudSortingModel[]) {\n        return sorting.length && sorting[0].orderBy && sorting[0].direction;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProcessListCloudComponent } from './components/process-list-cloud.component';\nimport { MaterialModule } from '../../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule\n\n    ],\n    declarations: [ProcessListCloudComponent],\n    exports: [ProcessListCloudComponent]\n})\nexport class ProcessListCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProcessInstanceCloud } from '../models/process-instance-cloud.model';\nimport { ProcessPayloadCloud } from '../models/process-payload-cloud.model';\nimport { ProcessDefinitionCloud } from '../../../models/process-definition-cloud.model';\nimport { BaseCloudService } from '../../../services/base-cloud.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StartProcessCloudService extends BaseCloudService {\n\n    constructor(apiService: AlfrescoApiService,\n                private logService: LogService,\n                appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n    }\n\n    /**\n     * Gets the process definitions associated with an app.\n     * @param appName Name of the target app\n     * @returns Array of process definitions\n     */\n    getProcessDefinitions(appName: string): Observable<ProcessDefinitionCloud[]> {\n        if (appName || appName === '') {\n            const url = `${this.getBasePath(appName)}/rb/v1/process-definitions`;\n\n            return this.get(url).pipe(\n                map((res: any) => {\n                    return res.list.entries.map((processDefs) => new ProcessDefinitionCloud(processDefs.entry));\n                })\n            );\n        } else {\n            this.logService.error('AppName is mandatory for querying task');\n            return throwError('AppName not configured');\n        }\n    }\n\n    /**\n     * Create a process based on a process definition, name, form values or variables.\n     * @param appName name of the Application\n     * @param payload Details of the process (definition key, name, variables, etc)\n     * @returns Details of the process instance just created\n     */\n    createProcess(appName: string, payload: ProcessPayloadCloud): Observable<ProcessInstanceCloud> {\n        const url = `${this.getBasePath(appName)}/rb/v1/process-instances/create`;\n        payload.payloadType = 'CreateProcessInstancePayload';\n\n        return this.post(url, payload).pipe(\n            map((result: any) => result.entry)\n        );\n    }\n\n    /**\n     * Starts an already created process using the process instance id.\n     * @param createdProcessInstanceId process instance id of the process previously created\n     * @returns Details of the process instance just started\n     */\n    startCreatedProcess(appName: string, createdProcessInstanceId: string, payload: ProcessPayloadCloud): Observable<ProcessInstanceCloud> {\n        const url = `${this.getBasePath(appName)}/rb/v1/process-instances/${createdProcessInstanceId}/start`;\n\n        return this.post(url, payload).pipe(\n            map((result: any) => result.entry)\n        );\n    }\n\n    /**\n     * Starts a process based on a process definition, name, form values or variables.\n     * @param appName name of the Application\n     * @param payload Details of the process (definition key, name, variables, etc)\n     * @returns Details of the process instance just started\n     */\n    startProcess(appName: string, payload: ProcessPayloadCloud): Observable<ProcessInstanceCloud> {\n        const url = `${this.getBasePath(appName)}/rb/v1/process-instances`;\n        payload.payloadType = 'StartProcessPayload';\n\n        return this.post(url, payload);\n    }\n\n    /**\n     * Update an existing process instance\n     * @param appName name of the Application\n     * @param processInstanceId process instance to update\n     * @param payload Details of the process (definition key, name, variables, etc)\n     * @returns Details of the process instance just started\n     */\n    updateProcess(appName: string, processInstanceId: string, payload: ProcessPayloadCloud): Observable<ProcessInstanceCloud> {\n        const url = `${this.getBasePath(appName)}/rb/v1/process-instances/${processInstanceId}`;\n        payload.payloadType = 'UpdateProcessPayload';\n\n        return this.put(url, payload).pipe(\n            map((processInstance: any) => processInstance.entry)\n        );\n    }\n\n    /**\n     * Delete an existing process instance\n     * @param appName name of the Application\n     * @param processInstanceId process instance to update\n     */\n    deleteProcess(appName: string, processInstanceId: string): Observable<void> {\n        const url = `${this.getBasePath(appName)}/rb/v1/process-instances/${processInstanceId}`;\n\n        return this.delete(url);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessPayloadCloud {\n    processDefinitionKey: string;\n    name: string;\n    businessKey: string;\n    variables: {};\n    payloadType: string = 'StartProcessPayload';\n\n    constructor(obj?: any) {\n        this.processDefinitionKey = obj && obj.processDefinitionKey ? obj.processDefinitionKey : null;\n        this.name = obj && obj.name ? obj.name : null;\n        this.businessKey = obj && obj.businessKey ? obj.businessKey : null;\n        this.variables = obj && obj.variables ? obj.variables : {};\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { LocalizedDatePipe } from '@alfresco/adf-core';\nimport { ProcessInstanceCloud } from '../process/start-process/models/process-instance-cloud.model';\n\n@Pipe({ name: 'processNameCloud' })\nexport class ProcessNameCloudPipe implements PipeTransform {\n    static DATE_TIME_IDENTIFIER_REG_EXP = new RegExp('%{datetime}', 'i');\n    static PROCESS_DEFINITION_IDENTIFIER_REG_EXP = new RegExp('%{processdefinition}', 'i');\n\n    constructor(private localizedDatePipe: LocalizedDatePipe) {\n    }\n\n    transform(processNameFormat: string, processInstance?: ProcessInstanceCloud): string {\n        let processName = processNameFormat;\n        if (processName.match(ProcessNameCloudPipe.DATE_TIME_IDENTIFIER_REG_EXP)) {\n            const presentDateTime = moment.now();\n            processName = processName.replace(\n                ProcessNameCloudPipe.DATE_TIME_IDENTIFIER_REG_EXP,\n                this.localizedDatePipe.transform(presentDateTime, 'medium')\n            );\n        }\n\n        if (processName.match(ProcessNameCloudPipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP)) {\n            const selectedProcessDefinitionName = processInstance ? processInstance.processDefinitionName : '';\n            processName = processName.replace(\n                ProcessNameCloudPipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP,\n                selectedProcessDefinitionName\n            );\n        }\n        return processName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, OnChanges, OnInit,\n    Output, SimpleChanges, ViewChild, ViewEncapsulation, OnDestroy, HostListener\n} from '@angular/core';\n\nimport { ProcessInstanceCloud } from '../models/process-instance-cloud.model';\nimport { StartProcessCloudService } from '../services/start-process-cloud.service';\nimport { FormControl, Validators, FormGroup, AbstractControl, FormBuilder, ValidatorFn } from '@angular/forms';\nimport { FormModel, ContentLinkModel } from '@alfresco/adf-core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { ProcessPayloadCloud } from '../models/process-payload-cloud.model';\nimport { debounceTime, takeUntil, switchMap, filter, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { ProcessDefinitionCloud } from '../../../models/process-definition-cloud.model';\nimport { Subject, Observable } from 'rxjs';\nimport { TaskVariableCloud } from '../../../form/models/task-variable-cloud.model';\nimport { ProcessNameCloudPipe } from '../../../pipes/process-name-cloud.pipe';\n@Component({\n    selector: 'adf-cloud-start-process',\n    templateUrl: './start-process-cloud.component.html',\n    styleUrls: ['./start-process-cloud.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartProcessCloudComponent implements OnChanges, OnInit, OnDestroy {\n\n    static MAX_NAME_LENGTH: number = 255;\n    static PROCESS_DEFINITION_DEBOUNCE: number = 300;\n    static PROCESS_FORM_DEBOUNCE: number = 400;\n\n    @ViewChild(MatAutocompleteTrigger)\n    inputAutocomplete: MatAutocompleteTrigger;\n\n    /** (required) Name of the app. */\n    @Input()\n    appName: string = '';\n\n    /** Maximum length of the process name. */\n    @Input()\n    maxNameLength: number = StartProcessCloudComponent.MAX_NAME_LENGTH;\n\n    /** Name of the process. */\n    @Input()\n    name: string = '';\n\n    /** Name of the process definition. */\n    @Input()\n    processDefinitionName: string;\n\n    /** Variables to attach to the payload. */\n    @Input()\n    variables: {};\n\n    /** Parameter to pass form field values in the start form if one is associated. */\n    @Input()\n    values: TaskVariableCloud[];\n\n    /** Show/hide the process dropdown list. */\n    @Input()\n    showSelectProcessDropdown: boolean = true;\n\n    /** Emitted when the process is successfully started. */\n    @Output()\n    success = new EventEmitter<ProcessInstanceCloud>();\n\n    /** Emitted when the starting process is cancelled */\n    @Output()\n    cancel = new EventEmitter<ProcessInstanceCloud>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<ProcessInstanceCloud>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter();\n\n    /** Emitted when process definition selection changes. */\n    @Output()\n    processDefinitionSelection: EventEmitter<ProcessDefinitionCloud> = new EventEmitter<ProcessDefinitionCloud>();\n\n    processDefinitionList: ProcessDefinitionCloud[] = [];\n    processDefinitionCurrent: ProcessDefinitionCloud;\n    errorMessageId: string = '';\n    processForm: FormGroup;\n    processPayloadCloud = new ProcessPayloadCloud();\n    filteredProcesses: ProcessDefinitionCloud[] = [];\n    isLoading = false;\n    isFormCloudLoaded = false;\n    formCloud: FormModel;\n    currentCreatedProcess: ProcessInstanceCloud;\n    disableStartButton: boolean = true;\n\n    protected onDestroy$ = new Subject<boolean>();\n    processDefinitionLoaded = false;\n\n    constructor(private startProcessCloudService: StartProcessCloudService,\n                private formBuilder: FormBuilder,\n                private processNameCloudPipe: ProcessNameCloudPipe) {\n    }\n\n    ngOnInit() {\n        this.processForm = this.formBuilder.group({\n            processInstanceName: new FormControl('', [Validators.required, Validators.maxLength(this.getMaxNameLength()), Validators.pattern('^[^\\\\s]+(\\\\s+[^\\\\s]+)*$')]),\n            processDefinition: new FormControl(this.processDefinitionName, [Validators.required, this.processDefinitionNameValidator()])\n        });\n\n        this.processDefinition.valueChanges\n            .pipe(debounceTime(StartProcessCloudComponent.PROCESS_DEFINITION_DEBOUNCE))\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((processDefinitionName) => {\n                this.selectProcessDefinitionByProcesDefinitionName(processDefinitionName);\n            });\n\n        this.processForm.valueChanges\n            .pipe(\n                debounceTime(StartProcessCloudComponent.PROCESS_FORM_DEBOUNCE),\n                tap(() => this.disableStartButton = true),\n                distinctUntilChanged(),\n                filter(() => this.isProcessSelectionValid()),\n                switchMap(() => this.generateProcessInstance())\n            ).pipe(takeUntil(this.onDestroy$))\n            .subscribe((res) => {\n                this.currentCreatedProcess = res;\n                this.disableStartButton = false;\n            });\n\n        if (this.processDefinitionName) {\n            this.processDefinition.setValue(this.processDefinitionName);\n            this.processDefinition.markAsDirty();\n            this.processDefinition.markAsTouched();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['appName'] && changes['appName'].currentValue !== changes['appName'].previousValue) {\n            this.appName = changes['appName'].currentValue;\n\n            if (this.appName || this.appName === '') {\n                this.loadProcessDefinitions();\n            }\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent) {\n        event.cancelBubble = true;\n    }\n\n    hasForm(): boolean {\n        return this.processDefinitionCurrent && !!this.processDefinitionCurrent.formKey;\n    }\n\n    onFormLoaded(form: FormModel) {\n        this.isFormCloudLoaded = true;\n        this.formCloud = form;\n    }\n\n    private isProcessSelectionValid(): boolean {\n        return this.processForm.valid && this.isProcessPayloadValid();\n    }\n\n    private getMaxNameLength(): number {\n        return this.maxNameLength > StartProcessCloudComponent.MAX_NAME_LENGTH ?\n            StartProcessCloudComponent.MAX_NAME_LENGTH : this.maxNameLength;\n    }\n\n    private generateProcessInstance(): Observable<ProcessInstanceCloud> {\n        const createPayload: ProcessPayloadCloud = new ProcessPayloadCloud({\n            name: this.processInstanceName.value,\n            processDefinitionKey: this.processPayloadCloud.processDefinitionKey\n        });\n\n        if (this.currentCreatedProcess && this.processPayloadCloud.processDefinitionKey === this.currentCreatedProcess.processDefinitionKey) {\n            return this.startProcessCloudService.updateProcess(this.appName, this.currentCreatedProcess.id, createPayload);\n        } else {\n            return this.startProcessCloudService.createProcess(this.appName, createPayload);\n        }\n    }\n\n    private selectProcessDefinitionByProcesDefinitionName(processDefinitionName: string): void {\n        this.filteredProcesses = this.getProcessDefinitionListByNameOrKey(processDefinitionName);\n        if (this.isProcessFormValid() &&\n            this.filteredProcesses && this.filteredProcesses.length === 1) {\n            this.setProcessDefinitionOnForm(this.filteredProcesses[0].name);\n        }\n    }\n\n    setProcessDefinitionOnForm(selectedProcessDefinitionName: string) {\n        this.processDefinitionCurrent = this.filteredProcesses.find((process: ProcessDefinitionCloud) =>\n            process.name === selectedProcessDefinitionName || process.key === selectedProcessDefinitionName);\n\n        this.isFormCloudLoaded = false;\n        this.processPayloadCloud.processDefinitionKey = this.processDefinitionCurrent.key;\n    }\n\n    private getProcessDefinitionListByNameOrKey(processDefinitionName: string): ProcessDefinitionCloud[] {\n        return this.processDefinitionList.filter((processDefinitionCloud) => {\n            return !processDefinitionName || this.getProcessDefinition(processDefinitionCloud, processDefinitionName);\n        });\n    }\n\n    private getProcessIfExists(processDefinition: string): ProcessDefinitionCloud {\n        let matchedProcess = this.processDefinitionList.find((option) => this.getProcessDefinition(option, processDefinition));\n        if (!matchedProcess) {\n            matchedProcess = new ProcessDefinitionCloud();\n        }\n\n        return matchedProcess;\n    }\n\n    private getProcessDefinitionByName(processDefinitionName: string): ProcessDefinitionCloud {\n        const matchedProcess = processDefinitionName ? this.getProcessIfExists(processDefinitionName) : this.processDefinitionList[0];\n        return matchedProcess;\n    }\n\n    private selectDefaultProcessDefinition() {\n        const selectedProcess = this.getProcessDefinitionByName(this.processDefinitionName);\n        if (selectedProcess) {\n            this.processDefinition.setValue(selectedProcess.name);\n            this.processDefinitionSelectionChanged(selectedProcess);\n        }\n    }\n\n    public loadProcessDefinitions() {\n        this.resetErrorMessage();\n\n        this.startProcessCloudService.getProcessDefinitions(this.appName)\n            .pipe(\n                tap(() => this.processDefinitionLoaded = true),\n                takeUntil(this.onDestroy$))\n            .subscribe((processDefinitionRepresentations: ProcessDefinitionCloud[]) => {\n                    this.processDefinitionList = processDefinitionRepresentations;\n                    if (processDefinitionRepresentations.length === 1) {\n                        this.selectDefaultProcessDefinition();\n                    } else if (this.processDefinitionName) {\n                        this.processDefinition.setValue(this.processDefinitionName);\n                    }\n                },\n                () => {\n                    this.errorMessageId = 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.LOAD_PROCESS_DEFS';\n                });\n    }\n\n    private isValidName(name: string): boolean {\n        return !!name;\n    }\n\n    isProcessFormValid(): boolean {\n        if (this.hasForm() && this.isFormCloudLoaded) {\n            return this.formCloud.isValid || this.isLoading;\n        } else {\n            return this.processForm.valid || this.isLoading;\n        }\n    }\n\n    private isProcessPayloadValid(): boolean {\n        return !!this.processPayloadCloud.processDefinitionKey;\n    }\n\n    private getProcessDefinition(processDefinitionCloud: ProcessDefinitionCloud, processDefinitionName: string): boolean {\n        return (this.isValidName(processDefinitionCloud.name) && processDefinitionCloud.name.toLowerCase().includes(processDefinitionName.toLowerCase())) ||\n            (processDefinitionCloud.key && processDefinitionCloud.key.toLowerCase().includes(processDefinitionName.toLowerCase()));\n    }\n\n    isProcessDefinitionsEmpty(): boolean {\n        return this.processDefinitionList.length === 0;\n    }\n\n    buildProcessCloudPayload() {\n        this.processPayloadCloud.name = this.processInstanceName.value;\n        if (this.variables) {\n            this.processPayloadCloud.variables = this.variables;\n        }\n\n        if (this.hasForm()) {\n            this.processPayloadCloud.variables = Object.assign(this.processPayloadCloud.variables, this.formCloud.values);\n        }\n    }\n\n    startProcess() {\n        this.isLoading = true;\n        this.buildProcessCloudPayload();\n        this.startProcessCloudService.startCreatedProcess(this.appName,\n            this.currentCreatedProcess.id,\n            this.processPayloadCloud)\n            .subscribe(\n                (res) => {\n                    this.success.emit(res);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.errorMessageId = 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.START';\n                    this.error.emit(err);\n                    this.isLoading = false;\n                }\n            );\n    }\n\n    async cancelStartProcess() {\n        if (this.currentCreatedProcess) {\n            await this.startProcessCloudService.deleteProcess(this.appName, this.currentCreatedProcess.id);\n        }\n\n        this.currentCreatedProcess = null;\n        this.cancel.emit();\n    }\n\n    private resetErrorMessage() {\n        this.errorMessageId = '';\n    }\n\n    private resetProcessDefinitionList() {\n        this.processDefinition.setValue('');\n        this.filteredProcesses = this.processDefinitionList;\n    }\n\n    displayProcessNameOnDropdown(process: any) {\n        if (process) {\n            let processName = process;\n            if (typeof process !== 'string') {\n                processName = process.name;\n            }\n            return processName;\n        }\n    }\n\n    displayDropdown(event) {\n        event.stopPropagation();\n        if (!this.inputAutocomplete.panelOpen) {\n            this.resetProcessDefinitionList();\n            this.inputAutocomplete.openPanel();\n        } else {\n            this.inputAutocomplete.closePanel();\n        }\n    }\n\n    processDefinitionNameValidator(): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } | null => {\n            const processDefinitionFieldValue = control.value;\n            let processDefinitionNameError = false;\n\n            if (processDefinitionFieldValue) {\n                const processDefinition = this.getProcessIfExists(processDefinitionFieldValue);\n                if (!processDefinition.key) {\n                    processDefinitionNameError = true;\n                }\n            }\n\n            return processDefinitionNameError ? { 'invalid name': true } : null;\n        };\n    }\n\n    getProcessDefinitionValue(process: ProcessDefinitionCloud): string {\n        return !!process.name ? process.name : process.key;\n    }\n\n    get processInstanceName(): AbstractControl {\n        return this.processForm.get('processInstanceName');\n    }\n\n    get processDefinition(): AbstractControl {\n        return this.processForm.get('processDefinition');\n    }\n\n    onFormContentClicked(content: ContentLinkModel) {\n        this.formContentClicked.emit(content);\n    }\n\n    processDefinitionSelectionChanged(processDefinition: ProcessDefinitionCloud) {\n        if (processDefinition) {\n            const processInstanceDetails: ProcessInstanceCloud = { processDefinitionName: processDefinition.name };\n            const defaultProcessName = this.processNameCloudPipe.transform(this.name, processInstanceDetails);\n            this.processInstanceName.setValue(defaultProcessName);\n            this.processInstanceName.markAsDirty();\n            this.processInstanceName.markAsTouched();\n            this.processDefinitionSelection.emit(processDefinition);\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '../../material.module';\nimport { FormCloudModule } from '../../form/form-cloud.module';\nimport { StartProcessCloudComponent } from './components/start-process-cloud.component';\nimport { CoreModule } from '@alfresco/adf-core';\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        FormCloudModule,\n        MaterialModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n        CoreModule\n    ],\n    declarations: [\n        StartProcessCloudComponent\n    ],\n    exports: [\n        StartProcessCloudComponent\n    ]\n})\nexport class StartProcessCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, OnInit, OnDestroy, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { CardViewItem, CardViewTextItemModel, TranslationService, AppConfigService, CardViewDateItemModel, CardViewBaseItemModel } from '@alfresco/adf-core';\nimport { ProcessInstanceCloud } from '../../start-process/models/process-instance-cloud.model';\nimport { ProcessCloudService } from '../../services/process-cloud.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-cloud-process-header',\n    templateUrl: './process-header-cloud.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-cloud-process-header' }\n})\nexport class ProcessHeaderCloudComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** (Required) The name of the application. */\n    @Input()\n    appName: string = '';\n\n    /** (Required) The id of the process instance. */\n    @Input()\n    processInstanceId: string;\n\n    processInstanceDetails: ProcessInstanceCloud;\n    properties: CardViewItem[];\n    dateFormat: string;\n    dateLocale: string;\n\n    /** Gets emitted each time a new process instance details are loaded. */\n    loaded = new EventEmitter<ProcessInstanceCloud>();\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private processCloudService: ProcessCloudService,\n        private translationService: TranslationService,\n        private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n        this.dateLocale = this.appConfig.get('dateValues.defaultDateLocale');\n\n        this.processCloudService.dataChangesDetected\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((processDetails) => this.onLoaded(processDetails));\n    }\n\n    ngOnChanges() {\n        if ((this.appName || this.appName === '') && this.processInstanceId) {\n            this.loadProcessInstanceDetails(this.appName, this.processInstanceId);\n        }\n    }\n\n    private loadProcessInstanceDetails(appName: string, processInstanceId: string) {\n        this.processCloudService\n            .getProcessInstanceById(appName, processInstanceId)\n            .subscribe((result) => this.onLoaded(result));\n    }\n\n    private onLoaded(processInstanceDetails: ProcessInstanceCloud) {\n        this.processInstanceDetails = processInstanceDetails;\n        this.refreshData();\n\n        this.loaded.emit(processInstanceDetails);\n    }\n\n    /**\n     * Refresh the card data\n     */\n    refreshData() {\n        if (this.processInstanceDetails) {\n            const defaultProperties = this.initDefaultProperties();\n            const filteredProperties = this.appConfig.get<string[]>('adf-cloud-process-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    private initDefaultProperties(): any[] {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.ID',\n                    value: this.processInstanceDetails.id,\n                    key: 'id'\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NAME',\n                    value: this.processInstanceDetails.name,\n                    key: 'name',\n                    default: this.translationService.instant('ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NAME_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.STATUS',\n                    value: this.processInstanceDetails.status,\n                    key: 'status'\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.INITIATOR',\n                    value: this.processInstanceDetails.initiator,\n                    key: 'initiator'\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.START_DATE',\n                    value: this.processInstanceDetails.startDate,\n                    key: 'startDate',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.LAST_MODIFIED',\n                    value: this.processInstanceDetails.lastModified,\n                    key: 'lastModified',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.PARENT_ID',\n                    value: this.processInstanceDetails.parentId,\n                    key: 'parentId',\n                    default: this.translationService.instant('ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NONE')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_CLOUD_PROCESS_HEADER.PROPERTIES.BUSINESS_KEY',\n                    value: this.processInstanceDetails.businessKey,\n                    key: 'businessKey',\n                    default: this.translationService.instant('ADF_CLOUD_PROCESS_HEADER.PROPERTIES.NONE')\n                })\n        ];\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ProcessHeaderCloudComponent } from './components/process-header-cloud.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule\n\n    ],\n    declarations: [ProcessHeaderCloudComponent],\n    exports: [ProcessHeaderCloudComponent]\n})\nexport class ProcessHeaderCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Directive, HostListener, Output, EventEmitter, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { IdentityUserService } from '@alfresco/adf-core';\nimport { ProcessCloudService } from '../services/process-cloud.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ProcessInstanceCloud } from '../start-process/models/process-instance-cloud.model';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[adf-cloud-cancel-process]'\n})\nexport class CancelProcessDirective implements OnInit, OnDestroy {\n\n    /** Emitted when the process is cancelled. */\n    @Output()\n    success = new EventEmitter<any>();\n\n    /** Emitted when the process cannot be cancelled. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    processInstanceDetails: ProcessInstanceCloud;\n\n    canCancelProcess = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private elementRef: ElementRef,\n        private processCloudService: ProcessCloudService,\n        private identityUserService: IdentityUserService) {}\n\n    ngOnInit() {\n        this.processCloudService.dataChangesDetected\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((processDetails) => {\n                this.processInstanceDetails = processDetails;\n                this.canCancelProcess = this.checkCanCancelProcess();\n                this.setElementVisibility();\n            });\n    }\n\n    @HostListener('click')\n    onClick() {\n        this.cancelProcess();\n    }\n\n    private setElementVisibility() {\n        this.elementRef.nativeElement.disabled = !this.canCancelProcess;\n    }\n\n    checkCanCancelProcess(): boolean {\n        const currentUser = this.identityUserService.getCurrentUserInfo().username;\n        return this.processInstanceDetails.initiator === currentUser && this.processInstanceDetails.status === 'RUNNING';\n    }\n\n    cancelProcess() {\n        if (this.canCancelProcess) {\n            this.processCloudService.cancelProcess(this.processInstanceDetails.appName, this.processInstanceDetails.id)\n                .subscribe(\n                    (response) => this.success.emit(response),\n                    (error) => this.error.emit(error)\n                );\n        } else {\n            this.error.emit('Permission denied, only process initiator can cancel the process');\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CancelProcessDirective } from './cancel-process.directive';\n\n@NgModule({\n    declarations: [\n        CancelProcessDirective\n    ],\n    exports: [\n        CancelProcessDirective\n    ]\n})\nexport class ProcessDirectiveModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ProcessFiltersCloudModule } from './process-filters/process-filters-cloud.module';\nimport { ProcessListCloudModule } from './process-list/process-list-cloud.module';\nimport { StartProcessCloudModule } from './start-process/start-process-cloud.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ProcessHeaderCloudModule } from './process-header/process-header-cloud.module';\nimport { ProcessDirectiveModule } from './directives/process-directive.module';\nimport { ProcessNameCloudPipe } from '../pipes/process-name-cloud.pipe';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        ProcessFiltersCloudModule,\n        ProcessListCloudModule,\n        StartProcessCloudModule,\n        ProcessHeaderCloudModule,\n        ProcessDirectiveModule\n    ],\n    exports: [\n        ProcessFiltersCloudModule,\n        ProcessListCloudModule,\n        StartProcessCloudModule,\n        ProcessHeaderCloudModule,\n        ProcessDirectiveModule\n    ],\n    providers: [ProcessNameCloudPipe]\n})\nexport class ProcessCloudModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { PreferenceCloudServiceInterface } from './preference-cloud.interface';\nimport { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';\nimport { throwError, Observable } from 'rxjs';\nimport { BaseCloudService } from './base-cloud.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserPreferenceCloudService extends BaseCloudService implements PreferenceCloudServiceInterface {\n\n  constructor(\n    apiService: AlfrescoApiService,\n    appConfigService: AppConfigService,\n    private logService: LogService) {\n    super(apiService, appConfigService);\n  }\n\n  /**\n   * Gets user preferences\n   * @param appName Name of the target app\n   * @returns List of user preferences\n   */\n  getPreferences(appName: string): Observable<any> {\n    if (appName) {\n      const url = `${this.getBasePath(appName)}/preference/v1/preferences`;\n      return this.get(url);\n    } else {\n      this.logService.error('Appname is mandatory for querying preferences');\n      return throwError('Appname not configured');\n    }\n  }\n\n  /**\n   * Gets user preference.\n   * @param appName Name of the target app\n   * @param key Key of the target preference\n   * @returns Observable of user preference\n   */\n  getPreferenceByKey(appName: string, key: string): Observable<any> {\n    if (appName) {\n      const url = `${this.getBasePath(appName)}/preference/v1/preferences/${key}`;\n      return this.get(url);\n    } else {\n      this.logService.error('Appname and key are mandatory for querying preference');\n      return throwError('Appname not configured');\n    }\n  }\n\n  /**\n   * Creates user preference.\n   * @param appName Name of the target app\n   * @param key Key of the target preference\n   * @newPreference Details of new user preference\n   * @returns Observable of created user preferences\n   */\n  createPreference(appName: string, key: string, newPreference: any): Observable<any> {\n    if (appName) {\n      const url = `${this.getBasePath(appName)}/preference/v1/preferences/${key}`;\n      const payload = JSON.stringify(newPreference);\n\n      return this.put(url, payload);\n    } else {\n      this.logService.error('Appname  and key are  mandatory for creating preference');\n      return throwError('Appname not configured');\n    }\n  }\n\n  /**\n   * Updates user preference.\n   * @param appName Name of the target app\n   * @param key Key of the target preference\n   * @param updatedPreference Details of updated preference\n   * @returns Observable of updated user preferences\n   */\n  updatePreference(appName: string, key: string, updatedPreference: any): Observable<any> {\n    return this.createPreference(appName, key, updatedPreference);\n  }\n\n  /**\n   * Deletes user preference by given preference key.\n   * @param appName Name of the target app\n   * @param key Key of the target preference\n   * @returns Observable of delete operation status\n   */\n  deletePreference(appName: string, key: string): Observable<any> {\n    if (appName) {\n      const url = `${this.getBasePath(appName)}/preference/v1/preferences/${key}`;\n      return this.delete(url);\n    } else {\n      this.logService.error('Appname and key are mandatory to delete preference');\n      return throwError('Appname not configured');\n    }\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { PreferenceCloudServiceInterface } from './preference-cloud.interface';\nimport { StorageService } from '@alfresco/adf-core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class LocalPreferenceCloudService implements PreferenceCloudServiceInterface {\n\n  constructor(private storage: StorageService) { }\n\n    /**\n     * Gets local preferences\n     * @param _ Name of the target app\n     * @param key Key of the target preference\n     * @returns List of local preferences\n     */\n    getPreferences(_: string, key: string): Observable<any> {\n        if (key || key === '') {\n            return of(this.prepareLocalPreferenceResponse(key));\n        }\n        return of(\n            {\n                'list': {\n                    'entries': []\n                }\n            }\n        );\n    }\n\n    /**\n     * Gets local preference.\n     * @param _ Name of the target app\n     * @param key Key of the target preference\n     * @returns Observable of local preference\n     */\n    getPreferenceByKey(_: string, key: string): Observable<any> {\n        return of(JSON.parse(this.storage.getItem(key)) || []);\n    }\n\n    /**\n     * Creates local preference.\n     * @param _ Name of the target app\n     * @param key Key of the target preference\n     * @param newPreference Details of new local preference\n     * @returns Observable of created local preferences\n     */\n    createPreference(_: string, key: string, newPreference: any): Observable<any> {\n        const storedFilters = JSON.parse(this.storage.getItem(key) || '[]');\n        storedFilters.push(...newPreference);\n        this.storage.setItem(key, JSON.stringify(storedFilters));\n        return of(storedFilters);\n    }\n\n    /**\n     * Updates local preference.\n     * @param _ Name of the target app\n     * @param key Key of the target preference\n     * @param updatedPreference Details of updated preference\n     * @returns Observable of updated local preferences\n     */\n    updatePreference(_: string, key: string, updatedPreference: any): Observable<any> {\n        if (key) {\n            this.storage.setItem(key, JSON.stringify(updatedPreference));\n        }\n        return of(updatedPreference);\n    }\n\n    /**\n     * Deletes local preference by given preference key.\n     * @param key Key of the target preference\n     * @param preferences Details of updated preferences\n     * @returns Observable of preferences without deleted preference\n     */\n    deletePreference(key: string, preferences: any): Observable<any> {\n        if (key) {\n            this.storage.setItem(key, JSON.stringify(preferences));\n        }\n        return of(preferences);\n    }\n\n    prepareLocalPreferenceResponse(key: string): any {\n        return {\n            'list': {\n                'entries': [\n                    {\n                        'entry': {\n                            'key': key,\n                            'value': this.storage.getItem(key) || '[]'\n                        }\n                    }\n                ]\n            }\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\n\nexport interface PreferenceCloudServiceInterface {\n\n    getPreferences(appName: string, key?: string): Observable<any>;\n    getPreferenceByKey(appName: string, key: string): Observable<any>;\n    createPreference(appName: string, key: string, newPreference: any): Observable<any>;\n    updatePreference(appName: string, key: string, updatedPreference: any): Observable<any>;\n    deletePreference(appName: string, key: any): Observable<any>;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Moment } from 'moment';\n\nexport interface FormContent {\n    formRepresentation: FormRepresentation;\n}\n\nexport interface FormRepresentation {\n    id: string;\n    name: string;\n    description: string;\n    version?: number;\n    formDefinition?: FormDefinition;\n    standAlone?: boolean;\n}\n\nexport interface FormTab {\n    id: string;\n    title: string;\n    visibilityCondition: VisibilityCondition | null;\n}\n\nexport interface FormOutcome {\n    id: string;\n    name: string;\n}\n\nexport interface FormDefinition {\n    tabs: FormTab[];\n    fields: Container[] | HeaderRepresentation[];\n    outcomes: FormOutcome[];\n    metadata: {};\n    variables: any[];\n}\n\nexport interface Container {\n    id: string;\n    type: string;\n    tab: string;\n    name: string;\n    numberOfColumns: number;\n    fields: {\n        [key: string]: FormFieldRepresentation[]\n    };\n}\n\nexport type FormFieldRepresentation = (DateField | DateTimeField | TextField | AttachFileField | DropDownField |\n    RadioField | TypeaheadField | PeopleField | AmountField | NumberField | CheckboxField | HyperlinkField );\n\nexport interface AttachFileField extends FormField {\n    required: boolean;\n}\n\nexport interface TypeaheadField extends RestField {\n    required: boolean;\n}\n\nexport interface RestField extends FormField {\n    required: boolean;\n    restUrl: string;\n    restResponsePath: string;\n    restIdProperty: string;\n    restLabelProperty: string;\n}\n\nexport interface HeaderRepresentation extends Container {\n    numberOfColumns: number;\n    params: {\n        [key: string]: any\n    };\n    visibilityCondition: VisibilityCondition;\n}\n\nexport interface ColumnDefinitionRepresentation extends Container {\n    id: string;\n    name: string;\n    type: string;\n    value: any;\n    required: boolean;\n    editable: boolean;\n    sortable: boolean;\n    visible: boolean;\n}\n\nexport interface DynamicTableRepresentation extends FormField {\n    required: boolean;\n    tab: string;\n    placeholder: string;\n    columnDefinitions: ColumnDefinitionRepresentation[];\n}\n\nexport interface VisibilityCondition {\n    leftType: string;\n    leftValue: string;\n    operator: string;\n    rightValue: string | number | Date | Moment;\n    rightType: string;\n    nextConditionOperator?: string;\n    nextCondition?: VisibilityCondition;\n}\n\nexport interface FormField {\n    id: string;\n    name: string;\n    value: any;\n    type: FormFieldType | string;\n    readOnly?: boolean;\n    colspan: number;\n    params: {\n        [anyKey: string]: any\n    };\n    visibilityCondition: null | VisibilityCondition;\n}\n\nexport interface FormOption {\n    id: string;\n    name: string;\n}\n\nexport interface OptionsField {\n    value: any;\n    restUrl: string | null;\n    restResponsePath: string | null;\n    restIdProperty: string | null;\n    restLabelProperty: string | null;\n    optionType: 'manual' | 'rest';\n    options: FormOption[];\n}\n\nexport interface AmountField extends FormField {\n    required: boolean;\n    placeholder: string | null;\n    minValue: number | null;\n    maxValue: number | null;\n    enableFractions: boolean;\n    currency: string;\n}\n\nexport interface CheckboxField extends FormField {\n    required: boolean;\n}\n\nexport interface DateField extends FormField {\n    required: boolean;\n    placeholder: string | null;\n    minValue: string | null;\n    maxValue: string | null;\n    dateDisplayFormat: string;\n}\n\nexport interface DateTimeField extends FormField {\n    required: boolean;\n    placeholder: string | null;\n    minValue: string | null;\n    maxValue: string | null;\n    dateDisplayFormat: string;\n}\n\nexport interface DropDownField extends OptionsField, FormField {\n    required: boolean;\n}\n\nexport interface HyperlinkField extends FormField {\n    hyperlinkUrl: string | null;\n    displayText: string | null;\n}\n\nexport interface NumberField extends FormField {\n    placeholder: string | null;\n    minValue: number | null;\n    maxValue: number | null;\n    required: boolean;\n}\n\nexport interface RadioField extends OptionsField, FormField {\n    required: boolean;\n}\n\nexport interface TextField extends FormField {\n    regexPattern: string | null;\n    required: boolean;\n    minLength: number;\n    maxLength: number;\n    placeholder: string | null;\n}\n\nexport enum PeopleModeOptions {\n    single = 'single',\n    multiple = 'multiple'\n}\n\nexport interface PeopleField extends FormField {\n    required: boolean;\n    optionType: PeopleModeOptions;\n}\n\nexport enum FormFieldType {\n    text = 'text',\n    multiline = 'multi-line-text',\n    number = 'integer',\n    checkbox = 'boolean',\n    date = 'date',\n    datetime = 'datetime',\n    dropdown = 'dropdown',\n    typeahead = 'typeahead',\n    amount = 'amount',\n    radio = 'radio-buttons',\n    people = 'people',\n    groupOfPeople = 'functional-group',\n    dynamicTable = 'dynamicTable',\n    hyperlink = 'hyperlink',\n    header = 'group',\n    uploadFile = 'upload',\n    uploadFolder = 'uploadFolder',\n    displayValue = 'readonly',\n    displayText = 'readonly-text',\n    fileViewer = 'file-viewer'\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './user-preference-cloud.service';\nexport * from './local-preference-cloud.service';\nexport * from './cloud-token.service';\nexport * from './notification-cloud.service';\nexport * from './preference-cloud.interface';\nexport * from './form-fields.interfaces';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { FormRenderingService } from '@alfresco/adf-core';\nimport { AttachFileCloudWidgetComponent } from './widgets/attach-file/attach-file-cloud-widget.component';\nimport { DropdownCloudWidgetComponent } from './widgets/dropdown/dropdown-cloud.widget';\nimport { DateCloudWidgetComponent } from './widgets/date/date-cloud.widget';\nimport { PeopleCloudWidgetComponent } from './widgets/people/people-cloud.widget';\nimport { GroupCloudWidgetComponent } from './widgets/group/group-cloud.widget';\nimport { PropertiesViewerWidgetComponent } from './widgets/properties-viewer/properties-viewer.widget';\nimport { RadioButtonsCloudWidgetComponent } from './widgets/radio-buttons/radio-buttons-cloud.widget';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CloudFormRenderingService extends FormRenderingService {\n    constructor() {\n        super();\n\n        this.register({\n            'upload': () => AttachFileCloudWidgetComponent,\n            'dropdown': () => DropdownCloudWidgetComponent,\n            'date': () => DateCloudWidgetComponent,\n            'people': () => PeopleCloudWidgetComponent,\n            'functional-group': () => GroupCloudWidgetComponent,\n            'properties-viewer': () => PropertiesViewerWidgetComponent,\n            'radio-buttons': () => RadioButtonsCloudWidgetComponent\n        }, true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ProcessNameCloudPipe } from './process-name-cloud.pipe';\n\n@NgModule({\n    declarations: [\n        ProcessNameCloudPipe\n    ],\n    exports: [\n        ProcessNameCloudPipe\n    ]\n})\nexport class ProcessServicesCloudPipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TRANSLATION_PROVIDER, CoreModule, FormRenderingService } from '@alfresco/adf-core';\nimport { AppListCloudModule } from './app/app-list-cloud.module';\nimport { TaskCloudModule } from './task/task-cloud.module';\nimport { ProcessCloudModule } from './process/process-cloud.module';\nimport { GroupCloudModule } from './group/group-cloud.module';\nimport { FormCloudModule } from './form/form-cloud.module';\nimport { TaskFormModule } from './task/task-form/task-form.module';\nimport {\n    LocalPreferenceCloudService,\n    PreferenceCloudServiceInterface,\n    PROCESS_FILTERS_SERVICE_TOKEN,\n    TASK_FILTERS_SERVICE_TOKEN\n} from './services/public-api';\nimport { PeopleCloudModule } from './people/people-cloud.module';\nimport { CloudFormRenderingService } from './form/components/cloud-form-rendering.service';\nimport { ProcessServicesCloudPipeModule } from './pipes/process-services-cloud-pipe.module';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        AppListCloudModule,\n        ProcessCloudModule,\n        TaskCloudModule,\n        GroupCloudModule,\n        PeopleCloudModule,\n        FormCloudModule,\n        TaskFormModule,\n        ProcessServicesCloudPipeModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-process-services-cloud',\n                source: 'assets/adf-process-services-cloud'\n            }\n        }\n    ],\n    exports: [\n        AppListCloudModule,\n        ProcessCloudModule,\n        TaskCloudModule,\n        GroupCloudModule,\n        FormCloudModule,\n        TaskFormModule,\n        PeopleCloudModule,\n        ProcessServicesCloudPipeModule\n    ]\n})\nexport class ProcessServicesCloudModule {\n    static forRoot(preferenceServiceInstance?: PreferenceCloudServiceInterface): ModuleWithProviders<ProcessServicesCloudModule> {\n        return {\n            ngModule: ProcessServicesCloudModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-process-services-cloud',\n                        source: 'assets/adf-process-services-cloud'\n                    }\n                },\n                { provide: PROCESS_FILTERS_SERVICE_TOKEN, useExisting: preferenceServiceInstance ?? LocalPreferenceCloudService },\n                { provide: TASK_FILTERS_SERVICE_TOKEN, useExisting: preferenceServiceInstance ?? LocalPreferenceCloudService },\n                FormRenderingService,\n                { provide: FormRenderingService, useClass: CloudFormRenderingService }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders<ProcessServicesCloudModule> {\n        return {\n            ngModule: ProcessServicesCloudModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/app-list-cloud.component';\nexport * from './components/app-details-cloud.component';\nexport * from './services/apps-process-cloud.service';\nexport * from './models/application-instance.model';\nexport * from './app-list-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/process-list-cloud.component';\n\nexport * from './models/process-cloud-query-request.model';\nexport * from './models/process-cloud-preset.model';\nexport * from './models/process-list-sorting.model';\n\nexport * from './services/process-list-cloud.service';\n\nexport * from './process-list-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/process-filters-cloud.component';\nexport * from './components/edit-process-filter-cloud.component';\nexport * from './components/process-filter-dialog-cloud.component';\nexport * from './models/process-filter-cloud.model';\nexport * from './services/process-filter-cloud.service';\nexport * from './process-filters-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ProcessInstanceCloud {\n    appName?: string;\n    id?: string;\n    name?: string;\n    startDate?: Date;\n    initiator?: string;\n    status?: string;\n    businessKey?: string;\n    lastModified?: Date;\n    parentId?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/start-process-cloud.component';\n\nexport * from './models/process-instance-cloud.model';\nexport * from './models/process-payload-cloud.model';\n\nexport * from './services/start-process-cloud.service';\nexport * from './start-process-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './process-header-cloud.module';\nexport * from './components/process-header-cloud.component';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './cancel-process.directive';\n\nexport * from './process-directive.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './process-list/public-api';\nexport * from './process-filters/public-api';\nexport * from './start-process/public-api';\nexport * from './process-header/public-api';\nexport * from './directives/public-api';\nexport * from './services/process-cloud.service';\n\nexport * from './process-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskListCloudSortingModel } from './task-list-sorting.model';\n\nexport interface ServiceTaskQueryCloudRequestModel {\n    appName: string;\n    appVersion?: string;\n    id?: string;\n    status?: string;\n    maxItems: number;\n    skipCount: number;\n    sorting?: TaskListCloudSortingModel[];\n    activityName?: string;\n    activityType?: string;\n    completedDate?: Date;\n    elementId?: string;\n    executionId?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionVersion?: number;\n    processInstanceId?: string;\n    serviceFullName?: string;\n    serviceName?: string;\n    serviceVersion?: string;\n    startedDate?: Date;\n}\n\nexport interface ServiceTaskIntegrationContextCloudModel extends ServiceTaskQueryCloudRequestModel {\n    errorDate?: Date;\n    errorClassName?: string;\n    errorCode?: string;\n    errorMessage?: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/task-list-cloud.component';\nexport * from './components/service-task-list-cloud.component';\n\nexport * from './models/filter-cloud-model';\nexport * from './models/service-task-cloud.model';\nexport * from './models/task-list-sorting.model';\nexport * from './models/task-preset-cloud.model';\n\nexport * from './services/task-list-cloud.service';\nexport * from './services/service-task-list-cloud.service';\n\nexport * from './task-list-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/task-filters-cloud.component';\nexport * from './components/service-task-filters-cloud.component';\nexport * from './components/edit-task-filters/edit-task-filter-cloud.component';\nexport * from './components/edit-task-filters/edit-service-task-filter-cloud.component';\n\nexport * from './models/filter-cloud.model';\n\nexport * from './services/task-filter-cloud.service';\nexport * from './services/service-task-filter-cloud.service';\n\nexport * from './task-filters-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface TaskDetailsCloudModel {\n    id?: string;\n    name?: string;\n    appName?: string;\n    assignee?: string;\n    appVersion?: number;\n    createdDate?: Date;\n    claimedDate?: Date;\n    completedDate?: Date;\n    formKey?: any;\n    category?: any;\n    description?: string;\n    dueDate?: Date;\n    lastModified?: Date;\n    lastModifiedTo?: Date;\n    lastModifiedFrom?: Date;\n    owner?: any;\n    parentTaskId?: string;\n    priority?: number;\n    processDefinitionId?: string;\n    processInstanceId?: string;\n    status?: TaskStatus;\n    standalone?: boolean;\n    candidateUsers?: string[];\n    candidateGroups?: string[];\n    managerOfCandidateGroup?: boolean;\n    memberOfCandidateGroup?: boolean;\n    memberOfCandidateUsers?: boolean;\n    processDefinitionDeploymentId?: string;\n}\n\nexport interface StartTaskCloudResponseModel {\n    entry: TaskDetailsCloudModel;\n}\n\nexport type TaskStatus = |\n    'COMPLETED' |\n    'CREATED' |\n    'ASSIGNED' |\n    'SUSPENDED' |\n    'CANCELLED';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './models/task-details-cloud.model';\nexport * from './components/start-task-cloud.component';\nexport * from './start-task-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/task-header-cloud.component';\n\nexport * from './task-header-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/task-form-cloud.component';\n\nexport * from './task-form.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './claim-task-cloud.directive';\nexport * from './unclaim-task-cloud.directive';\nexport * from './complete-task.directive';\n\nexport * from './task-directive.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n export * from './task.model';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StartTaskCloudRequestModel } from '../start-task/models/start-task-cloud-request.model';\nimport { TaskDetailsCloudModel, StartTaskCloudResponseModel } from '../start-task/models/task-details-cloud.model';\nimport { BaseCloudService } from '../../services/base-cloud.service';\n\n@Injectable({ providedIn: 'root' })\nexport class StartTaskCloudService extends BaseCloudService {\n\n    constructor(\n        apiService: AlfrescoApiService,\n        appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n    }\n\n     /**\n      * @deprecated in 3.5.0, use TaskCloudService instead.\n      * Creates a new standalone task.\n      * @param taskDetails Details of the task to create\n      * @returns Details of the newly created task\n      */\n    createNewTask(taskDetails: TaskDetailsCloudModel): Observable<TaskDetailsCloudModel> {\n        const url = `${this.getBasePath(taskDetails.appName)}/rb/v1/tasks`;\n        const payload = JSON.stringify(new StartTaskCloudRequestModel(taskDetails));\n\n        return this.post<any, StartTaskCloudResponseModel>(url, payload)\n            .pipe(\n                map(response => response.entry)\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './task-list/public-api';\nexport * from './task-filters/public-api';\nexport * from './start-task/public-api';\nexport * from './task-header/public-api';\nexport * from './task-form/public-api';\nexport * from './directives/public-api';\nexport * from './models/public-api';\n\nexport * from './services/task-cloud.service';\nexport * from './services/start-task-cloud.service';\n\nexport * from './task-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/group-cloud.component';\nexport * from './pipe/group-initial.pipe';\nexport * from './group-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/people-cloud.component';\n\nexport * from './people-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './models/task-variable-cloud.model';\n\nexport * from './components/form-cloud-custom-outcomes.component';\nexport * from './components/form-cloud.component';\nexport * from './components/form-definition-selector-cloud.component';\nexport * from './components/cloud-form-rendering.service';\n\nexport * from './components/widgets/attach-file/attach-file-cloud-widget.component';\nexport * from './components/widgets/attach-file/upload-cloud.widget';\nexport * from './components/widgets/date/date-cloud.widget';\nexport * from './components/widgets/dropdown/dropdown-cloud.widget';\nexport * from './components/widgets/group/group-cloud.widget';\nexport * from './components/widgets/people/people-cloud.widget';\nexport * from './components/widgets/properties-viewer/properties-viewer.widget';\n\nexport * from './services/content-cloud-node-selector.service';\nexport * from './services/form-cloud.service';\nexport * from './services/form-definition-selector-cloud.service';\nexport * from './services/content-cloud-node-selector.service';\nexport * from './services/process-cloud-content.service';\n\nexport * from './form-cloud.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type ComponentSelectionMode = 'single' | 'multiple';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from '@alfresco/js-api';\n\nexport class ApplicationVersionModel {\n    entry: {\n        id: string;\n        name: string;\n        version: string;\n    };\n\n}\n\nexport class ApplicationVersionResponseModel {\n    list: {\n        entries: ApplicationVersionModel[];\n        pagination: Pagination;\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsCloudModel } from '../task/start-task/models/task-details-cloud.model';\n\nexport interface TaskCloudEngineEvent {\n    eventType: string;\n    entity: TaskDetailsCloudModel;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './lib/process-services-cloud.module';\nexport * from './lib/app/public-api';\nexport * from './lib/process/public-api';\nexport * from './lib/task/public-api';\nexport * from './lib/group/public-api';\nexport * from './lib/people/public-api';\nexport * from './lib/form/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/types';\nexport * from './lib/pipes/process-name-cloud.pipe';\nexport * from './lib/pipes/process-services-cloud-pipe.module';\nexport * from './lib/models/process-definition-cloud.model';\nexport * from './lib/models/date-cloud-filter.model';\nexport * from './lib/models/application-version.model';\nexport * from './lib/models/engine-event-cloud.model';\n"]}