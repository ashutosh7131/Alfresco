{"__symbolic":"module","version":4,"metadata":{"ProcessServicesCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":35,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":37,"character":8},{"__symbolic":"reference","name":"AppListCloudModule"},{"__symbolic":"reference","name":"ProcessCloudModule"},{"__symbolic":"reference","name":"TaskCloudModule"},{"__symbolic":"reference","name":"GroupCloudModule"},{"__symbolic":"reference","name":"PeopleCloudModule"},{"__symbolic":"reference","name":"FormCloudModule"},{"__symbolic":"reference","name":"TaskFormModule"},{"__symbolic":"reference","name":"ProcessServicesCloudPipeModule"}],"providers":[{"provide":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TRANSLATION_PROVIDER","line":49,"character":21},"multi":true,"useValue":{"name":"adf-process-services-cloud","source":"assets/adf-process-services-cloud"}}],"exports":[{"__symbolic":"reference","name":"AppListCloudModule"},{"__symbolic":"reference","name":"ProcessCloudModule"},{"__symbolic":"reference","name":"TaskCloudModule"},{"__symbolic":"reference","name":"GroupCloudModule"},{"__symbolic":"reference","name":"FormCloudModule"},{"__symbolic":"reference","name":"TaskFormModule"},{"__symbolic":"reference","name":"PeopleCloudModule"},{"__symbolic":"reference","name":"ProcessServicesCloudPipeModule"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":["preferenceServiceInstance"],"value":{"ngModule":{"__symbolic":"reference","name":"ProcessServicesCloudModule"},"providers":[{"provide":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TRANSLATION_PROVIDER","line":74,"character":29},"multi":true,"useValue":{"name":"adf-process-services-cloud","source":"assets/adf-process-services-cloud"}},{"provide":{"__symbolic":"reference","name":"PROCESS_FILTERS_SERVICE_TOKEN"},"useExisting":{"__symbolic":"binop","operator":"??","left":{"__symbolic":"reference","name":"preferenceServiceInstance"},"right":{"__symbolic":"reference","name":"LocalPreferenceCloudService"}}},{"provide":{"__symbolic":"reference","name":"TASK_FILTERS_SERVICE_TOKEN"},"useExisting":{"__symbolic":"binop","operator":"??","left":{"__symbolic":"reference","name":"preferenceServiceInstance"},"right":{"__symbolic":"reference","name":"LocalPreferenceCloudService"}}},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormRenderingService","line":83,"character":16},{"provide":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormRenderingService","line":84,"character":27},"useClass":{"__symbolic":"reference","name":"CloudFormRenderingService"}}]}},"forChild":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"ProcessServicesCloudModule"}}}}},"AppListCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-cloud-app-list","template":"<div class=\"menu-container\" *ngIf=\"apps$ | async as appsList; else loadingOrError\">\n    <ng-container *ngIf=\"appsList.length > 0; else noApps\">\n        <div *ngIf=\"isGrid(); else appList\" fxLayout=\"row wrap\">\n            <adf-cloud-app-details fxFlex=\"33.33333%\" fxFlex.lt-md=\"50%\" fxFlex.lt-sm=\"100%\"\n                *ngFor=\"let app of appsList\" [applicationInstance]=\"app\" (selectedApp)=\"onSelectApp($event)\">\n            </adf-cloud-app-details>\n        </div>\n\n        <ng-template #appList>\n            <mat-list class=\"adf-app-list\">\n                <mat-list-item class=\"adf-app-list-item\" (click)=\"onSelectApp(app)\" (keyup.enter)=\"onSelectApp(app)\"\n                    *ngFor=\"let app of appsList\" tabindex=\"0\" role=\"button\" title=\"{{app.name}}\">\n                    <mat-icon matListIcon>touch_app</mat-icon>\n                    <span matLine>{{app.name}}</span>\n                </mat-list-item>\n            </mat-list>\n        </ng-template>\n    </ng-container>\n</div>\n<ng-template #noApps>\n    <div class=\"adf-app-list-empty\">\n        <ng-content select=\"adf-custom-empty-content-template\" *ngIf=\"hasEmptyCustomContentTemplate; else defaultEmptyTemplate\"\n            class=\"adf-custom-empty-template\">\n        </ng-content>\n\n        <ng-template #defaultEmptyTemplate>\n            <adf-empty-content icon=\"apps\" [title]=\"'ADF_CLOUD_TASK_LIST.APPS.NO_APPS.TITLE' | translate\"\n                [subtitle]=\"'ADF_CLOUD_TASK_LIST.APPS.NO_APPS.SUBTITLE' | translate\">\n            </adf-empty-content>\n        </ng-template>\n    </div>\n</ng-template>\n<ng-template #loadingOrError>\n    <div *ngIf=\"loadingError$ | async; else loading\" class=\"adf-app-list-error\">\n        <adf-empty-content icon=\"error_outline\" [title]=\"'ADF_CLOUD_TASK_LIST.APPS.ERROR.TITLE' | translate\"\n            [subtitle]=\"'ADF_CLOUD_TASK_LIST.APPS.ERROR.SUBTITLE' | translate\">\n        </adf-empty-content>\n    </div>\n    <ng-template #loading>\n    <ng-container>\n        <div class=\"adf-app-list-spinner\">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n</ng-template>\n","styles":[":host{width:100%}.adf-app-list-item{cursor:pointer}.adf-app-list-empty,.adf-app-list-error,.adf-app-list-spinner{align-items:center;display:flex;flex-direction:column;height:85vh;justify-content:center}.adf-app-list-empty .mat-spinner,.adf-app-list-error .mat-spinner,.adf-app-list-spinner .mat-spinner{margin:0 auto}"]}]}],"members":{"emptyCustomContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":35,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomEmptyContentTemplateDirective","line":35,"character":18}]}]}],"layoutType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"appClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":45,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"AppsProcessCloudService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"onSelectApp":[{"__symbolic":"method"}],"isValidType":[{"__symbolic":"method"}],"setDefaultLayoutType":[{"__symbolic":"method"}],"isList":[{"__symbolic":"method"}],"isGrid":[{"__symbolic":"method"}]},"statics":{"LAYOUT_LIST":"LIST","LAYOUT_GRID":"GRID","RUNNING_STATUS":"RUNNING"}},"AppDetailsCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"adf-cloud-app-details","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":24,"character":17},"member":"None"},"template":"<div class=\"adf-app-listgrid\">\n    <div class=\"adf-app-listgrid-item\">\n        <mat-card tabindex=\"0\"\n            fxLayout=\"column\"\n            role=\"button\"\n            class=\"adf-app-listgrid-item-card\"\n            title=\"{{applicationInstance.name}}\"\n            [ngClass]=\"getTheme()\"\n            (click)=\"onSelectApp(applicationInstance)\"\n            (keyup.enter)=\"onSelectApp(applicationInstance)\">\n            <div class=\"adf-app-listgrid-item-card-logo\">\n                <mat-icon class=\"adf-app-listgrid-item-card-logo-icon\">{{ getIcon() }}</mat-icon>\n            </div>\n            <div mat-card-title class=\"adf-app-listgrid-item-card-title\">\n                <h1>{{applicationInstance.name}}</h1>\n            </div>\n            <mat-card-subtitle class=\"adf-app-listgrid-item-card-subtitle\" fxFlex=\"1 0 auto\">\n                <div class=\"adf-line-clamp\">{{applicationInstance.description}}</div>\n            </mat-card-subtitle>\n        </mat-card>\n    </div>\n  </div>\n","styles":[".adf-app-listgrid{padding:8px}.adf-app-listgrid-item{box-sizing:border-box;outline:none;padding:8px}.adf-app-listgrid-item-card{min-height:200px;outline:none;padding:0!important;transition:transform .28s cubic-bezier(.4,0,.2,1),box-shadow .28s cubic-bezier(.4,0,.2,1)}.adf-app-listgrid-item-card.theme-1{background-color:#269abc}.adf-app-listgrid-item-card.theme-2{background-color:#7da9b0}.adf-app-listgrid-item-card.theme-3{background-color:#7689ab}.adf-app-listgrid-item-card.theme-4{background-color:#c74e3e}.adf-app-listgrid-item-card.theme-5{background-color:#fab96c}.adf-app-listgrid-item-card.theme-6{background-color:#759d4c}.adf-app-listgrid-item-card.theme-7{background-color:#b1b489}.adf-app-listgrid-item-card.theme-8{background-color:#a17299}.adf-app-listgrid-item-card.theme-9{background-color:#696c67}.adf-app-listgrid-item-card.theme-10{background-color:#cabb33}.adf-app-listgrid-item-card:hover{box-shadow:0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.2);cursor:pointer;transform:scale(1.015)}.adf-app-listgrid-item-card-logo{padding:16px;position:absolute;right:20px;top:20px;z-index:9}.adf-app-listgrid-item-card-logo-icon{font-size:70px;height:1em!important;width:1em!important}.theme-1 .adf-app-listgrid-item-card-logo-icon{color:#168aac}.theme-2 .adf-app-listgrid-item-card-logo-icon{color:#6d99a0}.theme-3 .adf-app-listgrid-item-card-logo-icon{color:#66799b}.theme-4 .adf-app-listgrid-item-card-logo-icon{color:#b73e2e}.theme-5 .adf-app-listgrid-item-card-logo-icon{color:#eaa95c}.theme-6 .adf-app-listgrid-item-card-logo-icon{color:#658d3c}.theme-7 .adf-app-listgrid-item-card-logo-icon{color:#a1a479}.theme-8 .adf-app-listgrid-item-card-logo-icon{color:#916289}.theme-9 .adf-app-listgrid-item-card-logo-icon{color:#595c57}.theme-10 .adf-app-listgrid-item-card-logo-icon{color:#baab23}.adf-app-listgrid-item-card-title{margin-bottom:0!important;padding:16px;z-index:9999}.adf-app-listgrid-item-card-title h1{color:#fff;font-size:24px;line-height:normal;margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:80%}.adf-app-listgrid-item-card-subtitle{color:#fff;padding:16px;z-index:9999}.adf-app-listgrid-item-card-subtitle .adf-line-clamp{line-height:1.25;overflow:hidden;padding:0!important;position:relative;text-overflow:ellipsis}@supports (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{-webkit-box-orient:vertical;-webkit-line-clamp:3;display:-webkit-box;height:3.7125em}}@supports not (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{white-space:nowrap;width:100%}}.adf-app-listgrid-item-card-actions{border-top:1px solid rgba(0,0,0,.1);box-sizing:border-box;min-height:48px;padding:0 16px 16px!important}.adf-app-listgrid-item-card-actions-icon{color:#e9f1f3}.adf-app-listgrid-item-card-actions.mat-card-actions{margin-left:0;margin-right:0}.adf-app-listgrid-item-card-actions.mat-card-actions:last-child{margin-bottom:0!important}"]}]}],"members":{"applicationInstance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"selectedApp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":32,"character":3}}]}],"onSelectApp":[{"__symbolic":"method"}],"getTheme":[{"__symbolic":"method"}],"getIcon":[{"__symbolic":"method"}]}},"AppsProcessCloudService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":30,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":31,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":32,"character":34}]}],"getDeployedApplicationsByStatus":[{"__symbolic":"method"}],"hasDeployedApps":[{"__symbolic":"method"}],"loadApps":[{"__symbolic":"method"}],"getApplicationsByStatus":[{"__symbolic":"method"}],"getApplicationUrl":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"DEFAULT_APP_INSTANCE_THEME":"theme-2","DEFAULT_APP_INSTANCE_ICON":"favorite_border","ApplicationInstanceModel":{"__symbolic":"interface"},"Descriptor":{"__symbolic":"interface"},"DescriptorSecurity":{"__symbolic":"interface"},"DescriptorVariables":{"__symbolic":"interface"},"DescriptorInfrastructure":{"__symbolic":"interface"},"AppListCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":25,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":27,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TemplateModule","line":28,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":30,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":31,"character":8}],"declarations":[{"__symbolic":"reference","name":"AppListCloudComponent"},{"__symbolic":"reference","name":"AppDetailsCloudComponent"}],"exports":[{"__symbolic":"reference","name":"AppListCloudComponent"},{"__symbolic":"reference","name":"AppDetailsCloudComponent"}]}]}],"members":{}},"ProcessListCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DataTableSchema","line":34,"character":47},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"adf-cloud-process-list","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":32,"character":19},"member":"None"},"template":"<adf-datatable #dataTable\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [stickyHeader]=\"stickyHeader\"\n        [loading]=\"isLoading\"\n        [sorting]=\"formattedSorting\"\n        [selectionMode]=\"selectionMode\"\n        [multiselect]=\"multiselect\"\n        [actions]=\"showActions\"\n        [actionsPosition]=\"actionsPosition\"\n        [contextMenu]=\"showContextMenu\"\n        (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n        (showRowContextMenu)=\"onShowRowContextMenu($event)\"\n        (executeRowAction)=\"onExecuteRowAction($event)\"\n        (rowClick)=\"onRowClick($any($event))\"\n        (row-select)=\"onRowSelect($any($event))\"\n        (row-unselect)=\"onRowUnselect($any($event))\"\n        (row-keyup)=\"onRowKeyUp($any($event))\"\n        (sorting-changed)=\"onSortingChanged($any($event))\">\n        <adf-loading-content-template>\n            <ng-template>\n                <mat-progress-spinner\n                    *ngIf=\"!customLoadingContent\"\n                    class=\"adf-cloud-process-list-loading-margin\"\n                    [color]=\"'primary'\"\n                    [mode]=\"'indeterminate'\">\n                </mat-progress-spinner>\n                <ng-content select=\"adf-custom-loading-content-template\"></ng-content>\n            </ng-template>\n        </adf-loading-content-template>\n        <adf-no-content-template>\n            <ng-template>\n                <adf-empty-content *ngIf=\"!emptyCustomContent\"\n                    icon=\"assessment\"\n                    [title]=\"'ADF_CLOUD_PROCESS_LIST.MESSAGES.TITLE' | translate\"\n                    [subtitle]=\"'ADF_CLOUD_PROCESS_LIST.MESSAGES.SUBTITLE'| translate\">\n                </adf-empty-content>\n                <ng-content select=\"adf-custom-empty-content-template\"></ng-content>\n            </ng-template>\n        </adf-no-content-template>\n</adf-datatable>\n","styles":[".adf-cloud-process-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.adf-no-content-message{font-size:16px;font-weight:700;opacity:.54;text-align:center}"]}]}],"members":{"dataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":38,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DataTableComponent","line":38,"character":15}]}]}],"emptyCustomContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":41,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomEmptyContentTemplateDirective","line":41,"character":18}]}]}],"customLoadingContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":44,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomLoadingContentTemplateDirective","line":44,"character":18}]}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":5}}]}],"appVersion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":5}}]}],"initiator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5}}]}],"processDefinitionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":68,"character":5}}]}],"processDefinitionName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":5}}]}],"processDefinitionKey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":76,"character":5}}]}],"status":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":80,"character":5}}]}],"businessKey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":84,"character":5}}]}],"lastModifiedFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":88,"character":5}}]}],"lastModifiedTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":92,"character":5}}]}],"startFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":96,"character":5}}]}],"startTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":100,"character":5}}]}],"completedFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":104,"character":5}}]}],"completedTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":108,"character":5}}]}],"completedDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":112,"character":5}}]}],"suspendedFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":116,"character":5}}]}],"suspendedTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":120,"character":5}}]}],"selectionMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":128,"character":5}}]}],"multiselect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":132,"character":5}}]}],"sorting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":139,"character":5}}]}],"showActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":143,"character":5}}]}],"actionsPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":147,"character":5}}]}],"stickyHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":151,"character":5}}]}],"showContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":155,"character":5}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":159,"character":5}}]}],"rowsSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":163,"character":5}}]}],"showRowContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":167,"character":5}}]}],"showRowActionsMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":171,"character":5}}]}],"executeRowAction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":175,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":179,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":183,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessListCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":198,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":199,"character":41}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getCurrentId":[{"__symbolic":"method"}],"reload":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"isAnyPropertyChanged":[{"__symbolic":"method"}],"isPropertyChanged":[{"__symbolic":"method"}],"isListEmpty":[{"__symbolic":"method"}],"resetPagination":[{"__symbolic":"method"}],"updatePagination":[{"__symbolic":"method"}],"onSortingChanged":[{"__symbolic":"method"}],"onRowClick":[{"__symbolic":"method"}],"onRowSelect":[{"__symbolic":"method"}],"onRowUnselect":[{"__symbolic":"method"}],"onRowKeyUp":[{"__symbolic":"method"}],"onShowRowActionsMenu":[{"__symbolic":"method"}],"onShowRowContextMenu":[{"__symbolic":"method"}],"onExecuteRowAction":[{"__symbolic":"method"}],"createRequestNode":[{"__symbolic":"method"}],"getAppVersions":[{"__symbolic":"method"}],"setSorting":[{"__symbolic":"method"}],"formatSorting":[{"__symbolic":"method"}],"isValidSorting":[{"__symbolic":"method"}]},"statics":{"PRESET_KEY":"adf-cloud-process-list.presets"}},"ProcessQueryCloudRequestModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"processCloudPresetsDefaultModel":{"default":[{"key":"name","type":"text","title":"ADF_CLOUD_PROCESS_LIST.PROPERTIES.NAME","sortable":true,"$quoted$":["key","type","title","sortable"]},{"key":"startDate","type":"date","title":"ADF_CLOUD_PROCESS_LIST.PROPERTIES.START_DATE","cssClass":"hidden","sortable":true,"format":"timeAgo","$quoted$":["key","type","title","cssClass","sortable","format"]}],"$quoted$":["default"]},"ProcessListCloudSortingModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"ProcessListCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":27,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":28,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":29,"character":36}]}],"getProcessByRequest":[{"__symbolic":"method"}],"isPropertyValueValid":[{"__symbolic":"method"}],"buildQueryParams":[{"__symbolic":"method"}],"buildFilterForAllStatus":[{"__symbolic":"method"}],"isExcludedField":[{"__symbolic":"method"}],"buildSortingParam":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ProcessListCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":23,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":25,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":27,"character":8}],"declarations":[{"__symbolic":"reference","name":"ProcessListCloudComponent"}],"exports":[{"__symbolic":"reference","name":"ProcessListCloudComponent"}]}]}],"members":{}},"ProcessFiltersCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"adf-cloud-process-filters","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":29,"character":19},"member":"None"},"template":"\n<ng-container *ngIf=\"filters$ | async as filterList; else loading\">\n    <div *ngFor=\"let filter of filterList\" class=\"adf-filters__entry\" [class.adf-active]=\"currentFilter === filter\">\n        <button (click)=\"onFilterClick(filter)\"\n          [attr.aria-label]=\"filter.name | translate\"\n          [id]=\"filter.id\"\n          [attr.data-automation-id]=\"filter.key + '_filter'\"\n          mat-button\n          class=\"adf-filter-action-button adf-full-width\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <adf-icon data-automation-id=\"adf-filter-icon\" *ngIf=\"showIcons\" [value]=\"filter.icon\"></adf-icon>\n          <span data-automation-id=\"adf-filter-label\" class=\"adf-filter-action-button__label\">{{ filter.name | translate }}</span>\n        </button>\n    </div>\n</ng-container>\n<ng-template #loading>\n    <ng-container>\n        <div class=\"adf-app-list-spinner\">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n","styles":[".adf-filters__entry{cursor:pointer;font-size:14px!important;font-weight:700;height:24px;opacity:1;padding:12px 0!important;width:100%}.adf-filters__entry .adf-full-width{display:flex;width:100%}.adf-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-filters__entry.adf-active,.adf-filters__entry:hover{color:var(--theme-primary-color);opacity:1}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":5}}]}],"filterParam":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":5}}]}],"showIcons":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":5}}]}],"filterSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":5}}]}],"filterClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":50,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":54,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":58,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessFilterCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":71,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getFilters":[{"__symbolic":"method"}],"selectFilter":[{"__symbolic":"method"}],"checkFilterNamesEquality":[{"__symbolic":"method"}],"selectFilterAndEmit":[{"__symbolic":"method"}],"selectFilterById":[{"__symbolic":"method"}],"onFilterClick":[{"__symbolic":"method"}],"selectDefaultProcessFilter":[{"__symbolic":"method"}],"getCurrentFilter":[{"__symbolic":"method"}],"isFilterListEmpty":[{"__symbolic":"method"}],"resetFilter":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isActiveFilter":[{"__symbolic":"method"}]}},"DropdownOption":{"__symbolic":"interface"},"EditProcessFilterCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":38,"character":1},"arguments":[{"selector":"adf-cloud-edit-process-filter","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":42,"character":19},"member":"None"},"template":"<mat-accordion [hideToggle]=\"isLoading\">\n    <mat-expansion-panel (afterExpand)=\"onExpand()\" (closed)=\"onClose()\">\n        <mat-expansion-panel-header *ngIf=\"processFilter\" id=\"adf-edit-process-filter-expansion-header\">\n            <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n                <mat-panel-title *ngIf=\"showProcessFilterName\" fxLayoutAlign=\"space-between center\" id=\"adf-edit-process-filter-title-id\">{{processFilter.name | translate}}</mat-panel-title>\n                <mat-panel-description fxLayoutAlign=\"space-between center\" id=\"adf-edit-process-filter-sub-title-id\">\n                    <span *ngIf=\"showTitle\"> {{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.TITLE' | translate}}</span>\n                    <div *ngIf=\"showFilterActions\" class=\"adf-cloud-edit-process-filter-actions\">\n                        <ng-container *ngIf=\"toggleFilterActions\">\n                            <button *ngFor=\"let filterAction of processFilterActions\" mat-icon-button matTooltip=\"{{ filterAction.tooltip | translate}}\" [attr.data-automation-id]=\"'adf-filter-action-' + filterAction.actionType\" [disabled]=\"isDisabledAction(filterAction)\" (click)=\"executeFilterActions(filterAction)\">\n                                <adf-icon [value]=\"filterAction.icon\"></adf-icon>\n                            </button>\n                        </ng-container>\n                    </div>\n                </mat-panel-description>\n            </ng-container>\n            <ng-template #loadingTemplate>\n                <div class=\"adf-cloud-edit-process-filter-loading-margin\">\n                    <mat-spinner [diameter]=\"30\"></mat-spinner>\n                </div>\n            </ng-template>\n        </mat-expansion-panel-header>\n        <ng-container *ngIf=\"!isLoading\">\n            <form [formGroup]=\"editProcessFilterForm\" *ngIf=\"editProcessFilterForm\">\n                <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\n                    <ng-container *ngFor=\"let processFilterProperty of processFilterProperties\">\n                        <mat-form-field [floatLabel]=\"'auto'\" fxFlex=\"23%\" *ngIf=\"processFilterProperty.type === 'select'\" [attr.data-automation-id]=\"processFilterProperty.key\">\n                            <mat-select\n                                placeholder=\"{{processFilterProperty.label | translate}}\"\n                                [formControlName]=\"processFilterProperty.key\"\n                                [attr.data-automation-id]=\"'adf-cloud-edit-process-property-' + processFilterProperty.key\">\n                                <mat-option\n                                    *ngFor=\"let propertyOption of processFilterProperty.options\"\n                                    [value]=\"propertyOption.value\"\n                                    [attr.data-automation-id]=\"'adf-cloud-edit-process-property-options-' + processFilterProperty.key\"\n                                >{{ propertyOption.label | translate }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]=\"'auto'\" fxFlex=\"23%\" *ngIf=\"processFilterProperty.type === 'multi-select'\" [attr.data-automation-id]=\"processFilterProperty.key\">\n                            <mat-select\n                                placeholder=\"{{processFilterProperty.label | translate}}\"\n                                [formControlName]=\"processFilterProperty.key\"\n                                [attr.data-automation-id]=\"'adf-cloud-edit-process-property-' + processFilterProperty.key\"\n                                [multiple]=\"true\">\n                                <mat-option *ngFor=\"let propertyOption of processFilterProperty.options\" [value]=\"propertyOption.value\" [attr.data-automation-id]=\"'adf-cloud-edit-process-property-options-' + processFilterProperty.key\">\n                                    {{ propertyOption.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]=\"'auto'\" fxFlex=\"23%\" *ngIf=\"processFilterProperty.type === 'text'\" [attr.data-automation-id]=\"processFilterProperty.key\">\n                            <input matInput\n                                [formControlName]=\"processFilterProperty.key\"\n                                type=\"text\"\n                                placeholder=\"{{processFilterProperty.label | translate}}\"\n                                [attr.data-automation-id]=\"'adf-cloud-edit-process-property-' + processFilterProperty.key\"/>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]=\"'auto'\" fxFlex=\"23%\" *ngIf=\"processFilterProperty.type === 'number'\" [attr.data-automation-id]=\"processFilterProperty.key\">\n                            <input matInput\n                                [formControlName]=\"processFilterProperty.key\"\n                                type=\"number\" min=\"0\"\n                                placeholder=\"{{processFilterProperty.label | translate}}\"\n                                [attr.data-automation-id]=\"'adf-cloud-edit-process-property-' + processFilterProperty.key\"/>\n                        </mat-form-field>\n                        <mat-form-field [floatLabel]=\"'auto'\" fxFlex=\"23%\" *ngIf=\"processFilterProperty.type === 'date'\" [attr.data-automation-id]=\"processFilterProperty.key\">\n                            <mat-label>{{processFilterProperty.label | translate}}</mat-label>\n                            <input\n                                matInput\n                                [formControlName]=\"processFilterProperty.key\"\n                                (keyup)=\"onDateChanged($any($event).srcElement.value, processFilterProperty)\"\n                                (dateChange)=\"onDateChanged($event.value, processFilterProperty)\"\n                                [matDatepicker]=\"dateController\"\n                                placeholder=\"{{processFilterProperty.label | translate}}\"\n                                [attr.data-automation-id]=\"'adf-cloud-edit-process-property-' + processFilterProperty.key\">\n                        <mat-datepicker-toggle matSuffix [for]=\"dateController\" [attr.data-automation-id]=\"'adf-cloud-edit-process-property-date-toggle-' + processFilterProperty.key\"></mat-datepicker-toggle>\n                        <mat-datepicker #dateController [attr.data-automation-id]=\"'adf-cloud-edit-process-property-date-picker-' + processFilterProperty.key\"></mat-datepicker>\n                        <div class=\"adf-edit-process-filter-date-error-container\">\n                            <div *ngIf=\"hasError(processFilterProperty)\">\n                                <div class=\"adf-error-text\">{{'ADF_CLOUD_EDIT_PROCESS_FILTER.ERROR.DATE' | translate}}</div>\n                                <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                            </div>\n                        </div>\n                        </mat-form-field>\n\n                        <adf-cloud-date-range-filter *ngIf=\"processFilterProperty.type === 'date-range'\"\n                            [processFilterProperty]=\"processFilterProperty\"\n                            [options]=\"processFilterProperty.dateFilterOptions\"\n                            (dateTypeChange)=\"onDateTypeChange($event, processFilterProperty)\"\n                            (dateChanged)=\"onDateRangeFilterChanged($event, processFilterProperty)\"></adf-cloud-date-range-filter>\n\n                        <div fxFlex=\"23%\" *ngIf=\"processFilterProperty.type === 'people'\">\n                            <adf-cloud-people\n                                [preSelectUsers]=\"initiatorOptions\"\n                                [title]=\"processFilterProperty.label\"\n                                [validate]=\"true\"\n                                [appName]=\"appName\"\n                                [mode]=\"processFilterProperty.selectionMode\"\n                                (changedUsers)=\"onChangedUser($event, processFilterProperty)\"></adf-cloud-people>\n                        </div>\n                    </ng-container>\n                </div>\n            </form>\n        </ng-container>\n    </mat-expansion-panel>\n</mat-accordion>\n","styles":[".adf-edit-process-filter-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-edit-process-filter-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-edit-process-filter-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:11px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-edit-process-filter-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:16px}.adf-cloud-edit-process-filter-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"role":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":5}}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":5}}]}],"filterProperties":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":5}}]}],"sortProperties":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":5}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":75,"character":5}}]}],"showFilterActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":5}}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":83,"character":5}}]}],"showProcessFilterName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":87,"character":5}}]}],"filterChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":91,"character":5}}]}],"action":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":95,"character":5}}]}],"processFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":105,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":162,"character":29},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":163,"character":23},{"__symbolic":"reference","name":"DateAdapter","module":"@angular/material/core","arguments":[{"__symbolic":"reference","module":"moment","name":"Moment","line":164,"character":41}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":165,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":166,"character":34},{"__symbolic":"reference","name":"ProcessFilterCloudService"},{"__symbolic":"reference","name":"AppsProcessCloudService"},{"__symbolic":"reference","name":"ProcessCloudService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"buildForm":[{"__symbolic":"method"}],"getFormControlsConfig":[{"__symbolic":"method"}],"getAttributesControlConfig":[{"__symbolic":"method"}],"retrieveProcessFilterAndBuildForm":[{"__symbolic":"method"}],"onFilterChange":[{"__symbolic":"method"}],"createAndFilterProperties":[{"__symbolic":"method"}],"checkMandatoryFilterProperties":[{"__symbolic":"method"}],"isValidProperty":[{"__symbolic":"method"}],"getAppVersionOptions":[{"__symbolic":"method"}],"checkMandatorySortProperties":[{"__symbolic":"method"}],"createAndFilterActions":[{"__symbolic":"method"}],"checkMandatoryActions":[{"__symbolic":"method"}],"isValidAction":[{"__symbolic":"method"}],"isFormValid":[{"__symbolic":"method"}],"getPropertyController":[{"__symbolic":"method"}],"onDateChanged":[{"__symbolic":"method"}],"onDateTypeChange":[{"__symbolic":"method"}],"onDateRangeFilterChanged":[{"__symbolic":"method"}],"onChangedUser":[{"__symbolic":"method"}],"hasError":[{"__symbolic":"method"}],"compareFilters":[{"__symbolic":"method"}],"getRunningApplications":[{"__symbolic":"method"}],"getProcessDefinitions":[{"__symbolic":"method"}],"executeFilterActions":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"saveAs":[{"__symbolic":"method"}],"getSanitizeFilterName":[{"__symbolic":"method"}],"replaceSpaceWithHyphen":[{"__symbolic":"method"}],"restoreDefaultProcessFilters":[{"__symbolic":"method"}],"onExpand":[{"__symbolic":"method"}],"onClose":[{"__symbolic":"method"}],"isDisabledAction":[{"__symbolic":"method"}],"hasFilterChanged":[{"__symbolic":"method"}],"setLastModifiedToFilter":[{"__symbolic":"method"}],"createFilterActions":[{"__symbolic":"method"}],"createLastModifiedProperty":[{"__symbolic":"method"}],"createProcessSortProperties":[{"__symbolic":"method"}],"isFilterChanged":[{"__symbolic":"method"}],"createProcessFilterProperties":[{"__symbolic":"method"}]},"statics":{"ACTION_SAVE":"save","ACTION_SAVE_AS":"saveAs","ACTION_DELETE":"delete","DEFAULT_PROCESS_FILTER_PROPERTIES":["status","sort","order","lastModified"],"DEFAULT_SORT_PROPERTIES":["id","name","status","startDate"],"DEFAULT_ACTIONS":["save","saveAs","delete"]}},"ProcessFilterDialogCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"adf-cloud-process-filter-dialog-cloud","template":"<div class=\"adf-process-filter-dialog\">\n    <span mat-dialog-title id=\"adf-process-filter-dialog-title\">\n         {{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.DIALOG.TITLE' | translate}}\n    </span>\n    <mat-card>\n        <mat-card-content>\n        <form [formGroup]=\"filterForm\">\n            <mat-form-field fxFlex [floatLabel]=\"'auto'\">\n                <input matInput placeholder=\"{{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.FILTER_NAME' | translate }}\" formControlName=\"name\" id=\"adf-filter-name-id\">\n            </mat-form-field>\n        </form>\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button (click)=\"onSaveClick()\" id=\"adf-save-button-id\" [disabled]=\"!isValid()\">\n                {{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.DIALOG.SAVE' | translate}}\n            </button>\n            <button mat-button (click)=\"onCancelClick()\" id=\"adf-cancel-button-id\">\n               {{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.DIALOG.CANCEL' | translate}}\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n","styles":[".adf-process-filter-dialog .mat-card,.adf-process-filter-dialog .mat-card-content{box-shadow:none;padding:0}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":36,"character":9},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":36,"character":16}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":34,"character":20},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ProcessFilterDialogCloudComponent"}]},null]}],"ngOnInit":[{"__symbolic":"method"}],"onSaveClick":[{"__symbolic":"method"}],"onCancelClick":[{"__symbolic":"method"}],"isValid":[{"__symbolic":"method"}]},"statics":{"ACTION_SAVE":"SAVE"}},"ProcessFilterCloudModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"getStartDate":[{"__symbolic":"method"}],"getEndDate":[{"__symbolic":"method"}],"isDateRangeType":[{"__symbolic":"method"}]}},"ProcessFilterAction":{"__symbolic":"interface"},"ProcessFilterOptions":{"__symbolic":"interface"},"ProcessFilterProperties":{"__symbolic":"interface"},"ProcessSortFilterProperty":{"__symbolic":"interface"},"ProcessFilterCloudService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":33,"character":9},"arguments":[{"__symbolic":"reference","name":"PROCESS_FILTERS_SERVICE_TOKEN"}]}],null],"parameters":[{"__symbolic":"reference","name":"PreferenceCloudServiceInterface"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":34,"character":37}]}],"readQueryParams":[{"__symbolic":"method"}],"writeQueryParams":[{"__symbolic":"method"}],"createDefaultFilters":[{"__symbolic":"method"}],"getProcessFilters":[{"__symbolic":"method"}],"getFilterById":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"updateFilter":[{"__symbolic":"method"}],"deleteFilter":[{"__symbolic":"method"}],"isDefaultFilter":[{"__symbolic":"method"}],"hasPreferences":[{"__symbolic":"method"}],"hasProcessFilters":[{"__symbolic":"method"}],"createProcessFilters":[{"__symbolic":"method"}],"getProcessFiltersByKey":[{"__symbolic":"method"}],"updateProcessFilters":[{"__symbolic":"method"}],"prepareKey":[{"__symbolic":"method"}],"findFiltersByKeyInPreferences":[{"__symbolic":"method"}],"addFiltersToStream":[{"__symbolic":"method"}],"handleProcessError":[{"__symbolic":"method"}],"defaultProcessFilters":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ProcessFiltersCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":32,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":34,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":35,"character":8},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":36,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":37,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":38,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"AppListCloudModule"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":41,"character":8},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"PeopleCloudModule"}],"declarations":[{"__symbolic":"reference","name":"ProcessFiltersCloudComponent"},{"__symbolic":"reference","name":"EditProcessFilterCloudComponent"},{"__symbolic":"reference","name":"ProcessFilterDialogCloudComponent"}],"exports":[{"__symbolic":"reference","name":"ProcessFiltersCloudComponent"},{"__symbolic":"reference","name":"EditProcessFilterCloudComponent"},{"__symbolic":"reference","name":"ProcessFilterDialogCloudComponent"}],"providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"DateAdapter","line":48,"character":19},"useClass":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MomentDateAdapter","line":48,"character":42}},{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"MAT_DATE_FORMATS","line":49,"character":19},"useValue":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MOMENT_DATE_FORMATS","line":49,"character":47}}]}]}],"members":{}},"StartProcessCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":33,"character":1},"arguments":[{"selector":"adf-cloud-start-process","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":37,"character":19},"member":"None"},"template":"<mat-card class=\"adf-start-process\">\n\n    <mat-card-title class=\"adf-title\">{{'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.TITLE' | translate}}\n    </mat-card-title>\n\n    <mat-card-content>\n        <mat-card-subtitle id=\"error-message\" *ngIf=\"errorMessageId\">\n            {{ errorMessageId | translate }}\n        </mat-card-subtitle>\n\n        <div *ngIf=\"!isProcessDefinitionsEmpty(); else emptyProcessDefinitionsList\">\n            <form [formGroup]=\"processForm\">\n                <mat-form-field class=\"adf-process-input-container\"  [floatLabel]=\"'always'\">\n                    <mat-label>{{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.LABEL.TYPE' | translate }}</mat-label>\n                    <input\n                        #inputAutocomplete\n                        matInput\n                        formControlName=\"processDefinition\"\n                        [matAutocomplete]=\"auto\"\n                        id=\"processDefinitionName\">\n                    <div class=\"adf-process-input-autocomplete\">\n                        <mat-autocomplete #auto=\"matAutocomplete\" id=\"processDefinitionOptions\" [displayWith]=\"displayProcessNameOnDropdown\" (optionSelected)=\"setProcessDefinitionOnForm($event.option.value)\" >\n                            <mat-option *ngFor=\"let processDef of filteredProcesses\" [value]=\"getProcessDefinitionValue(processDef)\"\n                                        (click)=\"processDefinitionSelectionChanged(processDef)\">\n                                {{ getProcessDefinitionValue(processDef) }}\n                            </mat-option>\n                        </mat-autocomplete>\n                        <button id=\"adf-select-process-dropdown\" *ngIf=\"showSelectProcessDropdown\" mat-icon-button (click)=\"displayDropdown($event)\">\n                            <mat-icon>arrow_drop_down</mat-icon>\n                        </button>\n                    </div>\n                    <mat-error *ngIf=\"processDefinition.hasError('required')\" class=\"adf-error-pb\">\n                            {{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.PROCESS_DEFINITION_REQUIRED' | translate }}\n                        </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"adf-process-input-container\"  [floatLabel]=\"'always'\">\n                    <mat-label>{{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.LABEL.NAME' | translate }}</mat-label>\n                    <input\n                        matInput\n                        formControlName=\"processInstanceName\"\n                        id=\"processName\">\n                    <mat-error id=\"adf-start-process-required-error\" *ngIf=\"processInstanceName.hasError('required')\">\n                        {{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.PROCESS_NAME_REQUIRED' | translate }}\n                    </mat-error>\n                    <mat-error id=\"adf-start-process-maxlength-error\" *ngIf=\"processInstanceName.hasError('maxlength')\">\n                        {{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.MAXIMUM_LENGTH' | translate : { characters : maxNameLength } }}\n                    </mat-error>\n                    <mat-error *ngIf=\"processInstanceName.hasError('pattern')\">\n                        {{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.ERROR.SPACE_VALIDATOR' | translate }}\n                    </mat-error>\n                </mat-form-field>\n            </form>\n\n            <ng-container *ngIf=\"hasForm() else taskFormCloudButtons\">\n                <adf-cloud-form\n                    [appName]=\"appName\"\n                    [appVersion]=\"processDefinitionCurrent.appVersion\"\n                    [data]=\"values\"\n                    [formId]=\"processDefinitionCurrent.formKey\"\n                    [showSaveButton]=\"false\"\n                    [showCompleteButton]=\"false\"\n                    [showRefreshButton]=\"false\"\n                    [showValidationIcon]=\"false\"\n                    [showTitle]=\"false\"\n                    (formContentClicked)=\"onFormContentClicked($event)\"\n                    (formLoaded)=\"onFormLoaded($event)\">\n                    <adf-cloud-form-custom-outcomes>\n                        <ng-template [ngTemplateOutlet]=\"taskFormCloudButtons\">\n                        </ng-template>\n                    </adf-cloud-form-custom-outcomes>\n                </adf-cloud-form>\n            </ng-container>\n        </div>\n\n    </mat-card-content>\n\n    <ng-template #taskFormCloudButtons>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button (click)=\"cancelStartProcess()\" id=\"cancel_process\">\n                {{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.ACTION.CANCEL' | translate | uppercase}}\n            </button>\n            <button color=\"primary\" mat-button [disabled]=\"disableStartButton || !isProcessFormValid()\" (click)=\"startProcess()\"\n                data-automation-id=\"btn-start\" id=\"button-start\" class=\"btn-start\">\n                {{'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.FORM.ACTION.START' | translate | uppercase}}\n            </button>\n        </div>\n    </ng-template>\n\n    <ng-template #emptyProcessDefinitionsList>\n        <mat-card-content *ngIf=\"processDefinitionLoaded\">\n            <mat-card-subtitle class=\"error-message\" id=\"no-process-message\">\n                {{ 'ADF_CLOUD_PROCESS_LIST.ADF_CLOUD_START_PROCESS.NO_PROCESS_DEFINITIONS' | translate | uppercase}}\n            </mat-card-subtitle>\n        </mat-card-content>\n    </ng-template>\n</mat-card>\n","styles":[".adf-start-process mat-form-field{width:100%}.adf-start-process .mat-form-field-label{color:var(--theme-colors-mat-grey-dark)}.adf-start-process mat-card-actions{text-align:right}.adf-start-process mat-card-actions .mat-button{text-transform:uppercase!important}.adf-title{padding-bottom:1.25em}.adf-process-input-container mat-form-field{width:100%}.adf-process-input-autocomplete{display:flex}.adf-process-input-autocomplete button{position:absolute;right:-14px;top:0}.adf-start-form-container .mat-card{box-shadow:none!important;padding:0!important}.adf-start-form-actions{text-align:right!important}"]}]}],"members":{"inputAutocomplete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":45,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteTrigger","line":45,"character":15}]}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"maxNameLength":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":5}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}],"processDefinitionName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":5}}]}],"variables":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"values":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"showSelectProcessDropdown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":77,"character":5}}]}],"cancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":81,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":85,"character":5}}]}],"formContentClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":89,"character":5}}]}],"processDefinitionSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":93,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"StartProcessCloudService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":112,"character":37},{"__symbolic":"reference","name":"ProcessNameCloudPipe"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"onKeyDown":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":159,"character":5},"arguments":["keydown",["$event"]]}]}],"hasForm":[{"__symbolic":"method"}],"onFormLoaded":[{"__symbolic":"method"}],"isProcessSelectionValid":[{"__symbolic":"method"}],"getMaxNameLength":[{"__symbolic":"method"}],"generateProcessInstance":[{"__symbolic":"method"}],"selectProcessDefinitionByProcesDefinitionName":[{"__symbolic":"method"}],"setProcessDefinitionOnForm":[{"__symbolic":"method"}],"getProcessDefinitionListByNameOrKey":[{"__symbolic":"method"}],"getProcessIfExists":[{"__symbolic":"method"}],"getProcessDefinitionByName":[{"__symbolic":"method"}],"selectDefaultProcessDefinition":[{"__symbolic":"method"}],"loadProcessDefinitions":[{"__symbolic":"method"}],"isValidName":[{"__symbolic":"method"}],"isProcessFormValid":[{"__symbolic":"method"}],"isProcessPayloadValid":[{"__symbolic":"method"}],"getProcessDefinition":[{"__symbolic":"method"}],"isProcessDefinitionsEmpty":[{"__symbolic":"method"}],"buildProcessCloudPayload":[{"__symbolic":"method"}],"startProcess":[{"__symbolic":"method"}],"cancelStartProcess":[{"__symbolic":"method"}],"resetErrorMessage":[{"__symbolic":"method"}],"resetProcessDefinitionList":[{"__symbolic":"method"}],"displayProcessNameOnDropdown":[{"__symbolic":"method"}],"displayDropdown":[{"__symbolic":"method"}],"processDefinitionNameValidator":[{"__symbolic":"method"}],"getProcessDefinitionValue":[{"__symbolic":"method"}],"onFormContentClicked":[{"__symbolic":"method"}],"processDefinitionSelectionChanged":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]},"statics":{"MAX_NAME_LENGTH":255,"PROCESS_DEFINITION_DEBOUNCE":300,"PROCESS_FORM_DEBOUNCE":400}},"ProcessInstanceCloud":{"__symbolic":"interface"},"ProcessPayloadCloud":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"StartProcessCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":26,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":31,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":32,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":33,"character":34}]}],"getProcessDefinitions":[{"__symbolic":"method"}],"createProcess":[{"__symbolic":"method"}],"startCreatedProcess":[{"__symbolic":"method"}],"startProcess":[{"__symbolic":"method"}],"updateProcess":[{"__symbolic":"method"}],"deleteProcess":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"StartProcessCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":25,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":28,"character":8},{"__symbolic":"reference","name":"FormCloudModule"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":32,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":33,"character":8}],"declarations":[{"__symbolic":"reference","name":"StartProcessCloudComponent"}],"exports":[{"__symbolic":"reference","name":"StartProcessCloudComponent"}]}]}],"members":{}},"ProcessHeaderCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":23,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":25,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":27,"character":8}],"declarations":[{"__symbolic":"reference","name":"ProcessHeaderCloudComponent"}],"exports":[{"__symbolic":"reference","name":"ProcessHeaderCloudComponent"}]}]}],"members":{}},"ProcessHeaderCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-cloud-process-header","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":27,"character":19},"member":"None"},"host":{"class":"adf-cloud-process-header"},"template":"<mat-card *ngIf=\"processInstanceDetails\">\n  <mat-card-content>\n    <adf-card-view [properties]=\"properties\"></adf-card-view>\n  </mat-card-content>\n</mat-card>"}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":5}}]}],"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":52,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":53,"character":27}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"loadProcessInstanceDetails":[{"__symbolic":"method"}],"onLoaded":[{"__symbolic":"method"}],"refreshData":[{"__symbolic":"method"}],"initDefaultProperties":[{"__symbolic":"method"}],"isValidSelection":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"CancelProcessDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":23,"character":1},"arguments":[{"selector":"[adf-cloud-cancel-process]"}]}],"members":{"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":44,"character":28},{"__symbolic":"reference","name":"ProcessCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":46,"character":37}]}],"ngOnInit":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":58,"character":5},"arguments":["click"]}]}],"setElementVisibility":[{"__symbolic":"method"}],"checkCanCancelProcess":[{"__symbolic":"method"}],"cancelProcess":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ProcessDirectiveModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":20,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"CancelProcessDirective"}],"exports":[{"__symbolic":"reference","name":"CancelProcessDirective"}]}]}],"members":{}},"ProcessCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":26,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":33,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":34,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":35,"character":36}]}],"getProcessInstanceById":[{"__symbolic":"method"}],"getProcessDefinitions":[{"__symbolic":"method"}],"getApplicationVersions":[{"__symbolic":"method"}],"cancelProcess":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ProcessCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":26,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":28,"character":8},{"__symbolic":"reference","name":"ProcessFiltersCloudModule"},{"__symbolic":"reference","name":"ProcessListCloudModule"},{"__symbolic":"reference","name":"StartProcessCloudModule"},{"__symbolic":"reference","name":"ProcessHeaderCloudModule"},{"__symbolic":"reference","name":"ProcessDirectiveModule"}],"exports":[{"__symbolic":"reference","name":"ProcessFiltersCloudModule"},{"__symbolic":"reference","name":"ProcessListCloudModule"},{"__symbolic":"reference","name":"StartProcessCloudModule"},{"__symbolic":"reference","name":"ProcessHeaderCloudModule"},{"__symbolic":"reference","name":"ProcessDirectiveModule"}],"providers":[{"__symbolic":"reference","name":"ProcessNameCloudPipe"}]}]}],"members":{}},"TaskListCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵi"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-cloud-task-list","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":28,"character":19},"member":"None"},"template":"<div *ngIf=\"!rows\">{{ 'ADF_CLOUD_TASK_LIST.FILTERS.MESSAGES.NONE' | translate }}</div>\n<ng-container *ngIf=\"rows\">\n        <adf-datatable\n            [rows]=\"rows\"\n            [columns]=\"columns\"\n            [loading]=\"isLoading\"\n            [sorting]=\"formattedSorting\"\n            [multiselect]=\"multiselect\"\n            [selectionMode]=\"selectionMode\"\n            [stickyHeader]=\"stickyHeader\"\n            [actions]=\"showActions\"\n            [actionsPosition]=\"actionsPosition\"\n            [contextMenu]=\"showContextMenu\"\n            [resolverFn]=\"boundReplacePriorityValues\"\n            (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n            (showRowContextMenu)=\"onShowRowContextMenu($event)\"\n            (executeRowAction)=\"onExecuteRowAction($event)\"\n            (row-select)=\"onRowSelect($any($event))\"\n            (row-unselect)=\"onRowUnselect($any($event))\"\n            (rowClick)=\"onRowClick($any($event))\"\n            (row-keyup)=\"onRowKeyUp($any($event))\"\n            (sorting-changed)=\"onSortingChanged($any($event))\">\n            <adf-loading-content-template>\n                <ng-template>\n                    <!-- Add your custom loading template here -->\n                    <mat-progress-spinner class=\"adf-cloud-task-list-loading-margin\"\n                                          [color]=\"'primary'\"\n                                          [mode]=\"'indeterminate'\">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n            <adf-no-content-template>\n                <ng-template>\n                    <adf-empty-content *ngIf=\"!emptyCustomContent\"\n                                       icon=\"assignment\"\n                                       [title]=\"'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.TITLE' | translate\"\n                                       [subtitle]=\"'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.SUBTITLE' | translate\">\n                    </adf-empty-content>\n                    <ng-content select=\"adf-custom-empty-content-template\"></ng-content>\n                </ng-template>\n            </adf-no-content-template>\n        </adf-datatable>\n</ng-container>\n","styles":[".adf-cloud-task-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],"members":{"assignee":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":5}}]}],"createdDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":5}}]}],"createdFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"createdTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"dueDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"lastModifiedFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":5}}]}],"lastModifiedTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":5}}]}],"dueDateFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":5}}]}],"dueDateTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":5}}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":75,"character":5}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":5}}]}],"parentTaskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":83,"character":5}}]}],"processDefinitionName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":87,"character":5}}]}],"processDefinitionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":91,"character":5}}]}],"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":95,"character":5}}]}],"status":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":99,"character":5}}]}],"owner":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":103,"character":5}}]}],"priority":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":107,"character":5}}]}],"completedBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":111,"character":5}}]}],"standalone":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":115,"character":5}}]}],"completedDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":119,"character":5}}]}],"completedFrom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":123,"character":5}}]}],"completedTo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":127,"character":5}}]}],"candidateGroupId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":131,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":135,"character":34},{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":137,"character":33}]}],"load":[{"__symbolic":"method"}],"createRequestNode":[{"__symbolic":"method"}]},"statics":{"PRESET_KEY":"adf-cloud-task-list.presets"}},"ServiceTaskListCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵi"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"adf-cloud-service-task-list","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":30,"character":19},"member":"None"},"template":"<div *ngIf=\"!rows\">{{ 'ADF_CLOUD_TASK_LIST.FILTERS.MESSAGES.NONE' | translate }}</div>\n<ng-container *ngIf=\"rows\">\n        <adf-datatable\n            [rows]=\"rows\"\n            [columns]=\"columns\"\n            [loading]=\"isLoading\"\n            [sorting]=\"formattedSorting\"\n            [multiselect]=\"multiselect\"\n            [selectionMode]=\"selectionMode\"\n            [stickyHeader]=\"stickyHeader\"\n            [actions]=\"showActions\"\n            [actionsPosition]=\"actionsPosition\"\n            [contextMenu]=\"showContextMenu\"\n            [resolverFn]=\"boundReplacePriorityValues\"\n            (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n            (showRowContextMenu)=\"onShowRowContextMenu($event)\"\n            (executeRowAction)=\"onExecuteRowAction($event)\"\n            (row-select)=\"onRowSelect($any($event))\"\n            (row-unselect)=\"onRowUnselect($any($event))\"\n            (rowClick)=\"onRowClick($any($event))\"\n            (row-keyup)=\"onRowKeyUp($any($event))\"\n            (sorting-changed)=\"onSortingChanged($any($event))\">\n            <adf-loading-content-template>\n                <ng-template>\n                    <!-- Add your custom loading template here -->\n                    <mat-progress-spinner class=\"adf-cloud-task-list-loading-margin\"\n                                          [color]=\"'primary'\"\n                                          [mode]=\"'indeterminate'\">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n            <adf-no-content-template>\n                <ng-template>\n                    <adf-empty-content *ngIf=\"!emptyCustomContent\"\n                                       icon=\"assignment\"\n                                       [title]=\"'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.TITLE' | translate\"\n                                       [subtitle]=\"'ADF_CLOUD_TASK_LIST.LIST.MESSAGES.SUBTITLE' | translate\">\n                    </adf-empty-content>\n                    <ng-content select=\"adf-custom-empty-content-template\"></ng-content>\n                </ng-template>\n            </adf-no-content-template>\n        </adf-datatable>\n</ng-container>\n","styles":[".adf-cloud-task-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],"members":{"queryParams":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ServiceTaskListCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":40,"character":34},{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":42,"character":33}]}],"load":[{"__symbolic":"method"}],"createRequestNode":[{"__symbolic":"method"}]},"statics":{"PRESET_KEY":"adf-cloud-service-task-list.presets"}},"TaskQueryCloudRequestModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"ServiceTaskQueryCloudRequestModel":{"__symbolic":"interface"},"ServiceTaskIntegrationContextCloudModel":{"__symbolic":"interface"},"TaskListCloudSortingModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"taskPresetsCloudDefaultModel":{"default":[{"key":"name","type":"text","title":"ADF_CLOUD_TASK_LIST.PROPERTIES.NAME","sortable":true,"$quoted$":["key","type","title","sortable"]},{"key":"created","type":"text","title":"ADF_CLOUD_TASK_LIST.PROPERTIES.CREATED","cssClass":"hidden","sortable":true,"$quoted$":["key","type","title","cssClass","sortable"]},{"key":"assignee","type":"text","title":"ADF_CLOUD_TASK_LIST.PROPERTIES.ASSIGNEE","cssClass":"hidden","sortable":true,"$quoted$":["key","type","title","cssClass","sortable"]}],"$quoted$":["default"]},"serviceTaskPresetsCloudDefaultModel":{"default":[{"key":"activityName","type":"text","title":"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.ACTIVITY_NAME","sortable":true,"$quoted$":["key","type","title","sortable"]},{"key":"status","type":"text","title":"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.STATUS","sortable":true,"$quoted$":["key","type","title","sortable"]},{"key":"startedDate","type":"text","title":"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.STARTED_DATE","cssClass":"hidden","sortable":true,"$quoted$":["key","type","title","cssClass","sortable"]},{"key":"completedDate","type":"text","title":"ADF_CLOUD_SERVICE_TASK_LIST.PROPERTIES.COMPLETED_DATE","cssClass":"hidden","sortable":true,"$quoted$":["key","type","title","cssClass","sortable"]}],"$quoted$":["default"]},"TaskListCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":26,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":29,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":30,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":31,"character":38}]}],"getTaskByRequest":[{"__symbolic":"method"}],"buildQueryParams":[{"__symbolic":"method"}],"isExcludedField":[{"__symbolic":"method"}],"isPropertyValueValid":[{"__symbolic":"method"}],"buildSortingParam":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ServiceTaskListCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":25,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":28,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":29,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":30,"character":36}]}],"getServiceTaskByRequest":[{"__symbolic":"method"}],"getServiceTaskStatus":[{"__symbolic":"method"}],"buildQueryParams":[{"__symbolic":"method"}],"isExcludedField":[{"__symbolic":"method"}],"isPropertyValueValid":[{"__symbolic":"method"}],"buildSortingParam":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"TaskListCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":24,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":26,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":28,"character":8}],"declarations":[{"__symbolic":"reference","name":"TaskListCloudComponent"},{"__symbolic":"reference","name":"ServiceTaskListCloudComponent"}],"exports":[{"__symbolic":"reference","name":"TaskListCloudComponent"},{"__symbolic":"reference","name":"ServiceTaskListCloudComponent"}]}]}],"members":{}},"TaskFiltersCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵj"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"adf-cloud-task-filters","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":31,"character":19},"member":"None"},"template":"<ng-container *ngIf=\"filters$ | async as filterList; else loading\">\n    <div *ngFor=\"let filter of filterList\"\n         class=\"adf-task-filters__entry\">\n        <button (click)=\"onFilterClick(filter)\"\n                [attr.aria-label]=\"filter.name | translate\"\n                [id]=\"filter.id\"\n                [attr.data-automation-id]=\"filter.key + '_filter'\"\n                mat-button\n                [class.adf-active]=\"currentFilter === filter\"\n                class=\"adf-filter-action-button adf-full-width\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"space-between center\">\n            <adf-icon data-automation-id=\"adf-filter-icon\"\n                      *ngIf=\"showIcons\"\n                      [value]=\"filter.icon\"></adf-icon>\n            <span data-automation-id=\"adf-filter-label\"\n                  class=\"adf-filter-action-button__label\">{{ filter.name | translate }}</span>\n        </button>\n        <span *ngIf=\"counters$[filter.key]\"\n              [attr.data-automation-id]=\"filter.key + '_filter-counter'\"\n              class=\"adf-filter-action-button__counter\"\n              [class.adf-active]=wasFilterUpdated(filter.key)>\n            {{ counters$[filter.key] | async }}\n        </span>\n    </div>\n</ng-container>\n<ng-template #loading>\n    <ng-container>\n        <div class=\"adf-app-list-spinner\">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n","styles":[".adf-task-filters__entry{display:flex;font-size:14px!important;font-weight:700;height:24px;opacity:1;padding:12px 0!important;width:100%}.adf-task-filters__entry .adf-full-width{display:flex;width:100%}.adf-task-filters__entry .adf-filter-action-button{cursor:pointer;opacity:.54;padding:16px}.adf-task-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-task-filters__entry .adf-filter-action-button__counter{margin-left:10px;margin-top:6px;opacity:.54;padding:0 5px}.adf-task-filters__entry .adf-filter-action-button__counter.adf-active{background-color:var(--theme-accent-color);border-radius:15px;color:var(--theme-colors-mag-grey-light);font-size:smaller;margin-left:8px;margin-top:5px;padding:0 5px}.adf-task-filters__entry:hover{color:var(--theme-primary-color)}.adf-task-filters__entry:hover .adf-filter-action-button,.adf-task-filters__entry:hover .adf-filter-action-button__counter{opacity:1}.adf-task-filters__entry .adf-active{color:var(--theme-primary-color);opacity:1}"]}]}],"members":{"filterSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":36,"character":5}}]}],"filterClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"filterCounterUpdated":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskFilterCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":53,"character":44},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":54,"character":42}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getFilters":[{"__symbolic":"method"}],"updateFilterCounters":[{"__symbolic":"method"}],"updateFilterCounter":[{"__symbolic":"method"}],"initFilterCounterNotifications":[{"__symbolic":"method"}],"checkFilterCounter":[{"__symbolic":"method"}],"isFilterPresent":[{"__symbolic":"method"}],"selectFilter":[{"__symbolic":"method"}],"selectFilterAndEmit":[{"__symbolic":"method"}],"onFilterClick":[{"__symbolic":"method"}],"selectDefaultTaskFilter":[{"__symbolic":"method"}],"isFilterListEmpty":[{"__symbolic":"method"}],"resetFilter":[{"__symbolic":"method"}]}},"ServiceTaskFiltersCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵj"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"adf-cloud-service-task-filters","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":29,"character":19},"member":"None"},"template":"<ng-container *ngIf=\"filters$ | async as filterList; else loading\">\n    <div *ngFor=\"let filter of filterList\"\n         class=\"adf-task-filters__entry\">\n        <button (click)=\"onFilterClick(filter)\"\n                [attr.aria-label]=\"filter.name | translate\"\n                [id]=\"filter.id\"\n                [attr.data-automation-id]=\"filter.key + '_filter'\"\n                mat-button\n                [class.adf-active]=\"currentFilter === filter\"\n                class=\"adf-filter-action-button adf-full-width\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"space-between center\">\n            <adf-icon data-automation-id=\"adf-filter-icon\"\n                      *ngIf=\"showIcons\"\n                      [value]=\"filter.icon\"></adf-icon>\n            <span data-automation-id=\"adf-filter-label\"\n                  class=\"adf-filter-action-button__label\">{{ filter.name | translate }}</span>\n        </button>\n        <span *ngIf=\"counters$[filter.key]\"\n              [attr.data-automation-id]=\"filter.key + '_filter-counter'\"\n              class=\"adf-filter-action-button__counter\"\n              [class.adf-active]=wasFilterUpdated(filter.key)>\n            {{ counters$[filter.key] | async }}\n        </span>\n    </div>\n</ng-container>\n<ng-template #loading>\n    <ng-container>\n        <div class=\"adf-app-list-spinner\">\n            <mat-spinner></mat-spinner>\n        </div>\n    </ng-container>\n</ng-template>\n","styles":[".adf-task-filters__entry{display:flex;font-size:14px!important;font-weight:700;height:24px;opacity:1;padding:12px 0!important;width:100%}.adf-task-filters__entry .adf-full-width{display:flex;width:100%}.adf-task-filters__entry .adf-filter-action-button{cursor:pointer;opacity:.54;padding:16px}.adf-task-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-task-filters__entry .adf-filter-action-button__counter{margin-left:10px;margin-top:6px;opacity:.54;padding:0 5px}.adf-task-filters__entry .adf-filter-action-button__counter.adf-active{background-color:var(--theme-accent-color);border-radius:15px;color:var(--theme-colors-mag-grey-light);font-size:smaller;margin-left:8px;margin-top:5px;padding:0 5px}.adf-task-filters__entry:hover{color:var(--theme-primary-color)}.adf-task-filters__entry:hover .adf-filter-action-button,.adf-task-filters__entry:hover .adf-filter-action-button__counter{opacity:1}.adf-task-filters__entry .adf-active{color:var(--theme-primary-color);opacity:1}"]}]}],"members":{"filterSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":5}}]}],"filterClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":38,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ServiceTaskFilterCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":46,"character":44}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getFilters":[{"__symbolic":"method"}],"selectFilter":[{"__symbolic":"method"}],"selectFilterAndEmit":[{"__symbolic":"method"}],"onFilterClick":[{"__symbolic":"method"}],"selectDefaultTaskFilter":[{"__symbolic":"method"}],"isFilterListEmpty":[{"__symbolic":"method"}],"resetFilter":[{"__symbolic":"method"}]}},"EditTaskFilterCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵk"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"adf-cloud-edit-task-filter","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":38,"character":19},"member":"None"},"template":"<mat-accordion [hideToggle]=\"isLoading\">\n    <mat-expansion-panel (afterExpand)=\"onExpand()\" (closed)=\"onClose()\">\n        <mat-expansion-panel-header *ngIf=\"taskFilter\" id=\"adf-edit-task-filter-expansion-header\">\n            <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n                <mat-panel-title *ngIf=\"showTaskFilterName\" fxLayoutAlign=\"space-between center\" id=\"adf-edit-task-filter-title-id\"\n                    >{{taskFilter.name | translate}}</mat-panel-title>\n                <mat-panel-description fxLayoutAlign=\"space-between center\" id=\"adf-edit-task-filter-sub-title-id\">\n                    <span *ngIf=\"showTitle\">{{ 'ADF_CLOUD_EDIT_TASK_FILTER.TITLE' | translate}}</span>\n                    <div *ngIf=\"showFilterActions\" class=\"adf-cloud-edit-task-filter-actions\">\n                        <ng-container *ngIf=\"toggleFilterActions\">\n                            <button *ngFor=\"let filterAction of taskFilterActions\"\n                                    mat-icon-button\n                                    matTooltip=\"{{ filterAction.tooltip | translate}}\"\n                                    [attr.data-automation-id]=\"'adf-filter-action-' + filterAction.actionType\"\n                                    [disabled]=\"isDisabledAction(filterAction)\"\n                                    (click)=\"executeFilterActions(filterAction)\">\n                                <adf-icon [value]=\"filterAction.icon\"></adf-icon>\n                            </button>\n                        </ng-container>\n                    </div>\n                </mat-panel-description>\n            </ng-container>\n            <ng-template #loadingTemplate>\n                <div class=\"adf-cloud-edit-task-filter-loading-margin\">\n                    <mat-spinner [diameter]=\"30\"></mat-spinner>\n                </div>\n            </ng-template>\n        </mat-expansion-panel-header>\n        <ng-container *ngIf=\"!isLoading;\">\n            <form *ngIf=\"editTaskFilterForm\" [formGroup]=\"editTaskFilterForm\">\n                <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\n                    <ng-container *ngFor=\"let taskFilterProperty of taskFilterProperties\">\n                        <mat-form-field fxFlex=\"23%\"\n                                        [floatLabel]=\"'auto'\"\n                                        *ngIf=\"taskFilterProperty.type === 'select'\"\n                                        [attr.data-automation-id]=\"taskFilterProperty.key\">\n                            <mat-select placeholder=\"{{taskFilterProperty.label | translate}}\"\n                                        [formControlName]=\"taskFilterProperty.key\"\n                                        [attr.data-automation-id]=\"'adf-cloud-edit-task-property-' + taskFilterProperty.key\">\n                                <mat-option *ngFor=\"let propertyOption of taskFilterProperty.options\"\n                                            [value]=\"propertyOption.value\"\n                                            [attr.data-automation-id]=\"'adf-cloud-edit-task-property-options-' + taskFilterProperty.key\">\n                                    {{ propertyOption.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"23%\"\n                                        [floatLabel]=\"'auto'\"\n                                        *ngIf=\"taskFilterProperty.type === 'text'\"\n                                        [attr.data-automation-id]=\"taskFilterProperty.key\">\n                            <input matInput\n                                   [formControlName]=\"taskFilterProperty.key\"\n                                   type=\"text\"\n                                   placeholder=\"{{taskFilterProperty.label | translate}}\"\n                                   [attr.data-automation-id]=\"'adf-cloud-edit-task-property-' + taskFilterProperty.key\" />\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"23%\"\n                                        [floatLabel]=\"'auto'\"\n                                        *ngIf=\"taskFilterProperty.type === 'date'\"\n                                        [attr.data-automation-id]=\"taskFilterProperty.key\">\n                            <mat-label>{{taskFilterProperty.label | translate}}</mat-label>\n                            <input matInput\n                                   (keyup)=\"onDateChanged($any($event).srcElement.value, taskFilterProperty)\"\n                                   (dateChange)=\"onDateChanged($event.value, taskFilterProperty)\"\n                                   [matDatepicker]=\"dateController\"\n                                   placeholder=\"{{taskFilterProperty.label | translate}}\"\n                                   [attr.data-automation-id]=\"'adf-cloud-edit-task-property-' + taskFilterProperty.key\">\n                            <mat-datepicker-toggle matSuffix\n                                                   [for]=\"dateController\"\n                                                   [attr.data-automation-id]=\"'adf-cloud-edit-task-property-date-toggle-' + taskFilterProperty.key\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #dateController\n                                            [attr.data-automation-id]=\"'adf-cloud-edit-task-property-date-picker-' + taskFilterProperty.key\">\n                            </mat-datepicker>\n                            <div class=\"adf-edit-task-filter-date-error-container\">\n                                <div *ngIf=\"hasError(taskFilterProperty)\">\n                                    <div class=\"adf-error-text\">{{'ADF_TASK_LIST.START_TASK.FORM.ERROR.DATE'|translate}}</div>\n                                    <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                                </div>\n                            </div>\n                        </mat-form-field>\n                        <div class=\"adf-edit-task-filter-checkbox\"\n                             *ngIf=\"taskFilterProperty.type === 'checkbox'\">\n                            <mat-checkbox color=\"primary\"\n                                          [formControlName]=\"taskFilterProperty.key\"\n                                          [attr.data-automation-id]=\"taskFilterProperty.key\"\n                            >{{taskFilterProperty.label | translate}}</mat-checkbox>\n                        </div>\n\n                        <adf-cloud-date-range-filter #dateRange\n                            *ngIf=\"taskFilterProperty.type === 'date-range'\"\n                            [processFilterProperty]=\"taskFilterProperty\"\n                            [options]=\"taskFilterProperty.dateFilterOptions\"\n                            (dateTypeChange)=\"onDateTypeChange($event, taskFilterProperty)\"\n                            (dateChanged)=\"onDateRangeFilterChanged($event, taskFilterProperty)\">\n                        </adf-cloud-date-range-filter>\n\n                        <div fxFlex=\"23%\" class=\"{{ 'adf-edit-task-filter-' + taskFilterProperty.key }}\" *ngIf=\"taskFilterProperty.type === 'people'\">\n                            <adf-cloud-people\n                                [preSelectUsers]=\"taskFilterProperty.value\"\n                                [title]=\"taskFilterProperty.label\"\n                                [validate]=\"true\"\n                                [appName]=\"appName\"\n                                [mode]=\"taskFilterProperty.selectionMode\"\n                                (changedUsers)=\"onChangedUser($event, taskFilterProperty)\">\n                            </adf-cloud-people>\n                        </div>\n\n                        <adf-cloud-task-assignment-filter fxFlex=\"23%\"\n                            *ngIf=\"taskFilterProperty.type === 'assignment'\"\n                            [taskFilterProperty]=\"taskFilterProperty\"\n                            (assignedChange)=\"onAssignedChange($event)\"\n                            (assignedGroupChange)=\"onAssignedGroupsChange($event)\">\n                        </adf-cloud-task-assignment-filter>\n                    </ng-container>\n                </div>\n            </form>\n        </ng-container>\n    </mat-expansion-panel>\n</mat-accordion>\n","styles":[".adf-edit-task-filter-checkbox{flex:1 23%;font-size:16px;padding-top:10px;text-align:center}.adf-edit-task-filter-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-edit-task-filter-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-edit-task-filter-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:10px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-edit-task-filter-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:16px}.adf-edit-task-filter-dateRange mat-grid-list{width:450px}.adf-cloud-edit-task-filter-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":42,"character":21},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":43,"character":16},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":44,"character":26},{"__symbolic":"reference","name":"TaskFilterCloudService"},{"__symbolic":"reference","name":"DateAdapter","module":"@angular/material/core","arguments":[{"__symbolic":"reference","module":"moment","name":"Moment","line":46,"character":33}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":47,"character":32},{"__symbolic":"reference","name":"AppsProcessCloudService"},{"__symbolic":"reference","name":"TaskCloudService"}]}],"assignNewFilter":[{"__symbolic":"method"}],"getTaskFilterById":[{"__symbolic":"method"}],"createAndFilterProperties":[{"__symbolic":"method"}],"getDefaultFilterProperties":[{"__symbolic":"method"}],"getDefaultSortProperties":[{"__symbolic":"method"}],"setLastModifiedToFilter":[{"__symbolic":"method"}],"updateFilter":[{"__symbolic":"method"}],"deleteFilter":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"isDisabledForDefaultFilters":[{"__symbolic":"method"}],"restoreDefaultTaskFilters":[{"__symbolic":"method"}],"createLastModifiedProperty":[{"__symbolic":"method"}],"getStatusOptions":[{"__symbolic":"method"}],"createTaskFilterProperties":[{"__symbolic":"method"}]}},"EditServiceTaskFilterCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵk"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"adf-cloud-edit-service-task-filter","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":36,"character":19},"member":"None"},"template":"<mat-accordion [hideToggle]=\"isLoading\">\n    <mat-expansion-panel (afterExpand)=\"onExpand()\" (closed)=\"onClose()\">\n        <mat-expansion-panel-header *ngIf=\"taskFilter\" id=\"adf-edit-task-filter-expansion-header\">\n            <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n                <mat-panel-title *ngIf=\"showTaskFilterName\" fxLayoutAlign=\"space-between center\" id=\"adf-edit-task-filter-title-id\"\n                    >{{taskFilter.name | translate}}</mat-panel-title>\n                <mat-panel-description fxLayoutAlign=\"space-between center\" id=\"adf-edit-task-filter-sub-title-id\">\n                    <span *ngIf=\"showTitle\">{{ 'ADF_CLOUD_EDIT_TASK_FILTER.TITLE' | translate}}</span>\n                    <div *ngIf=\"showFilterActions\" class=\"adf-cloud-edit-task-filter-actions\">\n                        <ng-container *ngIf=\"toggleFilterActions\">\n                            <button *ngFor=\"let filterAction of taskFilterActions\"\n                                    mat-icon-button\n                                    matTooltip=\"{{ filterAction.tooltip | translate}}\"\n                                    [attr.data-automation-id]=\"'adf-filter-action-' + filterAction.actionType\"\n                                    [disabled]=\"isDisabledAction(filterAction)\"\n                                    (click)=\"executeFilterActions(filterAction)\">\n                                <adf-icon [value]=\"filterAction.icon\"></adf-icon>\n                            </button>\n                        </ng-container>\n                    </div>\n                </mat-panel-description>\n            </ng-container>\n            <ng-template #loadingTemplate>\n                <div class=\"adf-cloud-edit-task-filter-loading-margin\">\n                    <mat-spinner [diameter]=\"30\"></mat-spinner>\n                </div>\n            </ng-template>\n        </mat-expansion-panel-header>\n        <ng-container *ngIf=\"!isLoading;\">\n            <form *ngIf=\"editTaskFilterForm\" [formGroup]=\"editTaskFilterForm\">\n                <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\n                    <ng-container *ngFor=\"let taskFilterProperty of taskFilterProperties\">\n                        <mat-form-field fxFlex=\"23%\"\n                                        [floatLabel]=\"'auto'\"\n                                        *ngIf=\"taskFilterProperty.type === 'select'\"\n                                        [attr.data-automation-id]=\"taskFilterProperty.key\">\n                            <mat-select placeholder=\"{{taskFilterProperty.label | translate}}\"\n                                        [formControlName]=\"taskFilterProperty.key\"\n                                        [attr.data-automation-id]=\"'adf-cloud-edit-task-property-' + taskFilterProperty.key\">\n                                <mat-option *ngFor=\"let propertyOption of taskFilterProperty.options\"\n                                            [value]=\"propertyOption.value\"\n                                            [attr.data-automation-id]=\"'adf-cloud-edit-task-property-options-' + taskFilterProperty.key\">\n                                    {{ propertyOption.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"23%\"\n                                        [floatLabel]=\"'auto'\"\n                                        *ngIf=\"taskFilterProperty.type === 'text'\"\n                                        [attr.data-automation-id]=\"taskFilterProperty.key\">\n                            <input matInput\n                                   [formControlName]=\"taskFilterProperty.key\"\n                                   type=\"text\"\n                                   placeholder=\"{{taskFilterProperty.label | translate}}\"\n                                   [attr.data-automation-id]=\"'adf-cloud-edit-task-property-' + taskFilterProperty.key\" />\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"23%\"\n                                        [floatLabel]=\"'auto'\"\n                                        *ngIf=\"taskFilterProperty.type === 'date'\"\n                                        [attr.data-automation-id]=\"taskFilterProperty.key\">\n                            <mat-label>{{taskFilterProperty.label | translate}}</mat-label>\n                            <input matInput\n                                   (keyup)=\"onDateChanged($any($event).srcElement.value, taskFilterProperty)\"\n                                   (dateChange)=\"onDateChanged($event.value, taskFilterProperty)\"\n                                   [matDatepicker]=\"dateController\"\n                                   placeholder=\"{{taskFilterProperty.label | translate}}\"\n                                   [attr.data-automation-id]=\"'adf-cloud-edit-task-property-' + taskFilterProperty.key\">\n                            <mat-datepicker-toggle matSuffix\n                                                   [for]=\"dateController\"\n                                                   [attr.data-automation-id]=\"'adf-cloud-edit-task-property-date-toggle-' + taskFilterProperty.key\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #dateController\n                                            [attr.data-automation-id]=\"'adf-cloud-edit-task-property-date-picker-' + taskFilterProperty.key\">\n                            </mat-datepicker>\n                            <div class=\"adf-edit-task-filter-date-error-container\">\n                                <div *ngIf=\"hasError(taskFilterProperty)\">\n                                    <div class=\"adf-error-text\">{{'ADF_TASK_LIST.START_TASK.FORM.ERROR.DATE'|translate}}</div>\n                                    <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                                </div>\n                            </div>\n                        </mat-form-field>\n                        <div class=\"adf-edit-task-filter-checkbox\"\n                             *ngIf=\"taskFilterProperty.type === 'checkbox'\">\n                            <mat-checkbox color=\"primary\"\n                                          [formControlName]=\"taskFilterProperty.key\"\n                                          [attr.data-automation-id]=\"taskFilterProperty.key\"\n                            >{{taskFilterProperty.label | translate}}</mat-checkbox>\n                        </div>\n\n                        <adf-cloud-date-range-filter #dateRange\n                            *ngIf=\"taskFilterProperty.type === 'date-range'\"\n                            [processFilterProperty]=\"taskFilterProperty\"\n                            [options]=\"taskFilterProperty.dateFilterOptions\"\n                            (dateTypeChange)=\"onDateTypeChange($event, taskFilterProperty)\"\n                            (dateChanged)=\"onDateRangeFilterChanged($event, taskFilterProperty)\">\n                        </adf-cloud-date-range-filter>\n\n                        <div fxFlex=\"23%\" class=\"{{ 'adf-edit-task-filter-' + taskFilterProperty.key }}\" *ngIf=\"taskFilterProperty.type === 'people'\">\n                            <adf-cloud-people\n                                [preSelectUsers]=\"taskFilterProperty.value\"\n                                [title]=\"taskFilterProperty.label\"\n                                [validate]=\"true\"\n                                [appName]=\"appName\"\n                                [mode]=\"taskFilterProperty.selectionMode\"\n                                (changedUsers)=\"onChangedUser($event, taskFilterProperty)\">\n                            </adf-cloud-people>\n                        </div>\n\n                        <adf-cloud-task-assignment-filter fxFlex=\"23%\"\n                            *ngIf=\"taskFilterProperty.type === 'assignment'\"\n                            [taskFilterProperty]=\"taskFilterProperty\"\n                            (assignedChange)=\"onAssignedChange($event)\"\n                            (assignedGroupChange)=\"onAssignedGroupsChange($event)\">\n                        </adf-cloud-task-assignment-filter>\n                    </ng-container>\n                </div>\n            </form>\n        </ng-container>\n    </mat-expansion-panel>\n</mat-accordion>\n","styles":[".adf-edit-task-filter-checkbox{flex:1 23%;font-size:16px;padding-top:10px;text-align:center}.adf-edit-task-filter-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-edit-task-filter-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-edit-task-filter-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:10px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-edit-task-filter-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:16px}.adf-edit-task-filter-dateRange mat-grid-list{width:450px}.adf-cloud-edit-task-filter-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":40,"character":21},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":41,"character":16},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":42,"character":26},{"__symbolic":"reference","name":"ServiceTaskFilterCloudService"},{"__symbolic":"reference","name":"DateAdapter","module":"@angular/material/core","arguments":[{"__symbolic":"reference","module":"moment","name":"Moment","line":44,"character":33}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":45,"character":32},{"__symbolic":"reference","name":"AppsProcessCloudService"},{"__symbolic":"reference","name":"TaskCloudService"}]}],"assignNewFilter":[{"__symbolic":"method"}],"getTaskFilterById":[{"__symbolic":"method"}],"getDefaultFilterProperties":[{"__symbolic":"method"}],"getDefaultSortProperties":[{"__symbolic":"method"}],"updateFilter":[{"__symbolic":"method"}],"deleteFilter":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"isDisabledForDefaultFilters":[{"__symbolic":"method"}],"restoreDefaultTaskFilters":[{"__symbolic":"method"}],"getStatusOptions":[{"__symbolic":"method"}],"createTaskFilterProperties":[{"__symbolic":"method"}]}},"TaskFilterCloudModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"getStartDate":[{"__symbolic":"method"}],"getEndDate":[{"__symbolic":"method"}],"isDateRangeType":[{"__symbolic":"method"}]}},"ServiceTaskFilterCloudModel":{"__symbolic":"interface"},"FilterParamsModel":{"__symbolic":"interface"},"TaskFilterAction":{"__symbolic":"interface"},"FilterOptions":{"__symbolic":"interface"},"AssignmentType":{"CURRENT_USER":"CURRENT_USER","UNASSIGNED":"UNASSIGNED","CANDIDATE_GROUPS":"CANDIDATE_GROUPS"},"TaskFilterProperties":{"__symbolic":"interface"},"TaskFilterCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":45,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":54,"character":9},"arguments":[{"__symbolic":"reference","name":"TASK_FILTERS_SERVICE_TOKEN"}]}],null,null,null],"parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":53,"character":37},{"__symbolic":"reference","name":"PreferenceCloudServiceInterface"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":56,"character":20},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":57,"character":26},{"__symbolic":"reference","name":"NotificationCloudService"}]}],"createDefaultFilters":[{"__symbolic":"method"}],"hasPreferences":[{"__symbolic":"method"}],"hasTaskFilters":[{"__symbolic":"method"}],"createTaskFilters":[{"__symbolic":"method"}],"getTaskFiltersByKey":[{"__symbolic":"method"}],"getTaskListFilters":[{"__symbolic":"method"}],"getTaskFilterById":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"addFiltersToStream":[{"__symbolic":"method"}],"updateFilter":[{"__symbolic":"method"}],"deleteFilter":[{"__symbolic":"method"}],"isDefaultFilter":[{"__symbolic":"method"}],"getTaskFilterCounter":[{"__symbolic":"method"}],"updateTaskFilters":[{"__symbolic":"method"}],"prepareKey":[{"__symbolic":"method"}],"findFiltersByKeyInPreferences":[{"__symbolic":"method"}],"defaultTaskFilters":[{"__symbolic":"method"}],"getTaskNotificationSubscription":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ServiceTaskFilterCloudService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":25,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":34,"character":9},"arguments":[{"__symbolic":"reference","name":"TASK_FILTERS_SERVICE_TOKEN"}]}]],"parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":33,"character":37},{"__symbolic":"reference","name":"PreferenceCloudServiceInterface"}]}],"createDefaultFilters":[{"__symbolic":"method"}],"hasPreferences":[{"__symbolic":"method"}],"hasTaskFilters":[{"__symbolic":"method"}],"createTaskFilters":[{"__symbolic":"method"}],"getTaskFiltersByKey":[{"__symbolic":"method"}],"getTaskListFilters":[{"__symbolic":"method"}],"getTaskFilterById":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"addFiltersToStream":[{"__symbolic":"method"}],"updateFilter":[{"__symbolic":"method"}],"deleteFilter":[{"__symbolic":"method"}],"isDefaultFilter":[{"__symbolic":"method"}],"updateTaskFilters":[{"__symbolic":"method"}],"prepareKey":[{"__symbolic":"method"}],"findFiltersByKeyInPreferences":[{"__symbolic":"method"}],"defaultServiceTaskFilters":[{"__symbolic":"method"}],"generateRandomId":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"TaskFiltersCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":36,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":38,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":39,"character":8},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":40,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":41,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":42,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"AppListCloudModule"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":45,"character":8},{"__symbolic":"reference","name":"GroupCloudModule"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"PeopleCloudModule"}],"declarations":[{"__symbolic":"reference","name":"TaskFiltersCloudComponent"},{"__symbolic":"reference","name":"ServiceTaskFiltersCloudComponent"},{"__symbolic":"reference","name":"EditTaskFilterCloudComponent"},{"__symbolic":"reference","name":"EditServiceTaskFilterCloudComponent"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"}],"exports":[{"__symbolic":"reference","name":"TaskFiltersCloudComponent"},{"__symbolic":"reference","name":"ServiceTaskFiltersCloudComponent"},{"__symbolic":"reference","name":"EditTaskFilterCloudComponent"},{"__symbolic":"reference","name":"EditServiceTaskFilterCloudComponent"}],"providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"DateAdapter","line":65,"character":19},"useClass":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MomentDateAdapter","line":65,"character":42}},{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"MAT_DATE_FORMATS","line":66,"character":19},"useValue":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MOMENT_DATE_FORMATS","line":66,"character":47}}]}]}],"members":{}},"TaskDetailsCloudModel":{"__symbolic":"interface"},"StartTaskCloudResponseModel":{"__symbolic":"interface"},"TaskStatus":{"__symbolic":"interface"},"StartTaskCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":37,"character":1},"arguments":[{"selector":"adf-cloud-start-task","providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"DateAdapter","line":42,"character":19},"useClass":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MomentDateAdapter","line":42,"character":42}},{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"MAT_DATE_FORMATS","line":43,"character":19},"useValue":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MOMENT_DATE_FORMATS","line":43,"character":47}}],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":44,"character":19},"member":"None"},"template":"<mat-card>\n    <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\"\n                     class=\"adf-cloud-start-task-heading\">\n        <mat-card-title>{{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.TITLE' | translate}}</mat-card-title>\n    </mat-card-header>\n    <form [formGroup]=\"taskForm\" fxLayout=\"column\" (ngSubmit)=\"saveTask()\">\n\n        <mat-card-content>\n            <div class=\"adf-task-name\">\n                <mat-form-field fxFlex>\n                    <mat-label>{{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.NAME' | translate }}</mat-label>\n                    <input\n                        matInput\n                        id=\"name_id\"\n                        class=\"form-control\"\n                        formControlName=\"name\">\n                    <mat-error *ngIf=\"nameController.hasError('required')\">\n                        {{ 'ADF_CLOUD_START_TASK.ERROR.REQUIRED' | translate }}\n                    </mat-error>\n                    <mat-error *ngIf=\"nameController.hasError('maxlength')\">\n                        {{ 'ADF_CLOUD_START_TASK.ERROR.MAXIMUM_LENGTH' | translate : {characters: maxNameLength} }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field fxFlex>\n                    <mat-label>{{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.DESCRIPTION' | translate}}</mat-label>\n                    <textarea\n                        matInput\n                        class=\"form-control\"\n                        id=\"description_id\"\n                        formControlName=\"description\">\n                    </textarea>\n                </mat-form-field>\n\n                <mat-form-field fxFlex class=\"adf-cloud-priority-container\">\n                    <mat-label>{{ 'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.PRIORITY' | translate }}</mat-label>\n                    <mat-select formControlName=\"priority\">\n                        <mat-option *ngFor=\"let priorityOption of priorities\" [value]=\"priorityOption.value\">{{ priorityOption.label | translate }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field fxFlex>\n                    <input matInput\n                           [matDatepicker]=\"taskDatePicker\"\n                           (keydown)=\"true\"\n                           (focusout)=\"onDateChanged($any($event).srcElement.value)\"\n                           placeholder=\"{{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.DATE'|translate}}\"\n                           [(ngModel)]=\"dueDate\"\n                           [ngModelOptions]=\"{standalone: true}\"\n                           id=\"date_id\">\n                    <mat-datepicker-toggle matSuffix [for]=\"taskDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #taskDatePicker\n                                    [touchUi]=\"true\"\n                                    (dateChanged)=\"onDateChanged($event)\">\n                    </mat-datepicker>\n                    <div class=\"adf-cloud-date-error-container\">\n                        <div *ngIf=\"dateError\">\n                            <div class=\"adf-error-text\">{{'ADF_CLOUD_START_TASK.ERROR.DATE' | translate}}</div>\n                            <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                        </div>\n                    </div>\n                </mat-form-field>\n                <adf-cloud-people fxFlex #peopleInput *ngIf=\"currentUser\"\n                                  [appName]=\"appName\"\n                                  [preSelectUsers]=\"[currentUser]\"\n                                  [searchUserCtrl]=\"assigneeFormControl\"\n                                  (selectUser)=\"onAssigneeSelect($event)\"\n                                  [title]=\"'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.ASSIGNEE'\"\n                                  (removeUser)=\"onAssigneeRemove()\"></adf-cloud-people>\n            </div>\n\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <adf-cloud-group fxFlex #groupInput *ngIf=\"currentUser\"\n                                 [mode]=\"'multiple'\"\n                                 [title]=\"'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.CANDIDATE_GROUP'\"\n                                 [appName]=\"appName\"\n                                 [searchGroupsControl]=\"candidateUserFormControl\"\n                                 (selectGroup)=\"onCandidateGroupSelect($event)\"\n                                 (removeGroup)=\"onCandidateGroupRemove($event)\">\n                </adf-cloud-group>\n                <adf-cloud-form-definition-selector *ngIf=\"appName\"\n                                                    fxFlex\n                                                    [appName]=\"appName\"\n                                                    (selectForm)=\"onFormSelect($event)\">\n                </adf-cloud-form-definition-selector>\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <div class=\"adf-cloud-start-task-footer\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\n                <button\n                    mat-button\n                    type=\"button\"\n                    (click)=\"onCancel()\"\n                    id=\"button-cancel\">\n                    {{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.ACTION.CANCEL'|translate}}\n                </button>\n                <button\n                    color=\"primary\"\n                    type=\"submit\"\n                    [disabled]=\"!canStartTask()\"\n                    mat-button\n                    id=\"button-start\">\n                    {{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.ACTION.START'|translate}}\n                </button>\n            </div>\n        </mat-card-actions>\n    </form>\n</mat-card>\n","styles":[".adf-cloud-start-task-heading{border-bottom:1px solid var(--theme-fg-divider);margin-bottom:10px}.adf-cloud-start-task-heading .mat-card-title{font-size:18px;font-weight:700}.adf-cloud-priority-container{padding-top:1.1em}.adf-cloud-date-error-container{height:20px;margin-top:12px;position:absolute;width:100%}.adf-cloud-date-error-container>div{display:flex;flex-flow:row;justify-content:flex-start}.adf-cloud-date-error-container .adf-error-text{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-cloud-date-error-container .adf-error-icon{color:var(--theme-warn-color);font-size:17px}.adf-cloud-start-task-footer{border-top:1px solid #eee;font-size:18px;padding:4px}adf-cloud-start-task .adf-cloud-start-task-footer .mat-button{text-transform:uppercase!important}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":5}}]}],"maxNameLength":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":5}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":66,"character":5}}]}],"cancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":70,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":74,"character":5}}]}],"assignee":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":77,"character":5},"arguments":["peopleInput"]}]}],"candidateGroups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":80,"character":5},"arguments":["groupInput"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","name":"DateAdapter","module":"@angular/material/core","arguments":[{"__symbolic":"reference","module":"moment","name":"Moment","line":110,"character":49}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":111,"character":48},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":112,"character":37},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":113,"character":45},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":114,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"buildForm":[{"__symbolic":"method"}],"getMaxNameLength":[{"__symbolic":"method"}],"loadCurrentUser":[{"__symbolic":"method"}],"loadDefaultPriorities":[{"__symbolic":"method"}],"saveTask":[{"__symbolic":"method"}],"createNewTask":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"onDateChanged":[{"__symbolic":"method"}],"onAssigneeSelect":[{"__symbolic":"method"}],"onAssigneeRemove":[{"__symbolic":"method"}],"onCandidateGroupSelect":[{"__symbolic":"method"}],"onCandidateGroupRemove":[{"__symbolic":"method"}],"canStartTask":[{"__symbolic":"method"}],"whitespaceValidator":[{"__symbolic":"method"}],"onFormSelect":[{"__symbolic":"method"}]},"statics":{"MAX_NAME_LENGTH":255}},"StartTaskCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":28,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":31,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":33,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":34,"character":8},{"__symbolic":"reference","name":"GroupCloudModule"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":36,"character":8},{"__symbolic":"reference","name":"FormCloudModule"},{"__symbolic":"reference","name":"PeopleCloudModule"}],"declarations":[{"__symbolic":"reference","name":"StartTaskCloudComponent"}],"exports":[{"__symbolic":"reference","name":"StartTaskCloudComponent"}]}]}],"members":{}},"TaskHeaderCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":37,"character":1},"arguments":[{"selector":"adf-cloud-task-header","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":41,"character":19},"member":"None"},"template":"<h3 *ngIf=\"showTitle\" class=\"adf-task-title\">{{ taskDetails?.name }}</h3>\n\n<div class=\"adf-task-header-container\">\n    <mat-card *ngIf=\"isTaskValid()\" class=\"adf-card-container\">\n        <mat-card-content>\n            <adf-card-view\n                *ngIf=\"!isLoading; else loadingTemplate\"\n                [displayNoneOption]=\"false\"\n                [properties]=\"properties\"\n                [editable]=\"isTaskEditable()\"\n                [displayClearAction]=\"displayDateClearAction\">\n            </adf-card-view>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<ng-template #loadingTemplate>\n    <div class=\"adf-task-header-loading\">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-template>\n","styles":[".adf-controls{display:flex;justify-content:space-between}.adf-edit-controls{display:flex;justify-content:flex-end;margin-left:auto}.adf-save-edit-mode,.adf-switch-to-edit-mode{color:var(--theme-primary-color)}.adf-cancel-edit-mode,.adf-claim-controls{color:#838383}@media screen and (max-width:959px){adf-card-view .adf-property-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}.adf-task-header-loading{display:flex;justify-content:center}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":5}}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":5}}]}],"claim":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":58,"character":5}}]}],"unclaim":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":62,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":66,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":85,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":86,"character":27},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CardViewUpdateService","line":87,"character":39}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"loadTaskDetailsById":[{"__symbolic":"method"}],"initDefaultProperties":[{"__symbolic":"method"}],"refreshData":[{"__symbolic":"method"}],"updateTaskDetails":[{"__symbolic":"method"}],"loadParentName":[{"__symbolic":"method"}],"isCompleted":[{"__symbolic":"method"}],"hasAssignee":[{"__symbolic":"method"}],"isTaskValid":[{"__symbolic":"method"}],"isTaskAssigned":[{"__symbolic":"method"}],"isTaskEditable":[{"__symbolic":"method"}],"isAssigneePropertyClickable":[{"__symbolic":"method"}],"isValidSelection":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"TaskHeaderCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":23,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":25,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":27,"character":8},"member":"forChild"}}],"declarations":[{"__symbolic":"reference","name":"TaskHeaderCloudComponent"}],"exports":[{"__symbolic":"reference","name":"TaskHeaderCloudComponent"}]}]}],"members":{}},"TaskFormCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"adf-cloud-task-form","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":32,"character":19},"member":"None"},"template":"<div *ngIf=\"!loading; else loadingTemplate\">\n    <adf-cloud-form *ngIf=\"hasForm(); else withoutForm\"\n                    [appName]=\"appName\"\n                    [appVersion]=\"taskDetails.appVersion\"\n                    [taskId]=\"taskId\"\n                    [showTitle]=\"showTitle\"\n                    [processInstanceId]=\"taskDetails.processInstanceId\"\n                    [readOnly]=\"isReadOnly()\"\n                    [showRefreshButton]=\"showRefreshButton\"\n                    [showValidationIcon]=\"showValidationIcon\"\n                    [showCompleteButton]=\"canCompleteTask()\"\n                    [showSaveButton]=\"canCompleteTask()\"\n                    (formSaved)=\"onFormSaved($event)\"\n                    (formCompleted)=\"onFormCompleted($event)\"\n                    (formError)=\"onError($event)\"\n                    (error)=\"onError($event)\"\n                    (formContentClicked)=\"onFormContentClicked($event)\">\n        <adf-cloud-form-custom-outcomes>\n            <ng-template [ngTemplateOutlet]=\"taskFormCloudButtons\">\n            </ng-template>\n        </adf-cloud-form-custom-outcomes>\n    </adf-cloud-form>\n\n    <ng-template #withoutForm>\n        <mat-card class=\"adf-task-form-container\">\n            <mat-card-header *ngIf=\"showTitle\">\n                <mat-card-title>\n                    <h4>\n                        <span class=\"adf-form-title\">\n                            {{ taskDetails?.name || 'FORM.FORM_RENDERER.NAMELESS_TASK' | translate }}\n                        </span>\n                    </h4>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-empty-content\n                    [icon]=\"'description'\"\n                    [title]=\"'ADF_CLOUD_TASK_FORM.EMPTY_FORM.TITLE'\"\n                    [subtitle]=\"'ADF_CLOUD_TASK_FORM.EMPTY_FORM.SUBTITLE'\">\n                </adf-empty-content>\n            </mat-card-content>\n            <mat-card-actions class=\"adf-task-form-actions\">\n                <ng-template [ngTemplateOutlet]=\"taskFormCloudButtons\">\n                </ng-template>\n                <button mat-button *ngIf=\"canCompleteTask()\" adf-cloud-complete-task [appName]=\"appName\"\n                        [taskId]=\"taskId\" (success)=\"onCompleteTask()\" (error)=\"onError($event)\" color=\"primary\" id=\"adf-form-complete\">\n                    {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE' | translate}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </ng-template>\n    <ng-template #taskFormCloudButtons>\n        <button mat-button *ngIf=\"showCancelButton\" id=\"adf-cloud-cancel-task\" (click)=\"onCancelClick()\">\n            {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL' | translate}}\n        </button>\n        <button mat-button *ngIf=\"canClaimTask()\" adf-cloud-claim-task [appName]=\"appName\" [taskId]=\"taskId\"\n                (success)=\"onClaimTask()\" (error)=\"onError($event)\">\n            {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM' | translate}}\n        </button>\n        <button mat-button *ngIf=\"hasCandidateUsersOrGroups()\" adf-cloud-unclaim-task [appName]=\"appName\" [taskId]=\"taskId\"\n                (success)=\"onUnclaimTask()\" (error)=\"onError($event)\">\n            {{'ADF_CLOUD_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM' | translate}}\n        </button>\n    </ng-template>\n</div>\n\n<ng-template #loadingTemplate>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-template>\n","styles":[".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"showRefreshButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"showValidationIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":5}}]}],"showCancelButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}],"showCompleteButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":5}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"formSaved":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":69,"character":5}}]}],"formCompleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":73,"character":5}}]}],"taskCompleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":77,"character":5}}]}],"taskClaimed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":81,"character":5}}]}],"taskUnclaimed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":85,"character":5}}]}],"cancelClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":89,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":93,"character":5}}]}],"formContentClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":97,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormRenderingService","line":109,"character":38}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"loadTask":[{"__symbolic":"method"}],"hasForm":[{"__symbolic":"method"}],"canCompleteTask":[{"__symbolic":"method"}],"canClaimTask":[{"__symbolic":"method"}],"hasCandidateUsers":[{"__symbolic":"method"}],"hasCandidateGroups":[{"__symbolic":"method"}],"hasCandidateUsersOrGroups":[{"__symbolic":"method"}],"canUnclaimTask":[{"__symbolic":"method"}],"isReadOnly":[{"__symbolic":"method"}],"onCompleteTask":[{"__symbolic":"method"}],"onClaimTask":[{"__symbolic":"method"}],"onUnclaimTask":[{"__symbolic":"method"}],"onCancelClick":[{"__symbolic":"method"}],"onFormSaved":[{"__symbolic":"method"}],"onFormCompleted":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"onFormContentClicked":[{"__symbolic":"method"}]}},"TaskFormModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":27,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":29,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":30,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"FormCloudModule"},{"__symbolic":"reference","name":"TaskDirectiveModule"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":34,"character":8}],"declarations":[{"__symbolic":"reference","name":"TaskFormCloudComponent"}],"exports":[{"__symbolic":"reference","name":"TaskFormCloudComponent"}]}]}],"members":{}},"ClaimTaskCloudDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":20,"character":1},"arguments":[{"selector":"[adf-cloud-claim-task]"}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":5}}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":35,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":39,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":46,"character":37}]}],"ngOnInit":[{"__symbolic":"method"}],"validateInputs":[{"__symbolic":"method"}],"isTaskValid":[{"__symbolic":"method"}],"isAppValid":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":73,"character":5},"arguments":["click"]}]}],"claimTask":[{"__symbolic":"method"}]}},"UnClaimTaskCloudDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":19,"character":1},"arguments":[{"selector":"[adf-cloud-unclaim-task]"}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":5}}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":38,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskCloudService"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateInputs":[{"__symbolic":"method"}],"isTaskValid":[{"__symbolic":"method"}],"isAppValid":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":71,"character":5},"arguments":["click"]}]}]}},"CompleteTaskDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":19,"character":1},"arguments":[{"selector":"[adf-cloud-complete-task]"}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":5}}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":38,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskCloudService"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateInputs":[{"__symbolic":"method"}],"isTaskValid":[{"__symbolic":"method"}],"isAppValid":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":70,"character":5},"arguments":["click"]}]}]}},"TaskDirectiveModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":22,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"CompleteTaskDirective"},{"__symbolic":"reference","name":"ClaimTaskCloudDirective"},{"__symbolic":"reference","name":"UnClaimTaskCloudDirective"}],"exports":[{"__symbolic":"reference","name":"CompleteTaskDirective"},{"__symbolic":"reference","name":"ClaimTaskCloudDirective"},{"__symbolic":"reference","name":"UnClaimTaskCloudDirective"}]}]}],"members":{}},"ClaimTaskEnum":{"claim":"claim","unclaim":"unclaim"},"TaskPriorityOption":{"__symbolic":"interface"},"DEFAULT_TASK_PRIORITIES":[{"label":"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.NONE","value":"0","key":"0"},{"label":"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.LOW","value":"1","key":"1"},{"label":"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.NORMAL","value":"2","key":"2"},{"label":"ADF_CLOUD_TASK_LIST.PROPERTIES.PRIORITY_VALUES.HIGH","value":"3","key":"3"}],"TASK_ASSIGNED_STATE":"ASSIGNED","TASK_CREATED_STATE":"CREATED","TaskCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":28,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":36,"character":20},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":37,"character":26},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":38,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":39,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":40,"character":37}]}],"completeTask":[{"__symbolic":"method"}],"canCompleteTask":[{"__symbolic":"method"}],"isTaskEditable":[{"__symbolic":"method"}],"isAssigneePropertyClickable":[{"__symbolic":"method"}],"canClaimTask":[{"__symbolic":"method"}],"canUnclaimTask":[{"__symbolic":"method"}],"claimTask":[{"__symbolic":"method"}],"unclaimTask":[{"__symbolic":"method"}],"getTaskById":[{"__symbolic":"method"}],"createNewTask":[{"__symbolic":"method"}],"updateTask":[{"__symbolic":"method"}],"getCandidateUsers":[{"__symbolic":"method"}],"getCandidateGroups":[{"__symbolic":"method"}],"getProcessDefinitions":[{"__symbolic":"method"}],"assign":[{"__symbolic":"method"}],"getPriorityLabel":[{"__symbolic":"method"}],"isAssignedToMe":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"StartTaskCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":25,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":29,"character":20},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":30,"character":26}]}],"createNewTask":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"TaskCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":25,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"TaskListCloudModule"},{"__symbolic":"reference","name":"TaskFiltersCloudModule"},{"__symbolic":"reference","name":"StartTaskCloudModule"},{"__symbolic":"reference","name":"TaskHeaderCloudModule"},{"__symbolic":"reference","name":"TaskDirectiveModule"},{"__symbolic":"reference","name":"TaskFormModule"}],"exports":[{"__symbolic":"reference","name":"TaskListCloudModule"},{"__symbolic":"reference","name":"TaskFiltersCloudModule"},{"__symbolic":"reference","name":"StartTaskCloudModule"},{"__symbolic":"reference","name":"TaskHeaderCloudModule"},{"__symbolic":"reference","name":"TaskDirectiveModule"},{"__symbolic":"reference","name":"TaskFormModule"}]}]}],"members":{}},"GroupCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":39,"character":1},"arguments":[{"selector":"adf-cloud-group","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":44,"character":8},"arguments":["transitionMessages",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":45,"character":12},"arguments":["enter",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":45,"character":27},"arguments":[{"opacity":1,"transform":"translateY(0%)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":46,"character":12},"arguments":["void => enter",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":47,"character":16},"arguments":[{"opacity":0,"transform":"translateY(-100%)"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":48,"character":16},"arguments":["300ms cubic-bezier(0.55, 0, 0.55, 0.2)"]}]]}]]}],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":52,"character":21},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":53,"character":19},"member":"None"},"template":"<form>\n    <mat-form-field class=\"adf-cloud-group\">\n        <mat-label *ngIf=\"!isReadonly()\"\n            id=\"adf-group-cloud-title-id\">{{ (title || 'ADF_CLOUD_GROUPS.SEARCH-GROUP') | translate }}</mat-label>\n        <mat-chip-list #groupChipList [disabled]=\"isReadonly() || isValidationLoading()\" data-automation-id=\"adf-cloud-group-chip-list\">\n            <mat-chip\n                *ngFor=\"let group of selectedGroups\"\n                [removable]=\"!(group.readonly)\"\n                [attr.data-automation-id]=\"'adf-cloud-group-chip-' + group.name\"\n                (removed)=\"onRemove(group)\"\n                matTooltip=\"{{ (group.readonly ? 'ADF_CLOUD_GROUPS.MANDATORY' : '') | translate }}\">\n                {{group.name}}\n                <mat-icon\n                    *ngIf=\"!(group.readonly || readOnly)\"\n                    matChipRemove [attr.data-automation-id]=\"'adf-cloud-group-chip-remove-icon-' + group.name\">\n                    cancel\n                </mat-icon>\n            </mat-chip>\n            <input *ngIf=\"!isReadonly()\" matInput\n                   [formControl]=\"searchGroupsControl\"\n                   [matAutocomplete]=\"auto\"\n                   [matChipInputFor]=\"groupChipList\"\n                   (focus)=\"setFocus(true)\"\n                   (blur)=\"setFocus(false)\"\n                   class=\"adf-group-input\"\n                   data-automation-id=\"adf-cloud-group-search-input\" #groupInput>\n        </mat-chip-list>\n\n        <mat-autocomplete\n            autoActiveFirstOption\n            #auto=\"matAutocomplete\"\n            class=\"adf-cloud-group-list\"\n            (optionSelected)=\"onSelect($event.option.value)\"\n            [displayWith]=\"getDisplayName\"\n            data-automation-id=\"adf-cloud-group-autocomplete\">\n            <ng-container *ngIf=\"(searchGroups$ | async)?.length else noResults\">\n                <mat-option *ngFor=\"let group of searchGroups$ | async; let i = index\" [value]=\"group\"\n                            [attr.data-automation-id]=\"'adf-cloud-group-chip-' + group.name\">\n                    <div class=\"adf-cloud-group-row\" id=\"adf-group-{{i}}\" fxLayout=\"row\" fxLayoutAlign=\"start center\"\n                         data-automation-id=\"adf-cloud-group-row\"\n                         fxLayoutGap=\"20px\">\n                        <button class=\"adf-group-short-name\" mat-fab>{{group | groupNameInitial }}</button>\n                        <span>{{group.name}}</span>\n                    </div>\n                </mat-option>\n            </ng-container>\n            <ng-template #noResults>\n                <mat-option *ngIf=\"searchGroupsControl.hasError('searchTypingError') && !searchLoading\" disabled\n                            class=\"adf-cloud-group-option-not-active\"\n                            data-automation-id=\"adf-cloud-group-no-results\">\n                    <span> {{ 'ADF_CLOUD_GROUPS.ERROR.NOT_FOUND' | translate : { groupName: searchedValue } }}</span>\n                </mat-option>\n            </ng-template>\n        </mat-autocomplete>\n    </mat-form-field>\n    <mat-progress-bar\n        *ngIf=\"validationLoading\"\n        mode=\"indeterminate\">\n    </mat-progress-bar>\n\n    <mat-error *ngIf=\"hasPreselectError() &&  !isValidationLoading()\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_GROUPS.ERROR.NOT_FOUND' | translate : { groupName : validateGroupsMessage } }}</mat-error>\n    <mat-error *ngIf=\"searchGroupsControl.hasError('pattern')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_PATTERN' | translate: { pattern: getValidationPattern() } }}</mat-error>\n    <mat-error *ngIf=\"searchGroupsControl.hasError('maxlength')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MAX_LENGTH' | translate: { requiredLength: getValidationMaxLength() } }}\n    </mat-error>\n    <mat-error *ngIf=\"searchGroupsControl.hasError('minlength')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MIN_LENGTH' | translate: { requiredLength: getValidationMinLength() } }}</mat-error>\n    <mat-error *ngIf=\"searchGroupsControl.hasError('required') || groupChipsCtrl.hasError('required')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.REQUIRED' | translate }} </mat-error>\n    <mat-error *ngIf=\"searchGroupsControl.hasError('searchTypingError') && !this.isFocused\" data-automation-id=\"invalid-groups-typing-error\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_GROUPS.ERROR.NOT_FOUND' | translate : { groupName : searchedValue } }}</mat-error>\n</form>\n","styles":[".adf-cloud-group-list{margin:5px 0;padding:10px 0}.adf-cloud-group{width:100%}.adf-cloud-group-option-not-active{background:inherit!important}.adf-cloud-group .mat-form-field{width:100%}.adf-cloud-group-error{height:20px;margin-top:-10px;position:absolute}.adf-cloud-group-error-message{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-cloud-group-error-icon{color:var(--theme-warn-color);font-size:17px}.mat-autocomplete-panel .mat-fab{background:var(--theme-primary-color);box-shadow:none!important;font-size:18px;font-weight:bolder;height:40px;width:40px}.mat-autocomplete-panel .mat-fab .mat-button-wrapper{display:inline!important}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":5}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":5}}]}],"mode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":5}}]}],"preSelectGroups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":5}}]}],"validate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":77,"character":5}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":82,"character":5}}]}],"groupChipsCtrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":5}}]}],"searchGroupsControl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":90,"character":5}}]}],"roles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":94,"character":5}}]}],"selectGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":98,"character":5}}]}],"removeGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":102,"character":5}}]}],"changedGroups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":106,"character":5}}]}],"warning":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":110,"character":5}}]}],"groupInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":113,"character":5},"arguments":["groupInput"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityGroupService","line":134,"character":38},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":135,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isAppNameChanged":[{"__symbolic":"method"}],"loadClientId":[{"__symbolic":"method"}],"initSearch":[{"__symbolic":"method"}],"checkGroupHasAccess":[{"__symbolic":"method"}],"isGroupAlreadySelected":[{"__symbolic":"method"}],"searchGroup":[{"__symbolic":"method"}],"getPreselectedGroups":[{"__symbolic":"method"}],"validatePreselectGroups":[{"__symbolic":"method"}],"checkPreselectValidationErrors":[{"__symbolic":"method"}],"generateInvalidGroupsMessage":[{"__symbolic":"method"}],"loadPreSelectGroups":[{"__symbolic":"method"}],"filterGroupsByRoles":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}],"groupChipsCtrlValue":[{"__symbolic":"method"}],"removeGroupFromSelected":[{"__symbolic":"method"}],"removeGroupFromValidation":[{"__symbolic":"method"}],"resetSearchGroups":[{"__symbolic":"method"}],"isPreselectedGroupInvalid":[{"__symbolic":"method"}],"isSingleMode":[{"__symbolic":"method"}],"isSingleSelectionReadonly":[{"__symbolic":"method"}],"hasPreselectError":[{"__symbolic":"method"}],"isReadonly":[{"__symbolic":"method"}],"isMultipleMode":[{"__symbolic":"method"}],"getDisplayName":[{"__symbolic":"method"}],"removeDuplicatedGroups":[{"__symbolic":"method"}],"hasPreSelectGroups":[{"__symbolic":"method"}],"hasModeChanged":[{"__symbolic":"method"}],"isValidationChanged":[{"__symbolic":"method"}],"hasPreselectedGroupsChanged":[{"__symbolic":"method"}],"hasPreselectedGroupsCleared":[{"__symbolic":"method"}],"hasRoles":[{"__symbolic":"method"}],"setTypingError":[{"__symbolic":"method"}],"hasError":[{"__symbolic":"method"}],"isValidationLoading":[{"__symbolic":"method"}],"setFocus":[{"__symbolic":"method"}],"isValidationEnabled":[{"__symbolic":"method"}],"getValidationPattern":[{"__symbolic":"method"}],"getValidationMaxLength":[{"__symbolic":"method"}],"getValidationMinLength":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"InitialGroupNamePipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":20,"character":1},"arguments":[{"name":"groupNameInitial"}]}],"members":{"transform":[{"__symbolic":"method"}],"getInitialGroupName":[{"__symbolic":"method"}]}},"GroupCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":27,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":29,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":30,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":33,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":34,"character":8}],"declarations":[{"__symbolic":"reference","name":"GroupCloudComponent"},{"__symbolic":"reference","name":"InitialGroupNamePipe"}],"exports":[{"__symbolic":"reference","name":"GroupCloudComponent"},{"__symbolic":"reference","name":"InitialGroupNamePipe"}]}]}],"members":{}},"PeopleCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":42,"character":1},"arguments":[{"selector":"adf-cloud-people","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":47,"character":8},"arguments":["transitionMessages",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":48,"character":12},"arguments":["enter",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":48,"character":27},"arguments":[{"opacity":1,"transform":"translateY(0%)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":49,"character":12},"arguments":["void => enter",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":50,"character":16},"arguments":[{"opacity":0,"transform":"translateY(-100%)"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":51,"character":16},"arguments":["300ms cubic-bezier(0.55, 0, 0.55, 0.2)"]}]]}]]}],"providers":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FullNamePipe","line":55,"character":16}],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":56,"character":21},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":57,"character":19},"member":"None"},"template":"<form>\n    <mat-form-field [floatLabel]=\"'auto'\" class=\"adf-people-cloud\">\n        <mat-label *ngIf=\"!isReadonly()\" id=\"adf-people-cloud-title-id\">{{ title | translate }}</mat-label>\n        <mat-chip-list #userMultipleChipList [disabled]=\"isReadonly() || isValidationLoading()\" data-automation-id=\"adf-cloud-people-chip-list\">\n            <mat-chip\n                *ngFor=\"let user of selectedUsers\"\n                [removable]=\"!(user.readonly)\"\n                [attr.data-automation-id]=\"'adf-people-cloud-chip-' + user.username\"\n                (removed)=\"onRemove(user)\"\n                matTooltip=\"{{ (user.readonly ? 'ADF_CLOUD_GROUPS.MANDATORY' : '') | translate }}\">\n                {{user | fullName}}\n                <mat-icon\n                    matChipRemove\n                    *ngIf=\"!(user.readonly || readOnly)\"\n                    [attr.data-automation-id]=\"'adf-people-cloud-chip-remove-icon-' + user.username\">\n                    cancel\n                </mat-icon>\n            </mat-chip>\n            <input *ngIf=\"!isReadonly()\" matInput\n                   [formControl]=\"searchUserCtrl\"\n                   [matAutocomplete]=\"auto\"\n                   [matChipInputFor]=\"userMultipleChipList\"\n                   (focus)=\"setFocus(true)\"\n                   (blur)=\"setFocus(false)\"\n                   class=\"adf-cloud-input\"\n                   data-automation-id=\"adf-people-cloud-search-input\" #userInput>\n        </mat-chip-list>\n\n        <mat-autocomplete autoActiveFirstOption class=\"adf-people-cloud-list\"\n                          #auto=\"matAutocomplete\"\n                          (optionSelected)=\"onSelect($event.option.value)\"\n                          [displayWith]=\"getDisplayName\">\n            <ng-container *ngIf=\"(searchUsers$ | async)?.length else noResults\" >\n            <mat-option *ngFor=\"let user of searchUsers$ | async; let i = index\" [value]=\"user\">\n                <div class=\"adf-people-cloud-row\" id=\"adf-people-cloud-user-{{user.username}}\"\n                     data-automation-id=\"adf-people-cloud-row\">\n                    <div [outerHTML]=\"user | usernameInitials:'adf-people-cloud-pic'\"></div>\n                    <span class=\"adf-people-label-name\"> {{user | fullName}}</span>\n                </div>\n            </mat-option>\n            </ng-container>\n            <ng-template #noResults>\n                <mat-option *ngIf=\"searchUserCtrl.hasError('searchTypingError') && !searchLoading\" disabled\n                            class=\"adf-people-cloud-option-not-active\"\n                            data-automation-id=\"adf-people-cloud-no-results\">\n                    <span> {{ 'ADF_CLOUD_USERS.ERROR.NOT_FOUND' | translate : { userName: searchedValue } }}</span>\n                </mat-option>\n            </ng-template>\n        </mat-autocomplete>\n    </mat-form-field>\n    <mat-progress-bar\n        *ngIf=\"validationLoading\"\n        mode=\"indeterminate\">\n    </mat-progress-bar>\n\n    <mat-error *ngIf=\"hasPreselectError() && !isValidationLoading()\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_USERS.ERROR.NOT_FOUND' | translate : { userName : validateUsersMessage } }}</mat-error>\n    <mat-error *ngIf=\"searchUserCtrl.hasError('pattern')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_PATTERN' | translate: { pattern: getValidationPattern() } }}</mat-error>\n    <mat-error *ngIf=\"searchUserCtrl.hasError('maxlength')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MAX_LENGTH' | translate: { requiredLength: getValidationMaxLength() } }}\n    </mat-error>\n    <mat-error *ngIf=\"searchUserCtrl.hasError('minlength')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.INVALID_MIN_LENGTH' | translate: { requiredLength: getValidationMinLength() } }}</mat-error>\n    <mat-error *ngIf=\"searchUserCtrl.hasError('required') || userChipsCtrl.hasError('required')\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_PEOPLE_GROUPS.ERROR.REQUIRED' | translate }} </mat-error>\n    <mat-error *ngIf=\"searchUserCtrl.hasError('searchTypingError') && !this.isFocused\" data-automation-id=\"invalid-users-typing-error\">\n        <mat-icon class=\"adf-start-task-cloud-error-icon\">warning</mat-icon>\n        {{ 'ADF_CLOUD_USERS.ERROR.NOT_FOUND' | translate : { userName : searchedValue } }}</mat-error>\n</form>\n","styles":[".adf-people-cloud{width:100%}.adf-people-cloud-option-not-active{background:inherit!important}.adf-people-cloud-list{margin:5px 0;padding:10px 0}.adf-people-cloud-row{align-items:center;column-gap:10px;display:flex}.adf-people-cloud-pic{align-items:center;background:var(--theme-primary-color);border-radius:100px;color:var(--theme-text-fg-color);display:flex;font-size:18px;font-weight:bolder;height:40px;justify-content:center;text-transform:uppercase;width:40px}.adf-start-task-cloud-error{height:20px;margin-top:-10px;position:absolute}.adf-start-task-cloud-error-message{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}.adf-start-task-cloud-error-icon{color:var(--theme-warn-color);font-size:17px}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":5}}]}],"mode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":5}}]}],"roles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":5}}]}],"validate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":78,"character":5}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":83,"character":5}}]}],"preSelectUsers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":91,"character":5}}]}],"excludedUsers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":97,"character":5}}]}],"userChipsCtrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":101,"character":5}}]}],"searchUserCtrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":105,"character":5}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":5}}]}],"selectUser":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":114,"character":5}}]}],"removeUser":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":118,"character":5}}]}],"changedUsers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":122,"character":5}}]}],"warning":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":126,"character":5}}]}],"userInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":129,"character":5},"arguments":["userInput"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":150,"character":37},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":151,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"loadClientId":[{"__symbolic":"method"}],"initSearch":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isAppNameChanged":[{"__symbolic":"method"}],"isValidationEnabled":[{"__symbolic":"method"}],"checkUserHasAccess":[{"__symbolic":"method"}],"hasRoles":[{"__symbolic":"method"}],"filterUsersByRoles":[{"__symbolic":"method"}],"isUserAlreadySelected":[{"__symbolic":"method"}],"isExcludedUser":[{"__symbolic":"method"}],"loadPreSelectUsers":[{"__symbolic":"method"}],"getPreselectedUsers":[{"__symbolic":"method"}],"validatePreselectUsers":[{"__symbolic":"method"}],"compare":[{"__symbolic":"method"}],"getSearchKey":[{"__symbolic":"method"}],"searchUser":[{"__symbolic":"method"}],"removeDuplicatedUsers":[{"__symbolic":"method"}],"checkPreselectValidationErrors":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}],"userChipsCtrlValue":[{"__symbolic":"method"}],"removeUserFromSelected":[{"__symbolic":"method"}],"removeUserFromValidation":[{"__symbolic":"method"}],"generateInvalidUsersMessage":[{"__symbolic":"method"}],"setTypingError":[{"__symbolic":"method"}],"hasPreselectError":[{"__symbolic":"method"}],"getDisplayName":[{"__symbolic":"method"}],"isMultipleMode":[{"__symbolic":"method"}],"isSingleMode":[{"__symbolic":"method"}],"isSingleSelectionReadonly":[{"__symbolic":"method"}],"hasPreSelectUsers":[{"__symbolic":"method"}],"valueChanged":[{"__symbolic":"method"}],"hasPreselectedUsersCleared":[{"__symbolic":"method"}],"resetSearchUsers":[{"__symbolic":"method"}],"getSelectedUsers":[{"__symbolic":"method"}],"isReadonly":[{"__symbolic":"method"}],"isValidationLoading":[{"__symbolic":"method"}],"setFocus":[{"__symbolic":"method"}],"hasError":[{"__symbolic":"method"}],"getValidationPattern":[{"__symbolic":"method"}],"getValidationMaxLength":[{"__symbolic":"method"}],"getValidationMinLength":[{"__symbolic":"method"}]}},"PeopleCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":25,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":28,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":31,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":32,"character":8}],"declarations":[{"__symbolic":"reference","name":"PeopleCloudComponent"}],"exports":[{"__symbolic":"reference","name":"PeopleCloudComponent"}]}]}],"members":{}},"TaskVariableCloud":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}],"hasValue":[{"__symbolic":"method"}]}},"FormCustomOutcomesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"adf-cloud-form-custom-outcomes","template":"<ng-content></ng-content>"}]}],"members":{}},"FormCloudComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormBaseComponent","line":45,"character":40},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":41,"character":1},"arguments":[{"selector":"adf-cloud-form","template":"<div *ngIf=\"!hasForm()\">\n    <ng-content select=\"[empty-form]\">\n    </ng-content>\n</div>\n\n<div *ngIf=\"hasForm()\" class=\"adf-form-container\">\n    <mat-card>\n        <mat-card-header *ngIf=\"showTitle || showRefreshButton || showValidationIcon\">\n            <mat-card-title>\n                <h4>\n                    <div *ngIf=\"showValidationIcon\" class=\"adf-form-validation-button\">\n                        <i id=\"adf-valid-form-icon\" class=\"material-icons\"\n                            *ngIf=\"form.isValid; else no_valid_form\">check_circle</i>\n                        <ng-template #no_valid_form>\n                            <i id=\"adf-invalid-form-icon\" class=\"material-icons adf-invalid-color\">error</i>\n                        </ng-template>\n                    </div>\n                    <div *ngIf=\"showRefreshButton\" class=\"adf-form-reload-button\">\n                        <button mat-icon-button (click)=\"onRefreshClicked()\">\n                            <mat-icon>refresh</mat-icon>\n                        </button>\n                    </div>\n                    <span *ngIf=\"isTitleEnabled()\" class=\"adf-form-title\" [matTooltip]=\"form.taskName\">\n                        {{form.taskName}}\n                        <ng-container *ngIf=\"!form.taskName\">\n                            {{'FORM.FORM_RENDERER.NAMELESS_TASK' | translate}}\n                        </ng-container>\n                    </span>\n\n                </h4>\n            </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <adf-form-renderer [formDefinition]=\"form\">\n            </adf-form-renderer>\n        </mat-card-content>\n        <mat-card-actions *ngIf=\"form.hasOutcomes()\" class=\"adf-form-mat-card-actions\">\n            <ng-content select=\"adf-cloud-form-custom-outcomes\"></ng-content>\n            <ng-container *ngFor=\"let outcome of form.outcomes\">\n                <button *ngIf=\"outcome.isVisible\" [id]=\"'adf-form-'+ outcome.name  | formatSpace\" [color]=\"getColorForOutcome(outcome.name)\"\n                    mat-button [disabled]=\"!isOutcomeButtonEnabled(outcome)\"\n                    [class.adf-form-hide-button]=\"!isOutcomeButtonVisible(outcome, form.readOnly)\"\n                    (click)=\"onOutcomeClicked(outcome)\">\n                    {{outcome.name | translate | uppercase }}\n                </button>\n            </ng-container>\n        </mat-card-actions>\n    </mat-card>\n</div>\n"}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":5}}]}],"appVersion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":5}}]}],"formId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":68,"character":5}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":5}}]}],"fieldValidators":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":76,"character":5}}]}],"formSaved":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":80,"character":5}}]}],"formCompleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":84,"character":5}}]}],"formLoaded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":88,"character":5}}]}],"formDataRefreshed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":92,"character":5}}]}],"formContentClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":96,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FormCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":106,"character":39},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetVisibilityService","line":107,"character":45}]}],"onKeyDown":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":129,"character":5},"arguments":["keydown",["$event"]]}]}],"ngOnChanges":[{"__symbolic":"method"}],"onRefreshClicked":[{"__symbolic":"method"}],"loadForm":[{"__symbolic":"method"}],"findProcessVariablesByTaskId":[{"__symbolic":"method"}],"isAProcessTask":[{"__symbolic":"method"}],"getFormByTaskId":[{"__symbolic":"method"}],"getFormById":[{"__symbolic":"method"}],"saveTaskForm":[{"__symbolic":"method"}],"completeTaskForm":[{"__symbolic":"method"}],"parseForm":[{"__symbolic":"method"}],"getFormDefinitionOutcomes":[{"__symbolic":"method"}],"checkVisibility":[{"__symbolic":"method"}],"refreshFormData":[{"__symbolic":"method"}],"onFormLoaded":[{"__symbolic":"method"}],"onFormDataRefreshed":[{"__symbolic":"method"}],"onTaskSaved":[{"__symbolic":"method"}],"onTaskSavedError":[{"__symbolic":"method"}],"onTaskCompleted":[{"__symbolic":"method"}],"onTaskCompletedError":[{"__symbolic":"method"}],"onExecuteOutcome":[{"__symbolic":"method"}],"storeFormAsMetadata":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"FormDefinitionSelectorCloudComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"adf-cloud-form-definition-selector","template":"<mat-form-field class=\"adf-form-definition-selector\">\n    <mat-label>{{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.FORM'|translate}}</mat-label>\n    <mat-select class=\"adf-form-selector-dropdown\" (selectionChange)=\"onSelect($event)\">\n        <mat-option [value]=\"''\">{{'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.NONE'|translate}}</mat-option>\n        <mat-option *ngFor=\"let form of forms$ | async\" [value]=\"form.id\">{{ form.name }}</mat-option>\n    </mat-select>\n</mat-form-field>\n","styles":[".adf-form-definition-selector{width:100%}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":5}}]}],"selectForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":36,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FormDefinitionSelectorCloudService"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}]}},"CloudFormRenderingService":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormRenderingService","line":30,"character":47},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":27,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ɵprov":{}}},"AttachFileCloudWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"UploadCloudWidgetComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":39,"character":1},"arguments":[{"selector":"adf-cloud-attach-file-cloud-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":54,"character":19},"member":"None"},"template":"<div class=\"adf-attach-file-widget-container\">\n    <div class=\"adf-attach-widget {{field.className}}\" [class.adf-invalid]=\"!field.isValid\"\n        [class.adf-readonly]=\"field.readOnly\">\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name}}\n            <span *ngIf=\"isRequired()\">*</span>\n        </label>\n        <div class=\"adf-attach-widget-container\">\n            <div class=\"adf-attach-widget__menu-upload\" *ngIf=\"isUploadButtonVisible()\">\n                <button (click)=\"openSelectDialog()\" mat-raised-button color=\"primary\" [id]=\"field.id\"\n                    [matTooltip]=\"field.tooltip\" matTooltipPosition=\"above\" matTooltipShowDelay=\"1000\">\n                    {{ 'FORM.FIELD.ATTACH' | translate }}\n                    <mat-icon>{{getWidgetIcon()}}</mat-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"adf-attach-widget-readonly-list\" class=\"adf-attach-widget-readonly-table\">\n        <adf-cloud-file-properties-table\n            [uploadedFiles]=\"uploadedFiles\"\n            [hasFile]=\"hasFile\"\n            [selectedNode]=\"selectedNode\"\n            [field]=\"field\"\n            [displayedColumns]=\"displayedColumns\"\n            [mimeTypeIcon]=\"mimeTypeIcon\"\n            (rowClick)=\"onRowClicked($event)\"\n            (attachFileClick)=\"onAttachFileClicked($event)\"\n            (downloadFile)=\"downloadContent($event)\"\n            (contentModelFileHandler)=\"contentModelFormFileHandler($event)\"\n            (removeAttachFile)=\"onRemoveAttachFile($event)\"\n        ></adf-cloud-file-properties-table>\n        <div *ngIf=\"!hasFile && field.readOnly\" id=\"{{'adf-attach-empty-list-'+field.id}}\">\n            {{ 'FORM.FIELD.NO_FILE_ATTACHED' | translate }}\n        </div>\n\n    </div>\n\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n","styles":[".adf-attach-widget-container{align-items:center;display:flex}.adf-attach-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-widget__menu-upload{align-items:center;display:flex;margin-right:8px}.adf-attach-widget__menu-upload .mat-raised-button{font-size:12px;line-height:28px}.adf-attach-widget__menu-upload button span{font-size:12px}.adf-attach-widget__menu-upload button span mat-icon{height:12px;line-height:12px;width:12px}.adf-attach-widget__menu-upload button span .material-icons{font-size:18px}.adf-attach-widget__input-type{height:.1px;opacity:0;overflow:hidden;position:absolute;width:.1px;z-index:-1}.adf-attach-widget__image-logo{padding-left:5px}.adf-attach-widget-repo-button{padding-left:10px}.adf-attach-widget-repo-button .mat-button-wrapper{display:inline}.adf-attach-widget-repo-button .mat-mini-fab.mat-accent{background-color:inherit}.adf-attach-widget{background:var(--theme-colors-mat-grey);border-bottom:none;display:flex;justify-content:space-between;min-height:27px;padding:.4375em;word-break:break-all}.adf-attach-widget .adf-label{font-size:var(--theme-caption-font-size);line-height:var(--theme-headline-line-height);margin-left:8px;text-align:left;white-space:nowrap;width:32px}.adf-attach-widget__icon{cursor:pointer;float:left;padding:6px}.adf-attach-widget__reset{margin-top:-2px}.adf-attach-files-row div.mat-list-item-content{cursor:pointer}.adf-attach-files-row .mat-line{margin-bottom:0}.adf-attach-selected-file-row div.mat-list-item-content .adf-datatable-selected{color:var(--theme-primary-color);padding-right:6px}.adf-attach-file-widget-container{margin:15px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":79,"character":21},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":80,"character":16},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ThumbnailService","line":81,"character":20},{"__symbolic":"reference","name":"ProcessCloudContentService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":83,"character":29},{"__symbolic":"reference","name":"ContentCloudNodeSelectorService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":85,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":86,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-content-services","name":"ContentNodeSelectorPanelService","line":87,"character":49}]}],"ngOnInit":[{"__symbolic":"method"}],"isPathStaticType":[{"__symbolic":"method"}],"isUploadButtonVisible":[{"__symbolic":"method"}],"onRemoveAttachFile":[{"__symbolic":"method"}],"fetchAppNameFromAppConfig":[{"__symbolic":"method"}],"replaceAppNameAliasWithValue":[{"__symbolic":"method"}],"openSelectDialog":[{"__symbolic":"method"}],"getDestinationFolderNodeId":[{"__symbolic":"method"}],"getNodeIdFromPath":[{"__symbolic":"method"}],"getNodeIdFromFolderVariableValue":[{"__symbolic":"method"}],"getAliasAndRelativePathFromDestinationFolderPath":[{"__symbolic":"method"}],"removeExistingSelection":[{"__symbolic":"method"}],"downloadContent":[{"__symbolic":"method"}],"onAttachFileClicked":[{"__symbolic":"method"}],"getWidgetIcon":[{"__symbolic":"method"}],"onRowClicked":[{"__symbolic":"method"}],"contentModelFormFileHandler":[{"__symbolic":"method"}],"isRetrieveMetadataOptionEnabled":[{"__symbolic":"method"}],"isValidAlias":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]},"statics":{"ALIAS_ROOT_FOLDER":"-root-","ALIAS_USER_FOLDER":"-my-","APP_NAME":"-appname-","VALID_ALIAS":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"AttachFileCloudWidgetComponent"},"member":"ALIAS_ROOT_FOLDER"},{"__symbolic":"select","expression":{"__symbolic":"reference","name":"AttachFileCloudWidgetComponent"},"member":"ALIAS_USER_FOLDER"},"-shared-"],"RETRIEVE_METADATA_OPTION":"retrieveMetadata"}},"UploadCloudWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":44,"character":48},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"upload-cloud-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":42,"character":19},"member":"None"},"template":"<div class=\"adf-upload-widget {{field.className}}\" [class.adf-invalid]=\"!field.isValid\"\n    [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{ field.name | translate }}<span\n            *ngIf=\"isRequired()\">*</span></label>\n    <div class=\"adf-cloud-upload-widget-container\">\n        <div>\n            <mat-list *ngIf=\"hasFile\">\n                <mat-list-item class=\"adf-upload-files-row\" *ngFor=\"let file of uploadedFiles\">\n                    <img mat-list-icon class=\"adf-upload-widget__icon\" [id]=\"'file-'+file.id+'-icon'\"\n                        [src]=\"getIcon(file.content.mimeType)\" [alt]=\"mimeTypeIcon\" (click)=\"fileClicked(file)\"\n                        (keyup.enter)=\"fileClicked(file)\" role=\"button\" tabindex=\"0\" />\n                    <span matLine id=\"{{'file-'+file.id}}\" (click)=\"fileClicked(file)\" (keyup.enter)=\"fileClicked(file)\"\n                        role=\"button\" tabindex=\"0\" class=\"adf-file\">{{file.name}}</span>\n                    <button *ngIf=\"!field.readOnly\" mat-icon-button [id]=\"'file-'+file.id+'-remove'\"\n                        (click)=\"removeFile(file);\" (keyup.enter)=\"removeFile(file);\">\n                        <mat-icon class=\"mat-24\">highlight_off</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n        </div>\n\n        <div *ngIf=\"(!hasFile || multipleOption) && !field.readOnly\">\n            <button mat-raised-button color=\"primary\" (click)=\"uploadFiles.click()\" [matTooltip]=\"field.tooltip\"\n                matTooltipPosition=\"above\" matTooltipShowDelay=\"1000\">\n                {{ 'FORM.FIELD.UPLOAD' | translate }}<mat-icon>file_upload</mat-icon>\n                <input #uploadFiles [multiple]=\"multipleOption\" type=\"file\" [id]=\"field.form.nodeId\"\n                    (change)=\"onFileChanged($event)\" />\n            </button>\n        </div>\n\n        <div *ngIf=\"!hasFile && field.readOnly\">\n            {{ 'FORM.FIELD.NO_FILE_ATTACHED' | translate }}\n        </div>\n\n    </div>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n","styles":[".adf-cloud-upload-widget-container{margin-bottom:15px}.adf-cloud-upload-widget-container input{display:none}.adf-cloud-upload-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-cloud-upload-widget__icon{cursor:pointer;float:left;padding:6px}.adf-cloud-upload-widget__reset{margin-top:-2px}.adf-cloud-upload-files-row .mat-line{margin-bottom:0}"]}]}],"members":{"fileInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":51,"character":5},"arguments":["uploadFiles"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":55,"character":21},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ThumbnailService","line":56,"character":34},{"__symbolic":"reference","name":"ProcessCloudContentService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":58,"character":39},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":59,"character":30}]}],"ngOnInit":[{"__symbolic":"method"}],"removeFile":[{"__symbolic":"method"}],"onFileChanged":[{"__symbolic":"method"}],"isUploaded":[{"__symbolic":"method"}],"fixIncompatibilityFromPreviousAndNewForm":[{"__symbolic":"method"}],"getIcon":[{"__symbolic":"method"}],"uploadRawContent":[{"__symbolic":"method"}],"getMultipleFileParam":[{"__symbolic":"method"}],"removeElementFromList":[{"__symbolic":"method"}],"resetFormValues":[{"__symbolic":"method"}],"fileClicked":[{"__symbolic":"method"}],"isAlfrescoAndLocal":[{"__symbolic":"method"}],"isPathVariableType":[{"__symbolic":"method"}],"setDestinationFolderPathFromMappedVariable":[{"__symbolic":"method"}],"prepareUploadWidgetDestinationFolderPathFromStringVariable":[{"__symbolic":"method"}],"prepareUploadWidgetDestinationFolderPathFromFolderVariable":[{"__symbolic":"method"}],"setUploadWidgetDestinationFolderPath":[{"__symbolic":"method"}],"getDestinationFolderPathValue":[{"__symbolic":"method"}]}},"DateCloudWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":50,"character":46},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":30,"character":1},"arguments":[{"selector":"date-widget","providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"DateAdapter","line":33,"character":19},"useClass":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MomentDateAdapter","line":33,"character":42}},{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"MAT_DATE_FORMATS","line":34,"character":19},"useValue":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MOMENT_DATE_FORMATS","line":34,"character":47}}],"host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":48,"character":19},"member":"None"},"template":"<div class=\"{{field.className}}\" id=\"data-widget\" [class.adf-invalid]=\"!field.isValid\">\n    <mat-form-field class=\"adf-date-widget\">\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }} ({{field.dateDisplayFormat}})<span *ngIf=\"isRequired()\">*</span></label>\n        <input matInput\n               [id]=\"field.id\"\n               [value]=\"field.value\"\n               [required]=\"isRequired()\"\n               [disabled]=\"field.readOnly\"\n               (change)=\"onDateChanged($any($event).srcElement.value)\"\n               [placeholder]=\"field.placeholder\"\n               [matTooltip]=\"field.tooltip\"\n               matTooltipPosition=\"above\"\n               matTooltipShowDelay=\"1000\">\n        <mat-datepicker-toggle  matSuffix [for]=\"datePicker\" [disabled]=\"field.readOnly\" ></mat-datepicker-toggle>\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n    <mat-datepicker #datePicker [touchUi]=\"true\" [startAt]=\"field.value | adfMomentDate: field.dateDisplayFormat\" [disabled]=\"field.readOnly\"></mat-datepicker>\n    <input\n        type=\"hidden\"\n        [matDatepicker]=\"datePicker\"\n        [value]=\"field.value | adfMomentDate: field.dateDisplayFormat\"\n        [min]=\"minDate\"\n        [max]=\"maxDate\"\n        [disabled]=\"field.readOnly\"\n        (dateInput)=\"onDateChanged($any($event).targetElement.value)\">\n</div>\n","styles":[".adf-date-widget .mat-form-field-suffix{top:26px}.adf-date-widget .mat-form-field-label-wrapper{top:20px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":60,"character":36},{"__symbolic":"reference","name":"DateAdapter","module":"@angular/material/core","arguments":[{"__symbolic":"reference","module":"moment","name":"Moment","line":61,"character":49}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":62,"character":48}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onDateChanged":[{"__symbolic":"method"}]}},"DropdownCloudWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":51,"character":50},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"dropdown-cloud-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":49,"character":19},"member":"None"},"template":"<div class=\"adf-dropdown-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\">\n    <div class=\"adf-dropdown-widget-top-labels\">\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span\n            *ngIf=\"isRequired()\">*</span></label>\n        <label class=\"adf-label adf-dropdown-widget-linked\"\n               *ngIf=\"isLinkedWidget()\"\n               [attr.for]=\"field.id\">\n            {{ 'FORM.FIELD.DEPENDS_ON' | translate: { widgetId: getLinkedWidgetId() } }}\n        </label>\n    </div>\n    <mat-form-field>\n        <mat-select class=\"adf-select\"\n                    [id]=\"field.id\"\n                    [(ngModel)]=\"field.value\"\n                    [disabled]=\"field.readOnly\"\n                    [compareWith]=\"compareDropdownValues\"\n                    (ngModelChange)=\"selectionChangedForField(field)\"\n                    [matTooltip]=\"field.tooltip\"\n                    matTooltipPosition=\"above\"\n                    matTooltipShowDelay=\"1000\"\n                    [multiple]=\"field.hasMultipleValues\">\n            <mat-option *ngFor=\"let opt of field.options\"\n                        [value]=\"getOptionValue(opt, field.value)\"\n                        [id]=\"opt.id\">{{opt.name}}\n            </mat-option>\n            <mat-option id=\"readonlyOption\" *ngIf=\"isReadOnlyType()\" [value]=\"field.value\">{{field.value}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget class=\"adf-dropdown-required-message\" *ngIf=\"isInvalidFieldRequired()\"\n                  required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n","styles":[".adf-dropdown-widget{margin-top:13px;width:100%}.adf-dropdown-widget .adf-select{padding-top:0!important;width:100%}.adf-dropdown-widget .mat-select-value-text{font-size:14px}.adf-dropdown-widget-top-labels{display:flex;flex-direction:row;height:16px;justify-content:space-between}.adf-dropdown-widget-top-labels .adf-dropdown-widget-linked{display:contents}.adf-dropdown-widget-select{width:100%}.adf-dropdown-widget-dropdown-required-message .adf-error-text-container{margin-top:1px!important}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":60,"character":36},{"__symbolic":"reference","name":"FormCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":62,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"persistFieldOptionsFromRestApi":[{"__symbolic":"method"}],"buildBodyParam":[{"__symbolic":"method"}],"loadFieldOptionsForLinkedWidget":[{"__symbolic":"method"}],"getParentWidgetValue":[{"__symbolic":"method"}],"parentValueChanged":[{"__symbolic":"method"}],"isValidValue":[{"__symbolic":"method"}],"isDefaultValue":[{"__symbolic":"method"}],"getFormFieldById":[{"__symbolic":"method"}],"persistFieldOptionsFromManualList":[{"__symbolic":"method"}],"getRuleEntries":[{"__symbolic":"method"}],"hasRuleEntries":[{"__symbolic":"method"}],"addDefaultOption":[{"__symbolic":"method"}],"selectionChangedForField":[{"__symbolic":"method"}],"isParentFormFieldEvent":[{"__symbolic":"method"}],"isFormFieldEventOfTypeDropdown":[{"__symbolic":"method"}],"hasRestUrl":[{"__symbolic":"method"}],"isLinkedWidget":[{"__symbolic":"method"}],"getLinkedWidgetId":[{"__symbolic":"method"}],"compareDropdownValues":[{"__symbolic":"method"}],"getOptionValue":[{"__symbolic":"method"}],"isValidRestType":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"isReadOnlyType":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]},"statics":{"DEFAULT_OPTION":{"id":"empty","name":"Choose one..."}}},"GroupCloudWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":42,"character":47},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"group-cloud-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":40,"character":19},"member":"None"},"template":"<div class=\"adf-dropdown-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span\n        *ngIf=\"isRequired()\">*</span></label>\n        <adf-cloud-group [mode]=\"mode\"\n                         [title]=\"title\"\n                         [readOnly]=\"field.readOnly\"\n                         [roles]=\"roles\"\n                         [searchGroupsControl]=\"search\"\n                         (changedGroups)=\"onChangedGroup($event)\"\n                         [preSelectGroups]=\"preSelectGroup\"\n                         [matTooltip]=\"field.tooltip\"\n                         [matTooltipPosition]=\"'above'\"\n                         [matTooltipShowDelay]=\"1000\">\n        </adf-cloud-group>\n        <error-widget [error]=\"field.validationSummary\"></error-widget>\n        <error-widget class=\"adf-dropdown-required-message\" *ngIf=\"isInvalidFieldRequired()\"\n                  required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":53,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onChangedGroup":[{"__symbolic":"method"}],"isMultipleMode":[{"__symbolic":"method"}]}},"PeopleCloudWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":42,"character":48},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"people-cloud-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":40,"character":19},"member":"None"},"template":"<div class=\"adf-dropdown-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <adf-cloud-people\n            [preSelectUsers]=\"preSelectUsers\"\n            [validate]=\"true\"\n            [appName]=\"appName\"\n            [title]=\"title\"\n            [readOnly]=\"field.readOnly\"\n            [searchUserCtrl]=\"search\"\n            (changedUsers)=\"onChangedUser($event)\"\n            [roles]=\"roles\"\n            [mode]=\"mode\"\n            [matTooltip]=\"field.tooltip\"\n            matTooltipPosition=\"above\"\n            matTooltipShowDelay=\"1000\">\n        </adf-cloud-people>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n</div>\n\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":54,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onChangedUser":[{"__symbolic":"method"}],"isMultipleMode":[{"__symbolic":"method"}]}},"PropertiesViewerWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":40,"character":53},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"adf-properties-viewer-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":38,"character":19},"member":"None"},"template":"<div class=\"adf-file-viewer-widget {{field.className}}\" [class.adf-invalid]=\"!field.isValid\"\n    [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span\n            *ngIf=\"isRequired()\">*</span></label>\n    <ng-template #properties [ngTemplateOutlet]=\"properties\" let-properties=\"properties\" [ngTemplateOutletContext]=\"{ properties: field.params?.propertiesViewerOptions }\">\n        <adf-properties-viewer-wrapper *ngIf=\"field.value\" [nodeId]=\"field.value\"\n            [displayDefaultProperties]=\"properties?.displayDefaultProperties !== undefined ?  properties?.displayDefaultProperties : true\"\n            [expanded]=\"properties?.expanded !== undefined ? properties?.expanded : true\"\n            [preset]=\"properties?.preset\"\n            [displayEmpty]=\"properties?.displayEmpty !== undefined ? properties?.displayEmpty : false\"\n            [editable]=\"properties?.editable !== undefined ? properties?.editable : false\"\n            [multi]=\"properties?.multi !== undefined ? properties?.multi : false\"\n            [displayAspect]=\"properties?.displayAspect !== undefined ? properties?.displayAspect : null\"\n            [copyToClipboardAction]=\"properties?.copyToClipboardAction !== undefined ? properties?.copyToClipboardAction : true\"\n            [useChipsForMultiValueProperty]=\"properties?.useChipsForMultiValueProperty !== undefined ? properties?.useChipsForMultiValueProperty : true\"\n            (nodeContentLoaded)=\"onNodeContentLoaded($event)\">\n        </adf-properties-viewer-wrapper>\n    </ng-template>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n</div>\n","styles":["adf-properties-viewer-widget{height:100%;width:100%}adf-properties-viewer-widget adf-properties-viewer-wrapper{border:1px solid var(--theme-border-color);border-radius:6px;display:block;height:100%;width:100%}adf-properties-viewer-widget adf-properties-viewer-wrapper .adf-properties-viewer-wrapper-loading{height:100%;width:100%}adf-properties-viewer-widget adf-properties-viewer-wrapper .adf-properties-viewer-wrapper-loading mat-progress-spinner{display:block;margin:auto}"]}]}],"members":{"nodeContentLoaded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":42,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":45,"character":29}]}],"onNodeContentLoaded":[{"__symbolic":"method"}]}},"ContentCloudNodeSelectorService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":30,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":44,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":45,"character":37},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":46,"character":28},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":47,"character":24}]}],"openUploadFileDialog":[{"__symbolic":"method"}],"getNodeIdFromPath":[{"__symbolic":"method"}],"getNodeIdFromFolderVariableValue":[{"__symbolic":"method"}],"isExistingNode":[{"__symbolic":"method"}],"getNodeId":[{"__symbolic":"method"}],"openContentNodeDialog":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"FormCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":35,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":47,"character":20},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":48,"character":26}]}],"getTaskForm":[{"__symbolic":"method"}],"saveTaskForm":[{"__symbolic":"method"}],"createTemporaryRawRelatedContent":[{"__symbolic":"method"}],"completeTaskForm":[{"__symbolic":"method"}],"getTask":[{"__symbolic":"method"}],"getTaskVariables":[{"__symbolic":"method"}],"getForm":[{"__symbolic":"method"}],"getRestWidgetData":[{"__symbolic":"method"}],"parseForm":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"FormDefinitionSelectorCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":29,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":30,"character":34}]}],"getForms":[{"__symbolic":"method"}],"getStandAloneTaskForms":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ProcessCloudContentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":28,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":46,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":47,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ContentService","line":48,"character":31},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DownloadService","line":49,"character":33}]}],"createTemporaryRawRelatedContent":[{"__symbolic":"method"}],"getRawContentNode":[{"__symbolic":"method"}],"downloadNodeContent":[{"__symbolic":"method"}],"downloadFile":[{"__symbolic":"method"}],"getAuthTicket":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"FormCloudModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":42,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":44,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":45,"character":8},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":47,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":48,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":49,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-content-services","name":"ContentNodeSelectorModule","line":50,"character":8},{"__symbolic":"reference","name":"PeopleCloudModule"},{"__symbolic":"reference","name":"GroupCloudModule"},{"__symbolic":"reference","module":"@alfresco/adf-content-services","name":"ContentMetadataModule","line":53,"character":8}],"declarations":[{"__symbolic":"reference","name":"FormCloudComponent"},{"__symbolic":"reference","name":"UploadCloudWidgetComponent"},{"__symbolic":"reference","name":"FormDefinitionSelectorCloudComponent"},{"__symbolic":"reference","name":"FormCustomOutcomesComponent"},{"__symbolic":"reference","name":"DropdownCloudWidgetComponent"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"AttachFileCloudWidgetComponent"},{"__symbolic":"reference","name":"DateCloudWidgetComponent"},{"__symbolic":"reference","name":"PeopleCloudWidgetComponent"},{"__symbolic":"reference","name":"GroupCloudWidgetComponent"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"PropertiesViewerWidgetComponent"},{"__symbolic":"reference","name":"ɵh"}],"exports":[{"__symbolic":"reference","name":"FormCloudComponent"},{"__symbolic":"reference","name":"UploadCloudWidgetComponent"},{"__symbolic":"reference","name":"FormDefinitionSelectorCloudComponent"},{"__symbolic":"reference","name":"FormCustomOutcomesComponent"},{"__symbolic":"reference","name":"DropdownCloudWidgetComponent"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"AttachFileCloudWidgetComponent"},{"__symbolic":"reference","name":"DateCloudWidgetComponent"},{"__symbolic":"reference","name":"PeopleCloudWidgetComponent"},{"__symbolic":"reference","name":"GroupCloudWidgetComponent"},{"__symbolic":"reference","name":"PropertiesViewerWidgetComponent"}]}]}],"members":{}},"UserPreferenceCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":23,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":27,"character":16},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":28,"character":22},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":29,"character":24}]}],"getPreferences":[{"__symbolic":"method"}],"getPreferenceByKey":[{"__symbolic":"method"}],"createPreference":[{"__symbolic":"method"}],"updatePreference":[{"__symbolic":"method"}],"deletePreference":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"LocalPreferenceCloudService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":22,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"StorageService","line":25,"character":31}]}],"getPreferences":[{"__symbolic":"method"}],"getPreferenceByKey":[{"__symbolic":"method"}],"createPreference":[{"__symbolic":"method"}],"updatePreference":[{"__symbolic":"method"}],"deletePreference":[{"__symbolic":"method"}],"prepareLocalPreferenceResponse":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"PROCESS_FILTERS_SERVICE_TOKEN":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":20,"character":49},"arguments":["proccess-filters-cloud"]},"TASK_FILTERS_SERVICE_TOKEN":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":22,"character":46},"arguments":["task-filters-cloud"]},"NotificationCloudService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":27,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":34,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":35,"character":34},{"__symbolic":"reference","module":"apollo-angular","name":"Apollo","line":36,"character":31},{"__symbolic":"reference","module":"apollo-angular/http","name":"HttpLink","line":37,"character":30}]}],"initNotificationsForApp":[{"__symbolic":"method"}],"makeGQLQuery":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"PreferenceCloudServiceInterface":{"__symbolic":"interface"},"FormContent":{"__symbolic":"interface"},"FormRepresentation":{"__symbolic":"interface"},"FormTab":{"__symbolic":"interface"},"FormOutcome":{"__symbolic":"interface"},"FormDefinition":{"__symbolic":"interface"},"Container":{"__symbolic":"interface"},"FormFieldRepresentation":{"__symbolic":"interface"},"AttachFileField":{"__symbolic":"interface"},"TypeaheadField":{"__symbolic":"interface"},"RestField":{"__symbolic":"interface"},"HeaderRepresentation":{"__symbolic":"interface"},"ColumnDefinitionRepresentation":{"__symbolic":"interface"},"DynamicTableRepresentation":{"__symbolic":"interface"},"VisibilityCondition":{"__symbolic":"interface"},"FormField":{"__symbolic":"interface"},"FormOption":{"__symbolic":"interface"},"OptionsField":{"__symbolic":"interface"},"AmountField":{"__symbolic":"interface"},"CheckboxField":{"__symbolic":"interface"},"DateField":{"__symbolic":"interface"},"DateTimeField":{"__symbolic":"interface"},"DropDownField":{"__symbolic":"interface"},"HyperlinkField":{"__symbolic":"interface"},"NumberField":{"__symbolic":"interface"},"RadioField":{"__symbolic":"interface"},"TextField":{"__symbolic":"interface"},"PeopleModeOptions":{"single":"single","multiple":"multiple"},"PeopleField":{"__symbolic":"interface"},"FormFieldType":{"text":"text","multiline":"multi-line-text","number":"integer","checkbox":"boolean","date":"date","datetime":"datetime","dropdown":"dropdown","typeahead":"typeahead","amount":"amount","radio":"radio-buttons","people":"people","groupOfPeople":"functional-group","dynamicTable":"dynamicTable","hyperlink":"hyperlink","header":"group","uploadFile":"upload","uploadFolder":"uploadFolder","displayValue":"readonly","displayText":"readonly-text","fileViewer":"file-viewer"},"ComponentSelectionMode":{"__symbolic":"interface"},"ProcessNameCloudPipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":22,"character":1},"arguments":[{"name":"processNameCloud"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LocalizedDatePipe","line":27,"character":43}]}],"transform":[{"__symbolic":"method"}]},"statics":{"DATE_TIME_IDENTIFIER_REG_EXP":{"__symbolic":"new","expression":{"__symbolic":"reference","name":"RegExp"},"arguments":["%{datetime}","i"]},"PROCESS_DEFINITION_IDENTIFIER_REG_EXP":{"__symbolic":"new","expression":{"__symbolic":"reference","name":"RegExp"},"arguments":["%{processdefinition}","i"]}}},"ProcessServicesCloudPipeModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":20,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ProcessNameCloudPipe"}],"exports":[{"__symbolic":"reference","name":"ProcessNameCloudPipe"}]}]}],"members":{}},"ProcessDefinitionCloud":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"DateCloudFilterType":{"NO_DATE":"NO_DATE","TODAY":"TODAY","TOMORROW":"TOMORROW","NEXT_7_DAYS":"NEXT_7_DAYS","WEEK":"WEEK","MONTH":"MONTH","QUARTER":"QUARTER","YEAR":"YEAR","RANGE":"RANGE"},"DateRangeFilter":{"__symbolic":"interface"},"RangeKeys":{"__symbolic":"interface"},"ApplicationVersionModel":{"__symbolic":"class","members":{}},"ApplicationVersionResponseModel":{"__symbolic":"class","members":{}},"TaskCloudEngineEvent":{"__symbolic":"interface"},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":41,"character":1},"arguments":[{"providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/form-field","name":"MAT_FORM_FIELD_DEFAULT_OPTIONS","line":43,"character":19},"useValue":{"floatLabel":"never"}}],"imports":[{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":46,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":46,"character":31},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":46,"character":48},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":46,"character":63},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":47,"character":8},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":47,"character":27},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":47,"character":48},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":47,"character":67},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":47,"character":82},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":48,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatOptionModule","line":48,"character":23},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":48,"character":40},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":48,"character":56},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":48,"character":73},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":48,"character":95},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":49,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":49,"character":23},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":49,"character":49},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":49,"character":70},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":49,"character":87},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":50,"character":8},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":50,"character":24},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":50,"character":39}],"exports":[{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":53,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":53,"character":31},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":53,"character":48},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":53,"character":63},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":54,"character":8},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":54,"character":27},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":54,"character":48},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":54,"character":67},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":54,"character":82},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":55,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatOptionModule","line":55,"character":23},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":55,"character":40},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":55,"character":56},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":55,"character":73},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":55,"character":95},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":56,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":56,"character":23},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":56,"character":49},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":56,"character":70},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":56,"character":87},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":57,"character":8},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":57,"character":24},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":57,"character":39}]}]}],"members":{}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":24,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵc"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":27,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":28,"character":8},{"__symbolic":"reference","name":"ɵa"}],"exports":[{"__symbolic":"reference","name":"ɵc"}],"providers":[{"__symbolic":"reference","name":"ɵd"}]}]}],"members":{}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-cloud-date-range-filter","template":"\n<mat-form-field [floatLabel]=\"'auto'\" [attr.data-automation-id]=\"processFilterProperty.key\">\n    <mat-select\n        placeholder=\"{{ processFilterProperty.label | translate }}\"\n        [value]=\"type\"\n        (selectionChange)=\"onSelectionChange($event)\"\n        [attr.data-automation-id]=\"'adf-cloud-edit-process-property-' + processFilterProperty.key\">\n        <mat-option *ngFor=\"let propertyOption of filteredProperties\" [value]=\"propertyOption.value\" [attr.data-automation-id]=\"'adf-cloud-edit-process-property-options-' + propertyOption.value.toString()\">\n            {{ propertyOption.label | translate }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n\n<ng-container *ngIf=\"isDateRangeType()\">\n    <mat-form-field [floatLabel]=\"'auto'\" class=\"adf-cloud-date-range-picker\">\n        <mat-label>{{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.DATE_RANGE_TITLE' | translate }}</mat-label>\n        <mat-date-range-input [formGroup]=\"dateRangeForm\" [rangePicker]=\"picker\">\n          <input matStartDate formControlName=\"from\" placeholder=\"{{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.START_DATE' | translate }}\">\n          <input matEndDate formControlName=\"to\" placeholder=\"{{ 'ADF_CLOUD_EDIT_PROCESS_FILTER.LABEL.END_DATE' | translate }}\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle\n            matSuffix\n            [for]=\"picker\"\n            [attr.data-automation-id]=\"'adf-cloud-edit-process-property-date-range-' + processFilterProperty.key\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker (closed)=\"onDateRangeClosed()\"></mat-date-range-picker>\n    </mat-form-field>\n</ng-container>\n","styles":[".adf-cloud-date-range-picker{margin:0 10px}"]}]}],"members":{"processFilterProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":5}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":5}}]}],"dateChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":37,"character":5}}]}],"dateTypeChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"ngOnInit":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}],"isDateRangeType":[{"__symbolic":"method"}],"onDateRangeClosed":[{"__symbolic":"method"}],"hasPreselectedValues":[{"__symbolic":"method"}],"setPreselectedValues":[{"__symbolic":"method"}],"getFilterAttribute":[{"__symbolic":"method"}],"getFilterValue":[{"__symbolic":"method"}],"isValidProperty":[{"__symbolic":"method"}],"createDefaultRangeOptions":[{"__symbolic":"method"}],"createDefaultDateOptions":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"getDateRange":[{"__symbolic":"method"}],"isDateRangeType":[{"__symbolic":"method"}],"resetDateRange":[{"__symbolic":"method"}],"getNext7DaysDateRange":[{"__symbolic":"method"}],"getTomorrowDateRange":[{"__symbolic":"method"}],"getCurrentYearDateRange":[{"__symbolic":"method"}],"getTodayDateRange":[{"__symbolic":"method"}],"getCurrentWeekRange":[{"__symbolic":"method"}],"getCurrentMonthDateRange":[{"__symbolic":"method"}],"getQuarterDateRange":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ɵe":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":46,"character":30},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":47,"character":36}]}],"getBasePath":[{"__symbolic":"method"}],"post":[{"__symbolic":"method"}],"put":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"get":[{"__symbolic":"method"}],"callApi":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":42,"character":54},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"radio-buttons-cloud-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":40,"character":19},"member":"None"},"template":"<div class=\"adf-radio-buttons-widget-cloud {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\" [id]=\"field.id\">\n    <div class=\"adf-radio-button-container\">\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <mat-radio-group class=\"adf-radio-group\" [(ngModel)]=\"field.value\" [disabled]=\"field.readOnly\">\n            <mat-radio-button\n                [matTooltip]=\"field.tooltip\"\n                matTooltipPosition=\"above\"\n                matTooltipShowDelay=\"1000\"\n                [id]=\"field.id + '-' + opt.id\"\n                [name]=\"field.id\"\n                [value]=\"opt.id\"\n                [checked]=\"isChecked(opt)\"\n                (change)=\"onOptionClick(opt.id)\"\n                color=\"primary\"\n                class=\"adf-radio-button\" *ngFor=\"let opt of field.options\" >\n                {{opt.name}}\n            </mat-radio-button>\n        </mat-radio-group>\n    </div>\n    <error-widget [error]=\"field.validationSummary\" ></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n","styles":[".adf-radio-button-container{display:flex;flex-direction:column;margin-bottom:15px}.adf-radio-group{display:inline-flex;flex-direction:column;margin-left:5px;margin-top:15px}.adf-radio-button{margin:5px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":47,"character":36},{"__symbolic":"reference","name":"FormCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":49,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"getValuesFromRestApi":[{"__symbolic":"method"}],"onOptionClick":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"isChecked":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-properties-viewer-wrapper","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":27,"character":19},"member":"None"},"template":"<adf-content-metadata [displayDefaultProperties]=\"displayDefaultProperties\" [expanded]=\"expanded\" [node]=\"node\"\n    [preset]=\"preset\" [displayEmpty]=\"displayEmpty\" [editable]=\"editable\" [multi]=\"multi\"\n    [displayAspect]=\"displayAspect\" [copyToClipboardAction]=\"copyToClipboardAction\"\n    [useChipsForMultiValueProperty]=\"useChipsForMultiValueProperty\" *ngIf=\"!loading; else loadingTemplate\">\n</adf-content-metadata>\n<ng-template #loadingTemplate>\n    <div class=\"adf-properties-viewer-wrapper-loading\">\n        <mat-progress-spinner></mat-progress-spinner>\n    </div>\n</ng-template>\n"}]}],"members":{"nodeId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":5}}]}],"editable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":5}}]}],"displayEmpty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":5}}]}],"expanded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":5}}]}],"multi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":5}}]}],"preset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"displayDefaultProperties":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"displayAspect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5}}]}],"copyToClipboardAction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":68,"character":5}}]}],"useChipsForMultiValueProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":5}}]}],"nodeContentLoaded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":75,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NodesApiService","line":78,"character":41}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"getNode":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"adf-cloud-file-properties-table","template":"<div class=\"adf-file-properties-table\">\n    <table mat-table [dataSource]=\"uploadedFiles\" class=\"mat-elevation-z0\" *ngIf=\"hasFile\">\n        <ng-container matColumnDef=\"icon\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-icon mat-list-icon class=\"adf-datatable-selected\"\n                    *ngIf=\"selectedNode && element.id === selectedNode.id\" (click)=\"onRowClicked(element)\">\n                    check_circle\n                </mat-icon>\n                <img mat-list-icon class=\"adf-attach-widget__icon\"\n                    *ngIf=\"!selectedNode || element.id !== selectedNode.id\" [id]=\"'file-'+element?.id+'-icon'\"\n                    (click)=\"onRowClicked(element)\"\n                    [src]=\"element.content ? getIcon(element.content.mimeType) : getIcon(element['mimeType'])\"\n                    [alt]=\"mimeTypeIcon\" role=\"button\" tabindex=\"0\" />\n            </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"fileName\">\n            <th mat-header-cell *matHeaderCellDef>{{ 'FORM.FIELD.FILE_NAME' | translate }}</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span matLine id=\"{{'file-'+element?.id}}\" role=\"button\" tabindex=\"0\" class=\"adf-file\"\n                    (click)=\"onRowClicked(element)\">{{element.name}}</span>\n            </td>\n        </ng-container>\n    \n        <ng-container *ngFor=\"let columnName of field?.params?.displayableCMProperties\" [matColumnDef]=\"columnName.name\">\n            <th mat-header-cell *matHeaderCellDef>{{ columnName.title ? columnName.title : columnName.name | titlecase\n                }}</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <span matLine id=\"{{'fileProperty-'+row?.id+'-'+columnName?.name}}\" role=\"button\" tabindex=\"0\"\n                    (click)=\"onRowClicked(row)\">{{ getColumnValue(row, columnName) }}</span>\n            </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button id=\"{{'file-'+element?.id+'-option-menu'}}\" mat-icon-button [matMenuTriggerFor]=\"fileActionMenu\"\n                    *ngIf=\"!!element.content?.mimeType\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #fileActionMenu=\"matMenu\" xPosition=\"before\">\n                    <button *ngIf=\"displayMenuOption('show') && !!element.content?.mimeType\"\n                        id=\"{{'file-'+element?.id+'-show-file'}}\" mat-menu-item (click)=\"onAttachFileClicked(element)\">\n                        <mat-icon>visibility</mat-icon>\n                        <span>{{ 'FORM.FIELD.VIEW_FILE' | translate }}</span>\n                    </button>\n                    <button *ngIf=\"displayMenuOption('download') && !!element.content?.mimeType\"\n                        id=\"{{'file-'+element?.id+'-download-file'}}\" mat-menu-item (click)=\"downloadContent(element)\">\n                        <mat-icon>file_download</mat-icon>\n                        <span>{{ 'FORM.FIELD.DOWNLOAD_FILE' | translate }}</span>\n                    </button>\n                    <button *ngIf=\"displayMenuOption('retrieveMetadata') && !!element.content?.mimeType\"\n                        id=\"{{'file-'+element?.id+'-retrieve-file-metadata'}}\" mat-menu-item\n                        (click)=\"contentModelFormFileHandler(element)\">\n                        <mat-icon class=\"mat-24\">low_priority</mat-icon>\n                        <span>{{ 'ADF_CLOUD_FORM_COMPONENT.RETRIEVE_METADATA' | translate }}</span>\n                    </button>\n                    <button *ngIf=\"!field.readOnly && displayMenuOption('remove')\"\n                        id=\"{{'file-'+element?.id+'-remove-file'}}\" mat-menu-item [id]=\"'file-'+element?.id+'-remove'\"\n                        (click)=\"onRemoveAttachFile(element);\" (keyup.enter)=\"onRemoveAttachFile(element);\">\n                        <mat-icon class=\"mat-24\">highlight_off</mat-icon>\n                        <span>{{ 'FORM.FIELD.REMOVE_FILE' | translate }}</span>\n                    </button>\n                </mat-menu>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    \n    </table>\n</div>\n","styles":[".adf-file-properties-table table{border:1px solid var(--theme-border-color);box-shadow:none;width:100%}.adf-file-properties-table table .adf-datatable-selected{padding:6px}.adf-file-properties-table table tr.mat-header-row{height:32px}.adf-file-properties-table table th{font-weight:700;padding-right:0!important}.adf-file-properties-table table td{max-width:50px;overflow:hidden;padding-right:0!important;text-overflow:ellipsis;white-space:nowrap}.adf-file-properties-table table td.mat-cell:first-of-type,.adf-file-properties-table table td.mat-cell:last-of-type,.adf-file-properties-table table td.mat-footer-cell:first-of-type,.adf-file-properties-table table td.mat-footer-cell:last-of-type{width:18%!important}"]}]}],"members":{"uploadedFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":5}}]}],"hasFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":5}}]}],"selectedNode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":5}}]}],"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"displayedColumns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":5}}]}],"mimeTypeIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":50,"character":5}}]}],"attachFileClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":5}}]}],"downloadFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":56,"character":5}}]}],"contentModelFileHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":59,"character":5}}]}],"removeAttachFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":62,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LocalizedDatePipe","line":65,"character":43},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ThumbnailService","line":65,"character":88}]}],"onRowClicked":[{"__symbolic":"method"}],"onAttachFileClicked":[{"__symbolic":"method"}],"downloadContent":[{"__symbolic":"method"}],"contentModelFormFileHandler":[{"__symbolic":"method"}],"onRemoveAttachFile":[{"__symbolic":"method"}],"getIcon":[{"__symbolic":"method"}],"getColumnValue":[{"__symbolic":"method"}],"checkDateTypeAndTransform":[{"__symbolic":"method"}],"displayMenuOption":[{"__symbolic":"method"}]},"statics":{"RETRIEVE_METADATA_OPTION":"retrieveMetadata"}},"ɵi":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DataTableSchema","line":33,"character":57},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":31,"character":1}}],"members":{"emptyCustomContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":35,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomEmptyContentTemplateDirective","line":35,"character":18}]}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":5}}]}],"selectionMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"multiselect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"stickyHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"sorting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":5}}]}],"showActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"actionsPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"showContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"showRowContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":77,"character":5}}]}],"showRowActionsMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":81,"character":5}}]}],"executeRowAction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":85,"character":5}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":89,"character":5}}]}],"rowsSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":93,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":97,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":101,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":119,"character":34},{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":121,"character":41},{"__symbolic":"reference","name":"string"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"reload":[{"__symbolic":"method"}],"isListEmpty":[{"__symbolic":"method"}],"resetPagination":[{"__symbolic":"method"}],"updatePagination":[{"__symbolic":"method"}],"onSortingChanged":[{"__symbolic":"method"}],"onRowClick":[{"__symbolic":"method"}],"onRowSelect":[{"__symbolic":"method"}],"onRowUnselect":[{"__symbolic":"method"}],"onRowKeyUp":[{"__symbolic":"method"}],"onShowRowActionsMenu":[{"__symbolic":"method"}],"onShowRowContextMenu":[{"__symbolic":"method"}],"onExecuteRowAction":[{"__symbolic":"method"}],"setSorting":[{"__symbolic":"method"}],"formatSorting":[{"__symbolic":"method"}],"isValidSorting":[{"__symbolic":"method"}],"replacePriorityValues":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"createRequestNode":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":21,"character":1}}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":5}}]}],"filterParam":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":5}}]}],"showIcons":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":5}}]}],"ngOnDestroy":[{"__symbolic":"method"}],"wasFilterUpdated":[{"__symbolic":"method"}],"addToUpdatedCounters":[{"__symbolic":"method"}],"resetFilterCounter":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","arity":1,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":36,"character":1}}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":5}}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"showTaskFilterName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"filterProperties":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"role":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":77,"character":5}}]}],"showFilterActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":81,"character":5}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":85,"character":5}}]}],"sortProperties":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":89,"character":5}}]}],"action":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":93,"character":5}}]}],"filterChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":117,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":124,"character":31},{"__symbolic":"reference","name":"DateAdapter","module":"@angular/material/core","arguments":[{"__symbolic":"reference","module":"moment","name":"Moment","line":125,"character":43}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":126,"character":42},{"__symbolic":"reference","name":"AppsProcessCloudService"},{"__symbolic":"reference","name":"TaskCloudService"},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":129,"character":26},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":130,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"createFilterActions":[{"__symbolic":"method"}],"hasFormChanged":[{"__symbolic":"method"}],"onExpand":[{"__symbolic":"method"}],"onClose":[{"__symbolic":"method"}],"isDisabledAction":[{"__symbolic":"method"}],"deepCompare":[{"__symbolic":"method"}],"getSanitizeFilterName":[{"__symbolic":"method"}],"replaceSpaceWithHyphen":[{"__symbolic":"method"}],"executeFilterActions":[{"__symbolic":"method"}],"getRunningApplications":[{"__symbolic":"method"}],"getProcessDefinitions":[{"__symbolic":"method"}],"checkMandatoryActions":[{"__symbolic":"method"}],"isValidAction":[{"__symbolic":"method"}],"isFormValid":[{"__symbolic":"method"}],"getPropertyController":[{"__symbolic":"method"}],"onDateChanged":[{"__symbolic":"method"}],"onDateRangeFilterChanged":[{"__symbolic":"method"}],"onChangedUser":[{"__symbolic":"method"}],"onAssignedChange":[{"__symbolic":"method"}],"onAssignedGroupsChange":[{"__symbolic":"method"}],"hasError":[{"__symbolic":"method"}],"hasLastModifiedProperty":[{"__symbolic":"method"}],"createAndFilterActions":[{"__symbolic":"method"}],"isValidProperty":[{"__symbolic":"method"}],"checkForProperty":[{"__symbolic":"method"}],"hasSortProperty":[{"__symbolic":"method"}],"removeOrderProperty":[{"__symbolic":"method"}],"createAndFilterProperties":[{"__symbolic":"method"}],"onFilterChange":[{"__symbolic":"method"}],"getFormControlsConfig":[{"__symbolic":"method"}],"getAttributesControlConfig":[{"__symbolic":"method"}],"buildForm":[{"__symbolic":"method"}],"onDateTypeChange":[{"__symbolic":"method"}],"retrieveTaskFilterAndBuildForm":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"saveAs":[{"__symbolic":"method"}],"checkMandatoryFilterProperties":[{"__symbolic":"method"}],"checkMandatorySortProperties":[{"__symbolic":"method"}],"getDefaultFilterProperties":[{"__symbolic":"method"}],"getDefaultSortProperties":[{"__symbolic":"method"}],"isDisabledForDefaultFilters":[{"__symbolic":"method"}],"createTaskFilterProperties":[{"__symbolic":"method"}],"getTaskFilterById":[{"__symbolic":"method"}],"assignNewFilter":[{"__symbolic":"method"}],"restoreDefaultTaskFilters":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"deleteFilter":[{"__symbolic":"method"}],"updateFilter":[{"__symbolic":"method"}]},"statics":{"ACTION_SAVE":"save","ACTION_SAVE_AS":"saveAs","ACTION_DELETE":"delete","APP_RUNNING_STATUS":"RUNNING","APPLICATION_NAME":"appName","PROCESS_DEFINITION_NAME":"processDefinitionName","LAST_MODIFIED":"lastModified","SORT":"sort","ORDER":"order","DEFAULT_ACTIONS":["save","saveAs","delete"],"FORMAT_DATE":"DD/MM/YYYY","ACTIONS_DISABLED_BY_DEFAULT":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BaseEditTaskFilterCloudComponent"},"member":"ACTION_SAVE"},{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BaseEditTaskFilterCloudComponent"},"member":"ACTION_DELETE"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"adf-cloud-task-filter-dialog","template":"<div class=\"adf-task-filter-dialog\">\n    <span mat-dialog-title id=\"adf-task-filter-dialog-title\">\n         {{ 'ADF_CLOUD_EDIT_TASK_FILTER.DIALOG.TITLE' | translate}}\n    </span>\n    <mat-card>\n        <mat-card-content>\n        <form [formGroup]=\"filterForm\">\n            <mat-form-field fxFlex [floatLabel]=\"'auto'\">\n                <input matInput placeholder=\"{{ 'ADF_CLOUD_EDIT_TASK_FILTER.FILTER_NAME' | translate }}\" formControlName=\"name\" id=\"adf-filter-name-id\">\n            </mat-form-field>\n        </form>\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button (click)=\"onSaveClick()\" id=\"adf-save-button-id\" [disabled]=\"!isValid()\">\n                {{ 'ADF_CLOUD_EDIT_TASK_FILTER.DIALOG.SAVE' | translate}}\n            </button>\n            <button mat-button (click)=\"onCancelClick()\" id=\"adf-cancel-button-id\">\n               {{ 'ADF_CLOUD_EDIT_TASK_FILTER.DIALOG.CANCEL' | translate}}\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n","styles":[".adf-task-filter-dialog .mat-card,.adf-task-filter-dialog .mat-card-content{box-shadow:none;padding:0}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":36,"character":9},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":36,"character":16}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":34,"character":20},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵl"}]},null]}],"ngOnInit":[{"__symbolic":"method"}],"onSaveClick":[{"__symbolic":"method"}],"onCancelClick":[{"__symbolic":"method"}],"isValid":[{"__symbolic":"method"}]},"statics":{"ACTION_SAVE":"SAVE"}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"adf-cloud-task-assignment-filter","template":"<div class=\"adf-cloud-assignment-container\" fxLayout=\"row\">\n    <mat-form-field [floatLabel]=\"'auto'\">\n        <mat-select class=\"adf-task-assignment-filter\"\n                    placeholder=\"{{ 'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.ASSIGNMENT_TYPE' | translate }}\"\n                    [(ngModel)]=\"assignmentType\"\n                    (ngModelChange)=\"onAssignmentTypeChange(assignmentType)\">\n            <mat-option [value]=\"assignmentTypeList.currentUser\">{{ 'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.ASSIGNED_TO_ME' | translate }} </mat-option>\n            <mat-option [value]=\"assignmentTypeList.unassigned\">{{ 'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.UNASSIGNED' | translate }} </mat-option>\n            <mat-option [value]=\"assignmentTypeList.candidateGroups\">{{ 'ADF_CLOUD_TASK_ASSIGNEMNT_FILTER.LIST_OF_CANDIDATE_GROUPS' | translate }} </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <adf-cloud-group class=\"adf-group-cloud-filter\" *ngIf=\"isCandidateGroupsType()\"\n        [mode]=\"'multiple'\"\n        [appName]=\"appName\"\n        [preSelectGroups]=\"candidateGroups\"\n        [searchGroupsControl]=\"groupForm\"\n        (changedGroups)=\"onChangedGroups($event)\"\n        [title]=\"'ADF_CLOUD_TASK_LIST.START_TASK.FORM.LABEL.CANDIDATE_GROUP'\"></adf-cloud-group>\n</div>\n","styles":[".adf-cloud-assignment-container{align-items:center}.adf-cloud-assignment-container mat-form-field{width:100%}.adf-task-assignment-filter{margin-right:10px}.adf-group-cloud-filter{flex:1;margin-left:15px;width:100%}"]}]}],"members":{"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":5}}]}],"taskFilterProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":5}}]}],"assignedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":33,"character":5}}]}],"assignedGroupChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":35,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"IdentityUserService","line":46,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"isCandidateGroupsType":[{"__symbolic":"method"}],"onAssignmentTypeChange":[{"__symbolic":"method"}],"onChangedGroups":[{"__symbolic":"method"}],"setDefaultAssignmentType":[{"__symbolic":"method"}],"setDefaultAssignedGroups":[{"__symbolic":"method"}],"isFilterPropertyDefined":[{"__symbolic":"method"}]}}},"origins":{"ProcessServicesCloudModule":"./lib/process-services-cloud.module","AppListCloudComponent":"./lib/app/components/app-list-cloud.component","AppDetailsCloudComponent":"./lib/app/components/app-details-cloud.component","AppsProcessCloudService":"./lib/app/services/apps-process-cloud.service","DEFAULT_APP_INSTANCE_THEME":"./lib/app/models/application-instance.model","DEFAULT_APP_INSTANCE_ICON":"./lib/app/models/application-instance.model","ApplicationInstanceModel":"./lib/app/models/application-instance.model","Descriptor":"./lib/app/models/application-instance.model","DescriptorSecurity":"./lib/app/models/application-instance.model","DescriptorVariables":"./lib/app/models/application-instance.model","DescriptorInfrastructure":"./lib/app/models/application-instance.model","AppListCloudModule":"./lib/app/app-list-cloud.module","ProcessListCloudComponent":"./lib/process/process-list/components/process-list-cloud.component","ProcessQueryCloudRequestModel":"./lib/process/process-list/models/process-cloud-query-request.model","processCloudPresetsDefaultModel":"./lib/process/process-list/models/process-cloud-preset.model","ProcessListCloudSortingModel":"./lib/process/process-list/models/process-list-sorting.model","ProcessListCloudService":"./lib/process/process-list/services/process-list-cloud.service","ProcessListCloudModule":"./lib/process/process-list/process-list-cloud.module","ProcessFiltersCloudComponent":"./lib/process/process-filters/components/process-filters-cloud.component","DropdownOption":"./lib/process/process-filters/components/edit-process-filter-cloud.component","EditProcessFilterCloudComponent":"./lib/process/process-filters/components/edit-process-filter-cloud.component","ProcessFilterDialogCloudComponent":"./lib/process/process-filters/components/process-filter-dialog-cloud.component","ProcessFilterCloudModel":"./lib/process/process-filters/models/process-filter-cloud.model","ProcessFilterAction":"./lib/process/process-filters/models/process-filter-cloud.model","ProcessFilterOptions":"./lib/process/process-filters/models/process-filter-cloud.model","ProcessFilterProperties":"./lib/process/process-filters/models/process-filter-cloud.model","ProcessSortFilterProperty":"./lib/process/process-filters/models/process-filter-cloud.model","ProcessFilterCloudService":"./lib/process/process-filters/services/process-filter-cloud.service","ProcessFiltersCloudModule":"./lib/process/process-filters/process-filters-cloud.module","StartProcessCloudComponent":"./lib/process/start-process/components/start-process-cloud.component","ProcessInstanceCloud":"./lib/process/start-process/models/process-instance-cloud.model","ProcessPayloadCloud":"./lib/process/start-process/models/process-payload-cloud.model","StartProcessCloudService":"./lib/process/start-process/services/start-process-cloud.service","StartProcessCloudModule":"./lib/process/start-process/start-process-cloud.module","ProcessHeaderCloudModule":"./lib/process/process-header/process-header-cloud.module","ProcessHeaderCloudComponent":"./lib/process/process-header/components/process-header-cloud.component","CancelProcessDirective":"./lib/process/directives/cancel-process.directive","ProcessDirectiveModule":"./lib/process/directives/process-directive.module","ProcessCloudService":"./lib/process/services/process-cloud.service","ProcessCloudModule":"./lib/process/process-cloud.module","TaskListCloudComponent":"./lib/task/task-list/components/task-list-cloud.component","ServiceTaskListCloudComponent":"./lib/task/task-list/components/service-task-list-cloud.component","TaskQueryCloudRequestModel":"./lib/task/task-list/models/filter-cloud-model","ServiceTaskQueryCloudRequestModel":"./lib/task/task-list/models/service-task-cloud.model","ServiceTaskIntegrationContextCloudModel":"./lib/task/task-list/models/service-task-cloud.model","TaskListCloudSortingModel":"./lib/task/task-list/models/task-list-sorting.model","taskPresetsCloudDefaultModel":"./lib/task/task-list/models/task-preset-cloud.model","serviceTaskPresetsCloudDefaultModel":"./lib/task/task-list/models/task-preset-cloud.model","TaskListCloudService":"./lib/task/task-list/services/task-list-cloud.service","ServiceTaskListCloudService":"./lib/task/task-list/services/service-task-list-cloud.service","TaskListCloudModule":"./lib/task/task-list/task-list-cloud.module","TaskFiltersCloudComponent":"./lib/task/task-filters/components/task-filters-cloud.component","ServiceTaskFiltersCloudComponent":"./lib/task/task-filters/components/service-task-filters-cloud.component","EditTaskFilterCloudComponent":"./lib/task/task-filters/components/edit-task-filters/edit-task-filter-cloud.component","EditServiceTaskFilterCloudComponent":"./lib/task/task-filters/components/edit-task-filters/edit-service-task-filter-cloud.component","TaskFilterCloudModel":"./lib/task/task-filters/models/filter-cloud.model","ServiceTaskFilterCloudModel":"./lib/task/task-filters/models/filter-cloud.model","FilterParamsModel":"./lib/task/task-filters/models/filter-cloud.model","TaskFilterAction":"./lib/task/task-filters/models/filter-cloud.model","FilterOptions":"./lib/task/task-filters/models/filter-cloud.model","AssignmentType":"./lib/task/task-filters/models/filter-cloud.model","TaskFilterProperties":"./lib/task/task-filters/models/filter-cloud.model","TaskFilterCloudService":"./lib/task/task-filters/services/task-filter-cloud.service","ServiceTaskFilterCloudService":"./lib/task/task-filters/services/service-task-filter-cloud.service","TaskFiltersCloudModule":"./lib/task/task-filters/task-filters-cloud.module","TaskDetailsCloudModel":"./lib/task/start-task/models/task-details-cloud.model","StartTaskCloudResponseModel":"./lib/task/start-task/models/task-details-cloud.model","TaskStatus":"./lib/task/start-task/models/task-details-cloud.model","StartTaskCloudComponent":"./lib/task/start-task/components/start-task-cloud.component","StartTaskCloudModule":"./lib/task/start-task/start-task-cloud.module","TaskHeaderCloudComponent":"./lib/task/task-header/components/task-header-cloud.component","TaskHeaderCloudModule":"./lib/task/task-header/task-header-cloud.module","TaskFormCloudComponent":"./lib/task/task-form/components/task-form-cloud.component","TaskFormModule":"./lib/task/task-form/task-form.module","ClaimTaskCloudDirective":"./lib/task/directives/claim-task-cloud.directive","UnClaimTaskCloudDirective":"./lib/task/directives/unclaim-task-cloud.directive","CompleteTaskDirective":"./lib/task/directives/complete-task.directive","TaskDirectiveModule":"./lib/task/directives/task-directive.module","ClaimTaskEnum":"./lib/task/models/task.model","TaskPriorityOption":"./lib/task/models/task.model","DEFAULT_TASK_PRIORITIES":"./lib/task/models/task.model","TASK_ASSIGNED_STATE":"./lib/task/models/task.model","TASK_CREATED_STATE":"./lib/task/models/task.model","TaskCloudService":"./lib/task/services/task-cloud.service","StartTaskCloudService":"./lib/task/services/start-task-cloud.service","TaskCloudModule":"./lib/task/task-cloud.module","GroupCloudComponent":"./lib/group/components/group-cloud.component","InitialGroupNamePipe":"./lib/group/pipe/group-initial.pipe","GroupCloudModule":"./lib/group/group-cloud.module","PeopleCloudComponent":"./lib/people/components/people-cloud.component","PeopleCloudModule":"./lib/people/people-cloud.module","TaskVariableCloud":"./lib/form/models/task-variable-cloud.model","FormCustomOutcomesComponent":"./lib/form/components/form-cloud-custom-outcomes.component","FormCloudComponent":"./lib/form/components/form-cloud.component","FormDefinitionSelectorCloudComponent":"./lib/form/components/form-definition-selector-cloud.component","CloudFormRenderingService":"./lib/form/components/cloud-form-rendering.service","AttachFileCloudWidgetComponent":"./lib/form/components/widgets/attach-file/attach-file-cloud-widget.component","UploadCloudWidgetComponent":"./lib/form/components/widgets/attach-file/upload-cloud.widget","DateCloudWidgetComponent":"./lib/form/components/widgets/date/date-cloud.widget","DropdownCloudWidgetComponent":"./lib/form/components/widgets/dropdown/dropdown-cloud.widget","GroupCloudWidgetComponent":"./lib/form/components/widgets/group/group-cloud.widget","PeopleCloudWidgetComponent":"./lib/form/components/widgets/people/people-cloud.widget","PropertiesViewerWidgetComponent":"./lib/form/components/widgets/properties-viewer/properties-viewer.widget","ContentCloudNodeSelectorService":"./lib/form/services/content-cloud-node-selector.service","FormCloudService":"./lib/form/services/form-cloud.service","FormDefinitionSelectorCloudService":"./lib/form/services/form-definition-selector-cloud.service","ProcessCloudContentService":"./lib/form/services/process-cloud-content.service","FormCloudModule":"./lib/form/form-cloud.module","UserPreferenceCloudService":"./lib/services/user-preference-cloud.service","LocalPreferenceCloudService":"./lib/services/local-preference-cloud.service","PROCESS_FILTERS_SERVICE_TOKEN":"./lib/services/cloud-token.service","TASK_FILTERS_SERVICE_TOKEN":"./lib/services/cloud-token.service","NotificationCloudService":"./lib/services/notification-cloud.service","PreferenceCloudServiceInterface":"./lib/services/preference-cloud.interface","FormContent":"./lib/services/form-fields.interfaces","FormRepresentation":"./lib/services/form-fields.interfaces","FormTab":"./lib/services/form-fields.interfaces","FormOutcome":"./lib/services/form-fields.interfaces","FormDefinition":"./lib/services/form-fields.interfaces","Container":"./lib/services/form-fields.interfaces","FormFieldRepresentation":"./lib/services/form-fields.interfaces","AttachFileField":"./lib/services/form-fields.interfaces","TypeaheadField":"./lib/services/form-fields.interfaces","RestField":"./lib/services/form-fields.interfaces","HeaderRepresentation":"./lib/services/form-fields.interfaces","ColumnDefinitionRepresentation":"./lib/services/form-fields.interfaces","DynamicTableRepresentation":"./lib/services/form-fields.interfaces","VisibilityCondition":"./lib/services/form-fields.interfaces","FormField":"./lib/services/form-fields.interfaces","FormOption":"./lib/services/form-fields.interfaces","OptionsField":"./lib/services/form-fields.interfaces","AmountField":"./lib/services/form-fields.interfaces","CheckboxField":"./lib/services/form-fields.interfaces","DateField":"./lib/services/form-fields.interfaces","DateTimeField":"./lib/services/form-fields.interfaces","DropDownField":"./lib/services/form-fields.interfaces","HyperlinkField":"./lib/services/form-fields.interfaces","NumberField":"./lib/services/form-fields.interfaces","RadioField":"./lib/services/form-fields.interfaces","TextField":"./lib/services/form-fields.interfaces","PeopleModeOptions":"./lib/services/form-fields.interfaces","PeopleField":"./lib/services/form-fields.interfaces","FormFieldType":"./lib/services/form-fields.interfaces","ComponentSelectionMode":"./lib/types","ProcessNameCloudPipe":"./lib/pipes/process-name-cloud.pipe","ProcessServicesCloudPipeModule":"./lib/pipes/process-services-cloud-pipe.module","ProcessDefinitionCloud":"./lib/models/process-definition-cloud.model","DateCloudFilterType":"./lib/models/date-cloud-filter.model","DateRangeFilter":"./lib/models/date-cloud-filter.model","RangeKeys":"./lib/models/date-cloud-filter.model","ApplicationVersionModel":"./lib/models/application-version.model","ApplicationVersionResponseModel":"./lib/models/application-version.model","TaskCloudEngineEvent":"./lib/models/engine-event-cloud.model","ɵa":"./lib/material.module","ɵb":"./lib/common/process-common.module","ɵc":"./lib/common/date-range-filter/date-range-filter.component","ɵd":"./lib/common/date-range-filter/date-range-filter.service","ɵe":"./lib/services/base-cloud.service","ɵf":"./lib/form/components/widgets/radio-buttons/radio-buttons-cloud.widget","ɵg":"./lib/form/components/widgets/properties-viewer/properties-viewer-wrapper/properties-viewer-wrapper.component","ɵh":"./lib/form/components/widgets/attach-file/file-properties-table-cloud.component","ɵi":"./lib/task/task-list/components/base-task-list-cloud.component","ɵj":"./lib/task/task-filters/components/base-task-filters-cloud.component","ɵk":"./lib/task/task-filters/components/edit-task-filters/base-edit-task-filter-cloud.component","ɵl":"./lib/task/task-filters/components/task-filter-dialog/task-filter-dialog-cloud.component","ɵm":"./lib/task/task-filters/components/task-assignment-filter/task-assignment-filter.component"},"importAs":"@alfresco/adf-process-services-cloud"}