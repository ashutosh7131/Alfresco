{"__symbolic":"module","version":4,"metadata":{"ProcessFiltersComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"adf-process-instance-filters","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":29,"character":19},"member":"None"},"template":"<div *ngFor=\"let filter of filters\" class=\"adf-filters__entry\" [class.adf-active]=\"currentFilter === filter\">\n    <button (click)=\"selectFilter(filter)\"\n      [attr.aria-label]=\"filter.name | translate\"\n      [id]=\"filter.id\"\n      [attr.data-automation-id]=\"filter.name + '_filter'\"\n      mat-button\n      class=\"adf-filter-action-button adf-full-width\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <adf-icon data-automation-id=\"adf-filter-icon\" *ngIf=\"showIcon\" [value]=\"getFilterIcon(filter.icon)\"></adf-icon>\n      <span data-automation-id=\"adf-filter-label\" class=\"adf-filter-action-button__label\">{{ filter.name | translate }}</span>\n    </button>\n</div>\n","styles":[".adf-filters__entry{cursor:pointer;font-size:14px!important;font-weight:700;height:24px;opacity:.54;padding:12px 0!important;width:100%}.adf-filters__entry .adf-full-width{display:flex;width:100%}.adf-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-filters__entry.adf-active,.adf-filters__entry:hover{color:var(--theme-primary-color);opacity:1}"]}]}],"members":{"filterParam":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":5}}]}],"filterClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":48,"character":5}}]}],"appId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":5}}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"showIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"filterSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":64,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessFilterService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppsProcessService","line":77,"character":44}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getFiltersByAppId":[{"__symbolic":"method"}],"getFiltersByAppName":[{"__symbolic":"method"}],"selectFilter":[{"__symbolic":"method"}],"selectProcessFilter":[{"__symbolic":"method"}],"selectRunningFilter":[{"__symbolic":"method"}],"selectDefaultTaskFilter":[{"__symbolic":"method"}],"getCurrentFilter":[{"__symbolic":"method"}],"isFilterListEmpty":[{"__symbolic":"method"}],"resetFilter":[{"__symbolic":"method"}],"getFilterIcon":[{"__symbolic":"method"}]}},"ProcessInstanceDetailsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"adf-process-instance-details","template":"<div *ngIf=\"!processInstanceDetails\">{{ 'ADF_PROCESS_LIST.DETAILS.MESSAGES.NONE'|translate }}</div>\n<mat-card *ngIf=\"processInstanceDetails\">\n    <mat-card-header>\n        <mat-card-title>{{ getProcessNameOrDescription('medium') }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <adf-process-instance-header\n            #processInstanceHeader\n            [processInstance]=\"processInstanceDetails\"\n            (showProcessDiagram)=\"onShowProcessDiagram()\">\n        </adf-process-instance-header>\n\n        <button\n            class=\"adf-in-medias-res-button\"\n            mat-button id=\"show-diagram-button\"\n            type=\"button\"\n            mat-button mat-raised-button\n            [disabled]=\"!isRunning()\"\n            (click)=\"onShowProcessDiagram()\">{{ 'ADF_PROCESS_LIST.DETAILS.BUTTON.SHOW_DIAGRAM' | translate }}</button>\n\n        <mat-card>\n            <mat-card-content>\n                <adf-process-instance-tasks\n                    #processInstanceTasks\n                    [processInstanceDetails]=\"processInstanceDetails\"\n                    (taskClick)=\"onTaskClicked($event)\">\n                </adf-process-instance-tasks>\n            </mat-card-content>\n        </mat-card>\n\n        <div data-automation-id=\"header-status\" *ngIf=\"isRunning()\" class=\"adf-in-medias-res-button\">\n            <button mat-button type=\"button\" (click)=\"cancelProcess()\">{{ 'ADF_PROCESS_LIST.DETAILS.BUTTON.CANCEL' | translate }}</button>\n        </div>\n\n        <mat-card>\n            <mat-card-content>\n                <adf-process-instance-comments #activitiComments\n                    [readOnly]=\"false\"\n                    [processInstanceId]=\"processInstanceDetails.id\">\n                </adf-process-instance-comments>\n            </mat-card-content>\n        </mat-card>\n\n    </mat-card-content>\n</mat-card>\n","styles":[":host{width:100%}.activiti-process-container{min-height:100px;overflow:visible;padding:10px;width:100%}.adf-comments-dialog{position:fixed;top:50%;transform:translateY(-50%);width:40%}.adf-in-medias-res-button{margin:16px 0}"]}]}],"members":{"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":5}}]}],"processInstanceHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":38,"character":5},"arguments":["processInstanceHeader"]}]}],"tasksList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":41,"character":5},"arguments":["processInstanceTasks"]}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"showRefreshButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"processCancelled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":5}}]}],"taskClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":61,"character":5}}]}],"showProcessDiagram":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":67,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":76,"character":36}]}],"ngOnChanges":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"isRunning":[{"__symbolic":"method"}],"cancelProcess":[{"__symbolic":"method"}],"onTaskClicked":[{"__symbolic":"method"}],"getProcessNameOrDescription":[{"__symbolic":"method"}],"getFormatDate":[{"__symbolic":"method"}],"onShowProcessDiagram":[{"__symbolic":"method"}]}},"ProcessAuditDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":26,"character":1},"arguments":[{"selector":"button[adf-process-audit]","host":{"role":"button","(click)":"onClickAudit()","$quoted$":["role","(click)"]}}]}],"members":{"processId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5},"arguments":["process-id"]}]}],"fileName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"download":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"clicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DownloadService","line":64,"character":41},{"__symbolic":"reference","name":"ProcessService"}]}],"ngOnChanges":[{"__symbolic":"method"}],"isValidType":[{"__symbolic":"method"}],"setDefaultFormatType":[{"__symbolic":"method"}],"fetchAuditInfo":[{"__symbolic":"method"}],"onClickAudit":[{"__symbolic":"method"}],"isJsonFormat":[{"__symbolic":"method"}],"isPdfFormat":[{"__symbolic":"method"}]}},"ProcessInstanceHeaderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"adf-process-instance-header","template":"<mat-card *ngIf=\"processInstance\" class=\"adf-card-container\">\n    <mat-card-content>\n        <adf-card-view [properties]=\"properties\"></adf-card-view>\n    </mat-card-content>\n</mat-card>\n","styles":[":host{width:100%}.adf-card-container{font-family:inherit}"]}]}],"members":{"processInstance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":36,"character":44},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":37,"character":35}]}],"ngOnChanges":[{"__symbolic":"method"}],"refreshData":[{"__symbolic":"method"}],"initDefaultProperties":[{"__symbolic":"method"}],"isValidSelection":[{"__symbolic":"method"}],"getProcessStatus":[{"__symbolic":"method"}],"getStartedByFullName":[{"__symbolic":"method"}],"isRunning":[{"__symbolic":"method"}]}},"ProcessInstanceTasksComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"adf-process-instance-tasks","template":"<div  *ngIf=\"showRefreshButton\" class=\"process-tasks-refresh\" >\n    <button mat-icon-button (click)=\"onRefreshClicked()\">\n        <mat-icon class=\"md-24\" aria-label=\"Refresh\">refresh</mat-icon>\n    </button>\n</div>\n\n<!-- ACTIVE FORM -->\n\n<mat-chip-list>\n    <span class=\"adf-chip-label\">{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASKS_ACTIVE'|translate }}</span>\n    <mat-chip class=\"adf-process-badge\" color=\"accent\" selected=\"true\">{{activeTasks?.length}}</mat-chip>\n</mat-chip-list>\n\n<div class=\"menu-container\" *ngIf=\"activeTasks?.length > 0\" data-automation-id=\"active-tasks\">\n    <mat-list>\n        <mat-list-item class=\"process-tasks__task-item\" *ngFor=\"let task of activeTasks\" (click)=\"clickTask(task)\">\n                <mat-icon mat-list-icon>assignment</mat-icon>\n                <h3 matLine>{{task.name || 'Nameless task'}}</h3>\n                <span matLine>\n                    {{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE' | translate:{user: getUserFullName(task.assignee), created: getFormatDate(task.created, 'mediumDate') } }}\n                </span>\n        </mat-list-item>\n    </mat-list>\n</div>\n\n<!-- START FORM -->\n\n<div *ngIf=\"activeTasks?.length === 0\" data-automation-id=\"active-tasks-none\" class=\"no-results\">\n    {{ 'ADF_PROCESS_LIST.DETAILS.TASKS.NO_ACTIVE' | translate }}\n</div>\n\n<div *ngIf=\"hasStartFormDefined()\">\n    <span class=\"adf-activiti-label\">{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM'|translate }}</span>\n\n    <!--IF START TASK COMPLETED -->\n    <div class=\"menu-container\" data-automation-id=\"start-form\">\n        <mat-list>\n            <mat-list-item class=\"process-tasks__task-item\" (click)=\"clickStartTask()\">\n                <mat-icon mat-list-icon>assignment</mat-icon>\n                <h3 matLine>{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM'|translate }}</h3>\n                <span matLine>\n                    {{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE' | translate:{user:getUserFullName(processInstanceDetails.startedBy), created: getFormatDate(processInstanceDetails.started, 'mediumDate') } }}\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n</div>\n\n<!-- COMPLETED FORM -->\n<mat-chip-list>\n        <span class=\"adf-chip-label\">{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASKS_COMPLETED'|translate }}</span>\n        <mat-chip class=\"adf-process-badge\" color=\"accent\" selected=\"true\">{{completedTasks?.length}}</mat-chip>\n</mat-chip-list>\n\n<div class=\"menu-container\" *ngIf=\"completedTasks?.length > 0\" data-automation-id=\"completed-tasks\">\n    <mat-list>\n        <mat-list-item class=\"process-tasks__task-item\" *ngFor=\"let task of completedTasks\" (click)=\"clickTask(task)\">\n            <mat-icon mat-list-icon>assignment</mat-icon>\n            <h3 matLine>{{task.name || 'Nameless task'}}</h3>\n            <span matLine>\n                {{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE' | translate:{user:getUserFullName(task.assignee), created: getFormatDate(task.created, 'mediumDate') } }}\n            </span>\n        </mat-list-item>\n    </mat-list>\n</div>\n\n<div *ngIf=\"completedTasks?.length === 0\" data-automation-id=\"completed-tasks-none\" class=\"no-results\">\n    {{ 'ADF_PROCESS_LIST.DETAILS.TASKS.NO_COMPLETED' | translate }}\n</div>\n\n<ng-template *ngIf=\"hasStartFormDefined()\" #startDialog>\n    <div id=\"adf-start-process-dialog\" class=\"adf-start-process-dialog\">\n        <h4 matDialogTitle>{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM'|translate }}</h4>\n        <div mat-dialog-content class=\"adf-start-process-dialog-content\">\n            <adf-start-form [processId]=\"processId\"\n                                 [showRefreshButton]=\"false\" [readOnlyForm]=\"true\"\n                                 (formContentClicked)='onFormContentClick()'>\n            </adf-start-form>\n        </div>\n        <div mat-dialog-actions class=\"adf-start-process-dialog-actions\">\n            <button mat-button type=\"button\" (click)=\"closeStartDialog()\">{{ 'ADF_PROCESS_LIST.DETAILS.TASKS.TASK_CLOSE' | translate }}</button>\n        </div>\n    </div>\n</ng-template>\n","styles":[":host{width:100%}.activiti-label{font-weight:bolder;vertical-align:top}.adf-process-badge{outline:none;pointer-events:none}.adf-chip-label{font-weight:700;margin-right:8px;position:relative;top:5px}.menu-container{margin-bottom:32px}.activiti-label+.icon{position:relative;top:-2px}.task-details-dialog{position:fixed;top:50%;transform:translateY(-50%);width:40%}.process-tasks-refresh{float:right}.adf-start-process-dialog{display:flex;flex-direction:column;height:100%;width:100%}.adf-start-process-dialog-content{flex-grow:1}.adf-start-process-dialog-actions{display:flex;justify-content:flex-end}.no-results{color:rgba(0,0,0,.54);display:block;font-size:14px;font-weight:400;letter-spacing:0;line-height:18px;margin-left:9px;padding:12px}.process-tasks__task-item{cursor:pointer}"]}]}],"members":{"processInstanceDetails":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":5}}]}],"showRefreshButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":45,"character":5}}]}],"startDialog":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":60,"character":5},"arguments":["startDialog"]}]}],"taskDetails":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":63,"character":5},"arguments":["taskDetails"]}]}],"taskClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":67,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":71,"character":36},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":72,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"loadActive":[{"__symbolic":"method"}],"loadCompleted":[{"__symbolic":"method"}],"hasStartFormDefined":[{"__symbolic":"method"}],"getUserFullName":[{"__symbolic":"method"}],"getFormatDate":[{"__symbolic":"method"}],"clickTask":[{"__symbolic":"method"}],"clickStartTask":[{"__symbolic":"method"}],"showStartDialog":[{"__symbolic":"method"}],"closeStartDialog":[{"__symbolic":"method"}],"onRefreshClicked":[{"__symbolic":"method"}],"onFormContentClick":[{"__symbolic":"method"}]}},"ProcessInstanceListComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DataTableSchema","line":54,"character":50},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":49,"character":1},"arguments":[{"selector":"adf-process-instance-list","template":"<adf-datatable #dataTable\n    [data]=\"data\"\n    [rows]=\"rows\"\n    [columns]=\"columns\"\n    [sorting]=\"sorting\"\n    [loading]=\"isLoading\"\n    [stickyHeader]=\"stickyHeader\"\n    [selectionMode]=\"selectionMode\"\n    [multiselect]=\"multiselect\"\n    [resolverFn]=\"resolverFn\"\n    [contextMenu]=\"showContextMenu\"\n    (showRowContextMenu)=\"onShowRowContextMenu($event)\"\n    (rowClick)=\"onRowClick($event)\"\n    (row-keyup)=\"onRowKeyUp($any($event))\">\n    <adf-loading-content-template>\n        <ng-template>\n            <mat-progress-spinner\n                *ngIf=\"!customLoadingContent\"\n                class=\"adf-process-list-loading-margin\"\n                color=\"primary\"\n                mode=\"indeterminate\">\n            </mat-progress-spinner>\n            <ng-content select=\"adf-custom-loading-content-template\"></ng-content>\n        </ng-template>\n    </adf-loading-content-template>\n    <adf-no-content-template>\n        <ng-template>\n                <adf-empty-content *ngIf=\"!customEmptyContent\"\n                    icon=\"assessment\"\n                    [title]=\"(requestNode ? 'ADF_PROCESS_LIST.LIST.TITLE' : 'ADF_PROCESS_LIST.FILTERS.MESSAGES.NONE') | translate\"\n                    [subtitle]=\"'ADF_PROCESS_LIST.LIST.SUBTITLE'| translate\">\n                </adf-empty-content>\n            <ng-content select=\"adf-custom-empty-content-template\"></ng-content>\n        </ng-template>\n    </adf-no-content-template>\n</adf-datatable>\n","styles":[".adf-process-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.no-content-message{color:#000;font-size:16px;font-weight:700;opacity:.54;text-align:center}"]}]}],"members":{"customEmptyContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":58,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomEmptyContentTemplateDirective","line":58,"character":18}]}]}],"customLoadingContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":61,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomLoadingContentTemplateDirective","line":61,"character":18}]}]}],"appId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"processDefinitionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"state":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":77,"character":5}}]}],"sort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":83,"character":5}}]}],"page":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":87,"character":5}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":91,"character":5}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":95,"character":5}}]}],"multiselect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":99,"character":5}}]}],"selectionMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":106,"character":5}}]}],"selectFirstRow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":5}}]}],"stickyHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":114,"character":5}}]}],"showContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":118,"character":5}}]}],"showRowContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":122,"character":5}}]}],"resolverFn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":129,"character":5}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":133,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":137,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":141,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":152,"character":41},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":153,"character":27}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isSortChanged":[{"__symbolic":"method"}],"isPropertyChanged":[{"__symbolic":"method"}],"reload":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"selectFirst":[{"__symbolic":"method"}],"getCurrentId":[{"__symbolic":"method"}],"isListEmpty":[{"__symbolic":"method"}],"onRowClick":[{"__symbolic":"method"}],"onRowKeyUp":[{"__symbolic":"method"}],"onShowRowContextMenu":[{"__symbolic":"method"}],"createRequestNode":[{"__symbolic":"method"}],"updatePagination":[{"__symbolic":"method"}],"currentPage":[{"__symbolic":"method"}]},"statics":{"PRESET_KEY":"adf-process-list.presets"}},"StartProcessInstanceComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":42,"character":1},"arguments":[{"selector":"adf-start-process","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":46,"character":19},"member":"None"},"template":"\n<ng-container *ngIf=\"isLoading(); then showLoadingTemplate; else showStartProcessTemplate\"></ng-container>\n    <ng-template #showLoadingTemplate>\n        <mat-spinner class=\"adf-start-process-loading\"></mat-spinner>\n    </ng-template>\n<ng-template #showStartProcessTemplate>\n    <ng-container *ngIf=\"hasApplications() || hasProcessDefinitions() ; else showEmptyTemplate\">\n        <div class=\"adf-start-process\">\n            <div class=\"adf-title\" *ngIf=\"title\">{{ title | translate}}</div>\n            <div class=\"content\">\n                <div class=\"adf-start-process-definition-container\">\n                    <mat-form-field *ngIf=\"showSelectApplicationDropdown\" [floatLabel]=\"'always'\" class=\"adf-start-process-app-list\">\n                        <mat-select\n                            placeholder=\"{{ 'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.SELECT_APPLICATION' | translate }}\"\n                            (selectionChange)=\"onAppSelectionChange($event)\"\n                            [(ngModel)]=\"selectedApplication\"\n                            data-automation-id=\"adf-start-process-apps-drop-down\">\n                            <mat-option \n                                *ngFor=\"let application of applications\"\n                                [value]=\"application\"\n                                [attr.data-automation-id]=\"'adf-start-process-apps-option-' + application.name\">\n                                {{ application.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"adf-process-input-container\" [floatLabel]=\"'always'\">\n                        <mat-label>{{'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.TYPE' | translate}}</mat-label>\n                        <input\n                            type=\"text\"\n                            matInput\n                            [formControl]=\"processDefinitionInput\"\n                            [matAutocomplete]=\"auto\"\n                            id=\"processDefinitionName\"\n                            #inputAutocomplete>\n                        <div class=\"adf-process-input-autocomplete\">\n                            <mat-autocomplete\n                                #auto=\"matAutocomplete\"\n                                id=\"processDefinitionOptions\"\n                                [displayWith]=\"displayFn\">\n                                <mat-option *ngFor=\"let processDef of filteredProcessesDefinitions$ | async\" [value]=\"processDef.name\"\n                                (click)=\"processDefinitionSelectionChanged(processDef)\">\n                                    {{ processDef.name }}\n                                </mat-option>\n                            </mat-autocomplete>\n                            <ng-container *ngIf=\"!isProcessDefinitionsLoading ; else showProcessDefLoadingTemplate\">\n                                <button\n                                    id=\"adf-select-process-dropdown\"\n                                    *ngIf=\"showSelectProcessDropdown\"\n                                    mat-icon-button\n                                    (click)=\"displayDropdown($event)\"\n                                    [disabled]=\"disableDropdownButton()\">\n                                    <mat-icon>arrow_drop_down</mat-icon>\n                                </button>\n                            </ng-container>\n                            <ng-template #showProcessDefLoadingTemplate>\n                                <mat-spinner id=\"adf-select-process-spinner\" [diameter]=\"20\"></mat-spinner>\n                            </ng-template>\n                        </div>\n                    </mat-form-field>\n                </div>\n                <mat-form-field class=\"adf-process-input-container\" [floatLabel]=\"'always'\">\n                    <mat-label>{{'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.NAME' | translate}}</mat-label>\n                    <input\n                        matInput\n                        [formControl]=\"processNameInput\"\n                        id=\"processName\"\n                        required/>\n                    <mat-error *ngIf=\"nameController.hasError('maxlength')\">\n                        {{ 'ADF_PROCESS_LIST.START_PROCESS.ERROR.MAXIMUM_LENGTH' | translate : { characters : maxProcessNameLength } }}\n                    </mat-error>\n                    <mat-error *ngIf=\"nameController.hasError('required')\">\n                        {{ 'ADF_PROCESS_LIST.START_PROCESS.ERROR.PROCESS_NAME_REQUIRED' | translate }}\n                    </mat-error>\n                    <mat-error *ngIf=\"nameController.hasError('pattern')\">\n                        {{ 'ADF_PROCESS_LIST.START_PROCESS.ERROR.SPACE_VALIDATOR' | translate }}\n                    </mat-error>\n                </mat-form-field>\n        \n                <ng-container *ngIf=\"!isProcessDefinitionsLoading ; else showStartFormLoadingTemplate\">\n                    <ng-container *ngIf=\"isProcessDefinitionSelected() ; else emptyProcessDefTemplate\">\n                        <ng-container  *ngIf=\"hasStartForm(); else noStartFormTemplate\">\n                            <adf-start-form\n                                #startForm\n                                [data]=\"movedNodeToPS\"\n                                [disableStartProcessButton]=\"processNameInput.invalid\"\n                                [processDefinitionId]=\"selectedProcessDef.id\"\n                                (outcomeClick)=\"onOutcomeClick($event)\"\n                                [showRefreshButton]=\"false\">\n                                <button\n                                    adf-form-custom-button\n                                    mat-button\n                                    (click)=\"cancelStartProcess()\"\n                                    id=\"cancel_process\">\n                                    {{'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.CANCEL'| translate | uppercase}}\n                                </button>\n                            </adf-start-form>\n                        </ng-container>\n                        <ng-template #noStartFormTemplate>\n                            <adf-empty-content \n                                class=\"adf-start-process-empty-template\"\n                                [icon]=\"'assessment'\"\n                                [title]=\"'ADF_PROCESS_LIST.START_PROCESS.NO_START_FORM'  | translate\">\n                            </adf-empty-content>\n                        </ng-template>\n                    </ng-container>\n                    <ng-template #emptyProcessDefTemplate>\n                        <adf-empty-content class=\"adf-start-process-empty-template\"\n                            [icon]=\"'assessment'\"\n                            [title]=\"'ADF_PROCESS_LIST.START_PROCESS.NO_PROCESS_DEF_SELECTED'  | translate\">\n                        </adf-empty-content>\n                    </ng-template>\n                </ng-container>\n                <ng-template #showStartFormLoadingTemplate>\n                    <mat-spinner class=\"adf-start-process-loading\"></mat-spinner>\n                </ng-template>\n            </div>\n            <div class=\"mat-content-actions\" *ngIf=\"!hasStartForm()\">\n                <button\n                    mat-button\n                    *ngIf=\"!hasStartForm()\"\n                    (click)=\"cancelStartProcess()\"\n                    id=\"cancel_process\">\n                    {{'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.CANCEL'| translate | uppercase}}\n                </button>\n                <button\n                    color=\"primary\"\n                    mat-button\n                    *ngIf=\"!hasStartForm()\"\n                    [disabled]=\"!validateForm()\"\n                    (click)=\"startProcess()\"\n                    data-automation-id=\"btn-start\"\n                    id=\"button-start\"\n                    class=\"btn-start\">\n                    {{'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.START' | translate | uppercase}}\n                </button>\n            </div>\n        </div>\n    </ng-container>\n        <ng-template #showEmptyTemplate>\n            <adf-empty-content class=\"adf-start-process-empty-template\"\n                [icon]=\"'assessment'\"\n                [title]=\"'ADF_PROCESS_LIST.START_PROCESS.NO_PROCESS_DEFINITIONS' | translate\">\n            </adf-empty-content>\n        </ng-template>    \n</ng-template>\n","styles":[".adf-start-process{margin-left:auto;margin-right:auto;margin-top:10px;width:96%}.adf-start-process mat-form-field{width:100%}.adf-start-process .mat-form-field-label{color:var(--theme-colors-mat-grey-dark)}.adf-start-process .mat-content-actions{text-align:right}.adf-start-process .mat-button{text-transform:uppercase!important}.adf-title{padding-bottom:1.25em}.adf-process-input-container mat-form-field{width:100%}.adf-process-input-autocomplete{display:flex}.adf-process-input-autocomplete button{position:absolute;right:-14px;top:0}.adf-process-input-autocomplete mat-spinner{position:absolute;right:-1px;top:0}.adf-start-form-container .mat-card{box-shadow:none!important;padding:0!important}.adf-start-form-actions{text-align:right!important}.adf-start-process-definition-container{align-items:baseline;display:flex;flex-direction:row;justify-content:space-around}.adf-start-process-app-list{margin-right:10px}@media (max-width:600px){.adf-start-process{margin-left:auto;margin-right:auto;width:90%}}.adf-start-process-loading{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],"members":{"appId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":5}}]}],"processDefinitionName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":5}}]}],"variables":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"values":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":77,"character":5}}]}],"showSelectProcessDropdown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":81,"character":5}}]}],"showSelectApplicationDropdown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":85,"character":5}}]}],"processFilterSelector":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":89,"character":5}}]}],"start":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":93,"character":5}}]}],"cancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":97,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":101,"character":5}}]}],"processDefinitionSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":105,"character":5}}]}],"applicationSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":109,"character":5}}]}],"startForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":112,"character":5},"arguments":["startForm"]}]}],"inputAutocomplete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":115,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteTrigger","line":115,"character":15}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ProcessService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ActivitiContentService","line":134,"character":48},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppsProcessService","line":135,"character":44},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":136,"character":35},{"__symbolic":"reference","name":"ProcessNamePipe"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isAppIdChanged":[{"__symbolic":"method"}],"isProcessDefinitionChanged":[{"__symbolic":"method"}],"_filter":[{"__symbolic":"method"}],"getSelectedProcess":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"loadProcessDefinitions":[{"__symbolic":"method"}],"filterProcessDefinitionByName":[{"__symbolic":"method"}],"loadApps":[{"__symbolic":"method"}],"loadProcessDefinitionsBasedOnSelectedApp":[{"__symbolic":"method"}],"onAppSelectionChange":[{"__symbolic":"method"}],"isAppSelected":[{"__symbolic":"method"}],"removeDefaultApps":[{"__symbolic":"method"}],"hasApplications":[{"__symbolic":"method"}],"hasProcessDefinitions":[{"__symbolic":"method"}],"isProcessDefinitionSelected":[{"__symbolic":"method"}],"isProcessDefinitionsEmpty":[{"__symbolic":"method"}],"disableDropdownButton":[{"__symbolic":"method"}],"getAlfrescoRepositoryName":[{"__symbolic":"method"}],"moveNodeFromCStoPS":[{"__symbolic":"method"}],"startProcess":[{"__symbolic":"method"}],"cancelStartProcess":[{"__symbolic":"method"}],"hasStartForm":[{"__symbolic":"method"}],"isStartFormMissingOrValid":[{"__symbolic":"method"}],"validateForm":[{"__symbolic":"method"}],"resetSelectedProcessDefinition":[{"__symbolic":"method"}],"resetProcessDefinitions":[{"__symbolic":"method"}],"onOutcomeClick":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"displayFn":[{"__symbolic":"method"}],"displayDropdown":[{"__symbolic":"method"}],"toggleProcessNameAndDefinitionsDropdown":[{"__symbolic":"method"}],"processDefinitionSelectionChanged":[{"__symbolic":"method"}],"isLoading":[{"__symbolic":"method"}]}},"ProcessService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":39,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":68,"character":44}]}],"getProcessInstances":[{"__symbolic":"method"}],"getProcesses":[{"__symbolic":"method"}],"getProcessNameOrDescription":[{"__symbolic":"method"}],"getFormatDate":[{"__symbolic":"method"}],"fetchProcessAuditPdfById":[{"__symbolic":"method"}],"fetchProcessAuditJsonById":[{"__symbolic":"method"}],"getProcess":[{"__symbolic":"method"}],"getProcessTasks":[{"__symbolic":"method"}],"getProcessDefinitions":[{"__symbolic":"method"}],"startProcess":[{"__symbolic":"method"}],"cancelProcess":[{"__symbolic":"method"}],"getProcessInstanceVariables":[{"__symbolic":"method"}],"createOrUpdateProcessInstanceVariables":[{"__symbolic":"method"}],"deleteProcessInstanceVariable":[{"__symbolic":"method"}],"extractData":[{"__symbolic":"method"}],"handleProcessError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ProcessFilterService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":27,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":38,"character":44}]}],"getProcessFilters":[{"__symbolic":"method"}],"getProcessFilterById":[{"__symbolic":"method"}],"getProcessFilterByName":[{"__symbolic":"method"}],"createDefaultFilters":[{"__symbolic":"method"}],"getRunningFilterInstance":[{"__symbolic":"method"}],"getCompletedFilterInstance":[{"__symbolic":"method"}],"getAllFilterInstance":[{"__symbolic":"method"}],"addProcessFilter":[{"__symbolic":"method"}],"callApiProcessFilters":[{"__symbolic":"method"}],"handleProcessError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"FilterProcessRepresentationModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"hasFilter":[{"__symbolic":"method"}]}},"ProcessFilterParamRepresentationModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"ProcessDefinitionRepresentation":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"ProcessInstance":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"ProcessFilterRequestRepresentation":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"ProcessInstanceVariable":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"ProcessListModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":37,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":39,"character":8},{"__symbolic":"reference","name":"MaterialModule"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":41,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":42,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":43,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":44,"character":8},{"__symbolic":"reference","name":"TaskListModule"},{"__symbolic":"reference","name":"PeopleModule"},{"__symbolic":"reference","name":"ContentWidgetModule"},{"__symbolic":"reference","name":"ProcessCommentsModule"},{"__symbolic":"reference","name":"FormModule"}],"declarations":[{"__symbolic":"reference","name":"ProcessInstanceListComponent"},{"__symbolic":"reference","name":"ProcessFiltersComponent"},{"__symbolic":"reference","name":"ProcessInstanceDetailsComponent"},{"__symbolic":"reference","name":"ProcessAuditDirective"},{"__symbolic":"reference","name":"ProcessInstanceHeaderComponent"},{"__symbolic":"reference","name":"ProcessInstanceTasksComponent"},{"__symbolic":"reference","name":"StartProcessInstanceComponent"}],"exports":[{"__symbolic":"reference","name":"ProcessInstanceListComponent"},{"__symbolic":"reference","name":"ProcessFiltersComponent"},{"__symbolic":"reference","name":"ProcessInstanceDetailsComponent"},{"__symbolic":"reference","name":"ProcessAuditDirective"},{"__symbolic":"reference","name":"ProcessInstanceHeaderComponent"},{"__symbolic":"reference","name":"ProcessInstanceTasksComponent"},{"__symbolic":"reference","name":"StartProcessInstanceComponent"}],"providers":[{"__symbolic":"reference","name":"ProcessNamePipe"}]}]}],"members":{}},"TaskListComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DataTableSchema","line":39,"character":39},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"adf-tasklist","template":"<div *ngIf=\"!requestNode\">{{ 'ADF_TASK_LIST.FILTERS.MESSAGES.NONE' | translate }}</div>\n<ng-container *ngIf=\"requestNode\">\n        <adf-datatable\n            [data]=\"data\"\n            [rows]=\"rows\"\n            [columns]=\"columns\"\n            [sorting]=\"sorting\"\n            [loading]=\"isLoading\"\n            [stickyHeader]=\"stickyHeader\"\n            [multiselect]=\"multiselect\"\n            [selectionMode]=\"selectionMode\"\n            [contextMenu]=\"showContextMenu\"\n            (showRowContextMenu)=\"onShowRowContextMenu($event)\"\n            (row-select)=\"onRowSelect($any($event))\"\n            (row-unselect)=\"onRowUnselect($any($event))\"\n            (rowClick)=\"onRowClick($any($event))\"\n            (row-keyup)=\"onRowKeyUp($any($event))\">\n            <adf-loading-content-template>\n                <ng-template>\n                    <!--Add your custom loading template here-->\n                    <mat-progress-spinner\n                        *ngIf=\"!customLoadingContent\"\n                        class=\"adf-task-list-loading-margin\"\n                        color=\"primary\"\n                        mode=\"indeterminate\">\n                    </mat-progress-spinner>\n                    <ng-content select=\"adf-custom-loading-content-template\"></ng-content>\n                </ng-template>\n            </adf-loading-content-template>\n            <adf-no-content-template>\n                <ng-template>\n                    <adf-empty-content *ngIf=\"!customEmptyContent\"\n                        icon=\"assignment\"\n                        [title]=\"'ADF_TASK_LIST.LIST.MESSAGES.TITLE' | translate\"\n                        [subtitle]=\"'ADF_TASK_LIST.LIST.MESSAGES.SUBTITLE' | translate\">\n                    </adf-empty-content>\n                    <ng-content select=\"adf-custom-empty-content-template\"></ng-content>\n                </ng-template>\n            </adf-no-content-template>\n        </adf-datatable>\n</ng-container>\n","styles":[".adf-task-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],"members":{"customEmptyContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":43,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomEmptyContentTemplateDirective","line":43,"character":18}]}]}],"customLoadingContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":46,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomLoadingContentTemplateDirective","line":46,"character":18}]}]}],"appId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":5}}]}],"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"processDefinitionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"state":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5}}]}],"assignment":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":5}}]}],"sort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":78,"character":5}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":82,"character":5}}]}],"landingTaskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":88,"character":5}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":95,"character":5}}]}],"selectionMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":102,"character":5}}]}],"multiselect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":106,"character":5}}]}],"selectFirstRow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":114,"character":5}}]}],"includeProcessInstance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":118,"character":5}}]}],"start":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":122,"character":5}}]}],"showContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":126,"character":5}}]}],"stickyHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":130,"character":5}}]}],"showRowContextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":134,"character":5}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":138,"character":5}}]}],"rowsSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":142,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":146,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":150,"character":5}}]}],"page":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":158,"character":5}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":162,"character":5}}]}],"dueAfter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":166,"character":5}}]}],"dueBefore":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":170,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":189,"character":34},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":190,"character":41}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"setCustomDataSource":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isSortChanged":[{"__symbolic":"method"}],"isPropertyChanged":[{"__symbolic":"method"}],"reload":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"loadTasksByState":[{"__symbolic":"method"}],"selectTask":[{"__symbolic":"method"}],"getCurrentId":[{"__symbolic":"method"}],"isEqualToCurrentId":[{"__symbolic":"method"}],"isListEmpty":[{"__symbolic":"method"}],"onRowClick":[{"__symbolic":"method"}],"onRowSelect":[{"__symbolic":"method"}],"onRowUnselect":[{"__symbolic":"method"}],"onRowKeyUp":[{"__symbolic":"method"}],"onShowRowContextMenu":[{"__symbolic":"method"}],"optimizeTaskDetails":[{"__symbolic":"method"}],"createRequestNode":[{"__symbolic":"method"}],"updatePagination":[{"__symbolic":"method"}],"currentPage":[{"__symbolic":"method"}]},"statics":{"PRESET_KEY":"adf-task-list.presets"}},"ChecklistComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"adf-checklist","template":"<div class=\"adf-checklist-control\">\n    <mat-chip-list data-automation-id=\"checklist-label\">\n        <span class=\"adf-activiti-label\">{{ 'ADF_TASK_LIST.DETAILS.LABELS.CHECKLIST' | translate }}</span>\n        <mat-chip class=\"adf-process-badge\" color=\"accent\" selected=\"true\">{{checklist?.length}}</mat-chip>\n    </mat-chip-list>\n\n\n    <button mat-icon-button *ngIf=\"!readOnly\" matTooltip=\"Add a checklist\" [matTooltipPosition]=\"'before'\"\n            id=\"add-checklist\" class=\"adf-add-to-checklist-button\" (click)=\"showDialog()\">\n        <mat-icon>add</mat-icon>\n    </button>\n</div>\n\n<div class=\"adf-checklist-menu-container\" *ngIf=\"checklist?.length > 0\">\n    <mat-chip-list class=\"mat-chip-list-stacked\">\n        <mat-chip id=\"check-{{check.id}}\" class=\"adf-checklist-chip\" *ngFor=\"let check of checklist\"\n                  (removed)=\"delete(check.id)\">\n            <span>{{check.name}}</span>\n            <mat-icon *ngIf=\"!readOnly && !check.endDate\" id=\"remove-{{check.id}}\" matChipRemove>cancel\n            </mat-icon>\n        </mat-chip>\n    </mat-chip-list>\n\n</div>\n<div *ngIf=\"checklist?.length === 0\" id=\"checklist-none-message\" class=\"adf-checklist-none-message\">\n    {{ 'ADF_TASK_LIST.DETAILS.CHECKLIST.NONE' | translate }}\n</div>\n\n<ng-template #dialog>\n    <div class=\"adf-checklist-dialog\" id=\"checklist-dialog\">\n        <h4 matDialogTitle id=\"add-checklist-title\">{{ 'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.TITLE' | translate }}</h4>\n        <mat-dialog-content>\n            <mat-form-field>\n                <input matInput placeholder=\"{{ 'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.PLACEHOLDER' | translate }}\" [(ngModel)]=\"taskName\" id=\"checklist-name\"\n                       data-automation-id=\"checklist-name\">\n            </mat-form-field>\n        </mat-dialog-content>\n        <mat-dialog-actions class=\"adf-checklist-dialog-actions\">\n            <button mat-button type=\"button\" id=\"close-check-dialog\" (click)=\"cancel()\">{{ 'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.CANCEL-BUTTON' | translate | uppercase }}</button>\n            <button mat-button type=\"button\" id=\"add-check\" (click)=\"add()\">{{ 'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.ADD-BUTTON' | translate | uppercase  }}</button>\n        </mat-dialog-actions>\n    </div>\n</ng-template>\n","styles":[":host{width:100%}.adf-activiti-label{font-weight:bolder}.mat-form-field{width:100%}.adf-checklist-cancel-button{float:right;margin-right:-13px;margin-top:-13px}.adf-checklist-chip{outline:none}.adf-checklist-menu-container,.adf-checklist-none-message{margin-top:10px}.adf-checklist-control{display:flex;justify-content:space-between}.adf-checklist-control .adfactiviti-label{margin-right:10px;margin-top:6px}.adf-checklist-control .adf-add-to-checklist-button{float:right}.adf-checklist-dialog-actions{display:flex;justify-content:flex-end}"]}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":5}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":5}}]}],"assignee":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":5}}]}],"checklistTaskCreated":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":5}}]}],"checklistTaskDeleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":50,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":54,"character":5}}]}],"addNewDialog":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":57,"character":5},"arguments":["dialog",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":70,"character":32}]}],"ngOnChanges":[{"__symbolic":"method"}],"getTaskChecklist":[{"__symbolic":"method"}],"showDialog":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}]}},"TaskHeaderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"adf-task-header","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":36,"character":19},"member":"None"},"template":"<mat-card *ngIf=\"taskDetails\" class=\"adf-card-container\">\n    <mat-card-content>\n        <adf-card-view [properties]=\"properties\" [editable]=\"!isCompleted()\" [displayClearAction]=\"displayDateClearAction\"></adf-card-view>\n    </mat-card-content>\n\n    <mat-card-actions class=\"adf-controls\" *ngIf=\"showClaimRelease\">\n        <button *ngIf=\"isTaskClaimedByCandidateMember()\" \n            mat-button \n            data-automation-id=\"header-unclaim-button\" \n            id=\"unclaim-task\" \n            class=\"adf-claim-controls\"\n            adf-unclaim-task\n            [taskId]=\"taskDetails.id\"\n            (success)=\"onUnclaimTask($event)\">\n            {{ 'ADF_TASK_LIST.DETAILS.BUTTON.UNCLAIM' | translate }}\n        </button>\n        <button *ngIf=\"isTaskClaimable()\" \n            mat-button \n            data-automation-id=\"header-claim-button\" \n            id=\"claim-task\" \n            class=\"adf-claim-controls\"\n            adf-claim-task\n            [taskId]=\"taskDetails.id\"\n            (success)=\"onClaimTask($event)\">\n            {{ 'ADF_TASK_LIST.DETAILS.BUTTON.CLAIM' | translate }}\n        </button>\n    </mat-card-actions>\n</mat-card>\n","styles":[".adf-controls{display:flex;justify-content:space-between}.adf-edit-controls{display:flex;justify-content:flex-end;margin-left:auto}.adf-save-edit-mode,.adf-switch-to-edit-mode{color:var(--theme-primary-color)}.adf-cancel-edit-mode,.adf-claim-controls{color:#838383}.adf-card-container{font-family:inherit}@media screen and (max-width:959px){adf-card-view .adf-property-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}"]}]}],"members":{"formName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"taskDetails":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"showClaimRelease":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"claim":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":5}}]}],"unclaim":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"BpmUserService","line":68,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":69,"character":44},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":70,"character":35}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"initDefaultProperties":[{"__symbolic":"method"}],"initData":[{"__symbolic":"method"}],"refreshData":[{"__symbolic":"method"}],"isValidSelection":[{"__symbolic":"method"}],"loadCurrentBpmUserId":[{"__symbolic":"method"}],"getParentInfo":[{"__symbolic":"method"}],"hasAssignee":[{"__symbolic":"method"}],"isAssignedTo":[{"__symbolic":"method"}],"isAssignedToCurrentUser":[{"__symbolic":"method"}],"isCandidateMember":[{"__symbolic":"method"}],"isTaskClaimable":[{"__symbolic":"method"}],"isTaskClaimedByCandidateMember":[{"__symbolic":"method"}],"getTaskStatus":[{"__symbolic":"method"}],"onClaimTask":[{"__symbolic":"method"}],"onUnclaimTask":[{"__symbolic":"method"}],"isCompleted":[{"__symbolic":"method"}],"isFormClickable":[{"__symbolic":"method"}],"getTaskDuration":[{"__symbolic":"method"}]}},"NoTaskDetailsTemplateDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":28,"character":1},"arguments":[{"selector":"adf-no-task-details-template, no-task-details-template"}]}],"members":{"template":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":34,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"TemplateRef","line":34,"character":18}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskDetailsComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"TaskFiltersComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"adf-task-filters","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":29,"character":19},"member":"None"},"template":"<div *ngFor=\"let filter of filters\" class=\"adf-filters__entry\" [class.adf-active]=\"currentFilter === filter\">\n    <button (click)=\"onFilterClick(filter)\"\n      [attr.aria-label]=\"filter.name | translate\"\n      [id]=\"filter.id\"\n      [attr.data-automation-id]=\"filter.name + '_filter'\"\n      mat-button\n      class=\"adf-filter-action-button adf-full-width\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <ng-container *ngIf=\"showIcon\">\n        <adf-icon data-automation-id=\"adf-filter-icon\" [value]=\"getFilterIcon(filter.icon)\"></adf-icon>\n      </ng-container>\n      <span data-automation-id=\"adf-filter-label\" class=\"adf-filter-action-button__label\">{{ filter.name | translate }}</span>\n    </button>\n</div>\n","styles":[".adf-filters__entry{cursor:pointer;font-size:14px!important;font-weight:700;height:24px;opacity:.54;padding:12px 0!important;width:100%}.adf-filters__entry .adf-full-width{display:flex;width:100%}.adf-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-filters__entry.adf-active,.adf-filters__entry:hover{color:var(--theme-primary-color);opacity:1}"]}]}],"members":{"filterParam":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":5}}]}],"filterClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"filterSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":48,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":52,"character":5}}]}],"appId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"appName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"showIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskFilterService"},{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppsProcessService","line":77,"character":44}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getFilters":[{"__symbolic":"method"}],"getFiltersByAppId":[{"__symbolic":"method"}],"getFiltersByAppName":[{"__symbolic":"method"}],"createFiltersByAppId":[{"__symbolic":"method"}],"selectFilter":[{"__symbolic":"method"}],"selectFilterAndEmit":[{"__symbolic":"method"}],"onFilterClick":[{"__symbolic":"method"}],"selectFilterWithTask":[{"__symbolic":"method"}],"selectDefaultTaskFilter":[{"__symbolic":"method"}],"getCurrentFilter":[{"__symbolic":"method"}],"isFilterListEmpty":[{"__symbolic":"method"}],"resetFilter":[{"__symbolic":"method"}],"getFilterIcon":[{"__symbolic":"method"}]}},"TaskFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"adf-task-form","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":36,"character":17},"member":"None"},"template":"<ng-container *ngIf=\"!loading; else loadingTemplate\">\n  <adf-form *ngIf=\"hasFormKey(); else withoutForm\"\n    [taskId]=\"taskDetails?.id\"\n    [showTitle]=\"showFormTitle\"\n    [showValidationIcon]=\"showFormValidationIcon\"\n    [showRefreshButton]=\"showFormRefreshButton\"\n    [showCompleteButton]=\"showFormCompleteButton\"\n    [showSaveButton]=\"isSaveButtonVisible()\"\n    [disableCompleteButton]=\"!isCompleteButtonEnabled()\"\n    [readOnly]=\"isReadOnlyForm()\"\n    [fieldValidators]=\"fieldValidators\"\n    (formSaved)='onFormSaved($event)'\n    (formCompleted)='onFormCompleted($event)'\n    (formContentClicked)='onFormContentClick($event)'\n    (formLoaded)='onFormLoaded($event)'\n    (formError)='onFormError($event)'\n    (error)='onError($event)'\n    (executeOutcome)='onFormExecuteOutcome($event)'>\n    <adf-form-custom-outcomes>\n        <ng-template [ngTemplateOutlet]=\"taskFormButtons\">\n        </ng-template>\n    </adf-form-custom-outcomes>\n  </adf-form>\n  <ng-template #withoutForm>\n    <adf-task-standalone *ngIf=\"isStandaloneTask(); else emptyFormMessage\"\n        [taskName]=\"taskDetails.name\"\n        [taskId]=\"taskDetails.id\"\n        [isCompleted]=\"isCompletedTask()\"\n        [hasCompletePermission]=\"isCompleteButtonVisible()\"\n        [hideCancelButton]=\"showCancelButton\"\n        (complete)=\"onCompleteTask()\"\n        (showAttachForm)=\"onShowAttachForm()\">\n    </adf-task-standalone>\n      <ng-template #emptyFormMessage>\n        <mat-card class=\"adf-task-form-container\">\n            <mat-card-header>\n                <mat-card-title>\n                    <h4>\n                        <span class=\"adf-form-title\">\n                            {{taskDetails.name}}\n                            <ng-container *ngIf=\"!taskDetails.name\">\n                                {{'FORM.FORM_RENDERER.NAMELESS_TASK' | translate}}\n                            </ng-container>\n                        </span>\n                    </h4>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-empty-content *ngIf=\"isCompletedTask(); else emptyFormTemplate\"\n                    [icon]=\"'description'\"\n                    [title]=\"getCompletedTaskTranslatedMessage() | async\"\n                    [subtitle]=\"'ADF_TASK_FORM.COMPLETED_TASK.SUBTITLE'\">\n                </adf-empty-content>\n                <ng-template #emptyFormTemplate>\n                    <adf-empty-content\n                        [icon]=\"'description'\"\n                        [title]=\"'ADF_TASK_LIST.STANDALONE_TASK.NO_FORM_MESSAGE'\"\n                        [subtitle]=\"'ADF_TASK_FORM.EMPTY_FORM.SUBTITLE'\">\n                    </adf-empty-content>\n                </ng-template>\n            </mat-card-content>\n            <mat-card-actions class=\"adf-task-form-actions\">\n                <ng-template [ngTemplateOutlet]=\"taskFormButtons\"></ng-template>\n                <button mat-button\n                    *ngIf=\"!isCompletedTask()\" id=\"adf-no-form-complete-button\"\n                    color=\"primary\"\n                    [disabled]=\"canCompleteNoFormTask()\"\n                    (click)=\"onCompleteTask()\">\n                    {{'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE' | translate}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n      </ng-template>\n  </ng-template>\n\n  <ng-template #taskFormButtons>\n        <button mat-button id=\"adf-no-form-cancel-button\"\n            *ngIf=\"showCancelButton\"\n            (click)=\"onCancel()\">\n            {{'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL' | translate}}\n        </button>\n        <button mat-button data-automation-id=\"adf-task-form-claim-button\"\n            *ngIf=\"isTaskClaimable()\"\n            adf-claim-task\n            [taskId]=\"taskId\"\n            (success)=\"onClaimTask($event)\"\n            (error)=\"onClaimTaskError($event)\">\n            {{ 'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM' | translate }}\n        </button>\n        <button mat-button data-automation-id=\"adf-task-form-unclaim-button\"\n            *ngIf=\"isTaskClaimedByCandidateMember()\"\n            adf-unclaim-task\n            [taskId]=\"taskId\"\n            (success)=\"onUnclaimTask($event)\"\n            (error)=\"onUnclaimTaskError($event)\">\n            {{ 'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM' | translate }}\n        </button>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTemplate>\n  <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n      <mat-spinner></mat-spinner>\n  </div>\n</ng-template>\n","styles":[".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"]}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":3}}]}],"showFormTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"showFormCompleteButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":3}}]}],"showFormSaveButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":3}}]}],"showCancelButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":3}}]}],"readOnlyForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"showFormRefreshButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"showFormValidationIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":3}}]}],"fieldValidators":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":75,"character":3}}]}],"formSaved":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":79,"character":3}}]}],"formCompleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":83,"character":3}}]}],"formContentClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":87,"character":3}}]}],"formLoaded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":91,"character":3}}]}],"showAttachForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":95,"character":3}}]}],"executeOutcome":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":101,"character":3}}]}],"completed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":105,"character":3}}]}],"formError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":109,"character":3}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":113,"character":3}}]}],"cancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":117,"character":3}}]}],"taskClaimed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":121,"character":3}}]}],"taskUnclaimed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":125,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AuthenticationService","line":136,"character":25},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":137,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"loadTask":[{"__symbolic":"method"}],"onFormSaved":[{"__symbolic":"method"}],"onFormCompleted":[{"__symbolic":"method"}],"onFormLoaded":[{"__symbolic":"method"}],"onFormContentClick":[{"__symbolic":"method"}],"onFormExecuteOutcome":[{"__symbolic":"method"}],"onFormError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"onCompleteTask":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"onShowAttachForm":[{"__symbolic":"method"}],"hasFormKey":[{"__symbolic":"method"}],"isStandaloneTask":[{"__symbolic":"method"}],"isTaskLoaded":[{"__symbolic":"method"}],"isCompletedTask":[{"__symbolic":"method"}],"isCompleteButtonVisible":[{"__symbolic":"method"}],"isTaskActive":[{"__symbolic":"method"}],"isAssigned":[{"__symbolic":"method"}],"hasEmailAddress":[{"__symbolic":"method"}],"isAssignedToMe":[{"__symbolic":"method"}],"isEmailEqual":[{"__symbolic":"method"}],"isExternalIdEqual":[{"__symbolic":"method"}],"isCompleteButtonEnabled":[{"__symbolic":"method"}],"canInitiatorComplete":[{"__symbolic":"method"}],"isReadOnlyForm":[{"__symbolic":"method"}],"isCurrentUserInvolved":[{"__symbolic":"method"}],"canCurrentUserAsInitiatorComplete":[{"__symbolic":"method"}],"isProcessInitiator":[{"__symbolic":"method"}],"isSaveButtonVisible":[{"__symbolic":"method"}],"canCompleteNoFormTask":[{"__symbolic":"method"}],"getCompletedTaskTranslatedMessage":[{"__symbolic":"method"}],"isCandidateMember":[{"__symbolic":"method"}],"isTaskClaimable":[{"__symbolic":"method"}],"isTaskClaimedByCandidateMember":[{"__symbolic":"method"}],"reloadTask":[{"__symbolic":"method"}],"onClaimTask":[{"__symbolic":"method"}],"onClaimTaskError":[{"__symbolic":"method"}],"onUnclaimTask":[{"__symbolic":"method"}],"onUnclaimTaskError":[{"__symbolic":"method"}]}},"ClaimTaskDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":27,"character":1},"arguments":[{"selector":"[adf-claim-task]"}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":37,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":48,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"validateInputs":[{"__symbolic":"method"}],"isTaskValid":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":70,"character":5},"arguments":["click"]}]}],"claimTask":[{"__symbolic":"method"}]}},"UnclaimTaskDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":27,"character":1},"arguments":[{"selector":"[adf-unclaim-task]"}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":37,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":48,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"validateInputs":[{"__symbolic":"method"}],"isTaskValid":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":69,"character":5},"arguments":["click"]}]}],"unclaimTask":[{"__symbolic":"method"}]}},"TaskDetailsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":46,"character":1},"arguments":[{"selector":"adf-task-details","template":"<div *ngIf=\"!taskDetails\" data-automation-id=\"adf-tasks-details--empty\">\n    <ng-template *ngIf=\"noTaskDetailsTemplateComponent\" ngFor [ngForOf]=\"[data]\"\n                 [ngForTemplate]=\"noTaskDetailsTemplateComponent\">\n        {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.NONE' | translate }}\n    </ng-template>\n    <div *ngIf=\"!noTaskDetailsTemplateComponent\">\n        {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.NONE' | translate }}\n    </div>\n</div>\n<div *ngIf=\"taskDetails\" class=\"adf-task-details\">\n\n    <div *ngIf=\"showHeader\" class=\"adf-task-details-header\">\n        <h2 class=\"adf-activiti-task-details__header\">\n            <span>{{taskDetails.name || 'No name'}}</span>\n        </h2>\n    </div>\n\n    <div class=\"adf-task-details-core\"\n        fxLayout=\"column\"\n        fxLayoutGap=\"8px\"\n        fxLayout.lt-lg=\"column\">\n\n        <div class=\"adf-task-details-core-form\">\n            <div *ngIf=\"isAssigned()\">\n                <adf-task-form\n                          [taskId]=\"taskDetails.id\"\n                          [showFormTitle]=\"showFormTitle\"\n                          [showFormRefreshButton]=\"showFormRefreshButton\"\n                          [showCancelButton]=\"true\"\n                          [fieldValidators]=\"fieldValidators\"\n                          (formSaved)='onFormSaved($event)'\n                          (formCompleted)='onFormCompleted($event)'\n                          (formContentClicked)='onFormContentClick($event)'\n                          (formLoaded)='onFormLoaded($event)'\n                          (completed)=\"onComplete()\"\n                          (showAttachForm)=\"onShowAttachForm()\"\n                          (executeOutcome)='onFormExecuteOutcome($event)'\n                          (taskClaimed)=\"onClaimAction($event)\"\n                          (taskUnclaimed)=\"onUnclaimAction($event)\"\n                          (error)=\"onFormError($event)\" #activitiTaskForm>\n                </adf-task-form>\n                <adf-attach-form *ngIf=\"isShowAttachForm()\"\n                                 [taskId]=\"taskDetails.id\"\n                                 [formKey]=\"taskDetails.formKey\"\n                                 (cancelAttachForm)=\"onCancelAttachForm()\"\n                                 (success)=\"onCompleteAttachForm()\">\n                </adf-attach-form>\n            </div>\n            <div *ngIf=\"!isAssigned()\" id=\"claim-message-id\">\n                {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.CLAIM' | translate }}\n            </div>\n        </div>\n        <div class=\"adf-task-details-core-sidebar\">\n            <adf-info-drawer *ngIf=\"showHeaderContent\" title=\"ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TITLE\" id=\"adf-task-details-core-sidebar-drawer\" class=\"adf-task-details-core-sidebar-drawer\">\n                <adf-info-drawer-tab label=\"ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_DETAILS_TITLE\">\n                    <div class=\"adf-assignment-container\" *ngIf=\"showAssignee\">\n                        <adf-people-search\n                            (searchPeople)=\"searchUser($event)\"\n                            (success)=\"assignTaskToUser($event)\"\n                            (closeSearch)=\"onCloseSearch()\"\n                            [results]=\"peopleSearch\">\n                            <ng-container adf-people-search-title>{{ 'ADF_TASK_LIST.DETAILS.LABELS.ADD_ASSIGNEE' | translate }}\n                            </ng-container>\n                            <ng-container adf-people-search-action-label>{{ 'ADF_TASK_LIST.PEOPLE.ADD_ASSIGNEE' | translate }}\n                            </ng-container>\n                        </adf-people-search>\n                    </div>\n                    <adf-task-header\n                        [class]=\"getTaskHeaderViewClass()\"\n                        [taskDetails]=\"taskDetails\"\n                        [formName]=\"taskFormName\"\n                        (claim)=\"onClaimAction($event)\"\n                        (unclaim)=\"onUnclaimAction($event)\">\n                    </adf-task-header>\n                    <adf-people *ngIf=\"showInvolvePeople\" #people\n                                [people]=\"taskPeople\"\n                                [readOnly]=\"internalReadOnlyForm\"\n                                [taskId]=\"taskDetails.id\">\n                    </adf-people>\n                </adf-info-drawer-tab>\n\n                <adf-info-drawer-tab label=\"ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_ACTIVITY_TITLE\">\n                    <mat-card *ngIf=\"showComments\">\n                        <mat-card-content>\n                            <adf-comments #activitiComments\n                                          [readOnly]=\"isReadOnlyComment()\"\n                                          [taskId]=\"taskDetails.id\">\n                            </adf-comments>\n                        </mat-card-content>\n                    </mat-card>\n                </adf-info-drawer-tab>\n\n            </adf-info-drawer>\n\n            <div *ngIf=\"showHeaderContent\" class=\"adf-task-details-core-sidebar-checklist\">\n                <div *ngIf=\"showChecklist\">\n                    <adf-checklist #activitiChecklist\n                                   [readOnly]=\"internalReadOnlyForm\"\n                                   [taskId]=\"taskDetails.id\"\n                                   [assignee]=\"$any(taskDetails)?.assignee?.id\"\n                                   (checklistTaskCreated)=\"onChecklistTaskCreated($event)\"\n                                   (checklistTaskDeleted)=\"onChecklistTaskDeleted($event)\">\n                    </adf-checklist>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <ng-template #errorDialog>\n        <h3 matDialogTitle>{{'ADF_TASK_LIST.DETAILS.ERROR.TITLE'|translate}}</h3>\n        <mat-dialog-content>\n            <p>{{'ADF_TASK_LIST.DETAILS.ERROR.DESCRIPTION'|translate}}</p>\n        </mat-dialog-content>\n        <mat-dialog-actions>\n            <button mat-button type=\"button\" (click)=\"closeErrorDialog()\">{{'ADF_TASK_LIST.DETAILS.ERROR.CLOSE'|translate}}\n            </button>\n        </mat-dialog-actions>\n    </ng-template>\n\n</div>\n","styles":[":host{width:100%}.adf-error-dialog h3{margin:16px 0}.adf-activiti-task-details__header{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;align-self:flex-end;cursor:pointer;display:flex;font-size:24px;font-weight:300;line-height:normal;margin:8px 0 16px;overflow:hidden;user-select:none}.adf-activiti-task-details__action-button{text-transform:uppercase}.adf-assignment-container{padding:10px 20px;width:auto}adf-task-header.adf-assign-edit-view ::ng-deep adf-card-view ::ng-deep .adf-property[data-automation-id=header-assignee]{display:none}.adf-task-details-header{display:flex;justify-content:space-between}.adf-task-details-header-toggle{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;height:23px;margin-right:2px;position:relative;top:10px;user-select:none}.adf-task-details-toggle{position:relative}.adf-task-details-core{display:flex;justify-content:space-between}@media screen and (max-width:1279px){.adf-task-details-core-sidebar-drawer{margin-left:0}}.adf-task-details-core-sidebar-checklist{margin-top:30px;padding-left:20px;padding-right:20px}.adf-task-details-core-form{flex-grow:1}.adf-task-details-core-form ::ng-deep .adf-form-debug-container{display:flex;flex-direction:column;padding:20px 0}.adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle{margin-left:auto}.adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle+div{background-color:#000;clear:both;color:#fff;margin-top:30px;padding:20px}.adf-task-details-core-form ::ng-deep .mat-tab-label{flex-grow:1}"]}]}],"members":{"activitiComments":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":53,"character":5},"arguments":["activitiComments"]}]}],"activitiChecklist":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":56,"character":5},"arguments":["activitiChecklist"]}]}],"errorDialog":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":59,"character":5},"arguments":["errorDialog"]}]}],"taskFormComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":62,"character":5},"arguments":["activitiTaskForm"]}]}],"debugMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":5}}]}],"showNextTask":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":74,"character":5}}]}],"showHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":78,"character":5}}]}],"showHeaderContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":82,"character":5}}]}],"showInvolvePeople":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":5}}]}],"showComments":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":90,"character":5}}]}],"showChecklist":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":94,"character":5}}]}],"showFormTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":98,"character":5}}]}],"showFormCompleteButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":102,"character":5}}]}],"showFormSaveButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":106,"character":5}}]}],"readOnlyForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":112,"character":5}}]}],"showFormRefreshButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":116,"character":5}}]}],"fieldValidators":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":120,"character":5}}]}],"formSaved":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":124,"character":5}}]}],"formCompleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":128,"character":5}}]}],"formContentClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":132,"character":5}}]}],"formLoaded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":136,"character":5}}]}],"taskCreated":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":140,"character":5}}]}],"taskDeleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":144,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":148,"character":5}}]}],"executeOutcome":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":154,"character":5}}]}],"assignTask":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":158,"character":5}}]}],"claimedTask":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":162,"character":5}}]}],"unClaimedTask":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":166,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"PeopleProcessService","line":186,"character":46},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":187,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CardViewUpdateService","line":188,"character":47},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":189,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isShowAttachForm":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"isTaskActive":[{"__symbolic":"method"}],"updateTaskDetails":[{"__symbolic":"method"}],"clickTaskDetails":[{"__symbolic":"method"}],"loadDetails":[{"__symbolic":"method"}],"isAssigned":[{"__symbolic":"method"}],"loadNextTask":[{"__symbolic":"method"}],"onComplete":[{"__symbolic":"method"}],"onShowAttachForm":[{"__symbolic":"method"}],"onCancelAttachForm":[{"__symbolic":"method"}],"onCompleteAttachForm":[{"__symbolic":"method"}],"onFormContentClick":[{"__symbolic":"method"}],"onFormSaved":[{"__symbolic":"method"}],"onFormCompleted":[{"__symbolic":"method"}],"onFormLoaded":[{"__symbolic":"method"}],"onChecklistTaskCreated":[{"__symbolic":"method"}],"onChecklistTaskDeleted":[{"__symbolic":"method"}],"onFormError":[{"__symbolic":"method"}],"onFormExecuteOutcome":[{"__symbolic":"method"}],"closeErrorDialog":[{"__symbolic":"method"}],"onClaimAction":[{"__symbolic":"method"}],"onUnclaimAction":[{"__symbolic":"method"}],"searchUser":[{"__symbolic":"method"}],"onCloseSearch":[{"__symbolic":"method"}],"assignTaskToUser":[{"__symbolic":"method"}],"getTaskHeaderViewClass":[{"__symbolic":"method"}],"isReadOnlyComment":[{"__symbolic":"method"}]}},"TaskAuditDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":26,"character":1},"arguments":[{"selector":"button[adf-task-audit]","host":{"role":"button","(click)":"onClickAudit()","$quoted$":["role","(click)"]}}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5},"arguments":["task-id"]}]}],"fileName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"download":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"clicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ContentService","line":62,"character":40},{"__symbolic":"reference","name":"TaskListService"}]}],"ngOnChanges":[{"__symbolic":"method"}],"isValidType":[{"__symbolic":"method"}],"setDefaultFormatType":[{"__symbolic":"method"}],"fetchAuditInfo":[{"__symbolic":"method"}],"onClickAudit":[{"__symbolic":"method"}],"isJsonFormat":[{"__symbolic":"method"}],"isPdfFormat":[{"__symbolic":"method"}]}},"StartTaskComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"adf-start-task","providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"DateAdapter","line":37,"character":19},"useClass":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MomentDateAdapter","line":37,"character":42}},{"provide":{"__symbolic":"reference","module":"@angular/material/core","name":"MAT_DATE_FORMATS","line":38,"character":19},"useValue":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"MOMENT_DATE_FORMATS","line":38,"character":47}}],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":39,"character":19},"member":"None"},"template":"<mat-card fxFlex=\"70%\" class=\"adf-new-task-layout-card\">\n    <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\" class=\"adf-new-task-heading\">\n        <mat-card-title>{{'ADF_TASK_LIST.START_TASK.FORM.TITLE' | translate}}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form [formGroup]=\"taskForm\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n            <div class=\"adf-task-name\">\n                <mat-form-field fxFlex>\n                    <mat-label>{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.NAME' | translate}}</mat-label>\n                    <input\n                        matInput\n                        id=\"name_id\"\n                        formControlName=\"name\">\n                        <mat-error *ngIf=\"nameController.hasError('required') || nameController.hasError('whitespace')\">\n                            {{ 'ADF_TASK_LIST.START_TASK.FORM.ERROR.REQUIRED' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"nameController.hasError('maxlength')\">\n                            {{ 'ADF_TASK_LIST.START_TASK.FORM.ERROR.MAXIMUM_LENGTH' | translate : { characters : maxTaskNameLength } }}\n                        </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"adf-task-description\">\n                <mat-form-field fxFlex>\n                    <mat-label>{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.DESCRIPTION' | translate}}</mat-label>\n                    <textarea\n                        matInput\n                        rows=\"1\"\n                        id=\"description_id\"\n                        formControlName=\"description\">\n                    </textarea>\n                    <mat-error *ngIf=\"descriptionController.hasError('whitespace')\">\n                        {{ 'ADF_TASK_LIST.START_TASK.FORM.ERROR.MESSAGE' | translate }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field fxFlex>\n                    <input\n                        matInput\n                        (keyup)=\"onDateChanged($any($event).srcElement.value)\"\n                        (dateInput)=\"onDateChanged($any($event).value)\"\n                        [matDatepicker]=\"taskDatePicker\"\n                        placeholder=\"{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.DATE'|translate}}\"\n                        id=\"date_id\">\n                    <mat-datepicker-toggle\n                        matSuffix\n                        [for]=\"taskDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker\n                        #taskDatePicker\n                        [touchUi]=\"true\">\n                    </mat-datepicker>\n                    <div class=\"adf-error-text-container\">\n                        <div *ngIf=\"dateError\">\n                            <div class=\"adf-error-text\">{{'ADF_TASK_LIST.START_TASK.FORM.ERROR.DATE'|translate}}</div>\n                            <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                        </div>\n                    </div>\n                </mat-form-field>\n                <div fxFlex>\n                    <people-widget\n                        (peopleSelected)=\"getAssigneeId($event)\"\n                        [field]=\"field\"\n                        class=\"adf-people-widget-content\"></people-widget>\n                </div>\n            </div>\n            <div class=\"adf-task-form\">\n                <mat-form-field fxFlex=\"48%\" fxFlex.xs=\"100%\">\n                    <mat-label id=\"form_label\">{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.FORM'|translate}}</mat-label>\n                    <mat-select\n                        id=\"form_id\"\n                        class=\"form-control\"\n                        formControlName=\"formKey\">\n                    <mat-option>{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.NONE'|translate}}</mat-option>\n                    <mat-option *ngFor=\"let form of forms$ | async\" [value]=\"form.id\">{{ form.name }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <div class=\"adf-new-task-footer\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button\n                mat-button\n                class=\"adf-uppercase\"\n                (click)=\"onCancel()\"\n                id=\"button-cancel\">\n                {{ 'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL' | translate }}\n            </button>\n            <button\n                color=\"primary\"\n                mat-button\n                class=\"adf-uppercase\"\n                [disabled]=\"!isFormValid()\"\n                (click)=\"saveTask()\"\n                id=\"button-start\">\n                {{ 'ADF_TASK_LIST.START_TASK.FORM.ACTION.START' | translate }}\n            </button>\n        </div>\n    </mat-card-actions>\n</mat-card>\n","styles":[".adf-new-task-heading{border-bottom:1px solid var(--theme-fg-divider);padding-top:12px}.adf-new-task-heading .mat-card-title{font-size:18px;font-weight:700}.adf-new-task-form{width:100%}.adf-new-task-layout-card{margin:10px auto}.adf-new-task-footer{border-top:1px solid #eee;font-size:18px;padding:4px}.adf-mat-select{padding-top:0}adf-start-task .mat-button.adf-uppercase{text-transform:uppercase}adf-start-task people-widget{width:100%}adf-start-task people-widget .mat-form-field-label-wrapper{top:-14px!important}adf-start-task .adf-people-widget-content .mat-form-field{width:100%}adf-start-task .adf-people-widget-content .adf-label{line-height:0}adf-start-task .adf-people-widget-content .adf-error-text-container{margin-top:-10px}adf-start-task .adf-start-task-input-container .mat-form-field-wrapper{padding-top:8px}adf-start-task .adf-error-text-container{height:20px;margin-top:12px;position:absolute;width:100%}adf-start-task .adf-error-text-container>div{display:flex;flex-flow:row;justify-content:flex-start}adf-start-task .adf-error-text{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}adf-start-task .adf-error-icon{color:var(--theme-warn-color);font-size:17px}adf-start-task .adf-label{color:#bababa}adf-start-task .adf-invalid .mat-form-field-underline{background-color:#f44336!important}adf-start-task .adf-invalid .adf-file{border-color:var(--theme-warn-color)}adf-start-task .adf-invalid .mat-form-field-prefix{color:var(--theme-warn-color)}adf-start-task .adf-invalid .adf-input{border-color:var(--theme-warn-color)}adf-start-task .adf-invalid .adf-label{color:var(--theme-warn-color)}adf-start-task .adf-invalid .adf-label:after{background-color:var(--theme-warn-color)}"]}]}],"members":{"appId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":55,"character":5}}]}],"cancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":59,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":63,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","name":"DateAdapter","module":"@angular/material/core","arguments":[{"__symbolic":"reference","module":"moment","name":"Moment","line":84,"character":49}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UserPreferencesService","line":85,"character":48},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":86,"character":37},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":87,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"buildForm":[{"__symbolic":"method"}],"whitespaceValidator":[{"__symbolic":"method"}],"setTaskDetails":[{"__symbolic":"method"}],"isFormValid":[{"__symbolic":"method"}],"saveTask":[{"__symbolic":"method"}],"getAssigneeId":[{"__symbolic":"method"}],"attachForm":[{"__symbolic":"method"}],"assignTaskByUserId":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"loadFormsTask":[{"__symbolic":"method"}],"isUserNameEmpty":[{"__symbolic":"method"}],"isEmpty":[{"__symbolic":"method"}],"getDisplayUser":[{"__symbolic":"method"}],"onDateChanged":[{"__symbolic":"method"}],"validateMaxTaskNameLength":[{"__symbolic":"method"}]}},"TaskStandaloneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"adf-task-standalone","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":23,"character":19},"member":"None"},"template":"<mat-card class=\"adf-message-card\">\n    <mat-card-content>\n        <div class=\"adf-no-form-message-container\">\n            <div class=\"adf-no-form-message-list\">\n                <div *ngIf=\"!isCompleted; else completedMessage\" class=\"adf-no-form-message\">\n                    <span id=\"adf-no-form-message\">{{'ADF_TASK_LIST.STANDALONE_TASK.NO_FORM_MESSAGE' | translate}}</span>\n                </div>\n                <ng-template #completedMessage>\n                    <div id=\"adf-completed-form-message\" class=\"adf-no-form-message\">\n                        <p>{{'ADF_TASK_LIST.STANDALONE_TASK.COMPLETE_TASK_MESSAGE' | translate : {taskName : taskName} }}</p>\n                    </div>\n                    <div class=\"adf-no-form-submessage\">\n                        {{'ADF_TASK_LIST.STANDALONE_TASK.COMPLETE_TASK_SUB_MESSAGE' | translate}}\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </mat-card-content>\n\n    <mat-card-actions class=\"adf-no-form-mat-card-actions\">\n        <button mat-button *ngIf=\"hasAttachFormButton()\" id=\"adf-no-form-attach-form-button\" (click)=\"onShowAttachForm()\">{{ 'ADF_TASK_LIST.START_TASK.FORM.LABEL.ATTACHFORM' | translate }}</button>\n        <div>\n            <button mat-button *ngIf=\"hasCancelButton()\" id=\"adf-no-form-cancel-button\" (click)=\"onCancelButtonClick()\">{{ 'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL' | translate }}</button>\n            <button mat-button *ngIf=\"hasCompleteButton()\" id=\"adf-no-form-complete-button\" color=\"primary\" (click)=\"onCompleteButtonClick()\">{{ 'ADF_TASK_LIST.DETAILS.BUTTON.COMPLETE' | translate }}</button>\n        </div>\n    </mat-card-actions>\n</mat-card>\n","styles":[".adf-message-card{box-sizing:border-box;margin:16px auto;width:60%}.adf-message-card .mat-card-actions{border-top:1px solid var(--theme-status-bar-bg-color)}.adf-no-form-message-container{display:table;height:256px;width:100%}.adf-no-form-message-list{display:table-cell;text-align:center!important;vertical-align:middle}.adf-no-form-message{font-size:var(--theme-display-1-font-size);letter-spacing:-1.3px;line-height:36px;padding-bottom:10px}.adf-no-form-message,.adf-no-form-submessage{margin:auto;opacity:.54;width:-webkit-fit-content!important;width:-moz-fit-content!important;width:fit-content!important}.adf-no-form-submessage{font-size:var(--theme-subheading-2-font-size)}.adf-no-form-mat-card-actions.mat-card-actions{display:flex;justify-content:space-between}.adf-no-form-mat-card-actions.mat-card-actions .mat-button{border-radius:5px;text-transform:uppercase}.adf-no-form-mat-card-actions.mat-card-actions .mat-button-wrapper{font-size:var(--theme-button-font-size);font-weight:700;opacity:.54}"]}]}],"members":{"taskName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":5}}]}],"isCompleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5}}]}],"hasCompletePermission":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"hideCancelButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":5}}]}],"cancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":50,"character":5}}]}],"complete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":54,"character":5}}]}],"showAttachForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":58,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"onCancelButtonClick":[{"__symbolic":"method"}],"onCompleteButtonClick":[{"__symbolic":"method"}],"hasCompleteButton":[{"__symbolic":"method"}],"hasCancelButton":[{"__symbolic":"method"}],"hasAttachFormButton":[{"__symbolic":"method"}],"onShowAttachForm":[{"__symbolic":"method"}]}},"AttachFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"adf-attach-form","template":"<div class=\"adf-attach-form\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\"adf-attache-form-message-container\">\n                <mat-card-title class=\"mat-card-title\">\n                    <h4 class=\"adf-form-title\">{{ 'ADF_TASK_LIST.ATTACH_FORM.SELECT_FORM' | translate }}</h4>\n                </mat-card-title>\n                <div class=\"adf-attach-form-row\">\n                    <mat-form-field class=\"adf-grid-full-width\">\n                        <mat-select [formControl]=\"attachFormControl\" placeholder=\"{{ 'ADF_TASK_LIST.ATTACH_FORM.SELECT_OPTION' | translate }}\" id=\"form_id\" [(ngModel)]=\"selectedFormId\">\n                            <mat-option *ngFor=\"let form of forms\" [value]=\"form.id\">{{ form.name }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <adf-form *ngIf=\"this.attachFormControl.valid\"\n                    [formId]=\"selectedFormId\"\n                    [readOnly]=\"true\"\n                    [showCompleteButton]=\"false\"\n                    [showRefreshButton]=\"false\"\n                    [showValidationIcon]=\"false\">\n                </adf-form>\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"adf-attach-form-mat-card-actions\">\n            <div>\n                <button mat-button id=\"adf-attach-form-remove-button\" color=\"warn\" *ngIf=\"formKey\" (click)=\"onRemoveButtonClick()\">{{ 'ADF_TASK_LIST.ATTACH_FORM.REMOVE_FORM' | translate }}</button>\n            </div>\n            <div>\n                <button mat-button id=\"adf-attach-form-cancel-button\" (click)=\"onCancelButtonClick()\">{{ 'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL' | translate }}</button>\n                <button mat-button id=\"adf-attach-form-attach-button\" [disabled]=\"disableSubmit\" color=\"primary\" (click)=\"onAttachFormButtonClick()\">{{ 'ADF_TASK_LIST.START_TASK.FORM.LABEL.ATTACHFORM' | translate }}</button>\n            </div>\n        </mat-card-actions>\n    </mat-card>\n</div>\n","styles":[".adf-attach-form .mat-form-field{width:100%}.adf-attach-form-row{display:flex;justify-content:space-between;margin:20px 0}.adf-attach-form .adf-attach-form-mat-card-actions{justify-content:space-between;margin-top:30px;text-align:right}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskListService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":31,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":32,"character":37}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":5}}]}],"formKey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":5}}]}],"cancelAttachForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":43,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":47,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":51,"character":5}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"onCancelButtonClick":[{"__symbolic":"method"}],"onRemoveButtonClick":[{"__symbolic":"method"}],"onAttachFormButtonClick":[{"__symbolic":"method"}],"loadFormsTask":[{"__symbolic":"method"}],"onFormAttached":[{"__symbolic":"method"}],"attachForm":[{"__symbolic":"method"}]}},"TaskListService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":31,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":60,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":61,"character":36}]}],"getFilterForTaskById":[{"__symbolic":"method"}],"generateTaskRequestNodeFromFilter":[{"__symbolic":"method"}],"isTaskRelatedToFilter":[{"__symbolic":"method"}],"getTasks":[{"__symbolic":"method"}],"findTasksByState":[{"__symbolic":"method"}],"findAllTaskByState":[{"__symbolic":"method"}],"findAllTasksWithoutState":[{"__symbolic":"method"}],"getTaskDetails":[{"__symbolic":"method"}],"getTaskChecklist":[{"__symbolic":"method"}],"getFormList":[{"__symbolic":"method"}],"attachFormToATask":[{"__symbolic":"method"}],"addTask":[{"__symbolic":"method"}],"deleteTask":[{"__symbolic":"method"}],"deleteForm":[{"__symbolic":"method"}],"completeTask":[{"__symbolic":"method"}],"getTotalTasks":[{"__symbolic":"method"}],"createNewTask":[{"__symbolic":"method"}],"assignTask":[{"__symbolic":"method"}],"assignTaskByUserId":[{"__symbolic":"method"}],"claimTask":[{"__symbolic":"method"}],"unclaimTask":[{"__symbolic":"method"}],"updateTask":[{"__symbolic":"method"}],"fetchTaskAuditPdfById":[{"__symbolic":"method"}],"fetchTaskAuditJsonById":[{"__symbolic":"method"}],"callApiTasksFiltered":[{"__symbolic":"method"}],"callApiTaskDetails":[{"__symbolic":"method"}],"callApiAddTask":[{"__symbolic":"method"}],"callApiDeleteTask":[{"__symbolic":"method"}],"callApiDeleteForm":[{"__symbolic":"method"}],"callApiTaskChecklist":[{"__symbolic":"method"}],"callApiCreateTask":[{"__symbolic":"method"}],"callApiAssignTask":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ProcessUploadService":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UploadService","line":25,"character":42},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":22,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":33,"character":38},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":33,"character":76},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DiscoveryApiService","line":33,"character":115}]}],"getUploadPromise":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"TaskUploadService":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UploadService","line":25,"character":39},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":22,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":33,"character":38},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":33,"character":76},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DiscoveryApiService","line":33,"character":115}]}],"getUploadPromise":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"TaskFilterService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":35,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":36,"character":36}]}],"createDefaultFilters":[{"__symbolic":"method"}],"getTaskListFilters":[{"__symbolic":"method"}],"getTaskFilterById":[{"__symbolic":"method"}],"getTaskFilterByName":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"callApiTaskFilters":[{"__symbolic":"method"}],"getMyTasksFilterInstance":[{"__symbolic":"method"}],"getInvolvedTasksFilterInstance":[{"__symbolic":"method"}],"getQueuedTasksFilterInstance":[{"__symbolic":"method"}],"getCompletedTasksFilterInstance":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"AppDefinitionRepresentationModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"FilterParamsModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"FilterRepresentationModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"hasFilter":[{"__symbolic":"method"}]}},"TaskQueryRequestRepresentationModel":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/js-api","name":"TaskQueryRepresentation","line":85,"character":57},"members":{}},"Form":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"number"},{"__symbolic":"reference","name":"string"}]}]}},"StartTaskModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"TaskDetailsEvent":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaskDetailsModel"}]}],"preventDefault":[{"__symbolic":"method"}]}},"TaskDetailsModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"getFullName":[{"__symbolic":"method"}],"isCompleted":[{"__symbolic":"method"}]}},"TaskListModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"UserEventModel":{"__symbolic":"interface"},"UserGroupModel":{"__symbolic":"interface"},"TaskListModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":43,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":45,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":46,"character":8},{"__symbolic":"reference","name":"MaterialModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":48,"character":8},{"__symbolic":"reference","name":"FormModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":50,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":51,"character":8},{"__symbolic":"reference","name":"PeopleModule"},{"__symbolic":"reference","name":"ProcessCommentsModule"},{"__symbolic":"reference","name":"ContentWidgetModule"}],"declarations":[{"__symbolic":"reference","name":"NoTaskDetailsTemplateDirective"},{"__symbolic":"reference","name":"TaskFiltersComponent"},{"__symbolic":"reference","name":"TaskListComponent"},{"__symbolic":"reference","name":"TaskDetailsComponent"},{"__symbolic":"reference","name":"TaskFormComponent"},{"__symbolic":"reference","name":"TaskAuditDirective"},{"__symbolic":"reference","name":"ChecklistComponent"},{"__symbolic":"reference","name":"TaskHeaderComponent"},{"__symbolic":"reference","name":"StartTaskComponent"},{"__symbolic":"reference","name":"TaskStandaloneComponent"},{"__symbolic":"reference","name":"AttachFormComponent"},{"__symbolic":"reference","name":"ClaimTaskDirective"},{"__symbolic":"reference","name":"UnclaimTaskDirective"}],"exports":[{"__symbolic":"reference","name":"NoTaskDetailsTemplateDirective"},{"__symbolic":"reference","name":"TaskFiltersComponent"},{"__symbolic":"reference","name":"TaskListComponent"},{"__symbolic":"reference","name":"TaskDetailsComponent"},{"__symbolic":"reference","name":"TaskFormComponent"},{"__symbolic":"reference","name":"TaskAuditDirective"},{"__symbolic":"reference","name":"ChecklistComponent"},{"__symbolic":"reference","name":"TaskHeaderComponent"},{"__symbolic":"reference","name":"StartTaskComponent"},{"__symbolic":"reference","name":"TaskStandaloneComponent"},{"__symbolic":"reference","name":"AttachFormComponent"},{"__symbolic":"reference","name":"ClaimTaskDirective"},{"__symbolic":"reference","name":"UnclaimTaskDirective"}]}]}],"members":{}},"AppsListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-apps","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":28,"character":19},"member":"None"},"host":{"class":"adf-apps"},"template":"<div class=\"menu-container\" *ngIf=\"!isEmpty()\">\n    <mat-list *ngIf=\"isList()\" class=\"adf-app-list\">\n        <mat-list-item class=\"adf-app-list-item\" (click)=\"selectApp(app)\" (keyup.enter)=\"selectApp(app)\" *ngFor=\"let app of appList\" tabindex=\"0\" role=\"button\" title=\"{{app.name}}\">\n            <mat-icon matListIcon>touch_app</mat-icon>\n            <span matLine>{{getAppName(app) | async}}</span>\n        </mat-list-item>\n    </mat-list>\n    <div fxLayout=\"row wrap\" *ngIf=\"isGrid()\" class=\"adf-app-listgrid\">\n        <div *ngFor=\"let app of appList\"\n            class=\"adf-app-listgrid-item\"\n            fxFlex=\"33.33333%\" fxFlex.lt-md=\"50%\" fxFlex.lt-sm=\"100%\">\n                <mat-card tabindex=\"0\"\n                    fxLayout=\"column\"\n                    role=\"button\"\n                    class=\"adf-app-listgrid-item-card\"\n                    title=\"{{getAppName(app) | async}}\"\n                    [ngClass]=\"[getTheme(app)]\"\n                    (click)=\"selectApp(app)\"\n                    (keyup.enter)=\"selectApp(app)\">\n                        <div class=\"adf-app-listgrid-item-card-logo\">\n                            <mat-icon class=\"adf-app-listgrid-item-card-logo-icon\">{{getBackgroundIcon(app)}}</mat-icon>\n                        </div>\n                        <div mat-card-title class=\"adf-app-listgrid-item-card-title\">\n                            <h1>{{getAppName(app) | async}}</h1>\n                        </div>\n                        <mat-card-subtitle class=\"adf-app-listgrid-item-card-subtitle\" fxFlex=\"1 0 auto\">\n                            <div class=\"adf-line-clamp\">{{app.description}}</div>\n                        </mat-card-subtitle>\n\n                        <mat-card-actions class=\"adf-app-listgrid-item-card-actions\">\n                            <mat-icon class=\"adf-app-listgrid-item-card-actions-icon\" *ngIf=\"isSelected(app.id)\">done</mat-icon>\n                        </mat-card-actions>\n                </mat-card>\n        </div>\n    </div>\n</div>\n\n<ng-container *ngIf=\"isLoading(); else empty\">\n    <div class=\"adf-app-list-spinner\">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-container>\n\n<ng-template #empty>\n    <div class=\"adf-app-list-empty\" *ngIf=\"isEmpty()\">\n        <ng-content select=\"adf-custom-empty-content-template\" *ngIf=\"hasEmptyCustomContentTemplate; else defaultEmptyTemplate\" class=\"adf-custom-empty-template\"></ng-content>\n\n        <ng-template #defaultEmptyTemplate>\n            <adf-empty-content\n                icon=\"apps\"\n                [title]=\"'ADF_TASK_LIST.APPS.TITLE' | translate\"\n                [subtitle]=\"'ADF_TASK_LIST.APPS.SUBTITLE' | translate\">\n            </adf-empty-content>\n        </ng-template>\n    </div>\n</ng-template>\n","styles":[".adf-apps{width:100%}.adf-app-list-item{cursor:pointer}.adf-app-list-empty,.adf-app-list-spinner{align-items:center;display:flex;flex-direction:column;height:85vh;justify-content:center}.adf-app-list-empty .mat-spinner,.adf-app-list-spinner .mat-spinner{margin:0 auto}.adf-app-listgrid{padding:8px}.adf-app-listgrid-item{box-sizing:border-box;outline:none;padding:8px}.adf-app-listgrid-item-card{min-height:200px;outline:none;padding:0!important;transition:transform .28s cubic-bezier(.4,0,.2,1),box-shadow .28s cubic-bezier(.4,0,.2,1)}.adf-app-listgrid-item-card.theme-1{background-color:#269abc}.adf-app-listgrid-item-card.theme-2{background-color:#7da9b0}.adf-app-listgrid-item-card.theme-3{background-color:#7689ab}.adf-app-listgrid-item-card.theme-4{background-color:#c74e3e}.adf-app-listgrid-item-card.theme-5{background-color:#fab96c}.adf-app-listgrid-item-card.theme-6{background-color:#759d4c}.adf-app-listgrid-item-card.theme-7{background-color:#b1b489}.adf-app-listgrid-item-card.theme-8{background-color:#a17299}.adf-app-listgrid-item-card.theme-9{background-color:#696c67}.adf-app-listgrid-item-card.theme-10{background-color:#cabb33}.adf-app-listgrid-item-card:hover{box-shadow:0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.2);cursor:pointer;transform:scale(1.015)}.adf-app-listgrid-item-card-logo{padding:16px;position:absolute;right:20px;top:20px;z-index:9}.adf-app-listgrid-item-card-logo-icon{font-size:70px;height:1em!important;width:1em!important}.theme-1 .adf-app-listgrid-item-card-logo-icon{color:#168aac}.theme-2 .adf-app-listgrid-item-card-logo-icon{color:#6d99a0}.theme-3 .adf-app-listgrid-item-card-logo-icon{color:#66799b}.theme-4 .adf-app-listgrid-item-card-logo-icon{color:#b73e2e}.theme-5 .adf-app-listgrid-item-card-logo-icon{color:#eaa95c}.theme-6 .adf-app-listgrid-item-card-logo-icon{color:#658d3c}.theme-7 .adf-app-listgrid-item-card-logo-icon{color:#a1a479}.theme-8 .adf-app-listgrid-item-card-logo-icon{color:#916289}.theme-9 .adf-app-listgrid-item-card-logo-icon{color:#595c57}.theme-10 .adf-app-listgrid-item-card-logo-icon{color:#baab23}.adf-app-listgrid-item-card-title{margin-bottom:0!important;padding:16px;z-index:9999}.adf-app-listgrid-item-card-title h1{color:#fff;font-size:24px;line-height:normal;margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:80%}.adf-app-listgrid-item-card-subtitle{color:#fff;padding:16px;z-index:9999}.adf-app-listgrid-item-card-subtitle .adf-line-clamp{line-height:1.25;overflow:hidden;padding:0!important;position:relative;text-overflow:ellipsis}@supports (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{-webkit-box-orient:vertical;-webkit-line-clamp:3;display:-webkit-box;height:3.7125em}}@supports not (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{white-space:nowrap;width:100%}}.adf-app-listgrid-item-card-actions{border-top:1px solid rgba(0,0,0,.1);box-sizing:border-box;min-height:48px;padding:0 16px 16px!important}.adf-app-listgrid-item-card-actions-icon{color:#e9f1f3}.adf-app-listgrid-item-card-actions.mat-card-actions{margin-left:0;margin-right:0}.adf-app-listgrid-item-card-actions.mat-card-actions:last-child{margin-bottom:0!important}"]}]}],"members":{"emptyCustomContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":41,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CustomEmptyContentTemplateDirective","line":41,"character":18}]}]}],"layoutType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"filtersAppId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"appClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":55,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":59,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppsProcessService","line":75,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":76,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"isDefaultApp":[{"__symbolic":"method"}],"getAppName":[{"__symbolic":"method"}],"selectApp":[{"__symbolic":"method"}],"isSelected":[{"__symbolic":"method"}],"filterApps":[{"__symbolic":"method"}],"isValidType":[{"__symbolic":"method"}],"setDefaultLayoutType":[{"__symbolic":"method"}],"isList":[{"__symbolic":"method"}],"isGrid":[{"__symbolic":"method"}],"isEmpty":[{"__symbolic":"method"}],"isLoading":[{"__symbolic":"method"}],"getTheme":[{"__symbolic":"method"}],"getBackgroundIcon":[{"__symbolic":"method"}]},"statics":{"LAYOUT_LIST":"LIST","LAYOUT_GRID":"GRID","DEFAULT_TASKS_APP":"tasks","DEFAULT_TASKS_APP_NAME":"ADF_TASK_LIST.APPS.TASK_APP_NAME","DEFAULT_TASKS_APP_THEME":"theme-2","DEFAULT_TASKS_APP_ICON":"glyphicon-asterisk","DEFAULT_TASKS_APP_MATERIAL_ICON":"favorite_border"}},"SelectAppsDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"adf-select-apps-dialog","template":"<header mat-dialog-title id=\"adf-select-app-dialog-title\">{{'APP.DIALOG.TITLE' | translate}}</header>\n<section mat-dialog-content>\n\n    <mat-select id=\"adf-select-app-dialog-dropdown\" placeholder=\"{{'APP.DIALOG.LIST' | translate}}\" [(value)]=\"selectedProcess\" >\n        <mat-option *ngFor=\"let currentProcessApp of processApps\" [value]=\"currentProcessApp\">\n            {{ currentProcessApp.name }}\n        </mat-option>\n    </mat-select>\n\n</section>\n<footer mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button mat-button (click)=\"onStart()\">{{'APP.DIALOG.START' | translate}}</button>\n</footer>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":33,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":33,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppsProcessService","line":31,"character":44},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"SelectAppsDialogComponent"}]},{"__symbolic":"reference","name":"any"}]}],"onStart":[{"__symbolic":"method"}]}},"AppsListModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":26,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":28,"character":8},{"__symbolic":"reference","name":"MaterialModule"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":30,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":31,"character":8}],"declarations":[{"__symbolic":"reference","name":"AppsListComponent"},{"__symbolic":"reference","name":"SelectAppsDialogComponent"}],"exports":[{"__symbolic":"reference","name":"AppsListComponent"},{"__symbolic":"reference","name":"SelectAppsDialogComponent"}]}]}],"members":{}},"TaskAttachmentListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":31,"character":1},"arguments":[{"selector":"adf-task-attachment-list","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":35,"character":19},"member":"None"},"template":"<adf-datatable [rows]=\"attachments\"\n               [actions]=\"true\"\n               [loading]=\"isLoading\"\n               (rowDblClick)=\"openContent($event)\"\n               (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n               (executeRowAction)=\"onExecuteRowAction($event)\">\n            <adf-no-content-template>\n                <ng-template>\n                    <ng-content *ngIf=\"hasCustomTemplate; else defaulEmptyList\" class=\"adf-custom-empty-template\"></ng-content>\n                    <ng-template #defaulEmptyList>\n                        <adf-empty-list>\n                            <div adf-empty-list-header class=\"adf-empty-list-header\">\n                                {{'ADF_TASK_LIST.ATTACHMENT.EMPTY.HEADER' | translate}}\n                            </div>\n                        </adf-empty-list>\n                    </ng-template>\n                </ng-template>\n            </adf-no-content-template>\n\n            <data-columns>\n                <data-column key=\"icon\" type=\"image\" srTitle=\"ADF_TASK_LIST.PROPERTIES.THUMBNAIL\" [sortable]=\"false\"></data-column>\n                <data-column key=\"name\" type=\"text\" title=\"ADF_TASK_LIST.PROPERTIES.NAME\" class=\"adf-full-width adf-ellipsis-cell\" [sortable]=\"true\"></data-column>\n                <data-column key=\"created\" type=\"date\" format=\"shortDate\" title=\"ADF_TASK_LIST.PROPERTIES.CREATED\"></data-column>\n            </data-columns>\n            <adf-loading-content-template>\n                <ng-template>\n                <!--Add your custom loading template here-->\n                    <mat-progress-spinner class=\"adf-attachment-list-loading-margin\" [color]=\"'primary'\" [mode]=\"'indeterminate'\">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n</adf-datatable>\n","styles":["adf-datatable .adf-data-cell{cursor:pointer!important}.adf-attachment-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.adf-empty-list-header{font-size:24px;height:32px;letter-spacing:-1px;line-height:1.33;opacity:.26}.adf-empty-list-drag_drop{font-size:56px;letter-spacing:-2px;line-height:1;margin-top:40px;min-height:56px;opacity:.54;white-space:pre-line;word-break:break-all}@media screen and (max-width:599px){.adf-empty-list-drag_drop{font-size:40px}}.adf-empty-list__any-files-here-to-add{font-size:16px;letter-spacing:-.4px;line-height:1.5;margin-top:17px;min-height:24px;opacity:.54;white-space:pre-line;word-break:break-all}.adf-empty-list__empty_doc_lib{height:161px;margin-top:17px;max-width:100%;object-fit:contain;width:565px}@media screen and (max-width:599px){.adf-empty-list__empty_doc_lib{width:250px}}"]}]}],"members":{"emptyTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":39,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"EmptyListComponent","line":39,"character":18}]}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":5}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"attachmentClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":54,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":60,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":64,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ProcessContentService","line":72,"character":48},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ContentService","line":73,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ThumbnailService","line":74,"character":42},{"__symbolic":"reference","module":"@angular/core","name":"NgZone","line":75,"character":32}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"hasCustomEmptyTemplate":[{"__symbolic":"method"}],"reload":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"loadAttachmentsByTaskId":[{"__symbolic":"method"}],"deleteAttachmentById":[{"__symbolic":"method"}],"isEmpty":[{"__symbolic":"method"}],"onShowRowActionsMenu":[{"__symbolic":"method"}],"onExecuteRowAction":[{"__symbolic":"method"}],"openContent":[{"__symbolic":"method"}],"emitDocumentContent":[{"__symbolic":"method"}],"downloadContent":[{"__symbolic":"method"}],"isDisabled":[{"__symbolic":"method"}]}},"ProcessAttachmentListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":31,"character":1},"arguments":[{"selector":"adf-process-attachment-list","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":35,"character":19},"member":"None"},"template":"<adf-datatable  [rows]=\"attachments\"\n                [actions]=\"true\"\n                [loading]=\"isLoading\"\n                (rowDblClick)=\"openContent($event)\"\n                (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n                (executeRowAction)=\"onExecuteRowAction($event)\">\n\n                <adf-no-content-template>\n                    <ng-template>\n                        <ng-content *ngIf=\"hasCustomTemplate; else defaulEmptyList\" class=\"adf-custom-empty-template\"></ng-content>\n                        <ng-template #defaulEmptyList>\n                            <adf-empty-list>\n                                <div adf-empty-list-header class=\"adf-empty-list-header\">\n                                    {{'ADF_PROCESS_LIST.PROCESS-ATTACHMENT.EMPTY.HEADER' | translate}}\n                                </div>\n                            </adf-empty-list>\n                        </ng-template>\n                    </ng-template>\n                </adf-no-content-template>\n\n    <data-columns>\n        <data-column key=\"icon\" type=\"image\" srTitle=\"ADF_PROCESS_LIST.PROPERTIES.THUMBNAIL\" [sortable]=\"false\"></data-column>\n        <data-column key=\"name\" type=\"text\" title=\"{{'ADF_PROCESS_LIST.PROPERTIES.NAME' | translate}}\" class=\"adf-full-width adf-ellipsis-cell\" [sortable]=\"true\"></data-column>\n        <data-column key=\"created\" type=\"date\" format=\"shortDate\" title=\"{{'ADF_PROCESS_LIST.PROPERTIES.CREATED' | translate}}\"></data-column>\n    </data-columns>\n\n    <adf-loading-content-template>\n        <ng-template>\n            <!--Add your custom loading template here-->\n            <mat-progress-spinner class=\"adf-attachment-list-loading-margin\" [color]=\"'primary'\" [mode]=\"'indeterminate'\">\n            </mat-progress-spinner>\n        </ng-template>\n    </adf-loading-content-template>\n\n</adf-datatable>\n","styles":[".adf-data-cell{cursor:pointer!important}.adf-attachment-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.adf-empty-list-header{font-size:24px;height:32px;letter-spacing:-1px;line-height:1.33;opacity:.26!important}.adf-empty-list-drag_drop{font-size:56px;letter-spacing:-2px;line-height:1;margin-top:40px!important;min-height:56px;opacity:.54;white-space:pre-line;word-break:break-all}.adf-empty-list__any-files-here-to-add{font-size:16px;letter-spacing:-.4px;line-height:1.5;margin-top:17px;min-height:24px;opacity:.54;white-space:pre-line;word-break:break-all}.adf-empty-list__empty_doc_lib{height:161px;margin-top:17px;object-fit:contain;width:565px}@media screen and (max-width:599px){.adf-empty-list__empty_doc_lib{width:250px}}"]}]}],"members":{"emptyTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":39,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"EmptyListComponent","line":39,"character":18}]}]}],"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":5}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"attachmentClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":55,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":61,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":67,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ProcessContentService","line":75,"character":48},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ContentService","line":76,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ThumbnailService","line":77,"character":42},{"__symbolic":"reference","module":"@angular/core","name":"NgZone","line":78,"character":32}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"reload":[{"__symbolic":"method"}],"hasCustomEmptyTemplate":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"loadAttachmentsByProcessInstanceId":[{"__symbolic":"method"}],"deleteAttachmentById":[{"__symbolic":"method"}],"isEmpty":[{"__symbolic":"method"}],"onShowRowActionsMenu":[{"__symbolic":"method"}],"onExecuteRowAction":[{"__symbolic":"method"}],"openContent":[{"__symbolic":"method"}],"emitDocumentContent":[{"__symbolic":"method"}],"downloadContent":[{"__symbolic":"method"}],"isDisabled":[{"__symbolic":"method"}]}},"CreateProcessAttachmentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"adf-create-process-attachment","template":"<button\n    id=\"add_new_process_content_button\"\n    color=\"primary\"\n    mat-button\n    mat-raised-button\n    mat-icon-button\n    class=\"adf-create-attachment\"\n    [adf-upload]=\"true\"\n    [mode]=\"['click']\"\n    [multiple]=\"true\"\n    (upload-files)=\"onFileUpload($event)\">\n    <mat-icon>add</mat-icon>\n</button>\n","styles":[".adf-create-attachment{display:inline-block;line-height:0;vertical-align:middle}"]}]}],"members":{"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ProcessContentService","line":43,"character":48}]}],"ngOnChanges":[{"__symbolic":"method"}],"onFileUpload":[{"__symbolic":"method"}]}},"AttachmentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"adf-create-task-attachment","template":"<button\n    color=\"primary\"\n    mat-button\n    mat-raised-button\n    mat-icon-button\n    class=\"adf-create-attachment\"\n    [adf-upload]=\"true\"\n    [mode]=\"['click']\"\n    [multiple]=\"true\"\n    (upload-files)=\"onFileUpload($event)\">\n    <mat-icon>add</mat-icon>\n</button>\n","styles":[".adf-create-attachment{display:inline-block;line-height:0;vertical-align:middle}"]}]}],"members":{"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ProcessContentService","line":43,"character":48}]}],"ngOnChanges":[{"__symbolic":"method"}],"onFileUpload":[{"__symbolic":"method"}]}},"AttachmentModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":26,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":28,"character":8},{"__symbolic":"reference","name":"MaterialModule"}],"declarations":[{"__symbolic":"reference","name":"TaskAttachmentListComponent"},{"__symbolic":"reference","name":"ProcessAttachmentListComponent"},{"__symbolic":"reference","name":"CreateProcessAttachmentComponent"},{"__symbolic":"reference","name":"CreateProcessAttachmentComponent"},{"__symbolic":"reference","name":"AttachmentComponent"}],"exports":[{"__symbolic":"reference","name":"TaskAttachmentListComponent"},{"__symbolic":"reference","name":"ProcessAttachmentListComponent"},{"__symbolic":"reference","name":"CreateProcessAttachmentComponent"},{"__symbolic":"reference","name":"CreateProcessAttachmentComponent"},{"__symbolic":"reference","name":"AttachmentComponent"}]}]}],"members":{}},"ProcessCommentsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"adf-process-instance-comments","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":26,"character":19},"member":"None"},"host":{"class":"adf-process-instance-comments"},"template":"<div class=\"adf-comments-container\">\n    <div id=\"comment-header\" class=\"adf-comments-header\">\n        {{'ADF_PROCESS_LIST.DETAILS.COMMENTS.HEADER' | translate: { count: comments?.length} }}\n    </div>\n    <div class=\"adf-comments-input-container\" *ngIf=\"!isReadOnly()\">\n        <mat-form-field class=\"adf-full-width\">\n            <input matInput id=\"comment-input\" placeholder=\"{{'ADF_PROCESS_LIST.DETAILS.COMMENTS.ADD' | translate}}\" [(ngModel)]=\"message\" (keyup.enter)=\"add()\" (keyup.esc)=\"clear()\">\n        </mat-form-field>\n    </div>\n\n    <div *ngIf=\"comments.length > 0\">\n        <adf-comment-list [comments]=\"comments\">\n        </adf-comment-list>\n    </div>\n</div>\n","styles":[".adf-process-instance-comments{width:100%}.adf-activiti-label{font-weight:bolder;vertical-align:top}.adf-activiti-label+.adf-icon{position:relative;top:-2px}.adf-list-wrap{-o-hyphens:auto;-webkit-hyphens:auto;hyphens:auto;word-break:break-all;word-wrap:break-word}.adf-hide-long-names{overflow:auto}.adf-comments-container{height:100%;overflow:auto;width:100%}.adf-comments-header{border-bottom:1px solid var(--theme-fg-divider);font-size:14px;font-weight:600;padding:10px 20px}.adf-comments-input-container{border-bottom:1px solid var(--theme-fg-divider);padding:8px 15px 0;width:calc(100% - 30px)}.adf-full-width{width:100%}adf-comment-list{float:left;height:calc(100% - 101px);overflow:auto;width:100%}"]}]}],"members":{"processInstanceId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":5}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":5}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CommentProcessService","line":54,"character":47}]}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getProcessInstanceComments":[{"__symbolic":"method"}],"resetComments":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"clear":[{"__symbolic":"method"}],"isReadOnly":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ProcessCommentsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":25,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":28,"character":8},{"__symbolic":"reference","name":"MaterialModule"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":30,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":31,"character":8}],"declarations":[{"__symbolic":"reference","name":"ProcessCommentsComponent"}],"exports":[{"__symbolic":"reference","name":"ProcessCommentsComponent"}]}]}],"members":{}},"PeopleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-people","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":28,"character":19},"member":"None"},"template":"<mat-card class=\"adf-assignment-top-container\">\n    <div mat-card-content class=\"adf-assignment-top-container-content\">\n        <div class=\"assignment-header\">\n                <div *ngIf=\"hasPeople()\" class=\"adf-assignment-count\" id=\"people-title\">\n                    {{ 'ADF_TASK_LIST.DETAILS.LABELS.PEOPLE' | translate }} {{ ' (' + people.length + ')' }}\n                </div>\n                <div *ngIf=\"!hasPeople()\" class=\"adf-assignment-count\" id=\"no-people-label\">\n                    {{ 'ADF_TASK_LIST.DETAILS.PEOPLE.NONE' | translate }}\n                </div>\n                <div *ngIf=\"isEditMode()\" class=\"adf-add-people\" (click)=\"onAddAssignment()\">\n                    <mat-icon class=\"adf-add-person-icon\">person_add</mat-icon>\n                </div>\n            </div>\n            <div class=\"adf-assignment-container\" *ngIf=\"showAssignment\">\n                <adf-people-search\n                    #peopleSearch\n                    (searchPeople)=\"searchUser($event)\"\n                    (success)=\"involveUser($event)\"\n                    (closeSearch)=\"onCloseSearch()\"\n                    [results]=\"peopleSearch$\">\n                    <ng-container adf-people-search-title>{{ 'ADF_TASK_LIST.DETAILS.LABELS.ADD_PEOPLE' | translate }}</ng-container>\n                    <ng-container adf-people-search-action-label>{{ 'ADF_TASK_LIST.PEOPLE.ADD_USER' | translate }}</ng-container>\n                </adf-people-search>\n            </div>\n            <div class=\"adf-assignment-list-container\" id=\"assignment-people-list\" *ngIf=\"hasPeople()\">\n                <adf-people-list\n                [users]=\"people\"\n                [actions]=\"isEditMode()\"\n                (clickAction)=\"onClickAction($event)\">\n                    <data-columns>\n                        <data-column key=\"firstName\">\n                            <ng-template let-entry=\"$implicit\">\n                                <div *ngIf=\"!entry.row.obj.pictureId\" class=\"adf-people-search-people-pic\">\n                                    {{getInitialUserName(entry.row.obj.firstName, entry.row.obj.lastName)}}</div>\n                                <div>\n                                    <img [alt]=\"getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ')\" *ngIf=\"entry.row.obj.pictureId\" class=\"adf-people-img\"\n                                        [src]=\"peopleProcessService.getUserImage(entry.row.obj)\"/>\n                                </div>\n                            </ng-template>\n                        </data-column>\n                        <data-column key=\"email\" class=\"adf-full-width\">\n                            <ng-template let-entry=\"$implicit\">\n                                <div class=\"adf-people-user-info\">\n                                    <div [attr.data-automation-id]=\"'adf-people-full-name-'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, '-')\" class=\"adf-people-full-name\">{{ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ') }}</div>\n                                    <div [attr.data-automation-id]=\"'adf-people-email-'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, '-')\"  class=\"adf-people-email\">{{ entry.row.obj.email }}</div>\n                                </div>\n                            </ng-template>\n                        </data-column>\n                    </data-columns>\n                </adf-people-list>\n            </div>\n    </div>\n</mat-card>\n","styles":[".adf-assignment-header{border-bottom:1px solid var(--theme-fg-divider);padding:6px 20px}.adf-assignment-count{float:left;font-weight:bolder;margin:13px;opacity:.54;padding:10px 0}.adf-add-people{cursor:pointer;float:right;height:26px;margin:13px;opacity:.54;padding:8px}.adf-add-people:hover{color:var(--theme-primary-color)}.adf-assignment-top-container.mat-card{align-items:stretch;border-top:1px solid var(--theme-fg-divider);display:flex;flex-flow:row wrap;margin:0;padding:0}.adf-assignment-top-container-content{align-items:stretch;display:flex;flex:1 0 auto;flex-flow:column;max-width:100%}.adf-assignment-container{border-bottom:1px solid var(--theme-fg-divider);max-width:100%;padding:10px 20px}.adf-assignment-list-container{padding:0}adf-people-list adf-datatable thead{display:none}adf-people-list adf-datatable .adf-datatable-cell{margin:13px}adf-people-list adf-datatable .adf-datatable .adf-datatable-cell .adf-cell-container{align-items:left;flex-direction:column}adf-people-list adf-datatable .adf-people-email{opacity:.54}.adf-people-img{border-radius:90%;height:40px;vertical-align:middle;width:40px}.adf-people-search-people-pic{background:var(--theme-primary-color);border-radius:100px;color:#fff;font-size:18px;font-weight:bolder;padding:10px 5px;text-align:center;text-transform:uppercase;vertical-align:text-bottom;width:30px}.adf-people-user-info{flex-direction:column;text-align:center}"]}]}],"members":{"people":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"peopleSearch":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":44,"character":5},"arguments":["peopleSearch"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":52,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"PeopleProcessService","line":52,"character":77}]}],"involveUserAndCloseSearch":[{"__symbolic":"method"}],"involveUserWithoutCloseSearch":[{"__symbolic":"method"}],"searchUser":[{"__symbolic":"method"}],"involveUser":[{"__symbolic":"method"}],"removeInvolvedUser":[{"__symbolic":"method"}],"getDisplayUser":[{"__symbolic":"method"}],"getInitialUserName":[{"__symbolic":"method"}],"onAddAssignment":[{"__symbolic":"method"}],"onClickAction":[{"__symbolic":"method"}],"hasPeople":[{"__symbolic":"method"}],"isEditMode":[{"__symbolic":"method"}],"onCloseSearch":[{"__symbolic":"method"}]}},"PeopleListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"adf-people-list","template":"<adf-datatable\n    #dataTable\n    class=\"adf-task-people-list\"\n    [rows]=\"users\"\n    [actions]=\"hasActions()\"\n    [showHeader]=\"showHeader\"\n    (rowClick)=\"selectUser($event)\"\n    (rowDblClick)=\"selectUser($event)\"\n    (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n    (executeRowAction)=\"onExecuteRowAction($event)\">\n</adf-datatable>\n","styles":[".adf-task-people-list .adf-datatable-list{width:100%}"]}]}],"members":{"columnList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":29,"character":5},"arguments":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DataColumnListComponent","line":29,"character":18}]}]}],"peopleDataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":32,"character":5},"arguments":["dataTable",{"static":true}]}]}],"users":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":5}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":5}}]}],"clickRow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":5}}]}],"clickAction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":48,"character":5}}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"selectUser":[{"__symbolic":"method"}],"hasActions":[{"__symbolic":"method"}],"onShowRowActionsMenu":[{"__symbolic":"method"}],"onExecuteRowAction":[{"__symbolic":"method"}]}},"PeopleSearchComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"adf-people-search","host":{"class":"adf-people-search","$quoted$":["class"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":30,"character":19},"member":"None"},"template":"<div class=\"adf-search-text-header\">\n    <ng-content select=\"[adf-people-search-title], [people-search-title]\"></ng-content>\n</div>\n\n<adf-people-search-field [performSearch]=\"performSearch\" (rowClick)=\"onRowClick($event)\"></adf-people-search-field>\n\n<div class=\"search-list-action-container\">\n    <button mat-button type=\"button\" id=\"close-people-search\" (click)=\"closeSearchList()\">\n        {{'ADF_TASK_LIST.PEOPLE.DIALOG_CLOSE' | translate }}\n    </button>\n    <button mat-button type=\"button\" id=\"add-people\" (click)=\"involveUserAndClose()\">\n        <ng-content select=\"[adf-people-search-action-label], [people-search-action-label]\"></ng-content>\n    </button>\n</div>\n","styles":[".adf-people-search{width:100%}.adf-people-search .adf-activiti-label{font-weight:bolder}.adf-people-search .adf-fix-element-user-list{padding:0}.adf-people-search .adf-search-text-header{font-weight:700;opacity:.54}.adf-people-search .adf-search-list-action-container{border-top:1px solid #eee;margin-top:5px;padding:5px 0;text-align:right}.adf-people-search .adf-search-list-action-container>button{font-weight:bolder;opacity:.54}.adf-people-search .adf-search-list-action-container>button:hover{color:var(--theme-primary-color)}"]}]}],"members":{"results":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":5}}]}],"searchPeople":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":5}}]}],"success":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":5}}]}],"closeSearch":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":48,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"performSearchCallback":[{"__symbolic":"method"}],"onRowClick":[{"__symbolic":"method"}],"closeSearchList":[{"__symbolic":"method"}],"involveUserAndClose":[{"__symbolic":"method"}],"involveUser":[{"__symbolic":"method"}]}},"PeopleSearchFieldComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"adf-people-search-field","host":{"class":"adf-people-search-field","$quoted$":["class"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":30,"character":19},"member":"None"},"template":"<mat-form-field class=\"adf-search-text-container\">\n    <input\n        matInput\n        placeholder=\"{{ searchPlaceholder }}\"\n        type=\"text\"\n        id=\"userSearchText\"\n        [value]=\"\"\n        [formControl]=\"searchUser\"\n        data-automation-id=\"adf-people-search-input\">\n</mat-form-field>\n<ng-container *ngIf=\"users$ | async; let users\">\n    <div class=\"adf-search-list-container\" id=\"search-people-list\" *ngIf=\"users.length > 0\">\n        <adf-people-list [users]=\"users\" (clickRow)=\"onRowClick($event)\">\n            <data-columns>\n                <data-column key=\"firstName\">\n                    <ng-template let-entry=\"$implicit\">\n                            <div *ngIf=\"!entry.row.obj.pictureId\" class=\"adf-people-pic\">\n                                {{getInitialUserName(entry.row.obj.firstName, entry.row.obj.lastName)}}</div>\n                            <div>\n                                <img [alt]=\"getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ')\" *ngIf=\"entry.row.obj.pictureId\" class=\"adf-people-img\"\n                                    [src]=\"peopleProcessService.getUserImage(entry.row.obj)\"/>\n                            </div>\n                    </ng-template>\n                </data-column>\n                <data-column key=\"email\" class=\"adf-full-width\">\n                    <ng-template let-entry=\"$implicit\">\n                        <div [attr.data-automation-id]=\"'adf-people-full-name-'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, '-')\" class=\"adf-people-full-name\">{{ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ') }}</div>\n                    </ng-template>\n                </data-column>\n            </data-columns>\n        </adf-people-list>\n    </div>\n</ng-container>\n","styles":[".adf-people-search-field,.adf-people-search-field .adf-search-text-container{width:100%}.adf-people-search-field .adf-search-text-container input{line-height:normal}.adf-people-search-field .adf-search-list-container{max-height:152px;overflow-y:auto;width:100%}.adf-people-search-field adf-people-list ::ng-deep adf-datatable ::ng-deep thead{display:none}.adf-people-search-field .adf-people-pic{background:var(--theme-primary-color);border-radius:90%;color:#fff;font-size:18px;font-weight:bolder;padding:10px 5px;text-align:center;text-transform:uppercase;vertical-align:text-bottom;width:30px}.adf-people-search-field .adf-people-img{border-radius:90%;height:40px;vertical-align:middle;width:40px}"]}]}],"members":{"performSearch":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":5}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":5}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"PeopleProcessService","line":49,"character":45},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":50,"character":44}]}],"reset":[{"__symbolic":"method"}],"onRowClick":[{"__symbolic":"method"}],"getDisplayUser":[{"__symbolic":"method"}],"getInitialUserName":[{"__symbolic":"method"}]}},"PeopleSelectorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"adf-people-selector","host":{"class":"adf-people-selector","$quoted$":["class"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":32,"character":19},"member":"None"},"template":"<adf-people-search-field\n    #peopleSearchField\n    class=\"adf-people-selector-field\"\n    [performSearch]=\"performSearch\"\n    [placeholder]=\"placeholder\"\n    (rowClick)=\"userSelected($event)\">\n</adf-people-search-field>\n<button\n    *ngIf=\"selectedUser\"\n    mat-icon-button\n    class=\"adf-people-selector-deselect\"\n    data-automation-id=\"adf-people-selector-deselect\"\n    (click)=\"userDeselected()\">\n        <mat-icon>cancel</mat-icon>\n</button>\n","styles":[".adf-people-selector{display:flex;flex-flow:row;justify-content:space-between}.adf-people-selector-field{flex:1 1 auto}.adf-people-selector-deselect{flex:0 0 auto;right:5px;top:5px}"]}]}],"members":{"peopleId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5}}]}],"peopleIdChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":5}}]}],"searchFieldComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":44,"character":5},"arguments":["peopleSearchField",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"PeopleProcessService","line":52,"character":38},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":53,"character":28},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":54,"character":36}]}],"searchUser":[{"__symbolic":"method"}],"onSearchUserError":[{"__symbolic":"method"}],"userSelected":[{"__symbolic":"method"}],"userDeselected":[{"__symbolic":"method"}],"updateUserSelection":[{"__symbolic":"method"}]}},"PerformSearchCallback":{"__symbolic":"interface"},"PeopleSearchActionLabelDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":23,"character":1},"arguments":[{"selector":"adf-people-search-action-label, people-search-action-label"}]}],"members":{}},"PeopleSearchTitleDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":23,"character":1},"arguments":[{"selector":"[adf-people-search-title]"}]}],"members":{}},"PeopleModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":32,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":34,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":35,"character":8},{"__symbolic":"reference","name":"MaterialModule"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":37,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":38,"character":8}],"declarations":[{"__symbolic":"reference","name":"PeopleComponent"},{"__symbolic":"reference","name":"PeopleSearchComponent"},{"__symbolic":"reference","name":"PeopleSearchFieldComponent"},{"__symbolic":"reference","name":"PeopleSelectorComponent"},{"__symbolic":"reference","name":"PeopleSearchTitleDirective"},{"__symbolic":"reference","name":"PeopleSearchActionLabelDirective"},{"__symbolic":"reference","name":"PeopleListComponent"}],"exports":[{"__symbolic":"reference","name":"PeopleComponent"},{"__symbolic":"reference","name":"PeopleSearchComponent"},{"__symbolic":"reference","name":"PeopleSearchFieldComponent"},{"__symbolic":"reference","name":"PeopleSelectorComponent"},{"__symbolic":"reference","name":"PeopleSearchTitleDirective"},{"__symbolic":"reference","name":"PeopleSearchActionLabelDirective"},{"__symbolic":"reference","name":"PeopleListComponent"}]}]}],"members":{}},"AttachFileWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"UploadWidgetComponent","line":60,"character":47},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":43,"character":1},"arguments":[{"selector":"attach-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":58,"character":19},"member":"None"},"template":"<div class=\"adf-attach-widget {{field.className}}\"\n    [class.adf-invalid]=\"!field.isValid\"\n    [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate}}\n        <span *ngIf=\"isRequired()\">*</span>\n    </label>\n    <div class=\"adf-attach-widget-container\">\n        <div id=\"adf-attach-widget-simple-upload\" *ngIf=\"isSimpleUploadButton() && isUploadButtonVisible()\">\n            <a mat-raised-button color=\"primary\">\n                {{ 'FORM.FIELD.UPLOAD' | translate }}\n                <mat-icon>file_upload</mat-icon>\n                <input #uploadFiles\n                        [multiple]=\"multipleOption\"\n                        type=\"file\"\n                        [id]=\"field.id\"\n                        (change)=\"onAttachFileChanged($event)\" />\n            </a>\n        </div>\n        <div class=\"adf-attach-widget__menu-upload\" *ngIf=\"isUploadButtonVisible() && isMultipleSourceUpload()\">\n            <button mat-raised-button color=\"primary\" [matMenuTriggerFor]=\"menu\" [id]=\"field.id\">\n                    {{ 'FORM.FIELD.UPLOAD' | translate }}\n                    <mat-icon>attach_file</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"adf-attach-widget__menu-content\">\n                <button mat-menu-item (click)=\"uploadFile.click()\"\n                        id=\"attach-local-file\"\n                        *ngIf=\"isAllFileSourceSelected()\">\n                    {{ 'FORM.FIELD.LOCALSTORAGE' | translate }}\n                    <mat-icon>file_upload</mat-icon>\n                    <input #uploadFile\n                            class=\"adf-attach-widget__input-type\"\n                            [multiple]=\"multipleOption\"\n                            type=\"file\"\n                            [id]=\"field.id\"\n                            (change)=\"onAttachFileChanged($event)\" />\n                </button>\n                <button mat-menu-item\n                        *ngIf=\"isDefinedSourceFolder()\"\n                        id=\"attach-{{field.params?.fileSource?.name}}\"\n                        (click)=\"openSelectDialogFromFileSource()\">\n                        {{field.params?.fileSource?.name}}\n                        <mat-icon>\n                            <img alt=\"alfresco\" class=\"adf-attach-widget__image-logo\" src=\"../assets/images/alfresco-flower.svg\">\n                        </mat-icon>\n                </button>\n                <div *ngIf=\"!isDefinedSourceFolder()\">\n                    <button mat-menu-item *ngFor=\"let repo of repositoryList\"\n                            id=\"attach-{{repo?.name}}\"\n                           (click)=\"openSelectDialog(repo)\">\n                            {{repo.name}}\n                            <mat-icon>\n                                <img alt=\"alfresco\" class=\"adf-attach-widget__image-logo\" src=\"../assets/images/alfresco-flower.svg\">\n                            </mat-icon>\n                    </button>\n                </div>\n            </mat-menu>\n        </div>\n    </div>\n</div>\n\n<div id=\"adf-attach-widget-readonly-list\">\n    <mat-list *ngIf=\"hasFile\">\n        <mat-list-item class=\"adf-attach-files-row\" *ngFor=\"let file of field.value\">\n            <img mat-list-icon class=\"adf-attach-widget__icon\"\n                 [id]=\"'file-'+file.id+'-icon'\"\n                 [src]=\"file.content ? getIcon(file.content.mimeType) : getIcon(file.mimeType)\"\n                 [alt]=\"mimeTypeIcon\"\n                 (click)=\"onAttachFileClicked(file)\"\n                 (keyup.enter)=\"onAttachFileClicked(file)\"\n                 role=\"button\"\n                 tabindex=\"0\"/>\n            <span matLine id=\"{{'file-'+file.id}}\" (click)=\"onAttachFileClicked(file)\" (keyup.enter)=\"onAttachFileClicked(file)\"\n                  role=\"button\" tabindex=\"0\" class=\"adf-file\">{{file.name}}</span>\n            <button id=\"{{'file-'+file.id+'-option-menu'}}\" mat-icon-button [matMenuTriggerFor]=\"fileActionMenu\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #fileActionMenu=\"matMenu\" xPosition=\"before\">\n                <button id=\"{{'file-'+file.id+'-show-file'}}\"\n                    [disabled]=\"file.isExternal || !file.contentAvailable || !file.mimeType\"\n                    mat-menu-item (click)=\"onAttachFileClicked(file)\">\n                    <mat-icon>visibility</mat-icon>\n                    <span>{{ 'FORM.FIELD.VIEW_FILE' | translate }}</span>\n                </button>\n                <button id=\"{{'file-'+file.id+'-download-file'}}\"\n                    [disabled]=\"file.isExternal || !file.mimeType\"\n                    mat-menu-item (click)=\"downloadContent(file)\">\n                    <mat-icon>file_download</mat-icon>\n                    <span>{{ 'FORM.FIELD.DOWNLOAD_FILE' | translate }}</span>\n                </button>\n                <button *ngIf=\"!field.readOnly\" id=\"{{'file-'+file.id+'-remove-file'}}\"\n                        mat-menu-item [id]=\"'file-'+file.id+'-remove'\"\n                        (click)=\"onRemoveAttachFile(file);\" (keyup.enter)=\"onRemoveAttachFile(file);\">\n                    <mat-icon class=\"mat-24\">highlight_off</mat-icon>\n                    <span>{{ 'FORM.FIELD.REMOVE_FILE' | translate }}</span>\n                </button>\n            </mat-menu>\n        </mat-list-item>\n    </mat-list>\n</div>\n\n<error-widget [error]=\"field.validationSummary\"></error-widget>\n<error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n","styles":[".adf-attach-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-widget__menu-upload{align-items:center;display:flex}.adf-attach-widget__input-type{height:.1px;opacity:0;overflow:hidden;position:absolute;width:.1px;z-index:-1}.adf-attach-widget__image-logo{padding-left:5px}.adf-attach-widget-repo-button{padding-left:10px}.adf-attach-widget-repo-button .mat-button-wrapper{display:inline}.adf-attach-widget-repo-button .mat-mini-fab.mat-accent{background-color:inherit}.adf-attach-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-widget__icon{cursor:pointer;float:left;padding:6px}.adf-attach-widget__reset{margin-top:-2px}.adf-attach-files-row .mat-line{margin-bottom:0}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":67,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LogService","line":68,"character":32},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ThumbnailService","line":69,"character":35},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ProcessContentService","line":70,"character":46},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ActivitiContentService","line":71,"character":48},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ContentService","line":72,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-content-services","name":"ContentNodeDialogService","line":73,"character":39},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AppConfigService","line":74,"character":42},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"DownloadService","line":75,"character":41},{"__symbolic":"reference","name":"AttachFileWidgetDialogService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isFileSourceConfigured":[{"__symbolic":"method"}],"isMultipleSourceUpload":[{"__symbolic":"method"}],"isAllFileSourceSelected":[{"__symbolic":"method"}],"isOnlyLocalSourceSelected":[{"__symbolic":"method"}],"isSimpleUploadButton":[{"__symbolic":"method"}],"isUploadButtonVisible":[{"__symbolic":"method"}],"isDefinedSourceFolder":[{"__symbolic":"method"}],"isTemporaryFile":[{"__symbolic":"method"}],"getNodeFromTempFile":[{"__symbolic":"method"}],"openSelectDialogFromFileSource":[{"__symbolic":"method"}],"onAttachFileChanged":[{"__symbolic":"method"}],"onRemoveAttachFile":[{"__symbolic":"method"}],"onAttachFileClicked":[{"__symbolic":"method"}],"downloadContent":[{"__symbolic":"method"}],"openSelectDialog":[{"__symbolic":"method"}],"isExternalHost":[{"__symbolic":"method"}],"findSource":[{"__symbolic":"method"}],"uploadFileFromExternalCS":[{"__symbolic":"method"}],"uploadFileFromCS":[{"__symbolic":"method"}],"getDomainHost":[{"__symbolic":"method"}]}},"AttachFolderWidgetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetComponent","line":45,"character":49},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"attach-folder-widget","host":{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)","$quoted$":["(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":43,"character":19},"member":"None"},"template":"<div class=\"adf-attach-folder-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\"\n     [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate}}<span *ngIf=\"isRequired()\">*</span></label>\n    <div class=\"adf-attach-folder-widget-container\">\n        <div *ngIf=\"hasFolder\" class=\"adf-attach-folder-result\">\n            <mat-icon>folder</mat-icon>\n            <div class=\"adf-attach-folder-files-row\">\n                <span matLine id=\"{{'folder-'+field?.id}}\"\n                        role=\"button\" tabindex=\"0\" class=\"adf-folder\">{{selectedFolderName}}</span>\n                <button *ngIf=\"!field.readOnly\" mat-icon-button [id]=\"'folder-'+field?.id+'-remove'\"\n                        (click)=\"removeFolder();\">\n                    <mat-icon class=\"mat-24\">highlight_off</mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div *ngIf=\"!hasFolder && !field.readOnly\">\n            <button mat-raised-button\n                color=\"primary\"\n                (click)=\"openSelectDialogFromFileSource()\"\n                [id]=\"'folder-'+field?.id+'-button'\">\n                    {{ 'FORM.FIELD.UPLOAD' | translate }}\n                <mat-icon>cloud_upload</mat-icon>\n            </button>\n        </div>\n    </div>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n","styles":[".adf-attach-folder-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-folder-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-folder-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-folder-files-row{padding-left:8px}.adf-attach-folder-files-row .mat-line{margin-bottom:0}.adf-attach-folder-result{align-items:center;display:flex}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-content-services","name":"ContentNodeDialogService","line":51,"character":39},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":52,"character":36},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NodesApiService","line":53,"character":37}]}],"ngOnInit":[{"__symbolic":"method"}],"isDefinedSourceFolder":[{"__symbolic":"method"}],"openSelectDialogFromFileSource":[{"__symbolic":"method"}],"removeFolder":[{"__symbolic":"method"}]}},"AttachFileWidgetDialogComponentData":{"__symbolic":"interface"},"AttachFileWidgetDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"adf-attach-file-widget-dialog","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":28,"character":19},"member":"None"},"providers":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AuthenticationService","line":30,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-content-services","name":"DocumentListService","line":31,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"SitesService","line":32,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"SearchService","line":33,"character":8},{"provide":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":34,"character":19},"useClass":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"ExternalAlfrescoApiService","line":34,"character":49}}],"template":"<header\n    mat-dialog-title\n    data-automation-id=\"content-node-selector-title\">\n    <span *ngIf=\"isLoggedIn(); else loginTitle\">{{title}}</span>\n    <ng-template #loginTitle>{{data.title}}</ng-template>\n</header>\n\n<mat-dialog-content class=\"adf-login-dialog-content\">\n    <adf-login-dialog-panel id=\"attach-file-login-panel\" #adfLoginPanel *ngIf=\"!isLoggedIn()\">\n    </adf-login-dialog-panel>\n    <adf-content-node-selector-panel *ngIf=\"isLoggedIn()\"\n                                     id=\"attach-file-content-node\"\n                                     [currentFolderId]=\"data?.currentFolderId\"\n                                     [isSelectionValid]=\"data?.isSelectionValid\"\n                                     [showFilesInResult]=\"data?.showFilesInResult\"\n                                     (select)=\"onSelect($event)\"\n                                     (siteChange)=\"onSiteChange($event)\">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"attach-file-dialog-actions-cancel\">{{ 'ATTACH-FILE.ACTIONS.CANCEL' | translate }}\n    </button>\n\n    <button *ngIf=\"!isLoggedIn()\"\n        mat-button\n        (click)=\"performLogin()\"\n        data-automation-id=\"attach-file-dialog-actions-login\">{{ 'ATTACH-FILE.ACTIONS.LOGIN' | translate }}\n    </button>\n\n    <button *ngIf=\"isLoggedIn()\"\n        mat-button\n        [disabled]=\"!hasNodeSelected()\"\n        class=\"adf-choose-action\"\n        (click)=\"onClick()\"\n        data-automation-id=\"attach-file-dialog-actions-choose\">{{ buttonActionName | translate }}\n    </button>\n\n</mat-dialog-actions>\n","styles":[".adf-attach-file-widget-dialog .mat-dialog-actions{background-color:var(--theme-background-color);color:var(--theme-foreground-text-color);display:flex;justify-content:flex-end}.adf-attach-file-widget-dialog .mat-dialog-actions button{font-weight:400;text-transform:uppercase}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action[disabled]{color:var(--theme-secondary-text-color)}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action:enabled{color:var(--theme-primary-color)}"]}]}],"members":{"loginPanel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":38,"character":5},"arguments":["adfLoginPanel"]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":47,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":47,"character":24}]}],null,null,null],"parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":46,"character":37},{"__symbolic":"reference","name":"AttachFileWidgetDialogComponentData"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AlfrescoApiService","line":48,"character":44},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"AuthenticationService","line":49,"character":47},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"AttachFileWidgetDialogComponent"}]}]}],"updateExternalHost":[{"__symbolic":"method"}],"registerAndClose":[{"__symbolic":"method"}],"isLoggedIn":[{"__symbolic":"method"}],"performLogin":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"onSiteChange":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method"}],"updateTitle":[{"__symbolic":"method"}],"getTitleTranslation":[{"__symbolic":"method"}],"hasNodeSelected":[{"__symbolic":"method"}]}},"AttachFileWidgetDialogService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":26,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":37,"character":32},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TranslationService","line":38,"character":37}]}],"openLogin":[{"__symbolic":"method"}],"openLoginDialog":[{"__symbolic":"method"}],"showExternalHostLoginDialog":[{"__symbolic":"method"}],"downloadURL":[{"__symbolic":"method"}],"constructPayload":[{"__symbolic":"method"}],"addService":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"getLoginTitleTranslation":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ContentWidgetModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":26,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":28,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-content-services","name":"ContentNodeSelectorModule","line":29,"character":8},{"__symbolic":"reference","name":"MaterialModule"}],"declarations":[{"__symbolic":"reference","name":"AttachFileWidgetComponent"},{"__symbolic":"reference","name":"AttachFolderWidgetComponent"},{"__symbolic":"reference","name":"AttachFileWidgetDialogComponent"}],"exports":[{"__symbolic":"reference","name":"AttachFileWidgetComponent"},{"__symbolic":"reference","name":"AttachFolderWidgetComponent"},{"__symbolic":"reference","name":"AttachFileWidgetDialogComponent"}]}]}],"members":{}},"FormComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormBaseComponent","line":30,"character":35},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"adf-form","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":28,"character":19},"member":"None"},"template":"<div *ngIf=\"!hasForm()\">\n    <ng-content select=\"[empty-form]\">\n    </ng-content>\n</div>\n\n<div *ngIf=\"hasForm()\" class=\"adf-form-container\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>\n                <h4>\n                    <div *ngIf=\"showValidationIcon\" class=\"adf-form-validation-button\">\n                        <i id=\"adf-valid-form-icon\" class=\"material-icons\"\n                            *ngIf=\"form.isValid; else no_valid_form\">check_circle</i>\n                        <ng-template #no_valid_form>\n                            <i id=\"adf-invalid-form-icon\" class=\"material-icons adf-invalid-color\">error</i>\n                        </ng-template>\n                    </div>\n                    <div *ngIf=\"showRefreshButton\" class=\"adf-form-reload-button\">\n                        <button mat-icon-button (click)=\"onRefreshClicked()\">\n                            <mat-icon>refresh</mat-icon>\n                        </button>\n                    </div>\n                    <span *ngIf=\"isTitleEnabled()\" class=\"adf-form-title\" [matTooltip]=\"form.taskName\">\n                        {{form.taskName}}\n                        <ng-container *ngIf=\"!form.taskName\">\n                            {{'FORM.FORM_RENDERER.NAMELESS_TASK' | translate}}\n                        </ng-container>\n                    </span>\n                </h4>\n            </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <adf-form-renderer [formDefinition]=\"form\">\n            </adf-form-renderer>\n        </mat-card-content>\n        <mat-card-actions *ngIf=\"form.hasOutcomes()\" class=\"adf-form-mat-card-actions\">\n            <ng-content select=\"adf-form-custom-outcomes\"></ng-content>\n            <button [id]=\"'adf-form-'+ outcome.name  | formatSpace\" *ngFor=\"let outcome of form.outcomes\"\n                [color]=\"getColorForOutcome(outcome.name)\" mat-button [disabled]=\"!isOutcomeButtonEnabled(outcome)\"\n                [class.adf-form-hide-button]=\"!isOutcomeButtonVisible(outcome, form.readOnly)\"\n                (click)=\"onOutcomeClicked(outcome)\">\n                {{outcome.name | translate | uppercase }}\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n"}]}],"members":{"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":5}}]}],"taskId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":5}}]}],"nodeId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"formId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"formName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"saveMetadata":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":5}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}],"enableFixedSpacedForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":6}}]}],"formSaved":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":65,"character":5}}]}],"formCompleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":69,"character":5}}]}],"formContentClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":73,"character":5}}]}],"formLoaded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":77,"character":5}}]}],"formDataRefreshed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":81,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":88,"character":39},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetVisibilityService","line":89,"character":45},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"EcmModelService","line":90,"character":43},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NodeService","line":91,"character":39}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"onRefreshClicked":[{"__symbolic":"method"}],"loadForm":[{"__symbolic":"method"}],"findProcessVariablesByTaskId":[{"__symbolic":"method"}],"isAProcessTask":[{"__symbolic":"method"}],"getFormByTaskId":[{"__symbolic":"method"}],"getFormDefinitionByFormId":[{"__symbolic":"method"}],"getFormDefinitionByFormName":[{"__symbolic":"method"}],"saveTaskForm":[{"__symbolic":"method"}],"completeTaskForm":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"parseForm":[{"__symbolic":"method"}],"getFormDefinitionOutcomes":[{"__symbolic":"method"}],"checkVisibility":[{"__symbolic":"method"}],"refreshFormData":[{"__symbolic":"method"}],"loadFormForEcmNode":[{"__symbolic":"method"}],"loadFormFromActiviti":[{"__symbolic":"method"}],"loadFormFromFormId":[{"__symbolic":"method"}],"storeFormAsMetadata":[{"__symbolic":"method"}],"onFormLoaded":[{"__symbolic":"method"}],"onFormDataRefreshed":[{"__symbolic":"method"}],"onTaskSaved":[{"__symbolic":"method"}],"onTaskSavedError":[{"__symbolic":"method"}],"onTaskCompleted":[{"__symbolic":"method"}],"onTaskCompletedError":[{"__symbolic":"method"}],"onExecuteOutcome":[{"__symbolic":"method"}]}},"StartFormComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":33,"character":1},"arguments":[{"selector":"adf-start-form","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":37,"character":19},"member":"None"},"template":"<div class=\"adf-start-form-container\" *ngIf=\"hasForm()\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>\n                <h2 *ngIf=\"isTitleEnabled()\" class=\"mdl-card__title-text\">{{form.taskName}}</h2>\n            </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <div *ngIf=\"form.hasTabs()\">\n                <tabs-widget [tabs]=\"form.tabs\" (formTabChanged)=\"checkVisibility($event);\"></tabs-widget>\n            </div>\n\n            <div *ngIf=\"!form.hasTabs() && form.hasFields()\">\n                <div *ngFor=\"let field of form.fields\">\n                    <adf-form-field [field]=\"field.field\"></adf-form-field>\n                </div>\n            </div>\n        </mat-card-content>\n        <mat-card-content class=\"adf-start-form-actions\" *ngIf=\"showOutcomeButtons && form.hasOutcomes()\"\n                          #outcomesContainer>\n            <ng-content select=\"[adf-form-custom-button], [form-custom-button]\"></ng-content>\n\n            <button *ngFor=\"let outcome of form.outcomes\"\n                    mat-button\n                    [attr.data-automation-id]=\"'adf-form-' + outcome.name  | lowercase\"\n                    [disabled]=\"!isOutcomeButtonEnabled(outcome)\"\n                    [class.mdl-button--colored]=\"!outcome.isSystem\"\n                    [class.adf-form-hide-button]=\"!isOutcomeButtonVisible(outcome, form.readOnly)\"\n                    (click)=\"onOutcomeClicked(outcome)\">\n                {{ outcome.name | uppercase | translate | uppercase }}\n            </button>\n        </mat-card-content>\n        <mat-card-actions *ngIf=\"showRefreshButton\">\n            <button mat-button\n                    (click)=\"onRefreshClicked()\">\n                <mat-icon>refresh</mat-icon>\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n","styles":[".adf-form-container{max-height:100%!important;max-width:100%!important}.adf-form-container .mat-card{overflow:hidden;padding:16px 24px}.adf-form-container .mat-card-header-text{margin:0!important}.adf-form-container .mat-tab-body-content{overflow:hidden}.adf-form-container .mat-tab-label{color:var(--theme-text-color);font-size:var(--theme-subheading-2-font-size);letter-spacing:-.4px;line-height:var(--theme-headline-line-height);text-align:left;text-transform:uppercase}.adf-form-container .mat-ink-bar{height:4px}.adf-form-container .mat-form-field-wrapper{margin:0 12px 0 0}.adf-form-title{font-size:var(--theme-title-font-size)}.adf-form-debug-container{padding:10px}.adf-form-debug-container .adf-debug-toggle-text{cursor:pointer;padding-left:15px}.adf-form-debug-container .adf-debug-toggle-text:hover{font-weight:700}.adf-form-reload-button{position:absolute;right:12px;top:30px}.adf-form-validation-button{color:var(--theme-accent-color);position:absolute;right:50px;top:39px}.adf-form-validation-button .adf-invalid-color{color:var(--theme-warn-color)}.adf-form-hide-button{display:none!important}.adf-task-title{text-align:center}.adf-label{font-size:var(--theme-caption-font-size);height:16px;line-height:var(--theme-headline-line-height);text-align:left;white-space:nowrap;width:32px}.adf-form-mat-card-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-form-mat-card-actions .mat-button{border-radius:5px;height:36px}.adf-form-mat-card-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}form-field{width:100%}form-field .mat-input-element{font-size:var(--theme-body-2-font-size);line-height:normal;padding-top:8px}[dir=rtl] .adf-form-validation-button{left:50px;right:unset}"]}]}],"members":{"processDefinitionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":5}}]}],"processId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":5}}]}],"showOutcomeButtons":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":5}}]}],"showRefreshButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":5}}]}],"readOnlyForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":5}}]}],"outcomeClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":62,"character":5}}]}],"formContentClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":66,"character":5}}]}],"outcomesContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":69,"character":5},"arguments":["outcomesContainer"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormService","line":72,"character":29},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"WidgetVisibilityService","line":72,"character":61}]}],"ngOnChanges":[{"__symbolic":"method"}],"loadStartForm":[{"__symbolic":"method"}],"getStartFormDefinition":[{"__symbolic":"method"}],"parseRefreshVisibilityValidateForm":[{"__symbolic":"method"}],"isOutcomeButtonVisible":[{"__symbolic":"method"}],"saveTaskForm":[{"__symbolic":"method"}],"onRefreshClicked":[{"__symbolic":"method"}],"completeTaskForm":[{"__symbolic":"method"}]}},"ProcessFormRenderingService":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormRenderingService","line":25,"character":49},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":22,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ɵprov":{}}},"FormCustomOutcomesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"adf-form-custom-outcomes","template":"<ng-content></ng-content>"}]}],"members":{}},"FormModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":24,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":26,"character":8},{"__symbolic":"reference","name":"MaterialModule"}],"declarations":[{"__symbolic":"reference","name":"FormComponent"},{"__symbolic":"reference","name":"StartFormComponent"},{"__symbolic":"reference","name":"FormCustomOutcomesComponent"}],"exports":[{"__symbolic":"reference","name":"FormComponent"},{"__symbolic":"reference","name":"StartFormComponent"},{"__symbolic":"reference","name":"FormCustomOutcomesComponent"}]}]}],"members":{}},"ProcessNamePipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":22,"character":1},"arguments":[{"name":"processName"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"LocalizedDatePipe","line":27,"character":43}]}],"transform":[{"__symbolic":"method"}]},"statics":{"DATE_TIME_IDENTIFIER_REG_EXP":{"__symbolic":"new","expression":{"__symbolic":"reference","name":"RegExp"},"arguments":["%{datetime}","i"]},"PROCESS_DEFINITION_IDENTIFIER_REG_EXP":{"__symbolic":"new","expression":{"__symbolic":"reference","name":"RegExp"},"arguments":["%{processdefinition}","i"]}}},"ProcessServicesPipeModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":21,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ProcessNamePipe"}],"exports":[{"__symbolic":"reference","name":"ProcessNamePipe"}]}]}],"members":{}},"MaterialModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":40,"character":1},"arguments":[{"providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/form-field","name":"MAT_FORM_FIELD_DEFAULT_OPTIONS","line":42,"character":19},"useValue":{"floatLabel":"never"}}],"imports":[{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":45,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":45,"character":31},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":45,"character":48},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":45,"character":63},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":46,"character":8},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":46,"character":27},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":46,"character":48},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":46,"character":67},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":46,"character":82},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":47,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatOptionModule","line":47,"character":23},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":47,"character":40},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":47,"character":56},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":47,"character":73},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":47,"character":95},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":48,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":48,"character":23},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":48,"character":49},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":48,"character":70},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":48,"character":87},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":49,"character":8},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":49,"character":24}],"exports":[{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":52,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":52,"character":31},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":52,"character":48},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":52,"character":63},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":53,"character":8},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":53,"character":27},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":53,"character":48},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":53,"character":67},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":53,"character":82},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":54,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatOptionModule","line":54,"character":23},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":54,"character":40},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":54,"character":56},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":54,"character":73},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":54,"character":95},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":55,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":55,"character":23},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":55,"character":49},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":55,"character":70},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":55,"character":87},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":56,"character":8},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":56,"character":24}]}]}],"members":{}},"ProcessModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":34,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":36,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":37,"character":8},{"__symbolic":"reference","name":"ProcessCommentsModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":39,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":40,"character":8},{"__symbolic":"reference","name":"MaterialModule"},{"__symbolic":"reference","name":"ProcessListModule"},{"__symbolic":"reference","name":"TaskListModule"},{"__symbolic":"reference","name":"AppsListModule"},{"__symbolic":"reference","name":"AttachmentModule"},{"__symbolic":"reference","name":"PeopleModule"},{"__symbolic":"reference","name":"FormModule"},{"__symbolic":"reference","name":"ProcessServicesPipeModule"}],"providers":[{"provide":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TRANSLATION_PROVIDER","line":52,"character":21},"multi":true,"useValue":{"name":"adf-process-services","source":"assets/adf-process-services"}}],"exports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":61,"character":8},{"__symbolic":"reference","name":"ProcessCommentsModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":63,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":64,"character":8},{"__symbolic":"reference","name":"ProcessListModule"},{"__symbolic":"reference","name":"TaskListModule"},{"__symbolic":"reference","name":"AppsListModule"},{"__symbolic":"reference","name":"AttachmentModule"},{"__symbolic":"reference","name":"PeopleModule"},{"__symbolic":"reference","name":"FormModule"},{"__symbolic":"reference","name":"ProcessServicesPipeModule"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"ProcessModule"},"providers":[{"provide":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"TRANSLATION_PROVIDER","line":80,"character":29},"multi":true,"useValue":{"name":"adf-process-services","source":"assets/adf-process-services"}},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormRenderingService","line":87,"character":16},{"provide":{"__symbolic":"reference","module":"@alfresco/adf-core","name":"FormRenderingService","line":88,"character":27},"useClass":{"__symbolic":"reference","name":"ProcessFormRenderingService"}}]}},"forChild":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"ProcessModule"}}}}}},"origins":{"ProcessFiltersComponent":"./lib/process-list/components/process-filters.component","ProcessInstanceDetailsComponent":"./lib/process-list/components/process-instance-details.component","ProcessAuditDirective":"./lib/process-list/components/process-audit.directive","ProcessInstanceHeaderComponent":"./lib/process-list/components/process-instance-header.component","ProcessInstanceTasksComponent":"./lib/process-list/components/process-instance-tasks.component","ProcessInstanceListComponent":"./lib/process-list/components/process-list.component","StartProcessInstanceComponent":"./lib/process-list/components/start-process.component","ProcessService":"./lib/process-list/services/process.service","ProcessFilterService":"./lib/process-list/services/process-filter.service","FilterProcessRepresentationModel":"./lib/process-list/models/filter-process.model","ProcessFilterParamRepresentationModel":"./lib/process-list/models/filter-process.model","ProcessDefinitionRepresentation":"./lib/process-list/models/process-definition.model","ProcessInstance":"./lib/process-list/models/process-instance.model","ProcessFilterRequestRepresentation":"./lib/process-list/models/process-instance-filter.model","ProcessInstanceVariable":"./lib/process-list/models/process-instance-variable.model","ProcessListModule":"./lib/process-list/process-list.module","TaskListComponent":"./lib/task-list/components/task-list.component","ChecklistComponent":"./lib/task-list/components/checklist.component","TaskHeaderComponent":"./lib/task-list/components/task-header.component","NoTaskDetailsTemplateDirective":"./lib/task-list/components/no-task-detail-template.directive","TaskFiltersComponent":"./lib/task-list/components/task-filters.component","TaskFormComponent":"./lib/task-list/components/task-form/task-form.component","ClaimTaskDirective":"./lib/task-list/components/task-form/claim-task.directive","UnclaimTaskDirective":"./lib/task-list/components/task-form/unclaim-task.directive","TaskDetailsComponent":"./lib/task-list/components/task-details.component","TaskAuditDirective":"./lib/task-list/components/task-audit.directive","StartTaskComponent":"./lib/task-list/components/start-task.component","TaskStandaloneComponent":"./lib/task-list/components/task-standalone.component","AttachFormComponent":"./lib/task-list/components/attach-form.component","TaskListService":"./lib/task-list/services/tasklist.service","ProcessUploadService":"./lib/task-list/services/process-upload.service","TaskUploadService":"./lib/task-list/services/task-upload.service","TaskFilterService":"./lib/task-list/services/task-filter.service","AppDefinitionRepresentationModel":"./lib/task-list/models/filter.model","FilterParamsModel":"./lib/task-list/models/filter.model","FilterRepresentationModel":"./lib/task-list/models/filter.model","TaskQueryRequestRepresentationModel":"./lib/task-list/models/filter.model","Form":"./lib/task-list/models/form.model","StartTaskModel":"./lib/task-list/models/start-task.model","TaskDetailsEvent":"./lib/task-list/models/task-details.event","TaskDetailsModel":"./lib/task-list/models/task-details.model","TaskListModel":"./lib/task-list/models/task-list.model","UserEventModel":"./lib/task-list/models/user-event.model","UserGroupModel":"./lib/task-list/models/user-group.model","TaskListModule":"./lib/task-list/task-list.module","AppsListComponent":"./lib/app-list/apps-list.component","SelectAppsDialogComponent":"./lib/app-list/select-apps-dialog.component","AppsListModule":"./lib/app-list/apps-list.module","TaskAttachmentListComponent":"./lib/attachment/task-attachment-list.component","ProcessAttachmentListComponent":"./lib/attachment/process-attachment-list.component","CreateProcessAttachmentComponent":"./lib/attachment/create-process-attachment.component","AttachmentComponent":"./lib/attachment/create-task-attachment.component","AttachmentModule":"./lib/attachment/attachment.module","ProcessCommentsComponent":"./lib/process-comments/process-comments.component","ProcessCommentsModule":"./lib/process-comments/process-comments.module","PeopleComponent":"./lib/people/components/people/people.component","PeopleListComponent":"./lib/people/components/people-list/people-list.component","PeopleSearchComponent":"./lib/people/components/people-search/people-search.component","PeopleSearchFieldComponent":"./lib/people/components/people-search-field/people-search-field.component","PeopleSelectorComponent":"./lib/people/components/people-selector/people-selector.component","PerformSearchCallback":"./lib/people/interfaces/perform-search-callback.interface","PeopleSearchActionLabelDirective":"./lib/people/directives/people-search-action-label.directive","PeopleSearchTitleDirective":"./lib/people/directives/people-search-title.directive","PeopleModule":"./lib/people/people.module","AttachFileWidgetComponent":"./lib/content-widget/attach-file-widget.component","AttachFolderWidgetComponent":"./lib/content-widget/attach-folder-widget.component","AttachFileWidgetDialogComponentData":"./lib/content-widget/attach-file-widget-dialog-component.interface","AttachFileWidgetDialogComponent":"./lib/content-widget/attach-file-widget-dialog.component","AttachFileWidgetDialogService":"./lib/content-widget/attach-file-widget-dialog.service","ContentWidgetModule":"./lib/content-widget/content-widget.module","FormComponent":"./lib/form/form.component","StartFormComponent":"./lib/form/start-form.component","ProcessFormRenderingService":"./lib/form/process-form-rendering.service","FormCustomOutcomesComponent":"./lib/form/form-custom-outcomes.component","FormModule":"./lib/form/form.module","ProcessNamePipe":"./lib/pipes/process-name.pipe","ProcessServicesPipeModule":"./lib/pipes/process-services-pipe.module","MaterialModule":"./lib/material.module","ProcessModule":"./lib/process.module"},"importAs":"@alfresco/adf-process-services"}