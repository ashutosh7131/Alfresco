!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@alfresco/adf-core"),require("@angular/core"),require("rxjs"),require("rxjs/operators"),require("@alfresco/js-api"),require("@angular/common"),require("@angular/material/dialog"),require("moment-es6"),require("@angular/material/core"),require("@angular/forms"),require("@angular/flex-layout"),require("@angular/material/autocomplete"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/form-field"),require("@angular/material/datepicker"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/slide-toggle"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/tooltip"),require("@alfresco/adf-content-services")):"function"==typeof define&&define.amd?define("@alfresco/adf-process-services",["exports","@alfresco/adf-core","@angular/core","rxjs","rxjs/operators","@alfresco/js-api","@angular/common","@angular/material/dialog","moment-es6","@angular/material/core","@angular/forms","@angular/flex-layout","@angular/material/autocomplete","@angular/material/button","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/form-field","@angular/material/datepicker","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/slide-toggle","@angular/material/table","@angular/material/tabs","@angular/material/tooltip","@alfresco/adf-content-services"],e):e(((t=t||self).alfresco=t.alfresco||{},t.alfresco["adf-process-services"]={}),t["@alfresco/adf-core"],t.ng.core,t.rxjs,t.rxjs.operators,t["@alfresco/js-api"],t.ng.common,t.ng.material.dialog,t["moment-es6"],t.ng.material.core,t.ng.forms,t.ng.flexLayout,t.ng.material.autocomplete,t.ng.material.button,t.ng.material.card,t.ng.material.checkbox,t.ng.material.chips,t.ng.material.formField,t.ng.material.datepicker,t.ng.material.gridList,t.ng.material.icon,t.ng.material.input,t.ng.material.list,t.ng.material.menu,t.ng.material.progressSpinner,t.ng.material.radio,t.ng.material.select,t.ng.material.slideToggle,t.ng.material.table,t.ng.material.tabs,t.ng.material.tooltip,t["@alfresco/adf-content-services"])}(this,(function(t,e,n,i,o,a,r,s,c,l,p,d,u,m,f,h,g,y,v,I,S,A,T,D,k,b,E,C,w,F,_,L){"use strict";c=c&&Object.prototype.hasOwnProperty.call(c,"default")?c.default:c;
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var P=function(){function t(t){t&&(this.id=t.id||null,this.appId=t.appId||null,this.name=t.name||null,this.recent=!!t.recent,this.icon=t.icon||null,this.filter=t.filter||null,this.index=t.index)}return t.prototype.hasFilter=function(){return!!this.filter},t}(),O=function(t){this.processDefinitionId=t.processDefinitionId||null,this.appDefinitionId=t.appDefinitionId||null,this.processInstanceId=t.processInstanceId||null,this.state=t.state||null,this.sort=t.sort||null,this.page=t.page||null,this.size=t.size||null},M=function(){function t(t){this.alfrescoApiService=t}return Object.defineProperty(t.prototype,"userFiltersApi",{get:function(){var t;return this._userFiltersApi=null!==(t=this._userFiltersApi)&&void 0!==t?t:new a.UserFiltersApi(this.alfrescoApiService.getInstance()),this._userFiltersApi},enumerable:!1,configurable:!0}),t.prototype.getProcessFilters=function(t){var e=this;return i.from(this.callApiProcessFilters(t)).pipe(o.map((function(t){var e=[];return t.data.forEach((function(t){var n=new P(t);e.push(n)})),e})),o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.getProcessFilterById=function(t,e){var n=this;return i.from(this.callApiProcessFilters(e)).pipe(o.map((function(e){return e.data.find((function(e){return e.id===t}))})),o.catchError((function(t){return n.handleProcessError(t)})))},t.prototype.getProcessFilterByName=function(t,e){var n=this;return i.from(this.callApiProcessFilters(e)).pipe(o.map((function(e){return e.data.find((function(e){return e.name===t}))})),o.catchError((function(t){return n.handleProcessError(t)})))},t.prototype.createDefaultFilters=function(t){var e=this,n=this.getRunningFilterInstance(t,0),o=this.addProcessFilter(n),a=this.getCompletedFilterInstance(t,1),r=this.addProcessFilter(a),s=this.getAllFilterInstance(t,2),c=this.addProcessFilter(s);return new i.Observable((function(l){i.forkJoin([o,r,c]).subscribe((function(e){var i=[];e.forEach((function(e){e.name===n.name?i.push(new P(Object.assign(Object.assign({},e),{filter:n.filter,appId:t}))):e.name===a.name?i.push(new P(Object.assign(Object.assign({},e),{filter:a.filter,appId:t}))):e.name===s.name&&i.push(new P(Object.assign(Object.assign({},e),{filter:s.filter,appId:t})))})),l.next(i),l.complete()}),(function(t){e.handleProcessError(t)}))}))},t.prototype.getRunningFilterInstance=function(t,e){return new P({name:"Running",appId:t,recent:!0,icon:"glyphicon-random",filter:{sort:"created-desc",name:"",state:"running"},index:e})},t.prototype.getCompletedFilterInstance=function(t,e){return new P({name:"Completed",appId:t,recent:!1,icon:"glyphicon-ok-sign",filter:{sort:"created-desc",name:"",state:"completed"},index:e})},t.prototype.getAllFilterInstance=function(t,e){return new P({name:"All",appId:t,recent:!0,icon:"glyphicon-th",filter:{sort:"created-desc",name:"",state:"all"},index:e})},t.prototype.addProcessFilter=function(t){var e=this;return i.from(this.userFiltersApi.createUserProcessInstanceFilter(t)).pipe(o.map((function(t){return t})),o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.callApiProcessFilters=function(t){return t?this.userFiltersApi.getUserProcessInstanceFilters({appId:t}):this.userFiltersApi.getUserProcessInstanceFilters()},t.prototype.handleProcessError=function(t){return i.throwError(t||"Server error")},t}();M.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new M(n.ɵɵinject(e.AlfrescoApiService))},token:M,providedIn:"root"}),M.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],M.ctorParameters=function(){return[{type:e.AlfrescoApiService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var x=function(){function t(){this.initIconsMDL()}return t.prototype.mapGlyphiconToMaterialDesignIcons=function(e){return this.iconsMDL.get(e)?this.iconsMDL.get(e):t.DEFAULT_TASKS_APP_MATERIAL_ICON},t.prototype.initIconsMDL=function(){this.iconsMDL=new Map,this.iconsMDL.set("glyphicon-asterisk","ac_unit"),this.iconsMDL.set("glyphicon-plus","add"),this.iconsMDL.set("glyphicon-euro","euro_symbol"),this.iconsMDL.set("glyphicon-cloud","cloud"),this.iconsMDL.set("glyphicon-envelope","mail"),this.iconsMDL.set("glyphicon-pencil","create"),this.iconsMDL.set("glyphicon-glass","local_bar"),this.iconsMDL.set("glyphicon-music","music_note"),this.iconsMDL.set("glyphicon-search","search"),this.iconsMDL.set("glyphicon-heart","favorite"),this.iconsMDL.set("glyphicon-heart-empty","favorite_border"),this.iconsMDL.set("glyphicon-star","star"),this.iconsMDL.set("glyphicon-star-empty","star_border"),this.iconsMDL.set("glyphicon-user","person"),this.iconsMDL.set("glyphicon-film","movie_creation"),this.iconsMDL.set("glyphicon-th-large","view_comfy"),this.iconsMDL.set("glyphicon-th","dashboard"),this.iconsMDL.set("glyphicon-th-list","list"),this.iconsMDL.set("glyphicon-ok","done"),this.iconsMDL.set("glyphicon-remove","cancel"),this.iconsMDL.set("glyphicon-zoom-in","zoom_in"),this.iconsMDL.set("glyphicon-zoom-out","zoom_out"),this.iconsMDL.set("glyphicon-off","highlight_off"),this.iconsMDL.set("glyphicon-signal","signal_cellular_4_bar"),this.iconsMDL.set("glyphicon-cog","settings"),this.iconsMDL.set("glyphicon-trash","delete"),this.iconsMDL.set("glyphicon-home","home"),this.iconsMDL.set("glyphicon-file","insert_drive_file"),this.iconsMDL.set("glyphicon-time","access_time"),this.iconsMDL.set("glyphicon-road","map"),this.iconsMDL.set("glyphicon-download-alt","file_download"),this.iconsMDL.set("glyphicon-download","file_download"),this.iconsMDL.set("glyphicon-upload","file_upload"),this.iconsMDL.set("glyphicon-inbox","inbox"),this.iconsMDL.set("glyphicon-play-circle","play_circle_outline"),this.iconsMDL.set("glyphicon-repeat","refresh"),this.iconsMDL.set("glyphicon-refresh","sync"),this.iconsMDL.set("glyphicon-list-alt","event_note"),this.iconsMDL.set("glyphicon-lock","lock_outline"),this.iconsMDL.set("glyphicon-flag","assistant_photo"),this.iconsMDL.set("glyphicon-headphones","headset"),this.iconsMDL.set("glyphicon-volume-up","volume_up"),this.iconsMDL.set("glyphicon-tag","local_offer"),this.iconsMDL.set("glyphicon-tags","local_offer"),this.iconsMDL.set("glyphicon-book","library_books"),this.iconsMDL.set("glyphicon-bookmark","collections_bookmark"),this.iconsMDL.set("glyphicon-print","local_printshop"),this.iconsMDL.set("glyphicon-camera","local_see"),this.iconsMDL.set("glyphicon-list","view_list"),this.iconsMDL.set("glyphicon-facetime-video","video_call"),this.iconsMDL.set("glyphicon-picture","photo"),this.iconsMDL.set("glyphicon-map-marker","add_location"),this.iconsMDL.set("glyphicon-adjust","brightness_4"),this.iconsMDL.set("glyphicon-tint","invert_colors"),this.iconsMDL.set("glyphicon-edit","edit"),this.iconsMDL.set("glyphicon-share","share"),this.iconsMDL.set("glyphicon-check","assignment_turned_in"),this.iconsMDL.set("glyphicon-move","open_with"),this.iconsMDL.set("glyphicon-play","play_arrow"),this.iconsMDL.set("glyphicon-eject","eject"),this.iconsMDL.set("glyphicon-plus-sign","add_circle"),this.iconsMDL.set("glyphicon-minus-sign","remove_circle"),this.iconsMDL.set("glyphicon-remove-sign","cancel"),this.iconsMDL.set("glyphicon-ok-sign","check_circle"),this.iconsMDL.set("glyphicon-question-sign","help"),this.iconsMDL.set("glyphicon-info-sign","info"),this.iconsMDL.set("glyphicon-screenshot","flare"),this.iconsMDL.set("glyphicon-remove-circle","cancel"),this.iconsMDL.set("glyphicon-ok-circle","add_circle"),this.iconsMDL.set("glyphicon-ban-circle","block"),this.iconsMDL.set("glyphicon-share-alt","redo"),this.iconsMDL.set("glyphicon-exclamation-sign","error"),this.iconsMDL.set("glyphicon-gift","giftcard"),this.iconsMDL.set("glyphicon-leaf","spa"),this.iconsMDL.set("glyphicon-fire","whatshot"),this.iconsMDL.set("glyphicon-eye-open","remove_red_eye"),this.iconsMDL.set("glyphicon-eye-close","remove_red_eye"),this.iconsMDL.set("glyphicon-warning-sign","warning"),this.iconsMDL.set("glyphicon-plane","airplanemode_active"),this.iconsMDL.set("glyphicon-calendar",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-random","shuffle"),this.iconsMDL.set("glyphicon-comment",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-magnet",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-retweet",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-shopping-cart",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-folder-close",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-folder-open",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-hdd",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-bullhorn",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-bell",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-certificate",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-thumbs-up",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-thumbs-down",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-hand-left",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-globe",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-wrench",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-tasks",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-filter",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-briefcase",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-dashboard",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-paperclip",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-link",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-phone",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-pushpin",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-usd",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-gbp",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-sort",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-flash",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-record","radio_button_checked"),this.iconsMDL.set("glyphicon-save",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-open",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-saved",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-send","send"),this.iconsMDL.set("glyphicon-floppy-disk",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-credit-card",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-cutlery",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-earphone",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-phone-alt",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-tower",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-stats",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-cloud-download",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-cloud-upload",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-tree-conifer",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-tree-deciduous",t.DEFAULT_TASKS_APP_MATERIAL_ICON),this.iconsMDL.set("glyphicon-align-left","format_align_left")},t}();x.DEFAULT_TASKS_APP_MATERIAL_ICON="favorite_border";
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var R=function(){function t(t,e){this.processFilterService=t,this.appsProcessService=e,this.filterClicked=new n.EventEmitter,this.success=new n.EventEmitter,this.error=new n.EventEmitter,this.showIcon=!0,this.filterSelected=new n.EventEmitter,this.filters=[],this.active=!1}return t.prototype.ngOnInit=function(){this.iconsMDL=new x},t.prototype.ngOnChanges=function(t){var e=t.appId,n=t.appName,i=t.filterParam;e&&(e.currentValue||null===e.currentValue)?this.getFiltersByAppId(e.currentValue):n&&n.currentValue?this.getFiltersByAppName(n.currentValue):i&&i.currentValue!==i.previousValue&&this.selectProcessFilter(i.currentValue)},t.prototype.getFiltersByAppId=function(t){var e=this;this.processFilterService.getProcessFilters(t).subscribe((function(n){0===n.length&&e.isFilterListEmpty()?e.processFilterService.createDefaultFilters(t).subscribe((function(t){e.resetFilter(),e.filters=t,e.selectProcessFilter(e.filterParam),e.success.emit(t)}),(function(t){e.error.emit(t)})):(e.resetFilter(),e.filters=n,e.selectProcessFilter(e.filterParam),e.success.emit(n))}),(function(t){e.error.emit(t)}))},t.prototype.getFiltersByAppName=function(t){var e=this;this.appsProcessService.getDeployedApplicationsByName(t).subscribe((function(t){e.getFiltersByAppId(t.id),e.selectProcessFilter(e.filterParam)}),(function(t){e.error.emit(t)}))},t.prototype.selectFilter=function(t){this.currentFilter=t,this.active=!0,this.filterClicked.emit(t)},t.prototype.selectProcessFilter=function(t){if(t){var e=this.filters.find((function(e,n){return t.index===n||t.id===e.id||t.name&&t.name.toLocaleLowerCase()===e.name.toLocaleLowerCase()}));this.currentFilter=e,e&&this.filterSelected.emit(e)}},t.prototype.selectRunningFilter=function(){this.selectProcessFilter(this.processFilterService.getRunningFilterInstance(null))},t.prototype.selectDefaultTaskFilter=function(){this.isFilterListEmpty()||(this.currentFilter=this.filters[0],this.filterSelected.emit(this.filters[0]))},t.prototype.getCurrentFilter=function(){return this.currentFilter},t.prototype.isFilterListEmpty=function(){return void 0===this.filters||this.filters&&0===this.filters.length},t.prototype.resetFilter=function(){this.filters=[],this.currentFilter=void 0},t.prototype.getFilterIcon=function(t){return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(t)},t}();R.decorators=[{type:n.Component,args:[{selector:"adf-process-instance-filters",template:'<div *ngFor="let filter of filters" class="adf-filters__entry" [class.adf-active]="currentFilter === filter">\n    <button (click)="selectFilter(filter)"\n      [attr.aria-label]="filter.name | translate"\n      [id]="filter.id"\n      [attr.data-automation-id]="filter.name + \'_filter\'"\n      mat-button\n      class="adf-filter-action-button adf-full-width" fxLayout="row" fxLayoutAlign="space-between center">\n      <adf-icon data-automation-id="adf-filter-icon" *ngIf="showIcon" [value]="getFilterIcon(filter.icon)"></adf-icon>\n      <span data-automation-id="adf-filter-label" class="adf-filter-action-button__label">{{ filter.name | translate }}</span>\n    </button>\n</div>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-filters__entry{cursor:pointer;font-size:14px!important;font-weight:700;height:24px;opacity:.54;padding:12px 0!important;width:100%}.adf-filters__entry .adf-full-width{display:flex;width:100%}.adf-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-filters__entry.adf-active,.adf-filters__entry:hover{color:var(--theme-primary-color);opacity:1}"]}]}],R.ctorParameters=function(){return[{type:M},{type:e.AppsProcessService}]},R.propDecorators={filterParam:[{type:n.Input}],filterClicked:[{type:n.Output}],success:[{type:n.Output}],error:[{type:n.Output}],appId:[{type:n.Input}],appName:[{type:n.Input}],showIcon:[{type:n.Input}],filterSelected:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var N=function(t){this.id=t&&t.id||null,this.name=t&&t.name||null,this.description=t&&t.description||null,this.key=t&&t.key||null,this.category=t&&t.category||null,this.version=t&&t.version||0,this.deploymentId=t&&t.deploymentId||null,this.tenantId=t&&t.tenantId||null,this.metaDataValues=t&&t.metaDataValues||[],this.hasStartForm=t&&!0===t.hasStartForm},U=function(t){this.name=t&&void 0!==t.name?t.name:null,this.scope=t&&void 0!==t.scope?t.scope:null,this.value=t&&void 0!==t.value?t.value:null,this.valueUrl=t&&void 0!==t.valueUrl?t.valueUrl:null},V=function(t){this.businessKey=t&&void 0!==t.businessKey?t.businessKey:null,this.ended=t&&void 0!==t.ended?t.ended:null,this.graphicalNotationDefined=t&&void 0!==t.graphicalNotationDefined?t.graphicalNotationDefined:null,this.id=t&&void 0!==t.id?t.id:null,this.name=t&&void 0!==t.name?t.name:null,this.processDefinitionCategory=t&&void 0!==t.processDefinitionCategory?t.processDefinitionCategory:null,this.processDefinitionDeploymentId=t&&void 0!==t.processDefinitionDeploymentId?t.processDefinitionDeploymentId:null,this.processDefinitionDescription=t&&void 0!==t.processDefinitionDescription?t.processDefinitionDescription:null,this.processDefinitionId=t&&void 0!==t.processDefinitionId?t.processDefinitionId:null,this.processDefinitionKey=t&&void 0!==t.processDefinitionKey?t.processDefinitionKey:null,this.processDefinitionName=t&&void 0!==t.processDefinitionName?t.processDefinitionName:null,this.processDefinitionVersion=t&&void 0!==t.processDefinitionVersion?t.processDefinitionVersion:null,this.startFormDefined=t&&void 0!==t.startFormDefined?t.startFormDefined:null,this.started=t&&void 0!==t.started?t.started:null,this.startedBy=t&&void 0!==t.startedBy?t.startedBy:null,this.tenantId=t&&void 0!==t.tenantId?t.tenantId:null,this.variables=t&&void 0!==t.variables?t.variables:null},B=function(t){t&&(this.size=t.size||null,this.total=t.total||null,this.start=t.start||null,this.length=t.length||null,this.data=t.data||[])},K=function(){function t(t){this.alfrescoApiService=t}return Object.defineProperty(t.prototype,"tasksApi",{get:function(){var t;return this._tasksApi=null!==(t=this._tasksApi)&&void 0!==t?t:new a.TasksApi(this.alfrescoApiService.getInstance()),this._tasksApi},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"processDefinitionsApi",{get:function(){var t;return this._processDefinitionsApi=null!==(t=this._processDefinitionsApi)&&void 0!==t?t:new a.ProcessDefinitionsApi(this.alfrescoApiService.getInstance()),this._processDefinitionsApi},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"processInstancesApi",{get:function(){var t;return this._processInstancesApi=null!==(t=this._processInstancesApi)&&void 0!==t?t:new a.ProcessInstancesApi(this.alfrescoApiService.getInstance()),this._processInstancesApi},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"processInstanceVariablesApi",{get:function(){var t;return this._processInstanceVariablesApi=null!==(t=this._processInstanceVariablesApi)&&void 0!==t?t:new a.ProcessInstanceVariablesApi(this.alfrescoApiService.getInstance()),this._processInstanceVariablesApi},enumerable:!1,configurable:!0}),t.prototype.getProcessInstances=function(t,e){var n=this;return i.from(this.processInstancesApi.getProcessInstances(t)).pipe(o.map((function(t){if(e){var n=t.data.filter((function(t){return t.processDefinitionKey===e}));return t.data=n,t}return t})),o.catchError((function(t){return n.handleProcessError(t)})))},t.prototype.getProcesses=function(t,e){var n=this;return this.getProcessInstances(t,e).pipe(o.map((function(t){return Object.assign(Object.assign({},t),{data:(t.data||[]).map((function(t){return t.name=n.getProcessNameOrDescription(t,"medium"),t}))})})),o.catchError((function(){return i.of(new B({}))})))},t.prototype.getProcessNameOrDescription=function(t,e){var n="";return t&&(n=t.name||t.processDefinitionName+" - "+this.getFormatDate(t.started,e)),n},t.prototype.getFormatDate=function(t,e){var n=new r.DatePipe("en-US");try{return n.transform(t,e)}catch(t){return""}},t.prototype.fetchProcessAuditPdfById=function(t){var e=this;return i.from(this.processInstancesApi.getProcessAuditPdf(t)).pipe(o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.fetchProcessAuditJsonById=function(t){var e=this;return i.from(this.processInstancesApi.getTaskAuditLog(t)).pipe(o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.getProcess=function(t){var e=this;return i.from(this.processInstancesApi.getProcessInstance(t)).pipe(o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.getProcessTasks=function(t,e){var n=this,a=e?{processInstanceId:t,state:e}:{processInstanceId:t};return i.from(this.tasksApi.listTasks(a)).pipe(o.map(this.extractData),o.map((function(t){return t.map((function(t){return t.created=moment(t.created,"YYYY-MM-DD").format(),t}))})),o.catchError((function(t){return n.handleProcessError(t)})))},t.prototype.getProcessDefinitions=function(t){var e=this,n=t?{latest:!0,appDefinitionId:t}:{latest:!0};return i.from(this.processDefinitionsApi.getProcessDefinitions(n)).pipe(o.map(this.extractData),o.map((function(t){return t.map((function(t){return new N(t)}))})),o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.startProcess=function(t,e,n,a,r){var s=this,c={name:e,processDefinitionId:t};return n&&(c.outcome=n),a&&(c.values=a),r&&(c.variables=r),i.from(this.processInstancesApi.startNewProcessInstance(c)).pipe(o.map((function(t){return new V(t)})),o.catchError((function(t){return s.handleProcessError(t)})))},t.prototype.cancelProcess=function(t){var e=this;return i.from(this.processInstancesApi.deleteProcessInstance(t)).pipe(o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.getProcessInstanceVariables=function(t){var e=this;return i.from(this.processInstanceVariablesApi.getProcessInstanceVariables(t)).pipe(o.map((function(t){return t.map((function(t){return new U(t)}))})),o.catchError((function(t){return e.handleProcessError(t)})))},t.prototype.createOrUpdateProcessInstanceVariables=function(t,e){var n=this;return i.from(this.processInstanceVariablesApi.createOrUpdateProcessInstanceVariables(t,e)).pipe(o.catchError((function(t){return n.handleProcessError(t)})))},t.prototype.deleteProcessInstanceVariable=function(t,e){var n=this;return i.from(this.processInstanceVariablesApi.deleteProcessInstanceVariable(t,e)).pipe(o.catchError((function(t){return n.handleProcessError(t)})))},t.prototype.extractData=function(t){return t.data||{}},t.prototype.handleProcessError=function(t){return i.throwError(t||"Server error")},t}();
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */K.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new K(n.ɵɵinject(e.AlfrescoApiService))},token:K,providedIn:"root"}),K.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],K.ctorParameters=function(){return[{type:e.AlfrescoApiService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var j=function(){function t(t,e){this.activitiProcess=t,this.logService=e,this.showTitle=!0,this.showRefreshButton=!0,this.processCancelled=new n.EventEmitter,this.error=new n.EventEmitter,this.taskClick=new n.EventEmitter,this.showProcessDiagram=new n.EventEmitter}return t.prototype.ngOnChanges=function(t){var e=t.processInstanceId;!e||e.currentValue?e&&e.currentValue&&this.load(e.currentValue):this.reset()},t.prototype.reset=function(){this.processInstanceDetails=null},t.prototype.load=function(t){var e=this;t&&this.activitiProcess.getProcess(t).subscribe((function(t){e.processInstanceDetails=t}))},t.prototype.isRunning=function(){return this.processInstanceDetails&&!this.processInstanceDetails.ended},t.prototype.cancelProcess=function(){var t=this;this.activitiProcess.cancelProcess(this.processInstanceId).subscribe((function(e){t.processCancelled.emit(e)}),(function(e){t.error.emit(e)}))},t.prototype.onTaskClicked=function(t){this.taskClick.emit(t)},t.prototype.getProcessNameOrDescription=function(t){var e="";return this.processInstanceDetails&&(e=this.processInstanceDetails.name||this.processInstanceDetails.processDefinitionName+" - "+this.getFormatDate(this.processInstanceDetails.started,t)),e},t.prototype.getFormatDate=function(t,e){var n=new r.DatePipe("en-US");try{return n.transform(t,e)}catch(n){this.logService.error("ProcessListInstanceHeader: error parsing date "+t+" to format "+e)}},t.prototype.onShowProcessDiagram=function(){this.showProcessDiagram.emit({value:this.processInstanceId})},t}();j.decorators=[{type:n.Component,args:[{selector:"adf-process-instance-details",template:'<div *ngIf="!processInstanceDetails">{{ \'ADF_PROCESS_LIST.DETAILS.MESSAGES.NONE\'|translate }}</div>\n<mat-card *ngIf="processInstanceDetails">\n    <mat-card-header>\n        <mat-card-title>{{ getProcessNameOrDescription(\'medium\') }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <adf-process-instance-header\n            #processInstanceHeader\n            [processInstance]="processInstanceDetails"\n            (showProcessDiagram)="onShowProcessDiagram()">\n        </adf-process-instance-header>\n\n        <button\n            class="adf-in-medias-res-button"\n            mat-button id="show-diagram-button"\n            type="button"\n            mat-button mat-raised-button\n            [disabled]="!isRunning()"\n            (click)="onShowProcessDiagram()">{{ \'ADF_PROCESS_LIST.DETAILS.BUTTON.SHOW_DIAGRAM\' | translate }}</button>\n\n        <mat-card>\n            <mat-card-content>\n                <adf-process-instance-tasks\n                    #processInstanceTasks\n                    [processInstanceDetails]="processInstanceDetails"\n                    (taskClick)="onTaskClicked($event)">\n                </adf-process-instance-tasks>\n            </mat-card-content>\n        </mat-card>\n\n        <div data-automation-id="header-status" *ngIf="isRunning()" class="adf-in-medias-res-button">\n            <button mat-button type="button" (click)="cancelProcess()">{{ \'ADF_PROCESS_LIST.DETAILS.BUTTON.CANCEL\' | translate }}</button>\n        </div>\n\n        <mat-card>\n            <mat-card-content>\n                <adf-process-instance-comments #activitiComments\n                    [readOnly]="false"\n                    [processInstanceId]="processInstanceDetails.id">\n                </adf-process-instance-comments>\n            </mat-card-content>\n        </mat-card>\n\n    </mat-card-content>\n</mat-card>\n',styles:[":host{width:100%}.activiti-process-container{min-height:100px;overflow:visible;padding:10px;width:100%}.adf-comments-dialog{position:fixed;top:50%;transform:translateY(-50%);width:40%}.adf-in-medias-res-button{margin:16px 0}"]}]}],j.ctorParameters=function(){return[{type:K},{type:e.LogService}]},j.propDecorators={processInstanceId:[{type:n.Input}],processInstanceHeader:[{type:n.ViewChild,args:["processInstanceHeader"]}],tasksList:[{type:n.ViewChild,args:["processInstanceTasks"]}],showTitle:[{type:n.Input}],showRefreshButton:[{type:n.Input}],processCancelled:[{type:n.Output}],error:[{type:n.Output}],taskClick:[{type:n.Output}],showProcessDiagram:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var $=function(){function t(t,e){this.downloadService=t,this.processListService=e,this.fileName="Audit",this.format="pdf",this.download=!0,this.clicked=new n.EventEmitter,this.error=new n.EventEmitter}return t.prototype.ngOnChanges=function(){this.isValidType()||this.setDefaultFormatType()},t.prototype.isValidType=function(){return this.format&&(this.isJsonFormat()||this.isPdfFormat())},t.prototype.setDefaultFormatType=function(){this.format="pdf"},t.prototype.fetchAuditInfo=function(){var t=this;this.isPdfFormat()?this.processListService.fetchProcessAuditPdfById(this.processId).subscribe((function(e){t.download&&t.downloadService.downloadBlob(e,t.fileName+".pdf"),t.clicked.emit({format:t.format,value:e,fileName:t.fileName})}),(function(e){return t.error.emit(e)})):this.processListService.fetchProcessAuditJsonById(this.processId).subscribe((function(e){return t.clicked.emit({format:t.format,value:e,fileName:t.fileName})}),(function(e){return t.error.emit(e)}))},t.prototype.onClickAudit=function(){this.fetchAuditInfo()},t.prototype.isJsonFormat=function(){return"json"===this.format},t.prototype.isPdfFormat=function(){return"pdf"===this.format},t}();$.decorators=[{type:n.Directive,args:[{selector:"button[adf-process-audit]",host:{role:"button","(click)":"onClickAudit()"}}]}],$.ctorParameters=function(){return[{type:e.DownloadService},{type:K}]},$.propDecorators={processId:[{type:n.Input,args:["process-id"]}],fileName:[{type:n.Input}],format:[{type:n.Input}],download:[{type:n.Input}],clicked:[{type:n.Output}],error:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var z=function(){function t(t,e){this.translationService=t,this.appConfig=e,this.dateFormat=this.appConfig.get("dateValues.defaultDateFormat"),this.dateLocale=this.appConfig.get("dateValues.defaultDateLocale")}return t.prototype.ngOnChanges=function(){this.refreshData()},t.prototype.refreshData=function(){var t=this;if(this.processInstance){var e=this.initDefaultProperties(),n=this.appConfig.get("adf-process-instance-header.presets.properties");this.properties=e.filter((function(e){return t.isValidSelection(n,e)}))}},t.prototype.initDefaultProperties=function(){return[new e.CardViewTextItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.STATUS",value:this.getProcessStatus(),key:"status"}),new e.CardViewDateItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.END_DATE",value:this.processInstance.ended,format:this.dateFormat,locale:this.dateLocale,key:"ended",default:this.translationService.instant("ADF_PROCESS_LIST.PROPERTIES.END_DATE_DEFAULT")}),new e.CardViewTextItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.CATEGORY",value:this.processInstance.processDefinitionCategory,key:"category",default:this.translationService.instant("ADF_PROCESS_LIST.PROPERTIES.CATEGORY_DEFAULT")}),new e.CardViewTextItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY",value:this.processInstance.businessKey,key:"businessKey",default:this.translationService.instant("ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY_DEFAULT")}),new e.CardViewTextItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.CREATED_BY",value:this.getStartedByFullName(),key:"createdBy",default:this.translationService.instant("ADF_PROCESS_LIST.PROPERTIES.CREATED_BY_DEFAULT")}),new e.CardViewDateItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.CREATED",value:this.processInstance.started,format:this.dateFormat,locale:this.dateLocale,key:"created"}),new e.CardViewTextItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.ID",value:this.processInstance.id,key:"id"}),new e.CardViewTextItemModel({label:"ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION",value:this.processInstance.processDefinitionDescription,key:"description",default:this.translationService.instant("ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION_DEFAULT")})]},t.prototype.isValidSelection=function(t,e){return!t||t.indexOf(e.key)>=0},t.prototype.getProcessStatus=function(){return this.processInstance?this.isRunning()?"Running":"Completed":"Unknown"},t.prototype.getStartedByFullName=function(){var t="";return this.processInstance&&this.processInstance.startedBy&&(t+=this.processInstance.startedBy.firstName||"",t+=t?" ":"",t+=this.processInstance.startedBy.lastName||""),t},t.prototype.isRunning=function(){return this.processInstance&&!this.processInstance.ended},t}();z.decorators=[{type:n.Component,args:[{selector:"adf-process-instance-header",template:'<mat-card *ngIf="processInstance" class="adf-card-container">\n    <mat-card-content>\n        <adf-card-view [properties]="properties"></adf-card-view>\n    </mat-card-content>\n</mat-card>\n',styles:[":host{width:100%}.adf-card-container{font-family:inherit}"]}]}],z.ctorParameters=function(){return[{type:e.TranslationService},{type:e.AppConfigService}]},z.propDecorators={processInstance:[{type:n.Input}]};
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
var H=function(t,e){return(H=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function G(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}H(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function q(t,e,n,i){return new(n||(n=Promise))((function(o,a){function r(t){try{c(i.next(t))}catch(t){a(t)}}function s(t){try{c(i.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,s)}c((i=i.apply(t,e||[])).next())}))}function Y(t,e){var n,i,o,a,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=2&a[0]?i.return:a[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,a[1])).done)return o;switch(i=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return r.label++,{value:a[1],done:!1};case 5:r.label++,i=a[1],a=[0];continue;case 7:a=r.ops.pop(),r.trys.pop();continue;default:if(!(o=r.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){r=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){r.label=a[1];break}if(6===a[0]&&r.label<o[1]){r.label=o[1],o=a;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(a);break}o[2]&&r.ops.pop(),r.trys.pop();continue}a=e.call(t,r)}catch(t){a=[6,t],i=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}Object.create;function W(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function X(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var i,o,a=n.call(t),r=[];try{for(;(void 0===e||e-- >0)&&!(i=a.next()).done;)r.push(i.value)}catch(t){o={error:t}}finally{try{i&&!i.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return r}function J(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(X(arguments[e]));return t}Object.create;var Q=function(t){t&&(this.defaultAppId=t.defaultAppId?t.defaultAppId:null,this.deploymentId=t.deploymentId?t.deploymentId:null,this.name=t.name?t.name:null,this.description=t.description?t.description:null,this.theme=t.theme?t.theme:null,this.icon=t.icon?t.icon:null,this.id=t.id?t.id:null,this.modelId=t.modelId?t.modelId:null,this.tenantId=t.tenantId?t.tenantId:null)},Z=function(t){t&&(this.id=t.id||null,this.name=t.name||null,this.index=t.index)},tt=function(){function t(t){t&&(this.id=t.id||null,this.appId=t.appId||null,this.name=t.name||null,this.recent=!!t.recent,this.icon=t.icon||null,this.filter=new a.UserTaskFilterRepresentation(t.filter),this.index=t.index)}return t.prototype.hasFilter=function(){return!!this.filter},t}(),et=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return G(e,t),e}(a.TaskQueryRepresentation),nt={default:[{key:"name",type:"text",title:"ADF_TASK_LIST.PROPERTIES.NAME",sortable:!0},{key:"created",type:"text",title:"ADF_TASK_LIST.PROPERTIES.CREATED",cssClass:"hidden",sortable:!0},{key:"assignee",type:"text",title:"ADF_TASK_LIST.PROPERTIES.ASSIGNEE",cssClass:"hidden",sortable:!0}]},it=function(t,e){this.name=e,this.id=t},ot=function(){function t(t){this.processDefinitionVersion=0,t&&(this.id=t.id||null,this.name=t.name||null,this.priority=t.priority,this.assignee=t.assignee?new e.UserProcessModel(t.assignee):null,this.adhocTaskCanBeReassigned=t.adhocTaskCanBeReassigned,this.category=t.category||null,this.created=t.created||null,this.description=t.description||null,this.dueDate=t.dueDate||null,this.duration=t.duration||null,this.endDate=t.endDate||null,this.executionId=t.executionId||null,this.formKey=t.formKey||null,this.initiatorCanCompleteTask=!!t.initiatorCanCompleteTask,this.managerOfCandidateGroup=!!t.managerOfCandidateGroup,this.memberOfCandidateGroup=!!t.memberOfCandidateGroup,this.memberOfCandidateUsers=!!t.memberOfCandidateUsers,this.involvedGroups=t.involvedGroups,this.involvedPeople=t.involvedPeople,this.parentTaskId=t.parentTaskId||null,this.parentTaskName=t.parentTaskName||null,this.processDefinitionCategory=t.processDefinitionCategory||null,this.processDefinitionDeploymentId=t.processDefinitionDeploymentId||null,this.processDefinitionDescription=t.processDefinitionDescription||null,this.processDefinitionId=t.processDefinitionId||null,this.processDefinitionKey=t.processDefinitionKey||null,this.processDefinitionName=t.processDefinitionName||null,this.processDefinitionVersion=t.processDefinitionVersion||0,this.processInstanceId=t.processInstanceId||null,this.processInstanceName=t.processInstanceName||null,this.processInstanceStartUserId=t.processInstanceStartUserId||null,this.taskDefinitionKey=t.taskDefinitionKey||null)}return t.prototype.getFullName=function(){var t="";this.assignee&&(t=(this.assignee.firstName?this.assignee.firstName:"")+" "+(this.assignee.lastName?this.assignee.lastName:""));return t.trim()},t.prototype.isCompleted=function(){return!!this.endDate},t}(),at=function(t){this.data=[],t&&(Object.assign(this,t),t.data&&(this.data=t.data.map((function(t){return new ot(t)}))))},rt=function(){function t(t,e){this.apiService=t,this.logService=e}return Object.defineProperty(t.prototype,"modelsApi",{get:function(){var t;return this._modelsApi=null!==(t=this._modelsApi)&&void 0!==t?t:new a.ModelsApi(this.apiService.getInstance()),this._modelsApi},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"tasksApi",{get:function(){var t;return this._tasksApi=null!==(t=this._tasksApi)&&void 0!==t?t:new a.TasksApi(this.apiService.getInstance()),this._tasksApi},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"taskActionsApi",{get:function(){var t;return this._taskActionsApi=null!==(t=this._taskActionsApi)&&void 0!==t?t:new a.TaskActionsApi(this.apiService.getInstance()),this._taskActionsApi},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"checklistsApi",{get:function(){var t;return this._checklistsApi=null!==(t=this._checklistsApi)&&void 0!==t?t:new a.ChecklistsApi(this.apiService.getInstance()),this._checklistsApi},enumerable:!1,configurable:!0}),t.prototype.getFilterForTaskById=function(t,e){var n=this;return i.from(e).pipe(o.flatMap((function(e){return n.isTaskRelatedToFilter(t,e)})),o.filter((function(t){return null!=t})))},t.prototype.generateTaskRequestNodeFromFilter=function(t){var e={appDefinitionId:t.appId,assignment:t.filter.assignment,state:t.filter.state,sort:t.filter.sort};return new et(e)},t.prototype.isTaskRelatedToFilter=function(t,e){var n=this,a=this.generateTaskRequestNodeFromFilter(e);return i.from(this.callApiTasksFiltered(a)).pipe(o.map((function(n){return n.data.find((function(e){return e.id===t}))?e:null})),o.catchError((function(t){return n.handleError(t)})))},t.prototype.getTasks=function(t){var e=this;return i.from(this.callApiTasksFiltered(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.findTasksByState=function(t,e){return e&&(t.state=e),this.getTasks(t).pipe(o.catchError((function(){return i.of(new at)})))},t.prototype.findAllTaskByState=function(t,e){var n=this;return e&&(t.state=e),this.getTotalTasks(t).pipe(o.switchMap((function(e){return t.size=e.total,n.getTasks(t)})))},t.prototype.findAllTasksWithoutState=function(t){return i.forkJoin(this.findTasksByState(t,"open"),this.findAllTaskByState(t,"completed"),(function(t,e){var n=Object.assign({},t);return n.total+=e.total,n.data=n.data.concat(e.data),n}))},t.prototype.getTaskDetails=function(t){var e=this;return i.from(this.callApiTaskDetails(t)).pipe(o.map((function(t){return new ot(t)})),o.catchError((function(t){return e.handleError(t)})))},t.prototype.getTaskChecklist=function(t){var e=this;return i.from(this.callApiTaskChecklist(t)).pipe(o.map((function(t){var e=[];return t.data.forEach((function(t){e.push(new ot(t))})),e})),o.catchError((function(t){return e.handleError(t)})))},t.prototype.getFormList=function(){var t=this;return i.from(this.modelsApi.getModels({filter:"myReusableForms",sort:"modifiedDesc",modelType:2})).pipe(o.map((function(t){var e=[];return t.data.forEach((function(t){e.push(new it(t.id,t.name))})),e})),o.catchError((function(e){return t.handleError(e)})))},t.prototype.attachFormToATask=function(t,e){var n=this;return i.from(this.taskActionsApi.attachForm(t,{formId:e})).pipe(o.catchError((function(t){return n.handleError(t)})))},t.prototype.addTask=function(t){var e=this;return i.from(this.callApiAddTask(t)).pipe(o.map((function(t){return new ot(t)})),o.catchError((function(t){return e.handleError(t)})))},t.prototype.deleteTask=function(t){var e=this;return i.from(this.callApiDeleteTask(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.deleteForm=function(t){var e=this;return i.from(this.callApiDeleteForm(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.completeTask=function(t){var e=this;return i.from(this.taskActionsApi.completeTask(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.getTotalTasks=function(t){var e=this;return t.size=0,i.from(this.callApiTasksFiltered(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.createNewTask=function(t){var e=this;return i.from(this.callApiCreateTask(t)).pipe(o.map((function(t){return new ot(t)})),o.catchError((function(t){return e.handleError(t)})))},t.prototype.assignTask=function(t,e){var n=this,a={assignee:e.id};return i.from(this.callApiAssignTask(t,a)).pipe(o.map((function(t){return new ot(t)})),o.catchError((function(t){return n.handleError(t)})))},t.prototype.assignTaskByUserId=function(t,e){var n=this,a={assignee:e};return i.from(this.callApiAssignTask(t,a)).pipe(o.map((function(t){return new ot(t)})),o.catchError((function(t){return n.handleError(t)})))},t.prototype.claimTask=function(t){var e=this;return i.from(this.taskActionsApi.claimTask(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.unclaimTask=function(t){var e=this;return i.from(this.taskActionsApi.unclaimTask(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.updateTask=function(t,e){var n=this;return i.from(this.tasksApi.updateTask(t,e)).pipe(o.map((function(t){return t})),o.catchError((function(t){return n.handleError(t)})))},t.prototype.fetchTaskAuditPdfById=function(t){var e=this;return i.from(this.tasksApi.getTaskAuditPdf(t)).pipe(o.map((function(t){return t})),o.catchError((function(t){return e.handleError(t)})))},t.prototype.fetchTaskAuditJsonById=function(t){var e=this;return i.from(this.tasksApi.getTaskAuditLog(t)).pipe(o.catchError((function(t){return e.handleError(t)})))},t.prototype.callApiTasksFiltered=function(t){return this.tasksApi.listTasks(t)},t.prototype.callApiTaskDetails=function(t){return this.tasksApi.getTask(t)},t.prototype.callApiAddTask=function(t){return this.checklistsApi.addSubtask(t.parentTaskId,t)},t.prototype.callApiDeleteTask=function(t){return this.tasksApi.deleteTask(t)},t.prototype.callApiDeleteForm=function(t){return this.taskActionsApi.removeForm(t)},t.prototype.callApiTaskChecklist=function(t){return this.checklistsApi.getChecklist(t)},t.prototype.callApiCreateTask=function(t){return this.tasksApi.createNewTask(t)},t.prototype.callApiAssignTask=function(t,e){return this.taskActionsApi.assignTask(t,e)},t.prototype.handleError=function(t){return this.logService.error(t),i.throwError(t||"Server error")},t}();rt.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new rt(n.ɵɵinject(e.AlfrescoApiService),n.ɵɵinject(e.LogService))},token:rt,providedIn:"root"}),rt.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],rt.ctorParameters=function(){return[{type:e.AlfrescoApiService},{type:e.LogService}]};var st=function(t){function a(o,r,s){var c=t.call(this,r,a.PRESET_KEY,nt)||this;return c.taskListService=o,c.userPreferences=s,c.selectionMode="single",c.multiselect=!1,c.selectFirstRow=!0,c.showContextMenu=!1,c.stickyHeader=!1,c.showRowContextMenu=new n.EventEmitter,c.rowClick=new n.EventEmitter,c.rowsSelected=new n.EventEmitter,c.success=new n.EventEmitter,c.error=new n.EventEmitter,c.page=0,c.size=e.PaginationComponent.DEFAULT_PAGINATION.maxItems,c.rows=[],c.isLoading=!0,c.sorting=["created","desc"],c.hasCustomDataSource=!1,c.onDestroy$=new i.Subject,c.pagination=new i.BehaviorSubject({maxItems:c.size,skipCount:0,totalItems:0}),c}return G(a,t),a.prototype.ngAfterContentInit=function(){this.createDatatableSchema(),this.data&&0===this.data.getColumns().length&&this.data.setColumns(this.columns),this.appId&&this.reload()},a.prototype.ngOnInit=function(){var t=this;this.userPreferences.select(e.UserPreferenceValues.PaginationSize).pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){return t.size=e}))},a.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},a.prototype.setCustomDataSource=function(t){t&&(this.rows=t,this.hasCustomDataSource=!0)},a.prototype.ngOnChanges=function(t){this.isPropertyChanged(t)&&(this.isSortChanged(t)&&(this.sorting=this.sort?this.sort.split("-"):this.sorting),this.reload());var e=t.presetColumn;e&&!e.firstChange&&(this.columns=this.mergeJsonAndHtmlSchema())},a.prototype.isSortChanged=function(t){var e=t.sort;return e&&e.currentValue&&e.currentValue!==e.previousValue},a.prototype.isPropertyChanged=function(t){var e=!0,n=t.landingTaskId,i=t.page,o=t.size;return n&&n.currentValue&&this.isEqualToCurrentId(n.currentValue)?e=!1:(i&&i.currentValue!==i.previousValue||o&&o.currentValue!==o.previousValue)&&(e=!0),e},a.prototype.reload=function(){this.hasCustomDataSource?this.isLoading=!1:(this.requestNode=this.createRequestNode(),this.load())},a.prototype.load=function(){var t=this;this.isLoading=!0,this.loadTasksByState().pipe(o.finalize((function(){return t.isLoading=!1}))).subscribe((function(e){t.rows=t.optimizeTaskDetails(e.data),t.selectTask(t.landingTaskId),t.success.emit(e),t.pagination.next({count:e.data.length,maxItems:t.size,skipCount:t.page*t.size,totalItems:e.total})}),(function(e){t.error.emit(e)}))},a.prototype.loadTasksByState=function(){return"all"===this.requestNode.state?this.taskListService.findAllTasksWithoutState(this.requestNode):this.taskListService.findTasksByState(this.requestNode)},a.prototype.selectTask=function(t){if(this.isListEmpty())this.currentInstanceId=null;else{var e=null;t&&(e=this.rows.find((function(e){return e.id===t}))),!e&&this.selectFirstRow&&(e=this.rows[0]),e&&(e.isSelected=!0,this.currentInstanceId=e.id)}},a.prototype.getCurrentId=function(){return this.currentInstanceId},a.prototype.isEqualToCurrentId=function(t){return this.currentInstanceId===t},a.prototype.isListEmpty=function(){return!this.rows||0===this.rows.length},a.prototype.onRowClick=function(t){this.currentInstanceId=t.value.getValue("id"),this.rowClick.emit(this.currentInstanceId)},a.prototype.onRowSelect=function(t){this.selectedInstances=J(t.detail.selection),this.rowsSelected.emit(this.selectedInstances)},a.prototype.onRowUnselect=function(t){this.selectedInstances=J(t.detail.selection),this.rowsSelected.emit(this.selectedInstances)},a.prototype.onRowKeyUp=function(t){"Enter"===t.detail.keyboardEvent.key&&(t.preventDefault(),this.currentInstanceId=t.detail.row.getValue("id"),this.rowClick.emit(this.currentInstanceId))},a.prototype.onShowRowContextMenu=function(t){this.showRowContextMenu.emit(t)},a.prototype.optimizeTaskDetails=function(t){return t=t.map((function(t){return t.name||(t.name="No name"),t}))},a.prototype.createRequestNode=function(){var t={appDefinitionId:this.appId,dueAfter:this.dueAfter?c(this.dueAfter).toDate():null,dueBefore:this.dueBefore?c(this.dueBefore).toDate():null,processInstanceId:this.processInstanceId,processDefinitionId:this.processDefinitionId,text:this.name,assignment:this.assignment,state:this.state,sort:this.sort,page:this.page,size:this.size,start:this.start,taskId:this.taskId,includeProcessInstance:this.includeProcessInstance};return new et(t)},a.prototype.updatePagination=function(t){var e=t.maxItems||t.skipCount;this.size=t.maxItems,this.page=this.currentPage(t.skipCount,t.maxItems),e&&this.reload()},a.prototype.currentPage=function(t,e){return t&&e?Math.floor(t/e):0},a}(e.DataTableSchema);st.PRESET_KEY="adf-task-list.presets",st.decorators=[{type:n.Component,args:[{selector:"adf-tasklist",template:'<div *ngIf="!requestNode">{{ \'ADF_TASK_LIST.FILTERS.MESSAGES.NONE\' | translate }}</div>\n<ng-container *ngIf="requestNode">\n        <adf-datatable\n            [data]="data"\n            [rows]="rows"\n            [columns]="columns"\n            [sorting]="sorting"\n            [loading]="isLoading"\n            [stickyHeader]="stickyHeader"\n            [multiselect]="multiselect"\n            [selectionMode]="selectionMode"\n            [contextMenu]="showContextMenu"\n            (showRowContextMenu)="onShowRowContextMenu($event)"\n            (row-select)="onRowSelect($any($event))"\n            (row-unselect)="onRowUnselect($any($event))"\n            (rowClick)="onRowClick($any($event))"\n            (row-keyup)="onRowKeyUp($any($event))">\n            <adf-loading-content-template>\n                <ng-template>\n                    \x3c!--Add your custom loading template here--\x3e\n                    <mat-progress-spinner\n                        *ngIf="!customLoadingContent"\n                        class="adf-task-list-loading-margin"\n                        color="primary"\n                        mode="indeterminate">\n                    </mat-progress-spinner>\n                    <ng-content select="adf-custom-loading-content-template"></ng-content>\n                </ng-template>\n            </adf-loading-content-template>\n            <adf-no-content-template>\n                <ng-template>\n                    <adf-empty-content *ngIf="!customEmptyContent"\n                        icon="assignment"\n                        [title]="\'ADF_TASK_LIST.LIST.MESSAGES.TITLE\' | translate"\n                        [subtitle]="\'ADF_TASK_LIST.LIST.MESSAGES.SUBTITLE\' | translate">\n                    </adf-empty-content>\n                    <ng-content select="adf-custom-empty-content-template"></ng-content>\n                </ng-template>\n            </adf-no-content-template>\n        </adf-datatable>\n</ng-container>\n',styles:[".adf-task-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],st.ctorParameters=function(){return[{type:rt},{type:e.AppConfigService},{type:e.UserPreferencesService}]},st.propDecorators={customEmptyContent:[{type:n.ContentChild,args:[e.CustomEmptyContentTemplateDirective]}],customLoadingContent:[{type:n.ContentChild,args:[e.CustomLoadingContentTemplateDirective]}],appId:[{type:n.Input}],processInstanceId:[{type:n.Input}],processDefinitionId:[{type:n.Input}],state:[{type:n.Input}],assignment:[{type:n.Input}],sort:[{type:n.Input}],name:[{type:n.Input}],landingTaskId:[{type:n.Input}],data:[{type:n.Input}],selectionMode:[{type:n.Input}],multiselect:[{type:n.Input}],selectFirstRow:[{type:n.Input}],taskId:[{type:n.Input}],includeProcessInstance:[{type:n.Input}],start:[{type:n.Input}],showContextMenu:[{type:n.Input}],stickyHeader:[{type:n.Input}],showRowContextMenu:[{type:n.Output}],rowClick:[{type:n.Output}],rowsSelected:[{type:n.Output}],success:[{type:n.Output}],error:[{type:n.Output}],page:[{type:n.Input}],size:[{type:n.Input}],dueAfter:[{type:n.Input}],dueBefore:[{type:n.Input}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ct=function(){function t(t,e){this.activitiTaskList=t,this.dialog=e,this.readOnly=!1,this.checklistTaskCreated=new n.EventEmitter,this.checklistTaskDeleted=new n.EventEmitter,this.error=new n.EventEmitter,this.checklist=[]}return t.prototype.ngOnChanges=function(t){var e=t.taskId;e&&e.currentValue&&this.getTaskChecklist()},t.prototype.getTaskChecklist=function(){var t=this;this.checklist=[],this.taskId?this.activitiTaskList.getTaskChecklist(this.taskId).subscribe((function(e){e.forEach((function(e){t.checklist.push(e)}))}),(function(e){t.error.emit(e)})):this.checklist=[]},t.prototype.showDialog=function(){this.dialog.open(this.addNewDialog,{width:"350px"})},t.prototype.add=function(){var t=this,e=new ot({name:this.taskName,parentTaskId:this.taskId,assignee:{id:this.assignee}});this.activitiTaskList.addTask(e).subscribe((function(e){t.checklist.push(e),t.checklistTaskCreated.emit(e),t.taskName=""}),(function(e){t.error.emit(e)})),this.cancel()},t.prototype.delete=function(t){var e=this;this.activitiTaskList.deleteTask(t).subscribe((function(){e.checklist=e.checklist.filter((function(e){return e.id!==t})),e.checklistTaskDeleted.emit(t)}),(function(t){e.error.emit(t)}))},t.prototype.cancel=function(){this.dialog.closeAll(),this.taskName=""},t}();ct.decorators=[{type:n.Component,args:[{selector:"adf-checklist",template:'<div class="adf-checklist-control">\n    <mat-chip-list data-automation-id="checklist-label">\n        <span class="adf-activiti-label">{{ \'ADF_TASK_LIST.DETAILS.LABELS.CHECKLIST\' | translate }}</span>\n        <mat-chip class="adf-process-badge" color="accent" selected="true">{{checklist?.length}}</mat-chip>\n    </mat-chip-list>\n\n\n    <button mat-icon-button *ngIf="!readOnly" matTooltip="Add a checklist" [matTooltipPosition]="\'before\'"\n            id="add-checklist" class="adf-add-to-checklist-button" (click)="showDialog()">\n        <mat-icon>add</mat-icon>\n    </button>\n</div>\n\n<div class="adf-checklist-menu-container" *ngIf="checklist?.length > 0">\n    <mat-chip-list class="mat-chip-list-stacked">\n        <mat-chip id="check-{{check.id}}" class="adf-checklist-chip" *ngFor="let check of checklist"\n                  (removed)="delete(check.id)">\n            <span>{{check.name}}</span>\n            <mat-icon *ngIf="!readOnly && !check.endDate" id="remove-{{check.id}}" matChipRemove>cancel\n            </mat-icon>\n        </mat-chip>\n    </mat-chip-list>\n\n</div>\n<div *ngIf="checklist?.length === 0" id="checklist-none-message" class="adf-checklist-none-message">\n    {{ \'ADF_TASK_LIST.DETAILS.CHECKLIST.NONE\' | translate }}\n</div>\n\n<ng-template #dialog>\n    <div class="adf-checklist-dialog" id="checklist-dialog">\n        <h4 matDialogTitle id="add-checklist-title">{{ \'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.TITLE\' | translate }}</h4>\n        <mat-dialog-content>\n            <mat-form-field>\n                <input matInput placeholder="{{ \'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.PLACEHOLDER\' | translate }}" [(ngModel)]="taskName" id="checklist-name"\n                       data-automation-id="checklist-name">\n            </mat-form-field>\n        </mat-dialog-content>\n        <mat-dialog-actions class="adf-checklist-dialog-actions">\n            <button mat-button type="button" id="close-check-dialog" (click)="cancel()">{{ \'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.CANCEL-BUTTON\' | translate | uppercase }}</button>\n            <button mat-button type="button" id="add-check" (click)="add()">{{ \'ADF_TASK_LIST.DETAILS.CHECKLIST.DIALOG.ADD-BUTTON\' | translate | uppercase  }}</button>\n        </mat-dialog-actions>\n    </div>\n</ng-template>\n',styles:[":host{width:100%}.adf-activiti-label{font-weight:bolder}.mat-form-field{width:100%}.adf-checklist-cancel-button{float:right;margin-right:-13px;margin-top:-13px}.adf-checklist-chip{outline:none}.adf-checklist-menu-container,.adf-checklist-none-message{margin-top:10px}.adf-checklist-control{display:flex;justify-content:space-between}.adf-checklist-control .adfactiviti-label{margin-right:10px;margin-top:6px}.adf-checklist-control .adf-add-to-checklist-button{float:right}.adf-checklist-dialog-actions{display:flex;justify-content:flex-end}"]}]}],ct.ctorParameters=function(){return[{type:rt},{type:s.MatDialog}]},ct.propDecorators={taskId:[{type:n.Input}],readOnly:[{type:n.Input}],assignee:[{type:n.Input}],checklistTaskCreated:[{type:n.Output}],checklistTaskDeleted:[{type:n.Output}],error:[{type:n.Output}],addNewDialog:[{type:n.ViewChild,args:["dialog",{static:!0}]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var lt=function(){function t(){this.message="ADF_CLOUD_TASK_HEADER.FORM_VALIDATION.INVALID_FIELD"}return t.prototype.isValid=function(t){var e=0===(t||"").trim().length;return 0===t.length||!e},t}(),pt=function(){function t(t,e,i){this.bpmUserService=t,this.translationService=e,this.appConfig=i,this.formName=null,this.showClaimRelease=!0,this.claim=new n.EventEmitter,this.unclaim=new n.EventEmitter,this.properties=[],this.inEdit=!1,this.displayDateClearAction=!1,this.dateFormat=this.appConfig.get("dateValues.defaultDateFormat"),this.dateLocale=this.appConfig.get("dateValues.defaultDateLocale")}return t.prototype.ngOnInit=function(){this.loadCurrentBpmUserId(),this.initData()},t.prototype.ngOnChanges=function(t){var e,n,i=t.taskDetails;(null===(e=null==i?void 0:i.currentValue)||void 0===e?void 0:e.id)!==(null===(n=null==i?void 0:i.previousValue)||void 0===n?void 0:n.id)?this.initData():this.refreshData()},t.prototype.initDefaultProperties=function(t){return[new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.ASSIGNEE",value:this.taskDetails.getFullName(),key:"assignee",default:this.translationService.instant("ADF_TASK_LIST.PROPERTIES.ASSIGNEE_DEFAULT"),clickable:!this.isCompleted(),icon:"create"}),new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.STATUS",value:this.getTaskStatus(),key:"status"}),new e.CardViewIntItemModel({label:"ADF_TASK_LIST.PROPERTIES.PRIORITY",value:this.taskDetails.priority,key:"priority",editable:!0,validators:[new e.CardViewItemLengthValidator(1,10)]}),new e.CardViewDateItemModel({label:"ADF_TASK_LIST.PROPERTIES.DUE_DATE",value:this.taskDetails.dueDate,key:"dueDate",default:this.translationService.instant("ADF_TASK_LIST.PROPERTIES.DUE_DATE_DEFAULT"),editable:!0,format:this.dateFormat,locale:this.dateLocale}),new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.CATEGORY",value:this.taskDetails.category,key:"category",default:this.translationService.instant("ADF_TASK_LIST.PROPERTIES.CATEGORY_DEFAULT")}),new e.CardViewMapItemModel({label:"ADF_TASK_LIST.PROPERTIES.PARENT_NAME",value:t,key:"parentName",default:this.translationService.instant("ADF_TASK_LIST.PROPERTIES.PARENT_NAME_DEFAULT"),clickable:!0}),new e.CardViewDateItemModel({label:"ADF_TASK_LIST.PROPERTIES.CREATED",value:this.taskDetails.created,key:"created",format:this.dateFormat,locale:this.dateLocale}),new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.DURATION",value:this.getTaskDuration(),key:"duration"}),new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.PARENT_TASK_ID",value:this.taskDetails.parentTaskId,key:"parentTaskId"}),new e.CardViewDateItemModel({label:"ADF_TASK_LIST.PROPERTIES.END_DATE",value:this.taskDetails.endDate,key:"endDate",format:this.dateFormat,locale:this.dateLocale}),new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.ID",value:this.taskDetails.id,key:"id"}),new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.DESCRIPTION",value:this.taskDetails.description,key:"description",default:this.translationService.instant("ADF_TASK_LIST.PROPERTIES.DESCRIPTION_DEFAULT"),multiline:!0,editable:!0,validators:[new lt]}),new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.FORM_NAME",value:this.formName,key:"formName",default:this.translationService.instant("ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT"),clickable:this.isFormClickable(),icon:"create"})]},t.prototype.initData=function(){var t=this;if(this.taskDetails){var e=this.getParentInfo(),n=this.initDefaultProperties(e),i=this.appConfig.get("adf-task-header.presets.properties");this.properties=n.filter((function(e){return t.isValidSelection(i,e)}))}},t.prototype.refreshData=function(){var t=this;this.properties=this.properties.map((function(n){return"formName"===n.key&&n.value!==t.formName?new e.CardViewTextItemModel({label:"ADF_TASK_LIST.PROPERTIES.FORM_NAME",value:t.formName,key:"formName",default:t.translationService.instant("ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT"),clickable:t.isFormClickable(),icon:"create"}):n}))},t.prototype.isValidSelection=function(t,e){return!t||t.indexOf(e.key)>=0},t.prototype.loadCurrentBpmUserId=function(){var t=this;this.bpmUserService.getCurrentUserInfo().subscribe((function(e){t.currentUserId=e?+e.id:null}))},t.prototype.getParentInfo=function(){return this.taskDetails.processInstanceId&&this.taskDetails.processDefinitionName?new Map([[this.taskDetails.processInstanceId,this.taskDetails.processDefinitionName]]):new Map},t.prototype.hasAssignee=function(){return!!this.taskDetails.assignee},t.prototype.isAssignedTo=function(t){return!!this.hasAssignee()&&this.taskDetails.assignee.id===t},t.prototype.isAssignedToCurrentUser=function(){return this.hasAssignee()&&this.isAssignedTo(this.currentUserId)},t.prototype.isCandidateMember=function(){return this.taskDetails.managerOfCandidateGroup||this.taskDetails.memberOfCandidateGroup||this.taskDetails.memberOfCandidateUsers},t.prototype.isTaskClaimable=function(){return!this.hasAssignee()&&this.isCandidateMember()},t.prototype.isTaskClaimedByCandidateMember=function(){return this.isCandidateMember()&&this.isAssignedToCurrentUser()&&!this.isCompleted()},t.prototype.getTaskStatus=function(){return this.taskDetails&&this.taskDetails.isCompleted()?"Completed":"Running"},t.prototype.onClaimTask=function(t){this.claim.emit(t)},t.prototype.onUnclaimTask=function(t){this.unclaim.emit(t)},t.prototype.isCompleted=function(){return this.taskDetails&&!!this.taskDetails.endDate},t.prototype.isFormClickable=function(){return!!this.formName&&!this.isCompleted()},t.prototype.getTaskDuration=function(){return this.taskDetails.duration?this.taskDetails.duration+" ms":""},t}();
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */pt.decorators=[{type:n.Component,args:[{selector:"adf-task-header",template:'<mat-card *ngIf="taskDetails" class="adf-card-container">\n    <mat-card-content>\n        <adf-card-view [properties]="properties" [editable]="!isCompleted()" [displayClearAction]="displayDateClearAction"></adf-card-view>\n    </mat-card-content>\n\n    <mat-card-actions class="adf-controls" *ngIf="showClaimRelease">\n        <button *ngIf="isTaskClaimedByCandidateMember()" \n            mat-button \n            data-automation-id="header-unclaim-button" \n            id="unclaim-task" \n            class="adf-claim-controls"\n            adf-unclaim-task\n            [taskId]="taskDetails.id"\n            (success)="onUnclaimTask($event)">\n            {{ \'ADF_TASK_LIST.DETAILS.BUTTON.UNCLAIM\' | translate }}\n        </button>\n        <button *ngIf="isTaskClaimable()" \n            mat-button \n            data-automation-id="header-claim-button" \n            id="claim-task" \n            class="adf-claim-controls"\n            adf-claim-task\n            [taskId]="taskDetails.id"\n            (success)="onClaimTask($event)">\n            {{ \'ADF_TASK_LIST.DETAILS.BUTTON.CLAIM\' | translate }}\n        </button>\n    </mat-card-actions>\n</mat-card>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-controls{display:flex;justify-content:space-between}.adf-edit-controls{display:flex;justify-content:flex-end;margin-left:auto}.adf-save-edit-mode,.adf-switch-to-edit-mode{color:var(--theme-primary-color)}.adf-cancel-edit-mode,.adf-claim-controls{color:#838383}.adf-card-container{font-family:inherit}@media screen and (max-width:959px){adf-card-view .adf-property-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}"]}]}],pt.ctorParameters=function(){return[{type:e.BpmUserService},{type:e.TranslationService},{type:e.AppConfigService}]},pt.propDecorators={formName:[{type:n.Input}],taskDetails:[{type:n.Input}],showClaimRelease:[{type:n.Input}],claim:[{type:n.Output}],unclaim:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var dt=function(){function t(t,e,o,a,r){this.taskListService=t,this.peopleProcessService=e,this.logService=o,this.cardViewUpdateService=a,this.dialog=r,this.debugMode=!1,this.showNextTask=!0,this.showHeader=!0,this.showHeaderContent=!0,this.showInvolvePeople=!0,this.showComments=!0,this.showChecklist=!0,this.showFormTitle=!1,this.showFormCompleteButton=!0,this.showFormSaveButton=!0,this.readOnlyForm=!1,this.showFormRefreshButton=!0,this.fieldValidators=[],this.formSaved=new n.EventEmitter,this.formCompleted=new n.EventEmitter,this.formContentClicked=new n.EventEmitter,this.formLoaded=new n.EventEmitter,this.taskCreated=new n.EventEmitter,this.taskDeleted=new n.EventEmitter,this.error=new n.EventEmitter,this.executeOutcome=new n.EventEmitter,this.assignTask=new n.EventEmitter,this.claimedTask=new n.EventEmitter,this.unClaimedTask=new n.EventEmitter,this.taskFormName=null,this.taskPeople=[],this.showAssignee=!1,this.showAttachForm=!1,this.internalReadOnlyForm=!1,this.onDestroy$=new i.Subject}return t.prototype.ngOnInit=function(){var t=this;this.peopleSearch=new i.Observable((function(e){return t.peopleSearchObserver=e})).pipe(o.share()),this.taskId&&this.loadDetails(this.taskId),this.cardViewUpdateService.itemUpdated$.pipe(o.takeUntil(this.onDestroy$)).subscribe(this.updateTaskDetails.bind(this)),this.cardViewUpdateService.itemClicked$.pipe(o.takeUntil(this.onDestroy$)).subscribe(this.clickTaskDetails.bind(this))},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.ngOnChanges=function(t){var e=t.taskId;this.showAssignee=!1,e&&!e.currentValue?this.reset():e&&e.currentValue&&this.loadDetails(e.currentValue)},t.prototype.isShowAttachForm=function(){return this.showAttachForm},t.prototype.reset=function(){this.taskDetails=null},t.prototype.isTaskActive=function(){return this.taskDetails&&null===this.taskDetails.duration},t.prototype.updateTaskDetails=function(t){var e=this;this.taskListService.updateTask(this.taskId,t.changed).pipe(o.catchError((function(){return e.cardViewUpdateService.updateElement(t.target),i.of(null)}))).subscribe((function(){return e.loadDetails(e.taskId)}))},t.prototype.clickTaskDetails=function(t){"assignee"===t.target.key&&(this.showAssignee=!0),"formName"===t.target.key&&(this.showAttachForm=!0)},t.prototype.loadDetails=function(t){var n=this;this.taskPeople=[],t&&this.taskListService.getTaskDetails(t).subscribe((function(t){n.showAttachForm=!1,n.taskDetails=t,"null"===n.taskDetails.name&&(n.taskDetails.name="No name");var i=t.endDate;i&&!isNaN(i.getTime())?n.internalReadOnlyForm=!0:n.internalReadOnlyForm=n.readOnlyForm,n.taskDetails&&n.taskDetails.involvedPeople&&n.taskDetails.involvedPeople.forEach((function(t){n.taskPeople.push(new e.UserProcessModel(t))}))}))},t.prototype.isAssigned=function(){return!!this.taskDetails.assignee},t.prototype.loadNextTask=function(t,e){var n=this,i=new et({processInstanceId:t,processDefinitionId:e});this.taskListService.getTasks(i).subscribe((function(t){t&&t.length>0?n.taskDetails=new ot(t[0]):n.reset()}),(function(t){n.error.emit(t)}))},t.prototype.onComplete=function(){this.onFormCompleted(null)},t.prototype.onShowAttachForm=function(){this.showAttachForm=!0},t.prototype.onCancelAttachForm=function(){this.showAttachForm=!1},t.prototype.onCompleteAttachForm=function(){this.taskFormName=null,this.showAttachForm=!1,this.taskFormComponent.loadTask(this.taskId),this.loadDetails(this.taskId)},t.prototype.onFormContentClick=function(t){this.formContentClicked.emit(t)},t.prototype.onFormSaved=function(t){this.formSaved.emit(t)},t.prototype.onFormCompleted=function(t){this.formCompleted.emit(t),this.showNextTask&&(this.taskDetails.processInstanceId||this.taskDetails.processDefinitionId)&&this.loadNextTask(this.taskDetails.processInstanceId,this.taskDetails.processDefinitionId)},t.prototype.onFormLoaded=function(t){this.taskFormName=t&&t.name?t.name:null,this.formLoaded.emit(t)},t.prototype.onChecklistTaskCreated=function(t){this.taskCreated.emit(t)},t.prototype.onChecklistTaskDeleted=function(t){this.taskDeleted.emit(t)},t.prototype.onFormError=function(t){this.errorDialogRef=this.dialog.open(this.errorDialog,{width:"500px"}),this.error.emit(t)},t.prototype.onFormExecuteOutcome=function(t){this.executeOutcome.emit(t)},t.prototype.closeErrorDialog=function(){this.dialog.closeAll()},t.prototype.onClaimAction=function(t){this.claimedTask.emit(t),this.loadDetails(t)},t.prototype.onUnclaimAction=function(t){this.unClaimedTask.emit(t),this.loadDetails(t)},t.prototype.searchUser=function(t){var e=this;this.peopleProcessService.getWorkflowUsers(null,t).subscribe((function(t){t=t.filter((function(t){return t.id!==e.taskDetails.assignee.id})),e.peopleSearchObserver.next(t)}),(function(){return e.logService.error("Could not load users")}))},t.prototype.onCloseSearch=function(){this.showAssignee=!1},t.prototype.assignTaskToUser=function(t){var e=this;this.taskListService.assignTask(this.taskDetails.id,t).subscribe((function(){e.logService.info("Task Assigned to "+t.email),e.assignTask.emit()})),this.showAssignee=!1},t.prototype.getTaskHeaderViewClass=function(){return this.showAssignee?"assign-edit-view":"default-view"},t.prototype.isReadOnlyComment=function(){return this.taskDetails&&this.taskDetails.isCompleted()&&this.taskPeople&&0===this.taskPeople.length},t}();dt.decorators=[{type:n.Component,args:[{selector:"adf-task-details",template:'<div *ngIf="!taskDetails" data-automation-id="adf-tasks-details--empty">\n    <ng-template *ngIf="noTaskDetailsTemplateComponent" ngFor [ngForOf]="[data]"\n                 [ngForTemplate]="noTaskDetailsTemplateComponent">\n        {{ \'ADF_TASK_LIST.DETAILS.MESSAGES.NONE\' | translate }}\n    </ng-template>\n    <div *ngIf="!noTaskDetailsTemplateComponent">\n        {{ \'ADF_TASK_LIST.DETAILS.MESSAGES.NONE\' | translate }}\n    </div>\n</div>\n<div *ngIf="taskDetails" class="adf-task-details">\n\n    <div *ngIf="showHeader" class="adf-task-details-header">\n        <h2 class="adf-activiti-task-details__header">\n            <span>{{taskDetails.name || \'No name\'}}</span>\n        </h2>\n    </div>\n\n    <div class="adf-task-details-core"\n        fxLayout="column"\n        fxLayoutGap="8px"\n        fxLayout.lt-lg="column">\n\n        <div class="adf-task-details-core-form">\n            <div *ngIf="isAssigned()">\n                <adf-task-form\n                          [taskId]="taskDetails.id"\n                          [showFormTitle]="showFormTitle"\n                          [showFormRefreshButton]="showFormRefreshButton"\n                          [showCancelButton]="true"\n                          [fieldValidators]="fieldValidators"\n                          (formSaved)=\'onFormSaved($event)\'\n                          (formCompleted)=\'onFormCompleted($event)\'\n                          (formContentClicked)=\'onFormContentClick($event)\'\n                          (formLoaded)=\'onFormLoaded($event)\'\n                          (completed)="onComplete()"\n                          (showAttachForm)="onShowAttachForm()"\n                          (executeOutcome)=\'onFormExecuteOutcome($event)\'\n                          (taskClaimed)="onClaimAction($event)"\n                          (taskUnclaimed)="onUnclaimAction($event)"\n                          (error)="onFormError($event)" #activitiTaskForm>\n                </adf-task-form>\n                <adf-attach-form *ngIf="isShowAttachForm()"\n                                 [taskId]="taskDetails.id"\n                                 [formKey]="taskDetails.formKey"\n                                 (cancelAttachForm)="onCancelAttachForm()"\n                                 (success)="onCompleteAttachForm()">\n                </adf-attach-form>\n            </div>\n            <div *ngIf="!isAssigned()" id="claim-message-id">\n                {{ \'ADF_TASK_LIST.DETAILS.MESSAGES.CLAIM\' | translate }}\n            </div>\n        </div>\n        <div class="adf-task-details-core-sidebar">\n            <adf-info-drawer *ngIf="showHeaderContent" title="ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TITLE" id="adf-task-details-core-sidebar-drawer" class="adf-task-details-core-sidebar-drawer">\n                <adf-info-drawer-tab label="ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_DETAILS_TITLE">\n                    <div class="adf-assignment-container" *ngIf="showAssignee">\n                        <adf-people-search\n                            (searchPeople)="searchUser($event)"\n                            (success)="assignTaskToUser($event)"\n                            (closeSearch)="onCloseSearch()"\n                            [results]="peopleSearch">\n                            <ng-container adf-people-search-title>{{ \'ADF_TASK_LIST.DETAILS.LABELS.ADD_ASSIGNEE\' | translate }}\n                            </ng-container>\n                            <ng-container adf-people-search-action-label>{{ \'ADF_TASK_LIST.PEOPLE.ADD_ASSIGNEE\' | translate }}\n                            </ng-container>\n                        </adf-people-search>\n                    </div>\n                    <adf-task-header\n                        [class]="getTaskHeaderViewClass()"\n                        [taskDetails]="taskDetails"\n                        [formName]="taskFormName"\n                        (claim)="onClaimAction($event)"\n                        (unclaim)="onUnclaimAction($event)">\n                    </adf-task-header>\n                    <adf-people *ngIf="showInvolvePeople" #people\n                                [people]="taskPeople"\n                                [readOnly]="internalReadOnlyForm"\n                                [taskId]="taskDetails.id">\n                    </adf-people>\n                </adf-info-drawer-tab>\n\n                <adf-info-drawer-tab label="ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_ACTIVITY_TITLE">\n                    <mat-card *ngIf="showComments">\n                        <mat-card-content>\n                            <adf-comments #activitiComments\n                                          [readOnly]="isReadOnlyComment()"\n                                          [taskId]="taskDetails.id">\n                            </adf-comments>\n                        </mat-card-content>\n                    </mat-card>\n                </adf-info-drawer-tab>\n\n            </adf-info-drawer>\n\n            <div *ngIf="showHeaderContent" class="adf-task-details-core-sidebar-checklist">\n                <div *ngIf="showChecklist">\n                    <adf-checklist #activitiChecklist\n                                   [readOnly]="internalReadOnlyForm"\n                                   [taskId]="taskDetails.id"\n                                   [assignee]="$any(taskDetails)?.assignee?.id"\n                                   (checklistTaskCreated)="onChecklistTaskCreated($event)"\n                                   (checklistTaskDeleted)="onChecklistTaskDeleted($event)">\n                    </adf-checklist>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <ng-template #errorDialog>\n        <h3 matDialogTitle>{{\'ADF_TASK_LIST.DETAILS.ERROR.TITLE\'|translate}}</h3>\n        <mat-dialog-content>\n            <p>{{\'ADF_TASK_LIST.DETAILS.ERROR.DESCRIPTION\'|translate}}</p>\n        </mat-dialog-content>\n        <mat-dialog-actions>\n            <button mat-button type="button" (click)="closeErrorDialog()">{{\'ADF_TASK_LIST.DETAILS.ERROR.CLOSE\'|translate}}\n            </button>\n        </mat-dialog-actions>\n    </ng-template>\n\n</div>\n',styles:[":host{width:100%}.adf-error-dialog h3{margin:16px 0}.adf-activiti-task-details__header{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;align-self:flex-end;cursor:pointer;display:flex;font-size:24px;font-weight:300;line-height:normal;margin:8px 0 16px;overflow:hidden;user-select:none}.adf-activiti-task-details__action-button{text-transform:uppercase}.adf-assignment-container{padding:10px 20px;width:auto}adf-task-header.adf-assign-edit-view ::ng-deep adf-card-view ::ng-deep .adf-property[data-automation-id=header-assignee]{display:none}.adf-task-details-header{display:flex;justify-content:space-between}.adf-task-details-header-toggle{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;height:23px;margin-right:2px;position:relative;top:10px;user-select:none}.adf-task-details-toggle{position:relative}.adf-task-details-core{display:flex;justify-content:space-between}@media screen and (max-width:1279px){.adf-task-details-core-sidebar-drawer{margin-left:0}}.adf-task-details-core-sidebar-checklist{margin-top:30px;padding-left:20px;padding-right:20px}.adf-task-details-core-form{flex-grow:1}.adf-task-details-core-form ::ng-deep .adf-form-debug-container{display:flex;flex-direction:column;padding:20px 0}.adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle{margin-left:auto}.adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle+div{background-color:#000;clear:both;color:#fff;margin-top:30px;padding:20px}.adf-task-details-core-form ::ng-deep .mat-tab-label{flex-grow:1}"]}]}],dt.ctorParameters=function(){return[{type:rt},{type:e.PeopleProcessService},{type:e.LogService},{type:e.CardViewUpdateService},{type:s.MatDialog}]},dt.propDecorators={activitiComments:[{type:n.ViewChild,args:["activitiComments"]}],activitiChecklist:[{type:n.ViewChild,args:["activitiChecklist"]}],errorDialog:[{type:n.ViewChild,args:["errorDialog"]}],taskFormComponent:[{type:n.ViewChild,args:["activitiTaskForm"]}],debugMode:[{type:n.Input}],taskId:[{type:n.Input}],showNextTask:[{type:n.Input}],showHeader:[{type:n.Input}],showHeaderContent:[{type:n.Input}],showInvolvePeople:[{type:n.Input}],showComments:[{type:n.Input}],showChecklist:[{type:n.Input}],showFormTitle:[{type:n.Input}],showFormCompleteButton:[{type:n.Input}],showFormSaveButton:[{type:n.Input}],readOnlyForm:[{type:n.Input}],showFormRefreshButton:[{type:n.Input}],fieldValidators:[{type:n.Input}],formSaved:[{type:n.Output}],formCompleted:[{type:n.Output}],formContentClicked:[{type:n.Output}],formLoaded:[{type:n.Output}],taskCreated:[{type:n.Output}],taskDeleted:[{type:n.Output}],error:[{type:n.Output}],executeOutcome:[{type:n.Output}],assignTask:[{type:n.Output}],claimedTask:[{type:n.Output}],unClaimedTask:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ut=function(){function t(t){this.activitiTaskDetails=t}return t.prototype.ngAfterContentInit=function(){this.activitiTaskDetails.noTaskDetailsTemplateComponent=this.template},t}();ut.decorators=[{type:n.Directive,args:[{selector:"adf-no-task-details-template, no-task-details-template"}]}],ut.ctorParameters=function(){return[{type:dt}]},ut.propDecorators={template:[{type:n.ContentChild,args:[n.TemplateRef]}]};var mt=function(){function t(t,e){this.apiService=t,this.logService=e}return Object.defineProperty(t.prototype,"userFiltersApi",{get:function(){var t;return this._userFiltersApi=null!==(t=this._userFiltersApi)&&void 0!==t?t:new a.UserFiltersApi(this.apiService.getInstance()),this._userFiltersApi},enumerable:!1,configurable:!0}),t.prototype.createDefaultFilters=function(t){var e=this,n=this.getMyTasksFilterInstance(t,0),o=this.addFilter(n),a=this.getInvolvedTasksFilterInstance(t,1),r=this.addFilter(a),s=this.getQueuedTasksFilterInstance(t,2),c=this.addFilter(s),l=this.getCompletedTasksFilterInstance(t,3),p=this.addFilter(l);return new i.Observable((function(d){i.forkJoin([o,r,c,p]).subscribe((function(e){var i=[];e.forEach((function(e){e.name===a.name?i.push(new tt(Object.assign(Object.assign({},e),{filter:a.filter,appId:t}))):e.name===n.name?i.push(new tt(Object.assign(Object.assign({},e),{filter:n.filter,appId:t}))):e.name===s.name?i.push(new tt(Object.assign(Object.assign({},e),{filter:s.filter,appId:t}))):e.name===l.name&&i.push(new tt(Object.assign(Object.assign({},e),{filter:l.filter,appId:t})))})),d.next(i),d.complete()}),(function(t){e.logService.error(t)}))}))},t.prototype.getTaskListFilters=function(t){var e=this;return i.from(this.callApiTaskFilters(t)).pipe(o.map((function(t){var e=[];return t.data.forEach((function(t){var n=new tt(t);e.push(n)})),e})),o.catchError((function(t){return e.handleError(t)})))},t.prototype.getTaskFilterById=function(t,e){var n=this;return i.from(this.callApiTaskFilters(e)).pipe(o.map((function(e){return e.data.find((function(e){return e.id===t}))})),o.catchError((function(t){return n.handleError(t)})))},t.prototype.getTaskFilterByName=function(t,e){var n=this;return i.from(this.callApiTaskFilters(e)).pipe(o.map((function(e){return e.data.find((function(e){return e.name===t}))})),o.catchError((function(t){return n.handleError(t)})))},t.prototype.addFilter=function(t){var e=this;return i.from(this.userFiltersApi.createUserTaskFilter(t)).pipe(o.map((function(t){return t})),o.catchError((function(t){return e.handleError(t)})))},t.prototype.callApiTaskFilters=function(t){return t?this.userFiltersApi.getUserTaskFilters({appId:t}):this.userFiltersApi.getUserTaskFilters()},t.prototype.getMyTasksFilterInstance=function(t,e){return new tt({name:"My Tasks",appId:t,recent:!1,icon:"glyphicon-inbox",filter:{sort:"created-desc",name:"",state:"open",assignment:"assignee"},index:e})},t.prototype.getInvolvedTasksFilterInstance=function(t,e){return new tt({name:"Involved Tasks",appId:t,recent:!1,icon:"glyphicon-align-left",filter:{sort:"created-desc",name:"",state:"open",assignment:"involved"},index:e})},t.prototype.getQueuedTasksFilterInstance=function(t,e){return new tt({name:"Queued Tasks",appId:t,recent:!1,icon:"glyphicon-record",filter:{sort:"created-desc",name:"",state:"open",assignment:"candidate"},index:e})},t.prototype.getCompletedTasksFilterInstance=function(t,e){return new tt({name:"Completed Tasks",appId:t,recent:!0,icon:"glyphicon-ok-sign",filter:{sort:"created-desc",name:"",state:"completed",assignment:"involved"},index:e})},t.prototype.handleError=function(t){return this.logService.error(t),i.throwError(t||"Server error")},t}();mt.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new mt(n.ɵɵinject(e.AlfrescoApiService),n.ɵɵinject(e.LogService))},token:mt,providedIn:"root"}),mt.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],mt.ctorParameters=function(){return[{type:e.AlfrescoApiService},{type:e.LogService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ft=function(){function t(t,e,i){this.taskFilterService=t,this.taskListService=e,this.appsProcessService=i,this.filterClicked=new n.EventEmitter,this.filterSelected=new n.EventEmitter,this.success=new n.EventEmitter,this.error=new n.EventEmitter,this.filters=[]}return t.prototype.ngOnInit=function(){this.iconsMDL=new x},t.prototype.ngOnChanges=function(t){var e=t.appName,n=t.appId,i=t.filterParam;e&&e.currentValue?this.getFiltersByAppName(e.currentValue):n&&n.currentValue!==n.previousValue?this.getFiltersByAppId(n.currentValue):i&&i.currentValue!==i.previousValue&&this.selectFilterAndEmit(i.currentValue)},t.prototype.getFilters=function(t,e){e?this.getFiltersByAppName(e):this.getFiltersByAppId(t)},t.prototype.getFiltersByAppId=function(t){var e=this;this.taskFilterService.getTaskListFilters(t).subscribe((function(n){0===n.length&&e.isFilterListEmpty()?e.createFiltersByAppId(t):(e.resetFilter(),e.filters=n,e.selectFilter(e.filterParam),e.success.emit(n))}),(function(t){e.error.emit(t)}))},t.prototype.getFiltersByAppName=function(t){var e=this;this.appsProcessService.getDeployedApplicationsByName(t).subscribe((function(t){e.getFiltersByAppId(t.id)}),(function(t){e.error.emit(t)}))},t.prototype.createFiltersByAppId=function(t){var e=this;this.taskFilterService.createDefaultFilters(t).subscribe((function(t){e.resetFilter(),e.filters=t,e.selectFilter(e.filterParam),e.success.emit(t)}),(function(t){e.error.emit(t)}))},t.prototype.selectFilter=function(t){t&&(this.currentFilter=this.filters.find((function(e,n){return t.index===n||t.id===e.id||t.name&&t.name.toLocaleLowerCase()===e.name.toLocaleLowerCase()})))},t.prototype.selectFilterAndEmit=function(t){this.selectFilter(t),this.filterSelected.emit(this.currentFilter)},t.prototype.onFilterClick=function(t){this.selectFilter(t),this.filterClicked.emit(this.currentFilter)},t.prototype.selectFilterWithTask=function(t){var e=this,n=[];this.taskListService.getFilterForTaskById(t,this.filters).subscribe((function(t){n.push(t)}),(function(t){e.error.emit(t)}),(function(){n.length>0&&(e.selectFilter(n[0]),e.filterSelected.emit(e.currentFilter))}))},t.prototype.selectDefaultTaskFilter=function(){this.isFilterListEmpty()||(this.currentFilter=this.filters[0])},t.prototype.getCurrentFilter=function(){return this.currentFilter},t.prototype.isFilterListEmpty=function(){return void 0===this.filters||this.filters&&0===this.filters.length},t.prototype.resetFilter=function(){this.filters=[],this.currentFilter=void 0},t.prototype.getFilterIcon=function(t){return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(t)},t}();ft.decorators=[{type:n.Component,args:[{selector:"adf-task-filters",template:'<div *ngFor="let filter of filters" class="adf-filters__entry" [class.adf-active]="currentFilter === filter">\n    <button (click)="onFilterClick(filter)"\n      [attr.aria-label]="filter.name | translate"\n      [id]="filter.id"\n      [attr.data-automation-id]="filter.name + \'_filter\'"\n      mat-button\n      class="adf-filter-action-button adf-full-width" fxLayout="row" fxLayoutAlign="space-between center">\n      <ng-container *ngIf="showIcon">\n        <adf-icon data-automation-id="adf-filter-icon" [value]="getFilterIcon(filter.icon)"></adf-icon>\n      </ng-container>\n      <span data-automation-id="adf-filter-label" class="adf-filter-action-button__label">{{ filter.name | translate }}</span>\n    </button>\n</div>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-filters__entry{cursor:pointer;font-size:14px!important;font-weight:700;height:24px;opacity:.54;padding:12px 0!important;width:100%}.adf-filters__entry .adf-full-width{display:flex;width:100%}.adf-filters__entry .adf-filter-action-button .adf-filter-action-button__label{margin:0 8px!important;padding-left:20px}.adf-filters__entry.adf-active,.adf-filters__entry:hover{color:var(--theme-primary-color);opacity:1}"]}]}],ft.ctorParameters=function(){return[{type:mt},{type:rt},{type:e.AppsProcessService}]},ft.propDecorators={filterParam:[{type:n.Input}],filterClicked:[{type:n.Output}],filterSelected:[{type:n.Output}],success:[{type:n.Output}],error:[{type:n.Output}],appId:[{type:n.Input}],appName:[{type:n.Input}],showIcon:[{type:n.Input}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ht=function(){function t(t,e,i){this.taskListService=t,this.authService=e,this.translationService=i,this.showFormTitle=!1,this.showFormCompleteButton=!0,this.showFormSaveButton=!0,this.showCancelButton=!0,this.readOnlyForm=!1,this.showFormRefreshButton=!0,this.showFormValidationIcon=!0,this.fieldValidators=[],this.formSaved=new n.EventEmitter,this.formCompleted=new n.EventEmitter,this.formContentClicked=new n.EventEmitter,this.formLoaded=new n.EventEmitter,this.showAttachForm=new n.EventEmitter,this.executeOutcome=new n.EventEmitter,this.completed=new n.EventEmitter,this.formError=new n.EventEmitter,this.error=new n.EventEmitter,this.cancel=new n.EventEmitter,this.taskClaimed=new n.EventEmitter,this.taskUnclaimed=new n.EventEmitter,this.loading=!1,this.internalReadOnlyForm=!1}return t.prototype.ngOnInit=function(){var t=this;this.authService.getBpmLoggedUser().subscribe((function(e){t.currentLoggedUser=e})),this.loadTask(this.taskId)},t.prototype.ngOnChanges=function(t){var e=t.taskId;e&&e.currentValue&&this.loadTask(this.taskId)},t.prototype.loadTask=function(t){var e=this;this.loading=!0,t&&this.taskListService.getTaskDetails(t).subscribe((function(t){e.taskDetails=t,e.taskDetails.name||(e.taskDetails.name="No name");var n=t.endDate;n&&!isNaN(n.getTime())?e.internalReadOnlyForm=!0:e.internalReadOnlyForm=e.readOnlyForm,e.loading=!1}))},t.prototype.onFormSaved=function(t){this.formSaved.emit(t)},t.prototype.onFormCompleted=function(t){this.formCompleted.emit(t)},t.prototype.onFormLoaded=function(t){this.formLoaded.emit(t)},t.prototype.onFormContentClick=function(t){this.formContentClicked.emit(t)},t.prototype.onFormExecuteOutcome=function(t){this.executeOutcome.emit(t)},t.prototype.onFormError=function(t){this.formError.emit(t)},t.prototype.onError=function(t){this.error.emit(t)},t.prototype.onCompleteTask=function(){var t=this;this.taskListService.completeTask(this.taskDetails.id).subscribe((function(){return t.completed.emit()}),(function(e){return t.error.emit(e)}))},t.prototype.onCancel=function(){this.cancel.emit()},t.prototype.onShowAttachForm=function(){this.showAttachForm.emit()},t.prototype.hasFormKey=function(){return this.taskDetails&&!!this.taskDetails.formKey},t.prototype.isStandaloneTask=function(){return!(this.taskDetails&&this.taskDetails.processDefinitionId)},t.prototype.isTaskLoaded=function(){return!!this.taskDetails},t.prototype.isCompletedTask=function(){return this.taskDetails&&void 0!==this.taskDetails.endDate&&null!==this.taskDetails.endDate},t.prototype.isCompleteButtonVisible=function(){return!this.hasFormKey()&&this.isTaskActive()&&this.isCompleteButtonEnabled()},t.prototype.isTaskActive=function(){return this.taskDetails&&null===this.taskDetails.duration},t.prototype.isAssigned=function(){return!!this.taskDetails.assignee},t.prototype.hasEmailAddress=function(){return!!this.taskDetails.assignee.email},t.prototype.isAssignedToMe=function(){return this.isAssigned()&&this.hasEmailAddress()?this.isEmailEqual():this.isExternalIdEqual()},t.prototype.isEmailEqual=function(){return this.taskDetails.assignee&&this.currentLoggedUser&&this.taskDetails.assignee.email.toLocaleLowerCase()===this.currentLoggedUser.email.toLocaleLowerCase()},t.prototype.isExternalIdEqual=function(){return this.taskDetails.assignee&&this.currentLoggedUser&&this.taskDetails.assignee.externalId===this.currentLoggedUser.externalId},t.prototype.isCompleteButtonEnabled=function(){return this.isAssignedToMe()||this.canInitiatorComplete()},t.prototype.canInitiatorComplete=function(){return this.taskDetails.initiatorCanCompleteTask},t.prototype.isReadOnlyForm=function(){return this.isCandidateMember()?this.internalReadOnlyForm||!this.isAssignedToMe():this.internalReadOnlyForm||!(this.isAssignedToMe()||this.canCurrentUserAsInitiatorComplete()||this.isCurrentUserInvolved())},t.prototype.isCurrentUserInvolved=function(){var t,e,n=this,i=!1;this.taskDetails.involvedPeople&&this.currentLoggedUser&&(i=!!this.taskDetails.involvedPeople.find((function(t){return t.email.toLocaleLowerCase()===n.currentLoggedUser.email.toLocaleLowerCase()||t.id+""===n.currentLoggedUser.externalId})));(null===(t=this.taskDetails.involvedGroups)||void 0===t?void 0:t.length)&&(null===(e=this.currentLoggedUser.groups)||void 0===e?void 0:e.length)&&!i&&(i=!!this.taskDetails.involvedGroups.find((function(t){return n.currentLoggedUser.groups.find((function(e){return e.name===t.name.toLocaleLowerCase()||e.id===t.id}))})));return i},t.prototype.canCurrentUserAsInitiatorComplete=function(){return this.canInitiatorComplete()&&this.isProcessInitiator()},t.prototype.isProcessInitiator=function(){return this.currentLoggedUser&&this.currentLoggedUser.id===+this.taskDetails.processInstanceStartUserId},t.prototype.isSaveButtonVisible=function(){return this.showFormSaveButton&&(!this.canInitiatorComplete()||this.isAssignedToMe()||this.isCurrentUserInvolved())},t.prototype.canCompleteNoFormTask=function(){return this.isReadOnlyForm()},t.prototype.getCompletedTaskTranslatedMessage=function(){return this.translationService.get("ADF_TASK_FORM.COMPLETED_TASK.TITLE",{taskName:this.taskDetails.name})},t.prototype.isCandidateMember=function(){return this.taskDetails.managerOfCandidateGroup||this.taskDetails.memberOfCandidateGroup||this.taskDetails.memberOfCandidateUsers},t.prototype.isTaskClaimable=function(){return this.isCandidateMember()&&!this.isAssigned()},t.prototype.isTaskClaimedByCandidateMember=function(){return this.isCandidateMember()&&this.isAssignedToMe()&&!this.isCompletedTask()},t.prototype.reloadTask=function(){this.loadTask(this.taskId)},t.prototype.onClaimTask=function(t){this.taskClaimed.emit(t)},t.prototype.onClaimTaskError=function(t){this.error.emit(t)},t.prototype.onUnclaimTask=function(t){this.taskUnclaimed.emit(t)},t.prototype.onUnclaimTaskError=function(t){this.error.emit(t)},t}();ht.decorators=[{type:n.Component,args:[{selector:"adf-task-form",template:'<ng-container *ngIf="!loading; else loadingTemplate">\n  <adf-form *ngIf="hasFormKey(); else withoutForm"\n    [taskId]="taskDetails?.id"\n    [showTitle]="showFormTitle"\n    [showValidationIcon]="showFormValidationIcon"\n    [showRefreshButton]="showFormRefreshButton"\n    [showCompleteButton]="showFormCompleteButton"\n    [showSaveButton]="isSaveButtonVisible()"\n    [disableCompleteButton]="!isCompleteButtonEnabled()"\n    [readOnly]="isReadOnlyForm()"\n    [fieldValidators]="fieldValidators"\n    (formSaved)=\'onFormSaved($event)\'\n    (formCompleted)=\'onFormCompleted($event)\'\n    (formContentClicked)=\'onFormContentClick($event)\'\n    (formLoaded)=\'onFormLoaded($event)\'\n    (formError)=\'onFormError($event)\'\n    (error)=\'onError($event)\'\n    (executeOutcome)=\'onFormExecuteOutcome($event)\'>\n    <adf-form-custom-outcomes>\n        <ng-template [ngTemplateOutlet]="taskFormButtons">\n        </ng-template>\n    </adf-form-custom-outcomes>\n  </adf-form>\n  <ng-template #withoutForm>\n    <adf-task-standalone *ngIf="isStandaloneTask(); else emptyFormMessage"\n        [taskName]="taskDetails.name"\n        [taskId]="taskDetails.id"\n        [isCompleted]="isCompletedTask()"\n        [hasCompletePermission]="isCompleteButtonVisible()"\n        [hideCancelButton]="showCancelButton"\n        (complete)="onCompleteTask()"\n        (showAttachForm)="onShowAttachForm()">\n    </adf-task-standalone>\n      <ng-template #emptyFormMessage>\n        <mat-card class="adf-task-form-container">\n            <mat-card-header>\n                <mat-card-title>\n                    <h4>\n                        <span class="adf-form-title">\n                            {{taskDetails.name}}\n                            <ng-container *ngIf="!taskDetails.name">\n                                {{\'FORM.FORM_RENDERER.NAMELESS_TASK\' | translate}}\n                            </ng-container>\n                        </span>\n                    </h4>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-empty-content *ngIf="isCompletedTask(); else emptyFormTemplate"\n                    [icon]="\'description\'"\n                    [title]="getCompletedTaskTranslatedMessage() | async"\n                    [subtitle]="\'ADF_TASK_FORM.COMPLETED_TASK.SUBTITLE\'">\n                </adf-empty-content>\n                <ng-template #emptyFormTemplate>\n                    <adf-empty-content\n                        [icon]="\'description\'"\n                        [title]="\'ADF_TASK_LIST.STANDALONE_TASK.NO_FORM_MESSAGE\'"\n                        [subtitle]="\'ADF_TASK_FORM.EMPTY_FORM.SUBTITLE\'">\n                    </adf-empty-content>\n                </ng-template>\n            </mat-card-content>\n            <mat-card-actions class="adf-task-form-actions">\n                <ng-template [ngTemplateOutlet]="taskFormButtons"></ng-template>\n                <button mat-button\n                    *ngIf="!isCompletedTask()" id="adf-no-form-complete-button"\n                    color="primary"\n                    [disabled]="canCompleteNoFormTask()"\n                    (click)="onCompleteTask()">\n                    {{\'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE\' | translate}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n      </ng-template>\n  </ng-template>\n\n  <ng-template #taskFormButtons>\n        <button mat-button id="adf-no-form-cancel-button"\n            *ngIf="showCancelButton"\n            (click)="onCancel()">\n            {{\'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL\' | translate}}\n        </button>\n        <button mat-button data-automation-id="adf-task-form-claim-button"\n            *ngIf="isTaskClaimable()"\n            adf-claim-task\n            [taskId]="taskId"\n            (success)="onClaimTask($event)"\n            (error)="onClaimTaskError($event)">\n            {{ \'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM\' | translate }}\n        </button>\n        <button mat-button data-automation-id="adf-task-form-unclaim-button"\n            *ngIf="isTaskClaimedByCandidateMember()"\n            adf-unclaim-task\n            [taskId]="taskId"\n            (success)="onUnclaimTask($event)"\n            (error)="onUnclaimTaskError($event)">\n            {{ \'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM\' | translate }}\n        </button>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTemplate>\n  <div fxLayout="row" fxLayoutAlign="center stretch">\n      <mat-spinner></mat-spinner>\n  </div>\n</ng-template>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"]}]}],ht.ctorParameters=function(){return[{type:rt},{type:e.AuthenticationService},{type:e.TranslationService}]},ht.propDecorators={taskId:[{type:n.Input}],showFormTitle:[{type:n.Input}],showFormCompleteButton:[{type:n.Input}],showFormSaveButton:[{type:n.Input}],showCancelButton:[{type:n.Input}],readOnlyForm:[{type:n.Input}],showFormRefreshButton:[{type:n.Input}],showFormValidationIcon:[{type:n.Input}],fieldValidators:[{type:n.Input}],formSaved:[{type:n.Output}],formCompleted:[{type:n.Output}],formContentClicked:[{type:n.Output}],formLoaded:[{type:n.Output}],showAttachForm:[{type:n.Output}],executeOutcome:[{type:n.Output}],completed:[{type:n.Output}],formError:[{type:n.Output}],error:[{type:n.Output}],cancel:[{type:n.Output}],taskClaimed:[{type:n.Output}],taskUnclaimed:[{type:n.Output}]};var gt=function(){function t(t,e){this.taskListService=t,this.logService=e,this.success=new n.EventEmitter,this.error=new n.EventEmitter,this.invalidParams=[]}return t.prototype.ngOnInit=function(){this.validateInputs()},t.prototype.validateInputs=function(){if(this.isTaskValid()||this.invalidParams.push("taskId"),this.invalidParams.length)throw new Error("Attribute "+this.invalidParams.join(", ")+" is required")},t.prototype.isTaskValid=function(){return this.taskId&&this.taskId.length>0},t.prototype.onClick=function(){return q(this,void 0,void 0,(function(){var t;return Y(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.claimTask()];case 1:return e.sent(),[3,3];case 2:return t=e.sent(),this.error.emit(t),[3,3];case 3:return[2]}}))}))},t.prototype.claimTask=function(){return q(this,void 0,void 0,(function(){var t=this;return Y(this,(function(e){switch(e.label){case 0:return[4,this.taskListService.claimTask(this.taskId).subscribe((function(){t.logService.info("Task claimed"),t.success.emit(t.taskId)}),(function(e){return t.error.emit(e)}))];case 1:return e.sent(),[2]}}))}))},t}();gt.decorators=[{type:n.Directive,args:[{selector:"[adf-claim-task]"}]}],gt.ctorParameters=function(){return[{type:rt},{type:e.LogService}]},gt.propDecorators={taskId:[{type:n.Input}],success:[{type:n.Output}],error:[{type:n.Output}],onClick:[{type:n.HostListener,args:["click"]}]};var yt=function(){function t(t,e){this.taskListService=t,this.logService=e,this.success=new n.EventEmitter,this.error=new n.EventEmitter,this.invalidParams=[]}return t.prototype.ngOnInit=function(){this.validateInputs()},t.prototype.validateInputs=function(){if(this.isTaskValid()||this.invalidParams.push("taskId"),this.invalidParams.length)throw new Error("Attribute "+this.invalidParams.join(", ")+" is required")},t.prototype.isTaskValid=function(){return this.taskId&&this.taskId.length>0},t.prototype.onClick=function(){return q(this,void 0,void 0,(function(){var t;return Y(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.unclaimTask()];case 1:return e.sent(),[3,3];case 2:return t=e.sent(),this.error.emit(t),[3,3];case 3:return[2]}}))}))},t.prototype.unclaimTask=function(){return q(this,void 0,void 0,(function(){var t=this;return Y(this,(function(e){switch(e.label){case 0:return[4,this.taskListService.unclaimTask(this.taskId).subscribe((function(){t.logService.info("Task unclaimed"),t.success.emit(t.taskId)}),(function(e){return t.error.emit(e)}))];case 1:return e.sent(),[2]}}))}))},t}();yt.decorators=[{type:n.Directive,args:[{selector:"[adf-unclaim-task]"}]}],yt.ctorParameters=function(){return[{type:rt},{type:e.LogService}]},yt.propDecorators={taskId:[{type:n.Input}],success:[{type:n.Output}],error:[{type:n.Output}],onClick:[{type:n.HostListener,args:["click"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var vt=function(){function t(t,e){this.contentService=t,this.taskListService=e,this.fileName="Audit",this.format="pdf",this.download=!0,this.clicked=new n.EventEmitter,this.error=new n.EventEmitter}return t.prototype.ngOnChanges=function(){this.isValidType()||this.setDefaultFormatType()},t.prototype.isValidType=function(){return this.format&&(this.isJsonFormat()||this.isPdfFormat())},t.prototype.setDefaultFormatType=function(){this.format="pdf"},t.prototype.fetchAuditInfo=function(){var t=this;this.isPdfFormat()?this.taskListService.fetchTaskAuditPdfById(this.taskId).subscribe((function(e){t.audit=e,t.download&&t.contentService.downloadBlob(t.audit,t.fileName+".pdf"),t.clicked.emit({format:t.format,value:t.audit,fileName:t.fileName})}),(function(e){t.error.emit(e)})):this.taskListService.fetchTaskAuditJsonById(this.taskId).subscribe((function(e){t.audit=e,t.clicked.emit({format:t.format,value:t.audit,fileName:t.fileName})}),(function(e){t.error.emit(e)}))},t.prototype.onClickAudit=function(){this.fetchAuditInfo()},t.prototype.isJsonFormat=function(){return"json"===this.format},t.prototype.isPdfFormat=function(){return"pdf"===this.format},t}();vt.decorators=[{type:n.Directive,args:[{selector:"button[adf-task-audit]",host:{role:"button","(click)":"onClickAudit()"}}]}],vt.ctorParameters=function(){return[{type:e.ContentService},{type:rt}]},vt.propDecorators={taskId:[{type:n.Input,args:["task-id"]}],fileName:[{type:n.Input}],format:[{type:n.Input}],download:[{type:n.Input}],clicked:[{type:n.Output}],error:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var It=e.MOMENT_DATE_FORMATS,St=function(){function t(t,e,o,a,r){this.taskService=t,this.dateAdapter=e,this.userPreferencesService=o,this.formBuilder=a,this.logService=r,this.FORMAT_DATE="DD/MM/YYYY",this.MAX_LENGTH=255,this.name="",this.success=new n.EventEmitter,this.cancel=new n.EventEmitter,this.error=new n.EventEmitter,this.taskDetailsModel=new ot,this.dateError=!1,this.maxTaskNameLength=this.MAX_LENGTH,this.loading=!1,this.onDestroy$=new i.Subject}return t.prototype.ngOnInit=function(){var t=this;this.name&&(this.taskDetailsModel.name=this.name),this.validateMaxTaskNameLength(),this.field=new e.FormFieldModel(new e.FormModel,{id:this.assigneeId,value:this.assigneeId,placeholder:"Assignee"}),this.userPreferencesService.select(e.UserPreferenceValues.Locale).pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){return t.dateAdapter.setLocale(e)})),this.loadFormsTask(),this.buildForm()},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.buildForm=function(){var t=this;this.taskForm=this.formBuilder.group({name:new p.FormControl(this.taskDetailsModel.name,[p.Validators.required,p.Validators.maxLength(this.maxTaskNameLength),this.whitespaceValidator]),description:new p.FormControl("",[this.whitespaceValidator]),formKey:new p.FormControl("")}),this.taskForm.valueChanges.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){return t.setTaskDetails(e)}))},t.prototype.whitespaceValidator=function(t){if(t.value){var e=0===(t.value||"").trim().length;return 0===t.value.length||!e?null:{whitespace:!0}}return null},t.prototype.setTaskDetails=function(t){this.taskDetailsModel.name=t.name,this.taskDetailsModel.description=t.description,this.taskDetailsModel.formKey=t.formKey?t.formKey.toString():null},t.prototype.isFormValid=function(){return this.taskForm.valid&&!this.dateError&&!this.loading},t.prototype.saveTask=function(){var t=this;this.loading=!0,this.appId&&(this.taskDetailsModel.category=this.appId.toString()),this.taskService.createNewTask(this.taskDetailsModel).pipe(o.switchMap((function(e){return t.attachForm(e.id,t.taskDetailsModel.formKey).pipe(o.defaultIfEmpty(e),o.switchMap((function(n){return t.assignTaskByUserId(e.id,t.assigneeId).pipe(o.defaultIfEmpty(n||e))})))}))).subscribe((function(e){t.loading=!1,t.success.emit(e)}),(function(e){t.loading=!1,t.error.emit(e),t.logService.error("An error occurred while creating new task")}))},t.prototype.getAssigneeId=function(t){this.assigneeId=t},t.prototype.attachForm=function(t,e){var n=i.of();return t&&e&&(n=this.taskService.attachFormToATask(t,parseInt(e,10))),n},t.prototype.assignTaskByUserId=function(t,e){var n=i.of();return t&&e&&(n=this.taskService.assignTaskByUserId(t,e)),n},t.prototype.onCancel=function(){this.cancel.emit()},t.prototype.loadFormsTask=function(){this.forms$=this.taskService.getFormList()},t.prototype.isUserNameEmpty=function(t){return!t||this.isEmpty(t.firstName)&&this.isEmpty(t.lastName)},t.prototype.isEmpty=function(t){return null==t||0===t.trim().length},t.prototype.getDisplayUser=function(t,e,n){return void 0===n&&(n="-"),(t=null!==t?t:"")+n+(e=null!==e?e:"")},t.prototype.onDateChanged=function(t){if(this.dateError=!1,t){var e=void 0;(e="string"==typeof t?c(t,this.FORMAT_DATE,!0):t).isValid()?this.taskDetailsModel.dueDate=e.toDate():(this.dateError=!0,this.taskDetailsModel.dueDate=null)}else this.taskDetailsModel.dueDate=null},t.prototype.validateMaxTaskNameLength=function(){this.maxTaskNameLength>this.MAX_LENGTH&&(this.maxTaskNameLength=this.MAX_LENGTH,this.logService.log("the task name length cannot be greater than "+this.MAX_LENGTH))},Object.defineProperty(t.prototype,"nameController",{get:function(){return this.taskForm.get("name")},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"descriptionController",{get:function(){return this.taskForm.get("description")},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"formKeyController",{get:function(){return this.taskForm.get("formKey")},enumerable:!1,configurable:!0}),t}();St.decorators=[{type:n.Component,args:[{selector:"adf-start-task",template:'<mat-card fxFlex="70%" class="adf-new-task-layout-card">\n    <mat-card-header fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="10px" class="adf-new-task-heading">\n        <mat-card-title>{{\'ADF_TASK_LIST.START_TASK.FORM.TITLE\' | translate}}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form [formGroup]="taskForm" fxLayout="column" fxLayoutGap="10px">\n            <div class="adf-task-name">\n                <mat-form-field fxFlex>\n                    <mat-label>{{\'ADF_TASK_LIST.START_TASK.FORM.LABEL.NAME\' | translate}}</mat-label>\n                    <input\n                        matInput\n                        id="name_id"\n                        formControlName="name">\n                        <mat-error *ngIf="nameController.hasError(\'required\') || nameController.hasError(\'whitespace\')">\n                            {{ \'ADF_TASK_LIST.START_TASK.FORM.ERROR.REQUIRED\' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf="nameController.hasError(\'maxlength\')">\n                            {{ \'ADF_TASK_LIST.START_TASK.FORM.ERROR.MAXIMUM_LENGTH\' | translate : { characters : maxTaskNameLength } }}\n                        </mat-error>\n                </mat-form-field>\n            </div>\n            <div class="adf-task-description">\n                <mat-form-field fxFlex>\n                    <mat-label>{{\'ADF_TASK_LIST.START_TASK.FORM.LABEL.DESCRIPTION\' | translate}}</mat-label>\n                    <textarea\n                        matInput\n                        rows="1"\n                        id="description_id"\n                        formControlName="description">\n                    </textarea>\n                    <mat-error *ngIf="descriptionController.hasError(\'whitespace\')">\n                        {{ \'ADF_TASK_LIST.START_TASK.FORM.ERROR.MESSAGE\' | translate }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class="input-row" fxLayout="row" fxLayout.lt-md="column" fxLayoutGap="20px" fxLayoutGap.lt-md="0px">\n                <mat-form-field fxFlex>\n                    <input\n                        matInput\n                        (keyup)="onDateChanged($any($event).srcElement.value)"\n                        (dateInput)="onDateChanged($any($event).value)"\n                        [matDatepicker]="taskDatePicker"\n                        placeholder="{{\'ADF_TASK_LIST.START_TASK.FORM.LABEL.DATE\'|translate}}"\n                        id="date_id">\n                    <mat-datepicker-toggle\n                        matSuffix\n                        [for]="taskDatePicker"></mat-datepicker-toggle>\n                    <mat-datepicker\n                        #taskDatePicker\n                        [touchUi]="true">\n                    </mat-datepicker>\n                    <div class="adf-error-text-container">\n                        <div *ngIf="dateError">\n                            <div class="adf-error-text">{{\'ADF_TASK_LIST.START_TASK.FORM.ERROR.DATE\'|translate}}</div>\n                            <mat-icon class="adf-error-icon">warning</mat-icon>\n                        </div>\n                    </div>\n                </mat-form-field>\n                <div fxFlex>\n                    <people-widget\n                        (peopleSelected)="getAssigneeId($event)"\n                        [field]="field"\n                        class="adf-people-widget-content"></people-widget>\n                </div>\n            </div>\n            <div class="adf-task-form">\n                <mat-form-field fxFlex="48%" fxFlex.xs="100%">\n                    <mat-label id="form_label">{{\'ADF_TASK_LIST.START_TASK.FORM.LABEL.FORM\'|translate}}</mat-label>\n                    <mat-select\n                        id="form_id"\n                        class="form-control"\n                        formControlName="formKey">\n                    <mat-option>{{\'ADF_TASK_LIST.START_TASK.FORM.LABEL.NONE\'|translate}}</mat-option>\n                    <mat-option *ngFor="let form of forms$ | async" [value]="form.id">{{ form.name }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <div class="adf-new-task-footer" fxLayout="row" fxLayoutAlign="end end">\n            <button\n                mat-button\n                class="adf-uppercase"\n                (click)="onCancel()"\n                id="button-cancel">\n                {{ \'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL\' | translate }}\n            </button>\n            <button\n                color="primary"\n                mat-button\n                class="adf-uppercase"\n                [disabled]="!isFormValid()"\n                (click)="saveTask()"\n                id="button-start">\n                {{ \'ADF_TASK_LIST.START_TASK.FORM.ACTION.START\' | translate }}\n            </button>\n        </div>\n    </mat-card-actions>\n</mat-card>\n',providers:[{provide:l.DateAdapter,useClass:e.MomentDateAdapter},{provide:l.MAT_DATE_FORMATS,useValue:It}],encapsulation:n.ViewEncapsulation.None,styles:[".adf-new-task-heading{border-bottom:1px solid var(--theme-fg-divider);padding-top:12px}.adf-new-task-heading .mat-card-title{font-size:18px;font-weight:700}.adf-new-task-form{width:100%}.adf-new-task-layout-card{margin:10px auto}.adf-new-task-footer{border-top:1px solid #eee;font-size:18px;padding:4px}.adf-mat-select{padding-top:0}adf-start-task .mat-button.adf-uppercase{text-transform:uppercase}adf-start-task people-widget{width:100%}adf-start-task people-widget .mat-form-field-label-wrapper{top:-14px!important}adf-start-task .adf-people-widget-content .mat-form-field{width:100%}adf-start-task .adf-people-widget-content .adf-label{line-height:0}adf-start-task .adf-people-widget-content .adf-error-text-container{margin-top:-10px}adf-start-task .adf-start-task-input-container .mat-form-field-wrapper{padding-top:8px}adf-start-task .adf-error-text-container{height:20px;margin-top:12px;position:absolute;width:100%}adf-start-task .adf-error-text-container>div{display:flex;flex-flow:row;justify-content:flex-start}adf-start-task .adf-error-text{color:var(--theme-warn-color);font-size:12px;height:16px;line-height:1.33;padding-right:8px;width:auto}adf-start-task .adf-error-icon{color:var(--theme-warn-color);font-size:17px}adf-start-task .adf-label{color:#bababa}adf-start-task .adf-invalid .mat-form-field-underline{background-color:#f44336!important}adf-start-task .adf-invalid .adf-file{border-color:var(--theme-warn-color)}adf-start-task .adf-invalid .mat-form-field-prefix{color:var(--theme-warn-color)}adf-start-task .adf-invalid .adf-input{border-color:var(--theme-warn-color)}adf-start-task .adf-invalid .adf-label{color:var(--theme-warn-color)}adf-start-task .adf-invalid .adf-label:after{background-color:var(--theme-warn-color)}"]}]}],St.ctorParameters=function(){return[{type:rt},{type:l.DateAdapter},{type:e.UserPreferencesService},{type:p.FormBuilder},{type:e.LogService}]},St.propDecorators={appId:[{type:n.Input}],name:[{type:n.Input}],success:[{type:n.Output}],cancel:[{type:n.Output}],error:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var At=function(){function t(){this.isCompleted=!1,this.hasCompletePermission=!0,this.hideCancelButton=!0,this.cancel=new n.EventEmitter,this.complete=new n.EventEmitter,this.showAttachForm=new n.EventEmitter}return t.prototype.onCancelButtonClick=function(){this.cancel.emit()},t.prototype.onCompleteButtonClick=function(){this.complete.emit()},t.prototype.hasCompleteButton=function(){return this.hasCompletePermission&&!this.isCompleted},t.prototype.hasCancelButton=function(){return!this.hideCancelButton&&!this.isCompleted},t.prototype.hasAttachFormButton=function(){return!this.isCompleted},t.prototype.onShowAttachForm=function(){this.showAttachForm.emit()},t}();At.decorators=[{type:n.Component,args:[{selector:"adf-task-standalone",template:'<mat-card class="adf-message-card">\n    <mat-card-content>\n        <div class="adf-no-form-message-container">\n            <div class="adf-no-form-message-list">\n                <div *ngIf="!isCompleted; else completedMessage" class="adf-no-form-message">\n                    <span id="adf-no-form-message">{{\'ADF_TASK_LIST.STANDALONE_TASK.NO_FORM_MESSAGE\' | translate}}</span>\n                </div>\n                <ng-template #completedMessage>\n                    <div id="adf-completed-form-message" class="adf-no-form-message">\n                        <p>{{\'ADF_TASK_LIST.STANDALONE_TASK.COMPLETE_TASK_MESSAGE\' | translate : {taskName : taskName} }}</p>\n                    </div>\n                    <div class="adf-no-form-submessage">\n                        {{\'ADF_TASK_LIST.STANDALONE_TASK.COMPLETE_TASK_SUB_MESSAGE\' | translate}}\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </mat-card-content>\n\n    <mat-card-actions class="adf-no-form-mat-card-actions">\n        <button mat-button *ngIf="hasAttachFormButton()" id="adf-no-form-attach-form-button" (click)="onShowAttachForm()">{{ \'ADF_TASK_LIST.START_TASK.FORM.LABEL.ATTACHFORM\' | translate }}</button>\n        <div>\n            <button mat-button *ngIf="hasCancelButton()" id="adf-no-form-cancel-button" (click)="onCancelButtonClick()">{{ \'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL\' | translate }}</button>\n            <button mat-button *ngIf="hasCompleteButton()" id="adf-no-form-complete-button" color="primary" (click)="onCompleteButtonClick()">{{ \'ADF_TASK_LIST.DETAILS.BUTTON.COMPLETE\' | translate }}</button>\n        </div>\n    </mat-card-actions>\n</mat-card>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-message-card{box-sizing:border-box;margin:16px auto;width:60%}.adf-message-card .mat-card-actions{border-top:1px solid var(--theme-status-bar-bg-color)}.adf-no-form-message-container{display:table;height:256px;width:100%}.adf-no-form-message-list{display:table-cell;text-align:center!important;vertical-align:middle}.adf-no-form-message{font-size:var(--theme-display-1-font-size);letter-spacing:-1.3px;line-height:36px;padding-bottom:10px}.adf-no-form-message,.adf-no-form-submessage{margin:auto;opacity:.54;width:-webkit-fit-content!important;width:-moz-fit-content!important;width:fit-content!important}.adf-no-form-submessage{font-size:var(--theme-subheading-2-font-size)}.adf-no-form-mat-card-actions.mat-card-actions{display:flex;justify-content:space-between}.adf-no-form-mat-card-actions.mat-card-actions .mat-button{border-radius:5px;text-transform:uppercase}.adf-no-form-mat-card-actions.mat-card-actions .mat-button-wrapper{font-size:var(--theme-button-font-size);font-weight:700;opacity:.54}"]}]}],At.ctorParameters=function(){return[]},At.propDecorators={taskName:[{type:n.Input}],taskId:[{type:n.Input}],isCompleted:[{type:n.Input}],hasCompletePermission:[{type:n.Input}],hideCancelButton:[{type:n.Input}],cancel:[{type:n.Output}],complete:[{type:n.Output}],showAttachForm:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Tt=function(){function t(t,e,i){this.taskService=t,this.logService=e,this.formService=i,this.cancelAttachForm=new n.EventEmitter,this.success=new n.EventEmitter,this.error=new n.EventEmitter,this.disableSubmit=!0}return t.prototype.ngOnInit=function(){var t=this;this.attachFormControl=new p.FormControl("",p.Validators.required),this.attachFormControl.valueChanges.subscribe((function(e){t.attachFormControl.valid&&(t.disableSubmit=t.formId===e)}))},t.prototype.ngOnChanges=function(){this.formId=void 0,this.disableSubmit=!0,this.loadFormsTask(),this.formKey&&this.onFormAttached()},t.prototype.onCancelButtonClick=function(){this.selectedFormId=this.formId,this.cancelAttachForm.emit()},t.prototype.onRemoveButtonClick=function(){var t=this;this.taskService.deleteForm(this.taskId).subscribe((function(){t.formId=t.selectedFormId=null,t.success.emit()}),(function(e){t.error.emit(e),t.logService.error("An error occurred while trying to delete the form")}))},t.prototype.onAttachFormButtonClick=function(){this.attachForm(this.taskId,this.selectedFormId)},t.prototype.loadFormsTask=function(){var t=this;this.taskService.getFormList().subscribe((function(e){t.forms=e}),(function(e){t.error.emit(e),t.logService.error("An error occurred while trying to get the forms")}))},t.prototype.onFormAttached=function(){var t=this;this.formService.getTaskForm(this.taskId).subscribe((function(e){t.formService.getFormDefinitionByName(e.name).subscribe((function(e){t.formId=t.selectedFormId=e}))}),(function(e){t.error.emit(e),t.logService.error("Could not load forms")}))},t.prototype.attachForm=function(t,e){var n=this;t&&e&&this.taskService.attachFormToATask(t,e).subscribe((function(){n.success.emit()}),(function(t){n.error.emit(t),n.logService.error("Could not attach form")}))},t}();Tt.decorators=[{type:n.Component,args:[{selector:"adf-attach-form",template:'<div class="adf-attach-form">\n    <mat-card>\n        <mat-card-content>\n            <div class="adf-attache-form-message-container">\n                <mat-card-title class="mat-card-title">\n                    <h4 class="adf-form-title">{{ \'ADF_TASK_LIST.ATTACH_FORM.SELECT_FORM\' | translate }}</h4>\n                </mat-card-title>\n                <div class="adf-attach-form-row">\n                    <mat-form-field class="adf-grid-full-width">\n                        <mat-select [formControl]="attachFormControl" placeholder="{{ \'ADF_TASK_LIST.ATTACH_FORM.SELECT_OPTION\' | translate }}" id="form_id" [(ngModel)]="selectedFormId">\n                            <mat-option *ngFor="let form of forms" [value]="form.id">{{ form.name }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <adf-form *ngIf="this.attachFormControl.valid"\n                    [formId]="selectedFormId"\n                    [readOnly]="true"\n                    [showCompleteButton]="false"\n                    [showRefreshButton]="false"\n                    [showValidationIcon]="false">\n                </adf-form>\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions class="adf-attach-form-mat-card-actions">\n            <div>\n                <button mat-button id="adf-attach-form-remove-button" color="warn" *ngIf="formKey" (click)="onRemoveButtonClick()">{{ \'ADF_TASK_LIST.ATTACH_FORM.REMOVE_FORM\' | translate }}</button>\n            </div>\n            <div>\n                <button mat-button id="adf-attach-form-cancel-button" (click)="onCancelButtonClick()">{{ \'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL\' | translate }}</button>\n                <button mat-button id="adf-attach-form-attach-button" [disabled]="disableSubmit" color="primary" (click)="onAttachFormButtonClick()">{{ \'ADF_TASK_LIST.START_TASK.FORM.LABEL.ATTACHFORM\' | translate }}</button>\n            </div>\n        </mat-card-actions>\n    </mat-card>\n</div>\n',styles:[".adf-attach-form .mat-form-field{width:100%}.adf-attach-form-row{display:flex;justify-content:space-between;margin:20px 0}.adf-attach-form .adf-attach-form-mat-card-actions{justify-content:space-between;margin-top:30px;text-align:right}"]}]}],Tt.ctorParameters=function(){return[{type:rt},{type:e.LogService},{type:e.FormService}]},Tt.propDecorators={taskId:[{type:n.Input}],formKey:[{type:n.Input}],cancelAttachForm:[{type:n.Output}],success:[{type:n.Output}],error:[{type:n.Output}]};var Dt=function(t){function e(e,n,i){var o=t.call(this,e,n,i)||this;return o.apiService=e,o}return G(e,t),Object.defineProperty(e.prototype,"contentApi",{get:function(){var t;return this._contentApi=null!==(t=this._contentApi)&&void 0!==t?t:new a.ActivitiContentApi(this.apiService.getInstance()),this._contentApi},enumerable:!1,configurable:!0}),e.prototype.getUploadPromise=function(t){var e=this,n=t.options.parentId,i=this.contentApi.createRelatedContentOnProcessInstance(n,t.file,{isRelatedContent:!0});return i.catch((function(t){return e.handleError(t)})),i},e.prototype.handleError=function(t){return i.throwError(t||"Server error")},e}(e.UploadService);Dt.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new Dt(n.ɵɵinject(e.AlfrescoApiService),n.ɵɵinject(e.AppConfigService),n.ɵɵinject(e.DiscoveryApiService))},token:Dt,providedIn:"root"}),Dt.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],Dt.ctorParameters=function(){return[{type:e.AlfrescoApiService},{type:e.AppConfigService},{type:e.DiscoveryApiService}]};var kt=function(t){function e(e,n,i){var o=t.call(this,e,n,i)||this;return o.apiService=e,o}return G(e,t),Object.defineProperty(e.prototype,"contentApi",{get:function(){var t;return this._contentApi=null!==(t=this._contentApi)&&void 0!==t?t:new a.ActivitiContentApi(this.apiService.getInstance()),this._contentApi},enumerable:!1,configurable:!0}),e.prototype.getUploadPromise=function(t){var e=this,n=t.options.parentId,i=this.contentApi.createRelatedContentOnTask(n,t.file,{isRelatedContent:!0});return i.catch((function(t){return e.handleError(t)})),i},e.prototype.handleError=function(t){return i.throwError(t||"Server error")},e}(e.UploadService);kt.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new kt(n.ɵɵinject(e.AlfrescoApiService),n.ɵɵinject(e.AppConfigService),n.ɵɵinject(e.DiscoveryApiService))},token:kt,providedIn:"root"}),kt.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],kt.ctorParameters=function(){return[{type:e.AlfrescoApiService},{type:e.AppConfigService},{type:e.DiscoveryApiService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var bt=function(t){this.name=t&&t.name||null,this.description=t&&t.description||null,this.assignee=t&&t.assignee?new e.UserProcessModel(t.assignee):null,this.dueDate=t&&t.dueDate||null,this.formKey=t&&t.formKey||null,this.category=t&&t.category||null},Et=function(){function t(t){this._defaultPrevented=!1,this._value=t}return Object.defineProperty(t.prototype,"value",{get:function(){return this._value},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"defaultPrevented",{get:function(){return this._defaultPrevented},enumerable:!1,configurable:!0}),t.prototype.preventDefault=function(){this._defaultPrevented=!0},t}(),Ct=function(){};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */Ct.decorators=[{type:n.NgModule,args:[{providers:[{provide:y.MAT_FORM_FIELD_DEFAULT_OPTIONS,useValue:{floatLabel:"never"}}],imports:[u.MatAutocompleteModule,m.MatButtonModule,f.MatCardModule,s.MatDialogModule,h.MatCheckboxModule,v.MatDatepickerModule,I.MatGridListModule,S.MatIconModule,A.MatInputModule,T.MatListModule,l.MatOptionModule,b.MatRadioModule,E.MatSelectModule,C.MatSlideToggleModule,w.MatTableModule,F.MatTabsModule,k.MatProgressSpinnerModule,l.MatNativeDateModule,l.MatRippleModule,_.MatTooltipModule,g.MatChipsModule,D.MatMenuModule],exports:[u.MatAutocompleteModule,m.MatButtonModule,f.MatCardModule,s.MatDialogModule,h.MatCheckboxModule,v.MatDatepickerModule,I.MatGridListModule,S.MatIconModule,A.MatInputModule,T.MatListModule,l.MatOptionModule,b.MatRadioModule,E.MatSelectModule,C.MatSlideToggleModule,w.MatTableModule,F.MatTabsModule,k.MatProgressSpinnerModule,l.MatNativeDateModule,l.MatRippleModule,_.MatTooltipModule,g.MatChipsModule,D.MatMenuModule]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var wt=function(){function t(t){var e=this;this.commentProcessService=t,this.readOnly=!0,this.error=new n.EventEmitter,this.comments=[],this.onDestroy$=new i.Subject,this.beingAdded=!1,this.comment$=new i.Observable((function(t){return e.commentObserver=t})).pipe(o.share()),this.comment$.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(t){return e.comments.push(t)}))}return t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.ngOnChanges=function(t){var e=t.processInstanceId;e&&(e.currentValue?this.getProcessInstanceComments(e.currentValue):this.resetComments())},t.prototype.getProcessInstanceComments=function(t){var e=this;this.resetComments(),t&&this.commentProcessService.getProcessInstanceComments(t).subscribe((function(t){(t=t.sort((function(t,e){var n=new Date(t.created),i=new Date(e.created);return n>i?-1:n<i?1:0}))).forEach((function(t){e.commentObserver.next(t)}))}),(function(t){e.error.emit(t)}))},t.prototype.resetComments=function(){this.comments=[]},t.prototype.add=function(){var t=this;this.message&&this.message.trim()&&!this.beingAdded&&(this.beingAdded=!0,this.commentProcessService.addProcessInstanceComment(this.processInstanceId,this.message).subscribe((function(e){t.comments.unshift(e),t.message="",t.beingAdded=!1}),(function(e){t.error.emit(e),t.beingAdded=!1})))},t.prototype.clear=function(){this.message=""},t.prototype.isReadOnly=function(){return this.readOnly},t.prototype.onError=function(t){this.error.emit(t)},t}();wt.decorators=[{type:n.Component,args:[{selector:"adf-process-instance-comments",template:'<div class="adf-comments-container">\n    <div id="comment-header" class="adf-comments-header">\n        {{\'ADF_PROCESS_LIST.DETAILS.COMMENTS.HEADER\' | translate: { count: comments?.length} }}\n    </div>\n    <div class="adf-comments-input-container" *ngIf="!isReadOnly()">\n        <mat-form-field class="adf-full-width">\n            <input matInput id="comment-input" placeholder="{{\'ADF_PROCESS_LIST.DETAILS.COMMENTS.ADD\' | translate}}" [(ngModel)]="message" (keyup.enter)="add()" (keyup.esc)="clear()">\n        </mat-form-field>\n    </div>\n\n    <div *ngIf="comments.length > 0">\n        <adf-comment-list [comments]="comments">\n        </adf-comment-list>\n    </div>\n</div>\n',encapsulation:n.ViewEncapsulation.None,host:{class:"adf-process-instance-comments"},styles:[".adf-process-instance-comments{width:100%}.adf-activiti-label{font-weight:bolder;vertical-align:top}.adf-activiti-label+.adf-icon{position:relative;top:-2px}.adf-list-wrap{-o-hyphens:auto;-webkit-hyphens:auto;hyphens:auto;word-break:break-all;word-wrap:break-word}.adf-hide-long-names{overflow:auto}.adf-comments-container{height:100%;overflow:auto;width:100%}.adf-comments-header{border-bottom:1px solid var(--theme-fg-divider);font-size:14px;font-weight:600;padding:10px 20px}.adf-comments-input-container{border-bottom:1px solid var(--theme-fg-divider);padding:8px 15px 0;width:calc(100% - 30px)}.adf-full-width{width:100%}adf-comment-list{float:left;height:calc(100% - 101px);overflow:auto;width:100%}"]}]}],wt.ctorParameters=function(){return[{type:e.CommentProcessService}]},wt.propDecorators={processInstanceId:[{type:n.Input}],readOnly:[{type:n.Input}],error:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ft=function(){};Ft.decorators=[{type:n.NgModule,args:[{imports:[p.FormsModule,p.ReactiveFormsModule,Ct,r.CommonModule,e.CoreModule],declarations:[wt],exports:[wt]}]}];var _t=function(){function t(t,e){var n=this;this.logService=t,this.peopleProcessService=e,this.people=[],this.taskId="",this.readOnly=!1,this.showAssignment=!1,this.peopleSearch$=new i.Observable((function(t){return n.peopleSearchObserver=t})).pipe(o.share())}return t.prototype.involveUserAndCloseSearch=function(){this.peopleSearch&&this.peopleSearch.involveUserAndClose()},t.prototype.involveUserWithoutCloseSearch=function(){this.peopleSearch&&this.peopleSearch.involveUser()},t.prototype.searchUser=function(t){var e=this;this.peopleProcessService.getWorkflowUsers(this.taskId,t).subscribe((function(t){e.peopleSearchObserver.next(t)}),(function(t){return e.logService.error(t)}))},t.prototype.involveUser=function(t){var e=this;t&&t.id&&this.peopleProcessService.involveUserWithTask(this.taskId,t.id.toString()).subscribe((function(){return e.people=J(e.people,[t])}),(function(){return e.logService.error("Impossible to involve user with task")}))},t.prototype.removeInvolvedUser=function(t){var e=this;this.peopleProcessService.removeInvolvedUser(this.taskId,t.id.toString()).subscribe((function(){e.people=e.people.filter((function(e){return e.id!==t.id}))}),(function(){return e.logService.error("Impossible to remove involved user from task")}))},t.prototype.getDisplayUser=function(t,e,n){return void 0===n&&(n="-"),(t=null!==t?t:"")+n+(e=null!==e?e:"")},t.prototype.getInitialUserName=function(t,e){return t=null!==t&&""!==t?t[0]:"",e=null!==e&&""!==e?e[0]:"",this.getDisplayUser(t,e,"")},t.prototype.onAddAssignment=function(){this.showAssignment=!0},t.prototype.onClickAction=function(t){t&&t.value&&"remove"===t.type&&this.removeInvolvedUser(t.value)},t.prototype.hasPeople=function(){return this.people&&this.people.length>0},t.prototype.isEditMode=function(){return!this.readOnly},t.prototype.onCloseSearch=function(){this.showAssignment=!1},t}();_t.decorators=[{type:n.Component,args:[{selector:"adf-people",template:'<mat-card class="adf-assignment-top-container">\n    <div mat-card-content class="adf-assignment-top-container-content">\n        <div class="assignment-header">\n                <div *ngIf="hasPeople()" class="adf-assignment-count" id="people-title">\n                    {{ \'ADF_TASK_LIST.DETAILS.LABELS.PEOPLE\' | translate }} {{ \' (\' + people.length + \')\' }}\n                </div>\n                <div *ngIf="!hasPeople()" class="adf-assignment-count" id="no-people-label">\n                    {{ \'ADF_TASK_LIST.DETAILS.PEOPLE.NONE\' | translate }}\n                </div>\n                <div *ngIf="isEditMode()" class="adf-add-people" (click)="onAddAssignment()">\n                    <mat-icon class="adf-add-person-icon">person_add</mat-icon>\n                </div>\n            </div>\n            <div class="adf-assignment-container" *ngIf="showAssignment">\n                <adf-people-search\n                    #peopleSearch\n                    (searchPeople)="searchUser($event)"\n                    (success)="involveUser($event)"\n                    (closeSearch)="onCloseSearch()"\n                    [results]="peopleSearch$">\n                    <ng-container adf-people-search-title>{{ \'ADF_TASK_LIST.DETAILS.LABELS.ADD_PEOPLE\' | translate }}</ng-container>\n                    <ng-container adf-people-search-action-label>{{ \'ADF_TASK_LIST.PEOPLE.ADD_USER\' | translate }}</ng-container>\n                </adf-people-search>\n            </div>\n            <div class="adf-assignment-list-container" id="assignment-people-list" *ngIf="hasPeople()">\n                <adf-people-list\n                [users]="people"\n                [actions]="isEditMode()"\n                (clickAction)="onClickAction($event)">\n                    <data-columns>\n                        <data-column key="firstName">\n                            <ng-template let-entry="$implicit">\n                                <div *ngIf="!entry.row.obj.pictureId" class="adf-people-search-people-pic">\n                                    {{getInitialUserName(entry.row.obj.firstName, entry.row.obj.lastName)}}</div>\n                                <div>\n                                    <img [alt]="getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, \' \')" *ngIf="entry.row.obj.pictureId" class="adf-people-img"\n                                        [src]="peopleProcessService.getUserImage(entry.row.obj)"/>\n                                </div>\n                            </ng-template>\n                        </data-column>\n                        <data-column key="email" class="adf-full-width">\n                            <ng-template let-entry="$implicit">\n                                <div class="adf-people-user-info">\n                                    <div [attr.data-automation-id]="\'adf-people-full-name-\'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, \'-\')" class="adf-people-full-name">{{ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, \' \') }}</div>\n                                    <div [attr.data-automation-id]="\'adf-people-email-\'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, \'-\')"  class="adf-people-email">{{ entry.row.obj.email }}</div>\n                                </div>\n                            </ng-template>\n                        </data-column>\n                    </data-columns>\n                </adf-people-list>\n            </div>\n    </div>\n</mat-card>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-assignment-header{border-bottom:1px solid var(--theme-fg-divider);padding:6px 20px}.adf-assignment-count{float:left;font-weight:bolder;margin:13px;opacity:.54;padding:10px 0}.adf-add-people{cursor:pointer;float:right;height:26px;margin:13px;opacity:.54;padding:8px}.adf-add-people:hover{color:var(--theme-primary-color)}.adf-assignment-top-container.mat-card{align-items:stretch;border-top:1px solid var(--theme-fg-divider);display:flex;flex-flow:row wrap;margin:0;padding:0}.adf-assignment-top-container-content{align-items:stretch;display:flex;flex:1 0 auto;flex-flow:column;max-width:100%}.adf-assignment-container{border-bottom:1px solid var(--theme-fg-divider);max-width:100%;padding:10px 20px}.adf-assignment-list-container{padding:0}adf-people-list adf-datatable thead{display:none}adf-people-list adf-datatable .adf-datatable-cell{margin:13px}adf-people-list adf-datatable .adf-datatable .adf-datatable-cell .adf-cell-container{align-items:left;flex-direction:column}adf-people-list adf-datatable .adf-people-email{opacity:.54}.adf-people-img{border-radius:90%;height:40px;vertical-align:middle;width:40px}.adf-people-search-people-pic{background:var(--theme-primary-color);border-radius:100px;color:#fff;font-size:18px;font-weight:bolder;padding:10px 5px;text-align:center;text-transform:uppercase;vertical-align:text-bottom;width:30px}.adf-people-user-info{flex-direction:column;text-align:center}"]}]}],_t.ctorParameters=function(){return[{type:e.LogService},{type:e.PeopleProcessService}]},_t.propDecorators={people:[{type:n.Input}],taskId:[{type:n.Input}],readOnly:[{type:n.Input}],peopleSearch:[{type:n.ViewChild,args:["peopleSearch"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Lt=function(){function t(){this.actions=!1,this.clickRow=new n.EventEmitter,this.clickAction=new n.EventEmitter,this.showHeader=e.ShowHeaderMode.Never}return t.prototype.ngAfterContentInit=function(){this.peopleDataTable.columnList=this.columnList},t.prototype.selectUser=function(t){this.user=t.value.obj,this.clickRow.emit(this.user)},t.prototype.hasActions=function(){return this.actions},t.prototype.onShowRowActionsMenu=function(t){t.value.actions=[{title:"Remove",name:"remove"}]},t.prototype.onExecuteRowAction=function(t){var e=t.value,n=e.action;this.clickAction.emit({type:n.name,value:e.row.obj})},t}();Lt.decorators=[{type:n.Component,args:[{selector:"adf-people-list",template:'<adf-datatable\n    #dataTable\n    class="adf-task-people-list"\n    [rows]="users"\n    [actions]="hasActions()"\n    [showHeader]="showHeader"\n    (rowClick)="selectUser($event)"\n    (rowDblClick)="selectUser($event)"\n    (showRowActionsMenu)="onShowRowActionsMenu($event)"\n    (executeRowAction)="onExecuteRowAction($event)">\n</adf-datatable>\n',styles:[".adf-task-people-list .adf-datatable-list{width:100%}"]}]}],Lt.propDecorators={columnList:[{type:n.ContentChild,args:[e.DataColumnListComponent]}],peopleDataTable:[{type:n.ViewChild,args:["dataTable",{static:!0}]}],users:[{type:n.Input}],actions:[{type:n.Input}],clickRow:[{type:n.Output}],clickAction:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Pt=function(){function t(){this.searchPeople=new n.EventEmitter,this.success=new n.EventEmitter,this.closeSearch=new n.EventEmitter,this.selectedUser={}}return t.prototype.ngOnInit=function(){var t=this;this.filteredResults$=this.results.pipe(o.map((function(e){return e.filter((function(e){return e.id!==t.selectedUser.id}))}))),this.performSearch=this.performSearchCallback.bind(this)},t.prototype.performSearchCallback=function(t){return this.searchPeople.emit(t),this.filteredResults$},t.prototype.onRowClick=function(t){this.selectedUser=t},t.prototype.closeSearchList=function(){this.closeSearch.emit()},t.prototype.involveUserAndClose=function(){this.involveUser(),this.closeSearchList()},t.prototype.involveUser=function(){void 0!==this.selectedUser&&this.success.emit(this.selectedUser)},t}();
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
function Ot(t,e,n){return void 0===n&&(n="-"),(t=null!==t?t:"")+n+(e=null!==e?e:"")}
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */Pt.decorators=[{type:n.Component,args:[{selector:"adf-people-search",template:'<div class="adf-search-text-header">\n    <ng-content select="[adf-people-search-title], [people-search-title]"></ng-content>\n</div>\n\n<adf-people-search-field [performSearch]="performSearch" (rowClick)="onRowClick($event)"></adf-people-search-field>\n\n<div class="search-list-action-container">\n    <button mat-button type="button" id="close-people-search" (click)="closeSearchList()">\n        {{\'ADF_TASK_LIST.PEOPLE.DIALOG_CLOSE\' | translate }}\n    </button>\n    <button mat-button type="button" id="add-people" (click)="involveUserAndClose()">\n        <ng-content select="[adf-people-search-action-label], [people-search-action-label]"></ng-content>\n    </button>\n</div>\n',host:{class:"adf-people-search"},encapsulation:n.ViewEncapsulation.None,styles:[".adf-people-search{width:100%}.adf-people-search .adf-activiti-label{font-weight:bolder}.adf-people-search .adf-fix-element-user-list{padding:0}.adf-people-search .adf-search-text-header{font-weight:700;opacity:.54}.adf-people-search .adf-search-list-action-container{border-top:1px solid #eee;margin-top:5px;padding:5px 0;text-align:right}.adf-people-search .adf-search-list-action-container>button{font-weight:bolder;opacity:.54}.adf-people-search .adf-search-list-action-container>button:hover{color:var(--theme-primary-color)}"]}]}],Pt.ctorParameters=function(){return[]},Pt.propDecorators={results:[{type:n.Input}],searchPeople:[{type:n.Output}],success:[{type:n.Output}],closeSearch:[{type:n.Output}]};var Mt=function(){function t(t,e){var a=this;this.peopleProcessService=t,this.translationService=e,this.rowClick=new n.EventEmitter,this.searchUser=new p.FormControl,this.defaultPlaceholder="ADF_TASK_LIST.PEOPLE.SEARCH_USER",this.users$=this.searchUser.valueChanges.pipe(o.debounceTime(200),o.switchMap((function(t){return t&&t.trim()?a.performSearch(t):i.of([])}))),this.defaultPlaceholder=this.translationService.instant(this.defaultPlaceholder)}return t.prototype.reset=function(){this.searchUser.reset()},Object.defineProperty(t.prototype,"searchPlaceholder",{get:function(){return this.placeholder||this.defaultPlaceholder},enumerable:!1,configurable:!0}),t.prototype.onRowClick=function(t){this.rowClick.emit(t)},t.prototype.getDisplayUser=function(t,e,n){return void 0===n&&(n="-"),Ot(t,e,n)},t.prototype.getInitialUserName=function(t,e){return t=null!==t&&""!==t?t[0]:"",e=null!==e&&""!==e?e[0]:"",this.getDisplayUser(t,e,"")},t}();Mt.decorators=[{type:n.Component,args:[{selector:"adf-people-search-field",template:'<mat-form-field class="adf-search-text-container">\n    <input\n        matInput\n        placeholder="{{ searchPlaceholder }}"\n        type="text"\n        id="userSearchText"\n        [value]=""\n        [formControl]="searchUser"\n        data-automation-id="adf-people-search-input">\n</mat-form-field>\n<ng-container *ngIf="users$ | async; let users">\n    <div class="adf-search-list-container" id="search-people-list" *ngIf="users.length > 0">\n        <adf-people-list [users]="users" (clickRow)="onRowClick($event)">\n            <data-columns>\n                <data-column key="firstName">\n                    <ng-template let-entry="$implicit">\n                            <div *ngIf="!entry.row.obj.pictureId" class="adf-people-pic">\n                                {{getInitialUserName(entry.row.obj.firstName, entry.row.obj.lastName)}}</div>\n                            <div>\n                                <img [alt]="getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, \' \')" *ngIf="entry.row.obj.pictureId" class="adf-people-img"\n                                    [src]="peopleProcessService.getUserImage(entry.row.obj)"/>\n                            </div>\n                    </ng-template>\n                </data-column>\n                <data-column key="email" class="adf-full-width">\n                    <ng-template let-entry="$implicit">\n                        <div [attr.data-automation-id]="\'adf-people-full-name-\'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, \'-\')" class="adf-people-full-name">{{ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, \' \') }}</div>\n                    </ng-template>\n                </data-column>\n            </data-columns>\n        </adf-people-list>\n    </div>\n</ng-container>\n',host:{class:"adf-people-search-field"},encapsulation:n.ViewEncapsulation.None,styles:[".adf-people-search-field,.adf-people-search-field .adf-search-text-container{width:100%}.adf-people-search-field .adf-search-text-container input{line-height:normal}.adf-people-search-field .adf-search-list-container{max-height:152px;overflow-y:auto;width:100%}.adf-people-search-field adf-people-list ::ng-deep adf-datatable ::ng-deep thead{display:none}.adf-people-search-field .adf-people-pic{background:var(--theme-primary-color);border-radius:90%;color:#fff;font-size:18px;font-weight:bolder;padding:10px 5px;text-align:center;text-transform:uppercase;vertical-align:text-bottom;width:30px}.adf-people-search-field .adf-people-img{border-radius:90%;height:40px;vertical-align:middle;width:40px}"]}]}],Mt.ctorParameters=function(){return[{type:e.PeopleProcessService},{type:e.TranslationService}]},Mt.propDecorators={performSearch:[{type:n.Input}],placeholder:[{type:n.Input}],rowClick:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var xt=function(){function t(t,e,i){this.peopleProcessService=t,this.logService=e,this.translationService=i,this.peopleIdChange=new n.EventEmitter,this.performSearch=this.searchUser.bind(this),this.defaultPlaceholder=this.translationService.instant("ADF_TASK_LIST.PEOPLE.ASSIGNEE")}return t.prototype.searchUser=function(t){return this.peopleProcessService.getWorkflowUsers(void 0,t).pipe(o.catchError(this.onSearchUserError.bind(this)))},t.prototype.onSearchUserError=function(){return this.logService.error("getWorkflowUsers threw error"),i.of([])},t.prototype.userSelected=function(t){this.updateUserSelection(t)},t.prototype.userDeselected=function(){this.updateUserSelection(void 0)},t.prototype.updateUserSelection=function(t){this.selectedUser=t,this.peopleIdChange.emit(t&&t.id||void 0),this.searchFieldComponent.reset()},Object.defineProperty(t.prototype,"placeholder",{get:function(){return this.selectedUser?Ot(this.selectedUser.firstName,this.selectedUser.lastName," "):this.defaultPlaceholder},enumerable:!1,configurable:!0}),t}();xt.decorators=[{type:n.Component,args:[{selector:"adf-people-selector",template:'<adf-people-search-field\n    #peopleSearchField\n    class="adf-people-selector-field"\n    [performSearch]="performSearch"\n    [placeholder]="placeholder"\n    (rowClick)="userSelected($event)">\n</adf-people-search-field>\n<button\n    *ngIf="selectedUser"\n    mat-icon-button\n    class="adf-people-selector-deselect"\n    data-automation-id="adf-people-selector-deselect"\n    (click)="userDeselected()">\n        <mat-icon>cancel</mat-icon>\n</button>\n',host:{class:"adf-people-selector"},encapsulation:n.ViewEncapsulation.None,styles:[".adf-people-selector{display:flex;flex-flow:row;justify-content:space-between}.adf-people-selector-field{flex:1 1 auto}.adf-people-selector-deselect{flex:0 0 auto;right:5px;top:5px}"]}]}],xt.ctorParameters=function(){return[{type:e.PeopleProcessService},{type:e.LogService},{type:e.TranslationService}]},xt.propDecorators={peopleId:[{type:n.Input}],peopleIdChange:[{type:n.Output}],searchFieldComponent:[{type:n.ViewChild,args:["peopleSearchField",{static:!0}]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Rt=function(){};Rt.decorators=[{type:n.Directive,args:[{selector:"adf-people-search-action-label, people-search-action-label"}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Nt=function(){};Nt.decorators=[{type:n.Directive,args:[{selector:"[adf-people-search-title]"}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Ut=function(){};Ut.decorators=[{type:n.NgModule,args:[{imports:[p.FormsModule,p.ReactiveFormsModule,Ct,r.CommonModule,e.CoreModule],declarations:[_t,Pt,Mt,xt,Nt,Rt,Lt],exports:[_t,Pt,Mt,xt,Nt,Rt,Lt]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Vt=function(){function t(t,e,n,i,o){this.translation=t,this.data=e,this.externalApiService=n,this.authenticationService=i,this.matDialogRef=o,n.init(e.ecmHost,e.context),this.action=e.actionName?e.actionName.toUpperCase():"CHOOSE",this.buttonActionName="ATTACH-FILE.ACTIONS."+this.action,this.updateTitle("DROPDOWN.MY_FILES_OPTION"),this.updateExternalHost()}return t.prototype.updateExternalHost=function(){var t=this;this.authenticationService.onLogin.subscribe((function(){return t.registerAndClose()})),this.externalApiService.getInstance().isLoggedIn()&&this.registerAndClose()},t.prototype.registerAndClose=function(){this.data.registerExternalHost(this.data.accountIdentifier,this.externalApiService),this.data.loginOnly&&(this.data.selected.complete(),this.matDialogRef.close())},t.prototype.isLoggedIn=function(){return this.externalApiService.getInstance().isLoggedIn()},t.prototype.performLogin=function(){this.loginPanel.submitForm()},t.prototype.close=function(){this.data.selected.complete()},t.prototype.onSelect=function(t){this.chosenNode=t},t.prototype.onSiteChange=function(t){this.updateTitle(t)},t.prototype.onClick=function(){this.data.selected.next(this.chosenNode),this.data.selected.complete()},t.prototype.updateTitle=function(t){"CHOOSE"===this.action&&t&&(this.title=this.getTitleTranslation(this.action,t))},t.prototype.getTitleTranslation=function(t,e){return this.translation.instant("ATTACH-FILE.ACTIONS."+t+"_ITEM",{name:this.translation.instant(e)})},t.prototype.hasNodeSelected=function(){var t;return(null===(t=this.chosenNode)||void 0===t?void 0:t.length)>0},t}();Vt.decorators=[{type:n.Component,args:[{selector:"adf-attach-file-widget-dialog",template:'<header\n    mat-dialog-title\n    data-automation-id="content-node-selector-title">\n    <span *ngIf="isLoggedIn(); else loginTitle">{{title}}</span>\n    <ng-template #loginTitle>{{data.title}}</ng-template>\n</header>\n\n<mat-dialog-content class="adf-login-dialog-content">\n    <adf-login-dialog-panel id="attach-file-login-panel" #adfLoginPanel *ngIf="!isLoggedIn()">\n    </adf-login-dialog-panel>\n    <adf-content-node-selector-panel *ngIf="isLoggedIn()"\n                                     id="attach-file-content-node"\n                                     [currentFolderId]="data?.currentFolderId"\n                                     [isSelectionValid]="data?.isSelectionValid"\n                                     [showFilesInResult]="data?.showFilesInResult"\n                                     (select)="onSelect($event)"\n                                     (siteChange)="onSiteChange($event)">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align="end">\n    <button\n        mat-button\n        (click)="close()"\n        data-automation-id="attach-file-dialog-actions-cancel">{{ \'ATTACH-FILE.ACTIONS.CANCEL\' | translate }}\n    </button>\n\n    <button *ngIf="!isLoggedIn()"\n        mat-button\n        (click)="performLogin()"\n        data-automation-id="attach-file-dialog-actions-login">{{ \'ATTACH-FILE.ACTIONS.LOGIN\' | translate }}\n    </button>\n\n    <button *ngIf="isLoggedIn()"\n        mat-button\n        [disabled]="!hasNodeSelected()"\n        class="adf-choose-action"\n        (click)="onClick()"\n        data-automation-id="attach-file-dialog-actions-choose">{{ buttonActionName | translate }}\n    </button>\n\n</mat-dialog-actions>\n',encapsulation:n.ViewEncapsulation.None,providers:[e.AuthenticationService,L.DocumentListService,e.SitesService,e.SearchService,{provide:e.AlfrescoApiService,useClass:e.ExternalAlfrescoApiService}],styles:[".adf-attach-file-widget-dialog .mat-dialog-actions{background-color:var(--theme-background-color);color:var(--theme-foreground-text-color);display:flex;justify-content:flex-end}.adf-attach-file-widget-dialog .mat-dialog-actions button{font-weight:400;text-transform:uppercase}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action[disabled]{color:var(--theme-secondary-text-color)}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action:enabled{color:var(--theme-primary-color)}"]}]}],Vt.ctorParameters=function(){return[{type:e.TranslationService},{type:void 0,decorators:[{type:n.Inject,args:[s.MAT_DIALOG_DATA]}]},{type:e.AlfrescoApiService},{type:e.AuthenticationService},{type:s.MatDialogRef}]},Vt.propDecorators={loginPanel:[{type:n.ViewChild,args:["adfLoginPanel"]}]};var Bt=function(){function t(t,e){this.dialog=t,this.translation=e,this.externalApis={},this.error=new n.EventEmitter}return t.prototype.openLogin=function(t,e,n){void 0===e&&(e="-my-");var i=this.constructPayload(t),o=i.title,a=i.ecmHost,r=i.selected,s={title:o,selected:r,ecmHost:a,currentFolderId:e,isSelectionValid:function(t){return t.isFile},showFilesInResult:!0,registerExternalHost:i.registerExternalHost,accountIdentifier:n};return this.openLoginDialog(s,"adf-attach-file-widget-dialog","630px"),r},t.prototype.openLoginDialog=function(t,e,n){this.dialog.open(Vt,{data:t,panelClass:e,width:n})},t.prototype.showExternalHostLoginDialog=function(t){var e=Object.assign(Object.assign({},this.constructPayload(t)),{loginOnly:!0});return this.dialog.open(Vt,{data:e,panelClass:"adf-attach-file-widget-dialog",width:"630px"}).afterClosed()},t.prototype.downloadURL=function(t,e){var n,r=this,s=this.constructPayload(t).accountIdentifier;if(null===(n=this.externalApis[s])||void 0===n?void 0:n.getInstance()){var c=new a.ContentApi(this.externalApis[s].getInstance());if(this.externalApis[s].getInstance().isLoggedIn())return i.of(c.getContentUrl(e))}return this.showExternalHostLoginDialog(t).pipe(o.switchMap((function(){var t=new a.ContentApi(r.externalApis[s].getInstance());return i.of(t.getContentUrl(e))})))},t.prototype.constructPayload=function(t){var e="alfresco-"+t.id+"-"+t.name,n=t.repositoryUrl.replace("/alfresco",""),o=new i.Subject;return o.subscribe({complete:this.close.bind(this)}),{ecmHost:n,accountIdentifier:e,selected:o,title:this.getLoginTitleTranslation(n),registerExternalHost:this.addService.bind(this)}},t.prototype.addService=function(t,e){this.externalApis[t]||(this.externalApis[t]=e)},t.prototype.close=function(){this.dialog.closeAll()},t.prototype.getLoginTitleTranslation=function(t){return this.translation.instant("ATTACH-FILE.DIALOG.LOGIN",{ecmHost:t})},t}();Bt.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new Bt(n.ɵɵinject(s.MatDialog),n.ɵɵinject(e.TranslationService))},token:Bt,providedIn:"root"}),Bt.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],Bt.ctorParameters=function(){return[{type:s.MatDialog},{type:e.TranslationService}]},Bt.propDecorators={error:[{type:n.Output}]};var Kt=function(t){function n(e,n,o,a,r,s,c,l,p,d){var u=t.call(this,e,n,o,a)||this;return u.formService=e,u.logger=n,u.thumbnails=o,u.processContentService=a,u.activitiContentService=r,u.contentService=s,u.contentDialog=c,u.appConfigService=l,u.downloadService=p,u.attachDialogService=d,u.typeId="AttachFileWidgetComponent",u.repositoryList=[],u.tempFilesList=[],u.onDestroy$=new i.Subject,u}return G(n,t),n.prototype.ngOnInit=function(){var e=this;t.prototype.ngOnInit.call(this),this.activitiContentService.getAlfrescoRepositories().subscribe((function(t){e.repositoryList=t})),this.formService.taskSaved.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(t){t.form.id===e.field.form.id&&(e.tempFilesList=[])}))},n.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},n.prototype.isFileSourceConfigured=function(){return!!this.field.params&&!!this.field.params.fileSource},n.prototype.isMultipleSourceUpload=function(){return!this.field.readOnly&&this.isFileSourceConfigured()&&!this.isOnlyLocalSourceSelected()},n.prototype.isAllFileSourceSelected=function(){return this.field.params&&this.field.params.fileSource&&"all-file-sources"===this.field.params.fileSource.serviceId&&!this.field.params.link},n.prototype.isOnlyLocalSourceSelected=function(){return this.field.params&&this.field.params.fileSource&&"local-file"===this.field.params.fileSource.serviceId},n.prototype.isSimpleUploadButton=function(){return this.isUploadButtonVisible()&&!this.isFileSourceConfigured()||this.isOnlyLocalSourceSelected()},n.prototype.isUploadButtonVisible=function(){return(!this.hasFile||this.multipleOption)&&!this.field.readOnly},n.prototype.isDefinedSourceFolder=function(){var t,e;return!!(null===(e=null===(t=this.field.params)||void 0===t?void 0:t.fileSource)||void 0===e?void 0:e.selectedFolder)},n.prototype.isTemporaryFile=function(t){return this.tempFilesList.findIndex((function(e){return e.name===t.name}))>=0},n.prototype.getNodeFromTempFile=function(t){return this.tempFilesList.find((function(e){return e.name===t.name}))},n.prototype.openSelectDialogFromFileSource=function(){var t,e,n=this,i=this.field.params,o=this.repositoryList.find((function(t){var e;return t.name===(null===(e=null==i?void 0:i.fileSource)||void 0===e?void 0:e.name)}));o&&this.isExternalHost(o)?this.uploadFileFromExternalCS(o,null===(e=null===(t=null==i?void 0:i.fileSource)||void 0===t?void 0:t.selectedFolder)||void 0===e?void 0:e.pathId):this.contentDialog.openFileBrowseDialogByFolderId(i.fileSource.selectedFolder.pathId).subscribe((function(t){var e;(e=n.tempFilesList).push.apply(e,J(t)),n.uploadFileFromCS(t,n.field.params.fileSource.selectedFolder.accountId,n.field.params.fileSource.selectedFolder.siteId)}))},n.prototype.onAttachFileChanged=function(t){var e;(e=this.tempFilesList).push.apply(e,J(Array.from(t.target.files))),this.onFileChanged(t)},n.prototype.onRemoveAttachFile=function(t){this.isTemporaryFile(t)&&this.tempFilesList.splice(this.tempFilesList.indexOf(t.contentBlob),1),this.removeFile(t)},n.prototype.onAttachFileClicked=function(t){!t.isExternal&&t.contentAvailable?this.isTemporaryFile(t)?this.formService.formContentClicked.next(t):this.fileClicked(t):this.logger.info("The file "+t.name+" comes from an external source and cannot be showed at this moment")},n.prototype.downloadContent=function(t){var e=this;if(this.isTemporaryFile(t)){var n=t.contentBlob;if(n)this.downloadService.downloadBlob(n,t.name);else{var i=this.getNodeFromTempFile(t),o=this.contentService.getContentUrl(i.id);this.downloadService.downloadUrl(o,t.name)}}if(t.sourceId){var a=this.findSource(t.source);if(a&&this.isExternalHost(a))this.attachDialogService.downloadURL(a,t.sourceId).subscribe((function(n){e.downloadService.downloadUrl(n,t.name)}));else{o=this.contentService.getContentUrl(t.sourceId);this.downloadService.downloadUrl(o,t.name)}}else this.processContentService.getFileRawContent(t.id).subscribe((function(n){e.downloadService.downloadBlob(n,t.name)}),(function(){e.logger.error("Impossible retrieve content for download")}))},n.prototype.openSelectDialog=function(t){var e=this;this.isExternalHost(t)?this.uploadFileFromExternalCS(t):this.contentDialog.openFileBrowseDialogByDefaultLocation().subscribe((function(n){var i;(i=e.tempFilesList).push.apply(i,J(n)),e.uploadFileFromCS(n,"alfresco-"+t.id+"-"+t.name)}))},n.prototype.isExternalHost=function(t){var n=this.getDomainHost(this.appConfigService.get(e.AppConfigValues.ECMHOST));return this.getDomainHost(t.repositoryUrl)!==n},n.prototype.findSource=function(t){return this.repositoryList.find((function(e){return t==="alfresco-"+e.id+"-"+e.name}))},n.prototype.uploadFileFromExternalCS=function(t,e){var n=this,i="alfresco-"+t.id+"-"+t.name;this.attachDialogService.openLogin(t,e,i).subscribe((function(t){var e;t.forEach((function(t){return t.isExternal=!0})),(e=n.tempFilesList).push.apply(e,J(t)),n.uploadFileFromCS(t,i)}))},n.prototype.uploadFileFromCS=function(t,e,n){var a=this,r=[];t.forEach((function(t){t.isLink=a.field.params.link})),i.from(t).pipe(o.mergeMap((function(t){var o;return i.zip(i.of(null===(o=null==t?void 0:t.content)||void 0===o?void 0:o.mimeType),a.activitiContentService.applyAlfrescoNode(t,n,e),i.of(t.isExternal))}))).subscribe((function(t){var e=X(t,3),n=e[0],i=e[1],o=e[2];i.mimeType=n,i.isExternal=o,r.push(i)}),(function(t){a.logger.error(t)}),(function(){var t=a.field.value?a.field.value:[];a.field.value=J(t,r),a.field.json.value=J(t,r),a.hasFile=!0}))},n.prototype.getDomainHost=function(t){return t.match("^(?:https?://)?(?:[^@/\n]+@)?(?:www.)?([^:/?\n]+)")[1]},n}(e.UploadWidgetComponent);Kt.decorators=[{type:n.Component,args:[{selector:"attach-widget",template:'<div class="adf-attach-widget {{field.className}}"\n    [class.adf-invalid]="!field.isValid"\n    [class.adf-readonly]="field.readOnly">\n    <label class="adf-label" [attr.for]="field.id">{{field.name | translate}}\n        <span *ngIf="isRequired()">*</span>\n    </label>\n    <div class="adf-attach-widget-container">\n        <div id="adf-attach-widget-simple-upload" *ngIf="isSimpleUploadButton() && isUploadButtonVisible()">\n            <a mat-raised-button color="primary">\n                {{ \'FORM.FIELD.UPLOAD\' | translate }}\n                <mat-icon>file_upload</mat-icon>\n                <input #uploadFiles\n                        [multiple]="multipleOption"\n                        type="file"\n                        [id]="field.id"\n                        (change)="onAttachFileChanged($event)" />\n            </a>\n        </div>\n        <div class="adf-attach-widget__menu-upload" *ngIf="isUploadButtonVisible() && isMultipleSourceUpload()">\n            <button mat-raised-button color="primary" [matMenuTriggerFor]="menu" [id]="field.id">\n                    {{ \'FORM.FIELD.UPLOAD\' | translate }}\n                    <mat-icon>attach_file</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu" class="adf-attach-widget__menu-content">\n                <button mat-menu-item (click)="uploadFile.click()"\n                        id="attach-local-file"\n                        *ngIf="isAllFileSourceSelected()">\n                    {{ \'FORM.FIELD.LOCALSTORAGE\' | translate }}\n                    <mat-icon>file_upload</mat-icon>\n                    <input #uploadFile\n                            class="adf-attach-widget__input-type"\n                            [multiple]="multipleOption"\n                            type="file"\n                            [id]="field.id"\n                            (change)="onAttachFileChanged($event)" />\n                </button>\n                <button mat-menu-item\n                        *ngIf="isDefinedSourceFolder()"\n                        id="attach-{{field.params?.fileSource?.name}}"\n                        (click)="openSelectDialogFromFileSource()">\n                        {{field.params?.fileSource?.name}}\n                        <mat-icon>\n                            <img alt="alfresco" class="adf-attach-widget__image-logo" src="../assets/images/alfresco-flower.svg">\n                        </mat-icon>\n                </button>\n                <div *ngIf="!isDefinedSourceFolder()">\n                    <button mat-menu-item *ngFor="let repo of repositoryList"\n                            id="attach-{{repo?.name}}"\n                           (click)="openSelectDialog(repo)">\n                            {{repo.name}}\n                            <mat-icon>\n                                <img alt="alfresco" class="adf-attach-widget__image-logo" src="../assets/images/alfresco-flower.svg">\n                            </mat-icon>\n                    </button>\n                </div>\n            </mat-menu>\n        </div>\n    </div>\n</div>\n\n<div id="adf-attach-widget-readonly-list">\n    <mat-list *ngIf="hasFile">\n        <mat-list-item class="adf-attach-files-row" *ngFor="let file of field.value">\n            <img mat-list-icon class="adf-attach-widget__icon"\n                 [id]="\'file-\'+file.id+\'-icon\'"\n                 [src]="file.content ? getIcon(file.content.mimeType) : getIcon(file.mimeType)"\n                 [alt]="mimeTypeIcon"\n                 (click)="onAttachFileClicked(file)"\n                 (keyup.enter)="onAttachFileClicked(file)"\n                 role="button"\n                 tabindex="0"/>\n            <span matLine id="{{\'file-\'+file.id}}" (click)="onAttachFileClicked(file)" (keyup.enter)="onAttachFileClicked(file)"\n                  role="button" tabindex="0" class="adf-file">{{file.name}}</span>\n            <button id="{{\'file-\'+file.id+\'-option-menu\'}}" mat-icon-button [matMenuTriggerFor]="fileActionMenu">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #fileActionMenu="matMenu" xPosition="before">\n                <button id="{{\'file-\'+file.id+\'-show-file\'}}"\n                    [disabled]="file.isExternal || !file.contentAvailable || !file.mimeType"\n                    mat-menu-item (click)="onAttachFileClicked(file)">\n                    <mat-icon>visibility</mat-icon>\n                    <span>{{ \'FORM.FIELD.VIEW_FILE\' | translate }}</span>\n                </button>\n                <button id="{{\'file-\'+file.id+\'-download-file\'}}"\n                    [disabled]="file.isExternal || !file.mimeType"\n                    mat-menu-item (click)="downloadContent(file)">\n                    <mat-icon>file_download</mat-icon>\n                    <span>{{ \'FORM.FIELD.DOWNLOAD_FILE\' | translate }}</span>\n                </button>\n                <button *ngIf="!field.readOnly" id="{{\'file-\'+file.id+\'-remove-file\'}}"\n                        mat-menu-item [id]="\'file-\'+file.id+\'-remove\'"\n                        (click)="onRemoveAttachFile(file);" (keyup.enter)="onRemoveAttachFile(file);">\n                    <mat-icon class="mat-24">highlight_off</mat-icon>\n                    <span>{{ \'FORM.FIELD.REMOVE_FILE\' | translate }}</span>\n                </button>\n            </mat-menu>\n        </mat-list-item>\n    </mat-list>\n</div>\n\n<error-widget [error]="field.validationSummary"></error-widget>\n<error-widget *ngIf="isInvalidFieldRequired()" required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:n.ViewEncapsulation.None,styles:[".adf-attach-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-widget__menu-upload{align-items:center;display:flex}.adf-attach-widget__input-type{height:.1px;opacity:0;overflow:hidden;position:absolute;width:.1px;z-index:-1}.adf-attach-widget__image-logo{padding-left:5px}.adf-attach-widget-repo-button{padding-left:10px}.adf-attach-widget-repo-button .mat-button-wrapper{display:inline}.adf-attach-widget-repo-button .mat-mini-fab.mat-accent{background-color:inherit}.adf-attach-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-widget__icon{cursor:pointer;float:left;padding:6px}.adf-attach-widget__reset{margin-top:-2px}.adf-attach-files-row .mat-line{margin-bottom:0}"]}]}],Kt.ctorParameters=function(){return[{type:e.FormService},{type:e.LogService},{type:e.ThumbnailService},{type:e.ProcessContentService},{type:e.ActivitiContentService},{type:e.ContentService},{type:L.ContentNodeDialogService},{type:e.AppConfigService},{type:e.DownloadService},{type:Bt}]};var jt=function(t){function e(e,n,i){var o=t.call(this)||this;return o.contentDialog=e,o.formService=n,o.nodeService=i,o.typeId="AttachFolderWidgetComponent",o.hasFolder=!1,o.selectedFolderName="",o}return G(e,t),e.prototype.ngOnInit=function(){var t=this;this.field&&this.field.value&&(this.hasFolder=!0,this.nodeService.getNode(this.field.value).subscribe((function(e){t.selectedFolderName=e.name})))},e.prototype.isDefinedSourceFolder=function(){return!!this.field.params&&!!this.field.params.folderSource&&!!this.field.params.folderSource.selectedFolder},e.prototype.openSelectDialogFromFileSource=function(){var t=this,e=this.field.params;this.isDefinedSourceFolder()?this.contentDialog.openFolderBrowseDialogByFolderId(e.folderSource.selectedFolder.pathId).subscribe((function(e){t.selectedFolderName=e[0].name,t.field.value=e[0].id,t.hasFolder=!0})):this.contentDialog.openFolderBrowseDialogBySite().subscribe((function(e){t.selectedFolderName=e[0].name,t.field.value=e[0].id,t.hasFolder=!0}))},e.prototype.removeFolder=function(){this.field.value=null,this.selectedFolderName="",this.hasFolder=!1},e}(e.WidgetComponent);jt.decorators=[{type:n.Component,args:[{selector:"attach-folder-widget",template:'<div class="adf-attach-folder-widget {{field.className}}"\n     [class.adf-invalid]="!field.isValid"\n     [class.adf-readonly]="field.readOnly">\n    <label class="adf-label" [attr.for]="field.id">{{field.name | translate}}<span *ngIf="isRequired()">*</span></label>\n    <div class="adf-attach-folder-widget-container">\n        <div *ngIf="hasFolder" class="adf-attach-folder-result">\n            <mat-icon>folder</mat-icon>\n            <div class="adf-attach-folder-files-row">\n                <span matLine id="{{\'folder-\'+field?.id}}"\n                        role="button" tabindex="0" class="adf-folder">{{selectedFolderName}}</span>\n                <button *ngIf="!field.readOnly" mat-icon-button [id]="\'folder-\'+field?.id+\'-remove\'"\n                        (click)="removeFolder();">\n                    <mat-icon class="mat-24">highlight_off</mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div *ngIf="!hasFolder && !field.readOnly">\n            <button mat-raised-button\n                color="primary"\n                (click)="openSelectDialogFromFileSource()"\n                [id]="\'folder-\'+field?.id+\'-button\'">\n                    {{ \'FORM.FIELD.UPLOAD\' | translate }}\n                <mat-icon>cloud_upload</mat-icon>\n            </button>\n        </div>\n    </div>\n    <error-widget [error]="field.validationSummary"></error-widget>\n    <error-widget *ngIf="isInvalidFieldRequired()" required="{{ \'FORM.FIELD.REQUIRED\' | translate }}"></error-widget>\n</div>\n',host:{"(click)":"event($event)","(blur)":"event($event)","(change)":"event($event)","(focus)":"event($event)","(focusin)":"event($event)","(focusout)":"event($event)","(input)":"event($event)","(invalid)":"event($event)","(select)":"event($event)"},encapsulation:n.ViewEncapsulation.None,styles:[".adf-attach-folder-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-folder-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-folder-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-folder-files-row{padding-left:8px}.adf-attach-folder-files-row .mat-line{margin-bottom:0}.adf-attach-folder-result{align-items:center;display:flex}"]}]}],jt.ctorParameters=function(){return[{type:L.ContentNodeDialogService},{type:e.FormService},{type:e.NodesApiService}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var $t=function(){};$t.decorators=[{type:n.NgModule,args:[{imports:[e.CoreModule,L.ContentNodeSelectorModule,Ct],declarations:[Kt,jt,Vt],exports:[Kt,jt,Vt]}]}];var zt=function(t){function a(e,o,a,r){var s=t.call(this)||this;return s.formService=e,s.visibilityService=o,s.ecmModelService=a,s.nodeService=r,s.saveMetadata=!1,s.enableFixedSpacedForm=!0,s.formSaved=new n.EventEmitter,s.formCompleted=new n.EventEmitter,s.formContentClicked=new n.EventEmitter,s.formLoaded=new n.EventEmitter,s.formDataRefreshed=new n.EventEmitter,s.debugMode=!1,s.onDestroy$=new i.Subject,s}return G(a,t),a.prototype.ngOnInit=function(){var t=this;this.formService.formContentClicked.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){return t.formContentClicked.emit(e)})),this.formService.validateForm.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){e.errorsField.length>0&&t.formError.next(e.errorsField)}))},a.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},a.prototype.ngOnChanges=function(t){var e=t.taskId;if(e&&e.currentValue)this.getFormByTaskId(e.currentValue);else{var n=t.formId;if(n&&n.currentValue)this.getFormDefinitionByFormId(n.currentValue);else{var i=t.formName;if(i&&i.currentValue)this.getFormDefinitionByFormName(i.currentValue);else{var o=t.nodeId;if(o&&o.currentValue)this.loadFormForEcmNode(o.currentValue);else{var a=t.data;a&&a.currentValue&&this.refreshFormData()}}}}},a.prototype.onRefreshClicked=function(){this.loadForm()},a.prototype.loadForm=function(){this.taskId?this.getFormByTaskId(this.taskId):this.formId?this.getFormDefinitionByFormId(this.formId):this.formName&&this.getFormDefinitionByFormName(this.formName)},a.prototype.findProcessVariablesByTaskId=function(t){var e=this;return this.formService.getTask(t).pipe(o.switchMap((function(n){return e.isAProcessTask(n)?e.visibilityService.getTaskProcessVariable(t):i.of({})})))},a.prototype.isAProcessTask=function(t){return t.processDefinitionId&&"null"!==t.processDefinitionDeploymentId},a.prototype.getFormByTaskId=function(t){var e=this;return new Promise((function(n){e.findProcessVariablesByTaskId(t).subscribe((function(){e.formService.getTaskForm(t).subscribe((function(t){var i=e.parseForm(t);e.visibilityService.refreshVisibility(i),i.validateForm(),e.form=i,e.onFormLoaded(e.form),n(e.form)}),(function(t){e.handleError(t),n(null)}))}))}))},a.prototype.getFormDefinitionByFormId=function(t){var e=this;this.formService.getFormDefinitionById(t).subscribe((function(t){e.formName=t.name,e.form=e.parseForm(t),e.visibilityService.refreshVisibility(e.form),e.form.validateForm(),e.onFormLoaded(e.form)}),(function(t){e.handleError(t)}))},a.prototype.getFormDefinitionByFormName=function(t){var e=this;this.formService.getFormDefinitionByName(t).subscribe((function(t){e.formService.getFormDefinitionById(t).subscribe((function(t){e.form=e.parseForm(t),e.visibilityService.refreshVisibility(e.form),e.form.validateForm(),e.onFormLoaded(e.form)}),(function(t){e.handleError(t)}))}),(function(t){e.handleError(t)}))},a.prototype.saveTaskForm=function(){var t=this;this.form&&this.form.taskId&&this.formService.saveTaskForm(this.form.taskId,this.form.values).subscribe((function(){t.onTaskSaved(t.form),t.storeFormAsMetadata()}),(function(e){return t.onTaskSavedError(t.form,e)}))},a.prototype.completeTaskForm=function(t){var e=this;this.form&&this.form.taskId&&this.formService.completeTaskForm(this.form.taskId,this.form.values,t).subscribe((function(){e.onTaskCompleted(e.form),e.storeFormAsMetadata()}),(function(t){return e.onTaskCompletedError(e.form,t)}))},a.prototype.handleError=function(t){this.error.emit(t)},a.prototype.parseForm=function(t){if(t){var n=new e.FormModel(t,this.data,this.readOnly,this.formService,this.enableFixedSpacedForm);return t.fields||(n.outcomes=this.getFormDefinitionOutcomes(n)),this.fieldValidators&&this.fieldValidators.length>0&&(n.fieldValidators=this.fieldValidators),n}return null},a.prototype.getFormDefinitionOutcomes=function(t){return[new e.FormOutcomeModel(t,{id:"$save",name:e.FormOutcomeModel.SAVE_ACTION,isSystem:!0})]},a.prototype.checkVisibility=function(t){t&&t.form&&this.visibilityService.refreshVisibility(t.form)},a.prototype.refreshFormData=function(){this.form=this.parseForm(this.form.json),this.onFormLoaded(this.form),this.onFormDataRefreshed(this.form)},a.prototype.loadFormForEcmNode=function(t){var e=this;this.nodeService.getNodeMetadata(t).subscribe((function(t){e.data=t.metadata,e.loadFormFromActiviti(t.nodeType)}),this.handleError)},a.prototype.loadFormFromActiviti=function(t){var e=this;this.formService.searchFrom(t).subscribe((function(n){n?e.loadFormFromFormId(n.id):e.formService.createFormFromANode(t).subscribe((function(t){e.loadFormFromFormId(t.id)}))}),(function(t){e.handleError(t)}))},a.prototype.loadFormFromFormId=function(t){this.formId=t,this.loadForm()},a.prototype.storeFormAsMetadata=function(){var t=this;this.saveMetadata&&this.ecmModelService.createEcmTypeForActivitiForm(this.formName,this.form).subscribe((function(n){t.nodeService.createNodeMetadata(n.nodeType||n.entry.prefixedName,e.EcmModelService.MODEL_NAMESPACE,t.form.values,t.path,t.nameNode)}),(function(e){t.handleError(e)}))},a.prototype.onFormLoaded=function(t){this.formLoaded.emit(t),this.formService.formLoaded.next(new e.FormEvent(t))},a.prototype.onFormDataRefreshed=function(t){this.formDataRefreshed.emit(t),this.formService.formDataRefreshed.next(new e.FormEvent(t))},a.prototype.onTaskSaved=function(t){this.formSaved.emit(t),this.formService.taskSaved.next(new e.FormEvent(t))},a.prototype.onTaskSavedError=function(t,n){this.handleError(n),this.formService.taskSavedError.next(new e.FormErrorEvent(t,n))},a.prototype.onTaskCompleted=function(t){this.formCompleted.emit(t),this.formService.taskCompleted.next(new e.FormEvent(t))},a.prototype.onTaskCompletedError=function(t,n){this.handleError(n),this.formService.taskCompletedError.next(new e.FormErrorEvent(t,n))},a.prototype.onExecuteOutcome=function(t){var n=new e.FormOutcomeEvent(t);return this.formService.executeOutcome.next(n),!n.defaultPrevented&&(this.executeOutcome.emit(n),!n.defaultPrevented)},a}(e.FormBaseComponent);zt.decorators=[{type:n.Component,args:[{selector:"adf-form",template:'<div *ngIf="!hasForm()">\n    <ng-content select="[empty-form]">\n    </ng-content>\n</div>\n\n<div *ngIf="hasForm()" class="adf-form-container">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>\n                <h4>\n                    <div *ngIf="showValidationIcon" class="adf-form-validation-button">\n                        <i id="adf-valid-form-icon" class="material-icons"\n                            *ngIf="form.isValid; else no_valid_form">check_circle</i>\n                        <ng-template #no_valid_form>\n                            <i id="adf-invalid-form-icon" class="material-icons adf-invalid-color">error</i>\n                        </ng-template>\n                    </div>\n                    <div *ngIf="showRefreshButton" class="adf-form-reload-button">\n                        <button mat-icon-button (click)="onRefreshClicked()">\n                            <mat-icon>refresh</mat-icon>\n                        </button>\n                    </div>\n                    <span *ngIf="isTitleEnabled()" class="adf-form-title" [matTooltip]="form.taskName">\n                        {{form.taskName}}\n                        <ng-container *ngIf="!form.taskName">\n                            {{\'FORM.FORM_RENDERER.NAMELESS_TASK\' | translate}}\n                        </ng-container>\n                    </span>\n                </h4>\n            </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <adf-form-renderer [formDefinition]="form">\n            </adf-form-renderer>\n        </mat-card-content>\n        <mat-card-actions *ngIf="form.hasOutcomes()" class="adf-form-mat-card-actions">\n            <ng-content select="adf-form-custom-outcomes"></ng-content>\n            <button [id]="\'adf-form-\'+ outcome.name  | formatSpace" *ngFor="let outcome of form.outcomes"\n                [color]="getColorForOutcome(outcome.name)" mat-button [disabled]="!isOutcomeButtonEnabled(outcome)"\n                [class.adf-form-hide-button]="!isOutcomeButtonVisible(outcome, form.readOnly)"\n                (click)="onOutcomeClicked(outcome)">\n                {{outcome.name | translate | uppercase }}\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n',encapsulation:n.ViewEncapsulation.None}]}],zt.ctorParameters=function(){return[{type:e.FormService},{type:e.WidgetVisibilityService},{type:e.EcmModelService},{type:e.NodeService}]},zt.propDecorators={form:[{type:n.Input}],taskId:[{type:n.Input}],nodeId:[{type:n.Input}],formId:[{type:n.Input}],formName:[{type:n.Input}],saveMetadata:[{type:n.Input}],data:[{type:n.Input}],enableFixedSpacedForm:[{type:n.Input}],formSaved:[{type:n.Output}],formCompleted:[{type:n.Output}],formContentClicked:[{type:n.Output}],formLoaded:[{type:n.Output}],formDataRefreshed:[{type:n.Output}]};var Ht=function(t){function i(e,i){var o=t.call(this,e,i,null,null)||this;return o.showOutcomeButtons=!0,o.showRefreshButton=!0,o.readOnlyForm=!1,o.outcomeClick=new n.EventEmitter,o.formContentClicked=new n.EventEmitter,o.outcomesContainer=null,o.showTitle=!1,o}return G(i,t),i.prototype.ngOnChanges=function(t){var e=t.processDefinitionId;if(e&&e.currentValue)return this.processDefinitionId=e.currentValue,this.visibilityService.cleanProcessVariable(),void this.getStartFormDefinition(this.processDefinitionId);var n=t.data;if(!n||!n.currentValue){var i=t.processId;return i&&i.currentValue?(this.visibilityService.cleanProcessVariable(),void this.loadStartForm(i.currentValue)):void 0}this.parseRefreshVisibilityValidateForm(this.form.json)},i.prototype.loadStartForm=function(t){var e=this;this.formService.getProcessInstance(t).subscribe((function(n){e.formService.getStartFormInstance(t).subscribe((function(t){e.formName=t.name,n.variables&&(t.processVariables=n.variables),e.parseRefreshVisibilityValidateForm(t)}),(function(t){return e.handleError(t)}))}))},i.prototype.getStartFormDefinition=function(t){var e=this;this.formService.getStartFormDefinition(t).subscribe((function(t){e.formName=t.processDefinitionName,e.parseRefreshVisibilityValidateForm(t)}),(function(t){return e.handleError(t)}))},i.prototype.parseRefreshVisibilityValidateForm=function(t){this.form=this.parseForm(t),this.visibilityService.refreshVisibility(this.form),this.form.validateForm(),this.form.readOnly=this.readOnlyForm,this.onFormLoaded(this.form)},i.prototype.isOutcomeButtonVisible=function(n,i){return(!n||!n.isSystem||n.name!==e.FormOutcomeModel.SAVE_ACTION&&n.name!==e.FormOutcomeModel.COMPLETE_ACTION)&&(!(!n||n.name!==e.FormOutcomeModel.START_PROCESS_ACTION)||t.prototype.isOutcomeButtonVisible.call(this,n,i))},i.prototype.saveTaskForm=function(){},i.prototype.onRefreshClicked=function(){this.processDefinitionId?(this.visibilityService.cleanProcessVariable(),this.getStartFormDefinition(this.processDefinitionId)):this.processId&&(this.visibilityService.cleanProcessVariable(),this.loadStartForm(this.processId))},i.prototype.completeTaskForm=function(t){this.outcomeClick.emit(t)},i}(zt);Ht.decorators=[{type:n.Component,args:[{selector:"adf-start-form",template:'<div class="adf-start-form-container" *ngIf="hasForm()">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>\n                <h2 *ngIf="isTitleEnabled()" class="mdl-card__title-text">{{form.taskName}}</h2>\n            </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <div *ngIf="form.hasTabs()">\n                <tabs-widget [tabs]="form.tabs" (formTabChanged)="checkVisibility($event);"></tabs-widget>\n            </div>\n\n            <div *ngIf="!form.hasTabs() && form.hasFields()">\n                <div *ngFor="let field of form.fields">\n                    <adf-form-field [field]="field.field"></adf-form-field>\n                </div>\n            </div>\n        </mat-card-content>\n        <mat-card-content class="adf-start-form-actions" *ngIf="showOutcomeButtons && form.hasOutcomes()"\n                          #outcomesContainer>\n            <ng-content select="[adf-form-custom-button], [form-custom-button]"></ng-content>\n\n            <button *ngFor="let outcome of form.outcomes"\n                    mat-button\n                    [attr.data-automation-id]="\'adf-form-\' + outcome.name  | lowercase"\n                    [disabled]="!isOutcomeButtonEnabled(outcome)"\n                    [class.mdl-button--colored]="!outcome.isSystem"\n                    [class.adf-form-hide-button]="!isOutcomeButtonVisible(outcome, form.readOnly)"\n                    (click)="onOutcomeClicked(outcome)">\n                {{ outcome.name | uppercase | translate | uppercase }}\n            </button>\n        </mat-card-content>\n        <mat-card-actions *ngIf="showRefreshButton">\n            <button mat-button\n                    (click)="onRefreshClicked()">\n                <mat-icon>refresh</mat-icon>\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-form-container{max-height:100%!important;max-width:100%!important}.adf-form-container .mat-card{overflow:hidden;padding:16px 24px}.adf-form-container .mat-card-header-text{margin:0!important}.adf-form-container .mat-tab-body-content{overflow:hidden}.adf-form-container .mat-tab-label{color:var(--theme-text-color);font-size:var(--theme-subheading-2-font-size);letter-spacing:-.4px;line-height:var(--theme-headline-line-height);text-align:left;text-transform:uppercase}.adf-form-container .mat-ink-bar{height:4px}.adf-form-container .mat-form-field-wrapper{margin:0 12px 0 0}.adf-form-title{font-size:var(--theme-title-font-size)}.adf-form-debug-container{padding:10px}.adf-form-debug-container .adf-debug-toggle-text{cursor:pointer;padding-left:15px}.adf-form-debug-container .adf-debug-toggle-text:hover{font-weight:700}.adf-form-reload-button{position:absolute;right:12px;top:30px}.adf-form-validation-button{color:var(--theme-accent-color);position:absolute;right:50px;top:39px}.adf-form-validation-button .adf-invalid-color{color:var(--theme-warn-color)}.adf-form-hide-button{display:none!important}.adf-task-title{text-align:center}.adf-label{font-size:var(--theme-caption-font-size);height:16px;line-height:var(--theme-headline-line-height);text-align:left;white-space:nowrap;width:32px}.adf-form-mat-card-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-form-mat-card-actions .mat-button{border-radius:5px;height:36px}.adf-form-mat-card-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}form-field{width:100%}form-field .mat-input-element{font-size:var(--theme-body-2-font-size);line-height:normal;padding-top:8px}[dir=rtl] .adf-form-validation-button{left:50px;right:unset}"]}]}],Ht.ctorParameters=function(){return[{type:e.FormService},{type:e.WidgetVisibilityService}]},Ht.propDecorators={processDefinitionId:[{type:n.Input}],processId:[{type:n.Input}],showOutcomeButtons:[{type:n.Input}],showRefreshButton:[{type:n.Input}],readOnlyForm:[{type:n.Input}],outcomeClick:[{type:n.Output}],formContentClicked:[{type:n.Output}],outcomesContainer:[{type:n.ViewChild,args:["outcomesContainer"]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Gt=function(){};Gt.decorators=[{type:n.Component,args:[{selector:"adf-form-custom-outcomes",template:"<ng-content></ng-content>"}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var qt=function(){};qt.decorators=[{type:n.NgModule,args:[{imports:[e.CoreModule,Ct],declarations:[zt,Ht,Gt],exports:[zt,Ht,Gt]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Yt=function(){};Yt.decorators=[{type:n.NgModule,args:[{imports:[r.CommonModule,d.FlexLayoutModule,Ct,p.FormsModule,qt,p.ReactiveFormsModule,e.CoreModule,Ut,Ft,$t],declarations:[ut,ft,st,dt,ht,vt,ct,pt,St,At,Tt,gt,yt],exports:[ut,ft,st,dt,ht,vt,ct,pt,St,At,Tt,gt,yt]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Wt=function(){function t(t,e,a){var r=this;this.activitiProcess=t,this.logService=e,this.dialog=a,this.showRefreshButton=!0,this.error=new n.EventEmitter,this.activeTasks=[],this.completedTasks=[],this.onDestroy$=new i.Subject,this.taskClick=new n.EventEmitter,this.task$=new i.Observable((function(t){return r.taskObserver=t})).pipe(o.share()),this.completedTask$=new i.Observable((function(t){return r.completedTaskObserver=t})).pipe(o.share())}return t.prototype.ngOnInit=function(){var t=this;this.task$.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){return t.activeTasks.push(e)})),this.completedTask$.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){return t.completedTasks.push(e)}))},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.ngOnChanges=function(t){var e=t.processInstanceDetails;e&&e.currentValue&&this.load(e.currentValue.id)},t.prototype.load=function(t){this.loadActive(t),this.loadCompleted(t)},t.prototype.loadActive=function(t){var e=this;this.activeTasks=[],t?this.activitiProcess.getProcessTasks(t,null).subscribe((function(t){t.forEach((function(t){e.taskObserver.next(t)}))}),(function(t){e.error.emit(t)})):this.activeTasks=[]},t.prototype.loadCompleted=function(t){var e=this;this.completedTasks=[],t?this.activitiProcess.getProcessTasks(t,"completed").subscribe((function(t){t.forEach((function(t){e.completedTaskObserver.next(t)}))}),(function(t){e.error.emit(t)})):this.completedTasks=[]},t.prototype.hasStartFormDefined=function(){return this.processInstanceDetails&&!0===this.processInstanceDetails.startFormDefined},t.prototype.getUserFullName=function(t){return t?(t.firstName&&"null"!==t.firstName?t.firstName+" ":"")+t.lastName:"Nobody"},t.prototype.getFormatDate=function(t,e){var n=new r.DatePipe("en-US");try{return n.transform(t,e)}catch(n){return this.logService.error("ProcessListInstanceTask: error parsing date "+t+" to format "+e),t}},t.prototype.clickTask=function(t){var e=new Et(t);this.taskClick.emit(e)},t.prototype.clickStartTask=function(){this.processId=this.processInstanceDetails.id,this.showStartDialog()},t.prototype.showStartDialog=function(){this.dialog.open(this.startDialog,{height:"500px",width:"700px"})},t.prototype.closeStartDialog=function(){this.dialog.closeAll()},t.prototype.onRefreshClicked=function(){this.load(this.processInstanceDetails.id)},t.prototype.onFormContentClick=function(){this.closeStartDialog()},t}();Wt.decorators=[{type:n.Component,args:[{selector:"adf-process-instance-tasks",template:'<div  *ngIf="showRefreshButton" class="process-tasks-refresh" >\n    <button mat-icon-button (click)="onRefreshClicked()">\n        <mat-icon class="md-24" aria-label="Refresh">refresh</mat-icon>\n    </button>\n</div>\n\n\x3c!-- ACTIVE FORM --\x3e\n\n<mat-chip-list>\n    <span class="adf-chip-label">{{ \'ADF_PROCESS_LIST.DETAILS.LABELS.TASKS_ACTIVE\'|translate }}</span>\n    <mat-chip class="adf-process-badge" color="accent" selected="true">{{activeTasks?.length}}</mat-chip>\n</mat-chip-list>\n\n<div class="menu-container" *ngIf="activeTasks?.length > 0" data-automation-id="active-tasks">\n    <mat-list>\n        <mat-list-item class="process-tasks__task-item" *ngFor="let task of activeTasks" (click)="clickTask(task)">\n                <mat-icon mat-list-icon>assignment</mat-icon>\n                <h3 matLine>{{task.name || \'Nameless task\'}}</h3>\n                <span matLine>\n                    {{ \'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE\' | translate:{user: getUserFullName(task.assignee), created: getFormatDate(task.created, \'mediumDate\') } }}\n                </span>\n        </mat-list-item>\n    </mat-list>\n</div>\n\n\x3c!-- START FORM --\x3e\n\n<div *ngIf="activeTasks?.length === 0" data-automation-id="active-tasks-none" class="no-results">\n    {{ \'ADF_PROCESS_LIST.DETAILS.TASKS.NO_ACTIVE\' | translate }}\n</div>\n\n<div *ngIf="hasStartFormDefined()">\n    <span class="adf-activiti-label">{{ \'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM\'|translate }}</span>\n\n    \x3c!--IF START TASK COMPLETED --\x3e\n    <div class="menu-container" data-automation-id="start-form">\n        <mat-list>\n            <mat-list-item class="process-tasks__task-item" (click)="clickStartTask()">\n                <mat-icon mat-list-icon>assignment</mat-icon>\n                <h3 matLine>{{ \'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM\'|translate }}</h3>\n                <span matLine>\n                    {{ \'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE\' | translate:{user:getUserFullName(processInstanceDetails.startedBy), created: getFormatDate(processInstanceDetails.started, \'mediumDate\') } }}\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n</div>\n\n\x3c!-- COMPLETED FORM --\x3e\n<mat-chip-list>\n        <span class="adf-chip-label">{{ \'ADF_PROCESS_LIST.DETAILS.LABELS.TASKS_COMPLETED\'|translate }}</span>\n        <mat-chip class="adf-process-badge" color="accent" selected="true">{{completedTasks?.length}}</mat-chip>\n</mat-chip-list>\n\n<div class="menu-container" *ngIf="completedTasks?.length > 0" data-automation-id="completed-tasks">\n    <mat-list>\n        <mat-list-item class="process-tasks__task-item" *ngFor="let task of completedTasks" (click)="clickTask(task)">\n            <mat-icon mat-list-icon>assignment</mat-icon>\n            <h3 matLine>{{task.name || \'Nameless task\'}}</h3>\n            <span matLine>\n                {{ \'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE\' | translate:{user:getUserFullName(task.assignee), created: getFormatDate(task.created, \'mediumDate\') } }}\n            </span>\n        </mat-list-item>\n    </mat-list>\n</div>\n\n<div *ngIf="completedTasks?.length === 0" data-automation-id="completed-tasks-none" class="no-results">\n    {{ \'ADF_PROCESS_LIST.DETAILS.TASKS.NO_COMPLETED\' | translate }}\n</div>\n\n<ng-template *ngIf="hasStartFormDefined()" #startDialog>\n    <div id="adf-start-process-dialog" class="adf-start-process-dialog">\n        <h4 matDialogTitle>{{ \'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM\'|translate }}</h4>\n        <div mat-dialog-content class="adf-start-process-dialog-content">\n            <adf-start-form [processId]="processId"\n                                 [showRefreshButton]="false" [readOnlyForm]="true"\n                                 (formContentClicked)=\'onFormContentClick()\'>\n            </adf-start-form>\n        </div>\n        <div mat-dialog-actions class="adf-start-process-dialog-actions">\n            <button mat-button type="button" (click)="closeStartDialog()">{{ \'ADF_PROCESS_LIST.DETAILS.TASKS.TASK_CLOSE\' | translate }}</button>\n        </div>\n    </div>\n</ng-template>\n',styles:[":host{width:100%}.activiti-label{font-weight:bolder;vertical-align:top}.adf-process-badge{outline:none;pointer-events:none}.adf-chip-label{font-weight:700;margin-right:8px;position:relative;top:5px}.menu-container{margin-bottom:32px}.activiti-label+.icon{position:relative;top:-2px}.task-details-dialog{position:fixed;top:50%;transform:translateY(-50%);width:40%}.process-tasks-refresh{float:right}.adf-start-process-dialog{display:flex;flex-direction:column;height:100%;width:100%}.adf-start-process-dialog-content{flex-grow:1}.adf-start-process-dialog-actions{display:flex;justify-content:flex-end}.no-results{color:rgba(0,0,0,.54);display:block;font-size:14px;font-weight:400;letter-spacing:0;line-height:18px;margin-left:9px;padding:12px}.process-tasks__task-item{cursor:pointer}"]}]}],Wt.ctorParameters=function(){return[{type:K},{type:e.LogService},{type:s.MatDialog}]},Wt.propDecorators={processInstanceDetails:[{type:n.Input}],showRefreshButton:[{type:n.Input}],error:[{type:n.Output}],startDialog:[{type:n.ViewChild,args:["startDialog"]}],taskDetails:[{type:n.ViewChild,args:["taskDetails"]}],taskClick:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Xt={default:[{key:"name",type:"text",title:"ADF_PROCESS_LIST.PROPERTIES.NAME",sortable:!0},{key:"created",type:"text",title:"ADF_PROCESS_LIST.PROPERTIES.CREATED",cssClass:"hidden",sortable:!0}]},Jt=function(t){function a(o,r,s){var c=t.call(this,s,a.PRESET_KEY,Xt)||this;return c.processService=o,c.userPreferences=r,c.page=0,c.size=e.PaginationComponent.DEFAULT_PAGINATION.maxItems,c.multiselect=!1,c.selectionMode="single",c.selectFirstRow=!0,c.stickyHeader=!1,c.showContextMenu=!1,c.showRowContextMenu=new n.EventEmitter,c.resolverFn=null,c.rowClick=new n.EventEmitter,c.success=new n.EventEmitter,c.error=new n.EventEmitter,c.isLoading=!0,c.rows=[],c.sorting=["created","desc"],c.size=c.userPreferences.paginationSize,c.pagination=new i.BehaviorSubject({maxItems:c.size,skipCount:0,totalItems:0}),c}return G(a,t),a.prototype.ngAfterContentInit=function(){this.createDatatableSchema(),this.data&&0===this.data.getColumns().length&&this.data.setColumns(this.columns),null!=this.appId&&this.reload()},a.prototype.ngOnChanges=function(t){this.isPropertyChanged(t)&&(this.isSortChanged(t)&&(this.sorting=this.sort?this.sort.split("-"):this.sorting),this.reload());var e=t.presetColumn;e&&!e.firstChange&&(this.columns=this.mergeJsonAndHtmlSchema())},a.prototype.isSortChanged=function(t){var e=t.sort;return e&&e.currentValue&&e.currentValue!==e.previousValue},a.prototype.isPropertyChanged=function(t){var e=!1,n=t.appId,i=t.processDefinitionId,o=t.processInstanceId,a=t.state,r=t.sort,s=t.page,c=t.size;return(n&&n.currentValue||i||o||a&&a.currentValue||r&&r.currentValue||s&&s.currentValue!==s.previousValue||c&&c.currentValue!==c.previousValue)&&(e=!0),e},a.prototype.reload=function(){this.requestNode=this.createRequestNode(),this.load(this.requestNode)},a.prototype.load=function(t){var e=this;this.isLoading=!0,this.processService.getProcesses(t).pipe(o.finalize((function(){return e.isLoading=!1}))).subscribe((function(t){e.rows=t.data,e.selectFirst(),e.success.emit(t),e.pagination.next({count:t.data.length,maxItems:e.size,skipCount:e.page*e.size,totalItems:t.total})}),(function(t){e.error.emit(t)}))},a.prototype.selectFirst=function(){if(this.selectFirstRow)if(this.isListEmpty())this.currentInstanceId=null;else{var t=this.rows[0];t.isSelected=!0,this.currentInstanceId=t.id}},a.prototype.getCurrentId=function(){return this.currentInstanceId},a.prototype.isListEmpty=function(){return!this.rows||0===this.rows.length},a.prototype.onRowClick=function(t){var e=t;this.currentInstanceId=e.value.getValue("id"),this.rowClick.emit(this.currentInstanceId)},a.prototype.onRowKeyUp=function(t){"Enter"===t.detail.keyboardEvent.key&&(t.preventDefault(),this.currentInstanceId=t.detail.row.getValue("id"),this.rowClick.emit(this.currentInstanceId))},a.prototype.onShowRowContextMenu=function(t){this.showRowContextMenu.emit(t)},a.prototype.createRequestNode=function(){return new O({appDefinitionId:this.appId,processDefinitionId:this.processDefinitionId,processInstanceId:this.processInstanceId,state:this.state,sort:this.sort,page:this.page,size:this.size,start:0})},a.prototype.updatePagination=function(t){var e=t.maxItems||t.skipCount;this.size=t.maxItems,this.page=this.currentPage(t.skipCount,t.maxItems),e&&this.reload()},a.prototype.currentPage=function(t,e){return t&&e?Math.floor(t/e):0},a}(e.DataTableSchema);Jt.PRESET_KEY="adf-process-list.presets",Jt.decorators=[{type:n.Component,args:[{selector:"adf-process-instance-list",template:'<adf-datatable #dataTable\n    [data]="data"\n    [rows]="rows"\n    [columns]="columns"\n    [sorting]="sorting"\n    [loading]="isLoading"\n    [stickyHeader]="stickyHeader"\n    [selectionMode]="selectionMode"\n    [multiselect]="multiselect"\n    [resolverFn]="resolverFn"\n    [contextMenu]="showContextMenu"\n    (showRowContextMenu)="onShowRowContextMenu($event)"\n    (rowClick)="onRowClick($event)"\n    (row-keyup)="onRowKeyUp($any($event))">\n    <adf-loading-content-template>\n        <ng-template>\n            <mat-progress-spinner\n                *ngIf="!customLoadingContent"\n                class="adf-process-list-loading-margin"\n                color="primary"\n                mode="indeterminate">\n            </mat-progress-spinner>\n            <ng-content select="adf-custom-loading-content-template"></ng-content>\n        </ng-template>\n    </adf-loading-content-template>\n    <adf-no-content-template>\n        <ng-template>\n                <adf-empty-content *ngIf="!customEmptyContent"\n                    icon="assessment"\n                    [title]="(requestNode ? \'ADF_PROCESS_LIST.LIST.TITLE\' : \'ADF_PROCESS_LIST.FILTERS.MESSAGES.NONE\') | translate"\n                    [subtitle]="\'ADF_PROCESS_LIST.LIST.SUBTITLE\'| translate">\n                </adf-empty-content>\n            <ng-content select="adf-custom-empty-content-template"></ng-content>\n        </ng-template>\n    </adf-no-content-template>\n</adf-datatable>\n',styles:[".adf-process-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.no-content-message{color:#000;font-size:16px;font-weight:700;opacity:.54;text-align:center}"]}]}],Jt.ctorParameters=function(){return[{type:K},{type:e.UserPreferencesService},{type:e.AppConfigService}]},Jt.propDecorators={customEmptyContent:[{type:n.ContentChild,args:[e.CustomEmptyContentTemplateDirective]}],customLoadingContent:[{type:n.ContentChild,args:[e.CustomLoadingContentTemplateDirective]}],appId:[{type:n.Input}],processDefinitionId:[{type:n.Input}],processInstanceId:[{type:n.Input}],state:[{type:n.Input}],sort:[{type:n.Input}],page:[{type:n.Input}],size:[{type:n.Input}],data:[{type:n.Input}],multiselect:[{type:n.Input}],selectionMode:[{type:n.Input}],selectFirstRow:[{type:n.Input}],stickyHeader:[{type:n.Input}],showContextMenu:[{type:n.Input}],showRowContextMenu:[{type:n.Output}],resolverFn:[{type:n.Input}],rowClick:[{type:n.Output}],success:[{type:n.Output}],error:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var Qt=function(){function t(t){this.localizedDatePipe=t}return t.prototype.transform=function(e,n){var i=e;if(i.match(t.DATE_TIME_IDENTIFIER_REG_EXP)){var o=c.now();i=i.replace(t.DATE_TIME_IDENTIFIER_REG_EXP,this.localizedDatePipe.transform(o,"medium"))}if(i.match(t.PROCESS_DEFINITION_IDENTIFIER_REG_EXP)){var a=n?n.processDefinitionName:"";i=i.replace(t.PROCESS_DEFINITION_IDENTIFIER_REG_EXP,a)}return i},t}();Qt.DATE_TIME_IDENTIFIER_REG_EXP=new RegExp("%{datetime}","i"),Qt.PROCESS_DEFINITION_IDENTIFIER_REG_EXP=new RegExp("%{processdefinition}","i"),Qt.decorators=[{type:n.Pipe,args:[{name:"processName"}]}],Qt.ctorParameters=function(){return[{type:e.LocalizedDatePipe}]};var Zt=function(){function t(t,e,o,a,r){this.activitiProcess=t,this.activitiContentService=e,this.appsProcessService=o,this.appConfig=a,this.processNamePipe=r,this.MAX_LENGTH=255,this.name="",this.showSelectProcessDropdown=!0,this.showSelectApplicationDropdown=!1,this.processFilterSelector=!0,this.start=new n.EventEmitter,this.cancel=new n.EventEmitter,this.error=new n.EventEmitter,this.processDefinitionSelection=new n.EventEmitter,this.applicationSelection=new n.EventEmitter,this.processDefinitions=[],this.maxProcessNameLength=this.MAX_LENGTH,this.applications=[],this.isProcessDefinitionsLoading=!0,this.isAppsLoading=!0,this.onDestroy$=new i.Subject}return t.prototype.ngOnInit=function(){var t=this;this.processNameInput=new p.FormControl("",[p.Validators.required,p.Validators.maxLength(this.maxProcessNameLength),p.Validators.pattern("^[^\\s]+(\\s+[^\\s]+)*$")]),this.processDefinitionInput=new p.FormControl,this.load(),this.filteredProcessesDefinitions$=this.processDefinitionInput.valueChanges.pipe(o.map((function(e){return t._filter(e)})),o.takeUntil(this.onDestroy$)),this.activitiContentService.getAlfrescoRepositories().subscribe((function(e){if(e&&e[0]){var n=e[0];t.alfrescoRepositoryName="alfresco-"+n.id+"-"+n.name}}))},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.ngOnChanges=function(t){t.values&&t.values.currentValue&&this.moveNodeFromCStoPS(),this.isAppIdChanged(t)&&(this.appId=t.appId.currentValue,this.load()),this.isProcessDefinitionChanged(t)&&(this.processDefinitionName=t.processDefinitionName.currentValue,this.filterProcessDefinitionByName())},t.prototype.isAppIdChanged=function(t){return t.appId&&t.appId.currentValue&&t.appId.currentValue!==t.appId.previousValue},t.prototype.isProcessDefinitionChanged=function(t){return t.processDefinitionName&&t.processDefinitionName.currentValue&&t.processDefinitionName.currentValue!==t.processDefinitionName.previousValue},t.prototype._filter=function(t){if(null!=t){var e=t.toLowerCase(),n=this.processDefinitions.filter((function(t){return t.name.toLowerCase().includes(e)}));return this.processFilterSelector&&(this.selectedProcessDef=this.getSelectedProcess(e)),n}return[]},t.prototype.getSelectedProcess=function(t){var e=this.processDefinitions.find((function(e){return e.name.toLowerCase()===t}));return e||(e=new N),e},t.prototype.load=function(){this.showSelectApplicationDropdown?this.loadApps():this.loadProcessDefinitions(this.appId)},t.prototype.loadProcessDefinitions=function(t){var e=this;this.isProcessDefinitionsLoading=!0,this.resetSelectedProcessDefinition(),this.activitiProcess.getProcessDefinitions(t).pipe(o.map((function(t){var n;if(1===t.length&&(n=t[0]),e.processDefinitionName){var i=t.find((function(t){return t.name===e.processDefinitionName}));i&&(n=i)}return{currentProcessDef:n,processDefinitionRepresentations:t}}))).subscribe((function(t){e.processDefinitions=t.processDefinitionRepresentations,e.processDefinitionSelectionChanged(t.currentProcessDef),e.processDefinitionInput.setValue(e.selectedProcessDef?e.selectedProcessDef.name:""),e.isProcessDefinitionsLoading=!1}),(function(t){e.isProcessDefinitionsLoading=!1,e.error.emit(t)}))},t.prototype.filterProcessDefinitionByName=function(){var t=this;if(this.processDefinitionName){var e=this.processDefinitions.find((function(e){return e.name===t.processDefinitionName}));e&&(this.processDefinitionSelectionChanged(e),this.processDefinitionInput.setValue(this.selectedProcessDef?this.selectedProcessDef.name:""))}},t.prototype.loadApps=function(){var t=this;this.isAppsLoading=!0,this.appsProcessService.getDeployedApplications().pipe(o.map((function(e){var n,i=t.removeDefaultApps(e);i&&1===i.length&&(n=i[0]);var o=i.find((function(e){return e.id===+t.appId}));return o&&(n=o),{currentApplication:n,applications:i}}))).subscribe((function(e){t.applications=e.applications,t.selectedApplication=e.currentApplication,t.applicationSelection.emit(t.selectedApplication),t.toggleProcessNameAndDefinitionsDropdown(),t.isAppsLoading=!1,t.loadProcessDefinitionsBasedOnSelectedApp()}),(function(e){t.isAppsLoading=!1,t.error.emit(e)}))},t.prototype.loadProcessDefinitionsBasedOnSelectedApp=function(){this.selectedApplication&&this.selectedApplication.id?this.loadProcessDefinitions(this.selectedApplication?this.selectedApplication.id:null):(this.isProcessDefinitionsLoading=!1,this.resetProcessDefinitions())},t.prototype.onAppSelectionChange=function(t){this.resetProcessDefinitions(),this.selectedApplication=t.value,this.applicationSelection.emit(this.selectedApplication),this.toggleProcessNameAndDefinitionsDropdown(),this.loadProcessDefinitionsBasedOnSelectedApp()},t.prototype.isAppSelected=function(){return!(!this.selectedApplication||!this.selectedApplication.id)},t.prototype.removeDefaultApps=function(t){return t.filter((function(t){return t.id}))},t.prototype.hasApplications=function(){return this.applications&&this.applications.length>0},t.prototype.hasProcessDefinitions=function(){return this.processDefinitions&&this.processDefinitions.length>0},t.prototype.isProcessDefinitionSelected=function(){return!(!this.selectedProcessDef||!this.selectedProcessDef.id)},t.prototype.isProcessDefinitionsEmpty=function(){return 0===this.processDefinitions.length},t.prototype.disableDropdownButton=function(){return this.showSelectApplicationDropdown&&!this.isAppSelected()},t.prototype.getAlfrescoRepositoryName=function(){var t=this.appConfig.get(e.AppConfigValues.ALFRESCO_REPOSITORY_NAME);return t||(t=this.alfrescoRepositoryName),t+"Alfresco"},t.prototype.moveNodeFromCStoPS=function(){var t=this,e=this.getAlfrescoRepositoryName(),n=function(n){if(o.values.hasOwnProperty(n)){var a=(Array.isArray(o.values[n])?o.values[n]:[o.values[n]]).filter((function(t){return t&&t.isFile})).map((function(n){return t.activitiContentService.applyAlfrescoNode(n,null,e)}));i.forkJoin(a).subscribe((function(e){var i;t.movedNodeToPS=((i={})[n]=J(e),i)}))}},o=this;for(var a in this.values)n(a)},t.prototype.startProcess=function(t){var e=this;if(this.selectedProcessDef&&this.selectedProcessDef.id&&this.nameController.value){var n=this.startForm?this.startForm.form.values:void 0;this.activitiProcess.startProcess(this.selectedProcessDef.id,this.nameController.value,t,n,this.variables).subscribe((function(t){e.name="",e.start.emit(t)}),(function(t){e.error.emit(t)}))}},t.prototype.cancelStartProcess=function(){this.cancel.emit()},t.prototype.hasStartForm=function(){return this.selectedProcessDef&&this.selectedProcessDef.hasStartForm},t.prototype.isStartFormMissingOrValid=function(){return!this.startForm||this.startForm.form&&this.startForm.form.isValid},t.prototype.validateForm=function(){return this.selectedProcessDef&&this.selectedProcessDef.id&&this.processNameInput.valid&&this.isStartFormMissingOrValid()},t.prototype.resetSelectedProcessDefinition=function(){this.selectedProcessDef=void 0,this.processDefinitionInput&&this.processDefinitionInput.setValue("")},t.prototype.resetProcessDefinitions=function(){this.processDefinitions=[],this.resetSelectedProcessDefinition()},t.prototype.onOutcomeClick=function(t){this.startProcess(t)},t.prototype.reset=function(){this.resetSelectedProcessDefinition(),this.name="",this.startForm&&(this.startForm.data={})},t.prototype.displayFn=function(t){if(t){var e=t;return"string"!=typeof t&&(e=t.name),e}},t.prototype.displayDropdown=function(t){t.stopPropagation(),this.inputAutocomplete.panelOpen?this.inputAutocomplete.closePanel():(this.processDefinitionInput.setValue(""),this.inputAutocomplete.openPanel())},Object.defineProperty(t.prototype,"nameController",{get:function(){return this.processNameInput},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"processDefinitionController",{get:function(){return this.processDefinitionInput},enumerable:!1,configurable:!0}),t.prototype.toggleProcessNameAndDefinitionsDropdown=function(){this.isAppSelected()?(this.processDefinitionController.enable(),this.nameController.enable()):(this.processDefinitionController.disable(),this.nameController.disable())},t.prototype.processDefinitionSelectionChanged=function(t){if(t){var e=new V({processDefinitionName:t.name}),n=this.processNamePipe.transform(this.name,e);this.processNameInput.setValue(n),this.processNameInput.markAsDirty(),this.processNameInput.markAsTouched(),this.selectedProcessDef=t,this.processDefinitionSelection.emit(this.selectedProcessDef)}else this.nameController.reset()},t.prototype.isLoading=function(){return!!this.showSelectApplicationDropdown&&this.isAppsLoading},t}();Zt.decorators=[{type:n.Component,args:[{selector:"adf-start-process",template:'\n<ng-container *ngIf="isLoading(); then showLoadingTemplate; else showStartProcessTemplate"></ng-container>\n    <ng-template #showLoadingTemplate>\n        <mat-spinner class="adf-start-process-loading"></mat-spinner>\n    </ng-template>\n<ng-template #showStartProcessTemplate>\n    <ng-container *ngIf="hasApplications() || hasProcessDefinitions() ; else showEmptyTemplate">\n        <div class="adf-start-process">\n            <div class="adf-title" *ngIf="title">{{ title | translate}}</div>\n            <div class="content">\n                <div class="adf-start-process-definition-container">\n                    <mat-form-field *ngIf="showSelectApplicationDropdown" [floatLabel]="\'always\'" class="adf-start-process-app-list">\n                        <mat-select\n                            placeholder="{{ \'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.SELECT_APPLICATION\' | translate }}"\n                            (selectionChange)="onAppSelectionChange($event)"\n                            [(ngModel)]="selectedApplication"\n                            data-automation-id="adf-start-process-apps-drop-down">\n                            <mat-option \n                                *ngFor="let application of applications"\n                                [value]="application"\n                                [attr.data-automation-id]="\'adf-start-process-apps-option-\' + application.name">\n                                {{ application.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class="adf-process-input-container" [floatLabel]="\'always\'">\n                        <mat-label>{{\'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.TYPE\' | translate}}</mat-label>\n                        <input\n                            type="text"\n                            matInput\n                            [formControl]="processDefinitionInput"\n                            [matAutocomplete]="auto"\n                            id="processDefinitionName"\n                            #inputAutocomplete>\n                        <div class="adf-process-input-autocomplete">\n                            <mat-autocomplete\n                                #auto="matAutocomplete"\n                                id="processDefinitionOptions"\n                                [displayWith]="displayFn">\n                                <mat-option *ngFor="let processDef of filteredProcessesDefinitions$ | async" [value]="processDef.name"\n                                (click)="processDefinitionSelectionChanged(processDef)">\n                                    {{ processDef.name }}\n                                </mat-option>\n                            </mat-autocomplete>\n                            <ng-container *ngIf="!isProcessDefinitionsLoading ; else showProcessDefLoadingTemplate">\n                                <button\n                                    id="adf-select-process-dropdown"\n                                    *ngIf="showSelectProcessDropdown"\n                                    mat-icon-button\n                                    (click)="displayDropdown($event)"\n                                    [disabled]="disableDropdownButton()">\n                                    <mat-icon>arrow_drop_down</mat-icon>\n                                </button>\n                            </ng-container>\n                            <ng-template #showProcessDefLoadingTemplate>\n                                <mat-spinner id="adf-select-process-spinner" [diameter]="20"></mat-spinner>\n                            </ng-template>\n                        </div>\n                    </mat-form-field>\n                </div>\n                <mat-form-field class="adf-process-input-container" [floatLabel]="\'always\'">\n                    <mat-label>{{\'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.NAME\' | translate}}</mat-label>\n                    <input\n                        matInput\n                        [formControl]="processNameInput"\n                        id="processName"\n                        required/>\n                    <mat-error *ngIf="nameController.hasError(\'maxlength\')">\n                        {{ \'ADF_PROCESS_LIST.START_PROCESS.ERROR.MAXIMUM_LENGTH\' | translate : { characters : maxProcessNameLength } }}\n                    </mat-error>\n                    <mat-error *ngIf="nameController.hasError(\'required\')">\n                        {{ \'ADF_PROCESS_LIST.START_PROCESS.ERROR.PROCESS_NAME_REQUIRED\' | translate }}\n                    </mat-error>\n                    <mat-error *ngIf="nameController.hasError(\'pattern\')">\n                        {{ \'ADF_PROCESS_LIST.START_PROCESS.ERROR.SPACE_VALIDATOR\' | translate }}\n                    </mat-error>\n                </mat-form-field>\n        \n                <ng-container *ngIf="!isProcessDefinitionsLoading ; else showStartFormLoadingTemplate">\n                    <ng-container *ngIf="isProcessDefinitionSelected() ; else emptyProcessDefTemplate">\n                        <ng-container  *ngIf="hasStartForm(); else noStartFormTemplate">\n                            <adf-start-form\n                                #startForm\n                                [data]="movedNodeToPS"\n                                [disableStartProcessButton]="processNameInput.invalid"\n                                [processDefinitionId]="selectedProcessDef.id"\n                                (outcomeClick)="onOutcomeClick($event)"\n                                [showRefreshButton]="false">\n                                <button\n                                    adf-form-custom-button\n                                    mat-button\n                                    (click)="cancelStartProcess()"\n                                    id="cancel_process">\n                                    {{\'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.CANCEL\'| translate | uppercase}}\n                                </button>\n                            </adf-start-form>\n                        </ng-container>\n                        <ng-template #noStartFormTemplate>\n                            <adf-empty-content \n                                class="adf-start-process-empty-template"\n                                [icon]="\'assessment\'"\n                                [title]="\'ADF_PROCESS_LIST.START_PROCESS.NO_START_FORM\'  | translate">\n                            </adf-empty-content>\n                        </ng-template>\n                    </ng-container>\n                    <ng-template #emptyProcessDefTemplate>\n                        <adf-empty-content class="adf-start-process-empty-template"\n                            [icon]="\'assessment\'"\n                            [title]="\'ADF_PROCESS_LIST.START_PROCESS.NO_PROCESS_DEF_SELECTED\'  | translate">\n                        </adf-empty-content>\n                    </ng-template>\n                </ng-container>\n                <ng-template #showStartFormLoadingTemplate>\n                    <mat-spinner class="adf-start-process-loading"></mat-spinner>\n                </ng-template>\n            </div>\n            <div class="mat-content-actions" *ngIf="!hasStartForm()">\n                <button\n                    mat-button\n                    *ngIf="!hasStartForm()"\n                    (click)="cancelStartProcess()"\n                    id="cancel_process">\n                    {{\'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.CANCEL\'| translate | uppercase}}\n                </button>\n                <button\n                    color="primary"\n                    mat-button\n                    *ngIf="!hasStartForm()"\n                    [disabled]="!validateForm()"\n                    (click)="startProcess()"\n                    data-automation-id="btn-start"\n                    id="button-start"\n                    class="btn-start">\n                    {{\'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.START\' | translate | uppercase}}\n                </button>\n            </div>\n        </div>\n    </ng-container>\n        <ng-template #showEmptyTemplate>\n            <adf-empty-content class="adf-start-process-empty-template"\n                [icon]="\'assessment\'"\n                [title]="\'ADF_PROCESS_LIST.START_PROCESS.NO_PROCESS_DEFINITIONS\' | translate">\n            </adf-empty-content>\n        </ng-template>    \n</ng-template>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-start-process{margin-left:auto;margin-right:auto;margin-top:10px;width:96%}.adf-start-process mat-form-field{width:100%}.adf-start-process .mat-form-field-label{color:var(--theme-colors-mat-grey-dark)}.adf-start-process .mat-content-actions{text-align:right}.adf-start-process .mat-button{text-transform:uppercase!important}.adf-title{padding-bottom:1.25em}.adf-process-input-container mat-form-field{width:100%}.adf-process-input-autocomplete{display:flex}.adf-process-input-autocomplete button{position:absolute;right:-14px;top:0}.adf-process-input-autocomplete mat-spinner{position:absolute;right:-1px;top:0}.adf-start-form-container .mat-card{box-shadow:none!important;padding:0!important}.adf-start-form-actions{text-align:right!important}.adf-start-process-definition-container{align-items:baseline;display:flex;flex-direction:row;justify-content:space-around}.adf-start-process-app-list{margin-right:10px}@media (max-width:600px){.adf-start-process{margin-left:auto;margin-right:auto;width:90%}}.adf-start-process-loading{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}"]}]}],Zt.ctorParameters=function(){return[{type:K},{type:e.ActivitiContentService},{type:e.AppsProcessService},{type:e.AppConfigService},{type:Qt}]},Zt.propDecorators={appId:[{type:n.Input}],title:[{type:n.Input}],processDefinitionName:[{type:n.Input}],variables:[{type:n.Input}],values:[{type:n.Input}],name:[{type:n.Input}],showSelectProcessDropdown:[{type:n.Input}],showSelectApplicationDropdown:[{type:n.Input}],processFilterSelector:[{type:n.Input}],start:[{type:n.Output}],cancel:[{type:n.Output}],error:[{type:n.Output}],processDefinitionSelection:[{type:n.Output}],applicationSelection:[{type:n.Output}],startForm:[{type:n.ViewChild,args:["startForm"]}],inputAutocomplete:[{type:n.ViewChild,args:[u.MatAutocompleteTrigger]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var te=function(t){this.processDefinitionId=t&&t.processDefinitionId||null,this.appDefinitionId=t&&t.appDefinitionId||null,this.state=t&&t.state||null,this.sort=t&&t.sort||null,this.page=t&&t.page||0,this.size=t&&t.size||25},ee=function(){};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */ee.decorators=[{type:n.NgModule,args:[{imports:[r.CommonModule,Ct,d.FlexLayoutModule,p.FormsModule,p.ReactiveFormsModule,e.CoreModule,Yt,Ut,$t,Ft,qt],declarations:[Jt,R,j,$,z,Wt,Zt],exports:[Jt,R,j,$,z,Wt,Zt],providers:[Qt]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ne=function(){function t(e,a){var r=this;this.appsProcessService=e,this.translationService=a,this.layoutType=t.LAYOUT_GRID,this.appClick=new n.EventEmitter,this.error=new n.EventEmitter,this.appList=[],this.loading=!1,this.hasEmptyCustomContentTemplate=!1,this.onDestroy$=new i.Subject,this.apps$=new i.Observable((function(t){return r.appsObserver=t})).pipe(o.share())}return t.prototype.ngOnInit=function(){var t=this;this.isValidType()||this.setDefaultLayoutType(),this.apps$.pipe(o.takeUntil(this.onDestroy$)).subscribe((function(e){return t.appList.push(e)})),this.iconsMDL=new x,this.load()},t.prototype.ngOnDestroy=function(){this.onDestroy$.next(!0),this.onDestroy$.complete()},t.prototype.ngAfterContentInit=function(){this.emptyCustomContent&&(this.hasEmptyCustomContentTemplate=!0)},t.prototype.load=function(){var e=this;this.loading=!0,this.appsProcessService.getDeployedApplications().pipe(o.finalize((function(){return e.loading=!1}))).subscribe((function(n){e.filterApps(n).forEach((function(n){e.isDefaultApp(n)?(n.theme=t.DEFAULT_TASKS_APP_THEME,n.icon=t.DEFAULT_TASKS_APP_ICON,e.appsObserver.next(n)):n.deploymentId&&e.appsObserver.next(n)}))}),(function(t){e.error.emit(t)}))},t.prototype.isDefaultApp=function(e){return e.defaultAppId===t.DEFAULT_TASKS_APP},t.prototype.getAppName=function(e){return this.isDefaultApp(e)?this.translationService.get(t.DEFAULT_TASKS_APP_NAME):i.of(e.name)},t.prototype.selectApp=function(t){this.currentApp=t,this.appClick.emit(t)},t.prototype.isSelected=function(t){return void 0!==this.currentApp&&t===this.currentApp.id},t.prototype.filterApps=function(t){var e=this,n=[];return this.filtersAppId?(t.filter((function(t){e.filtersAppId.forEach((function(e){t.defaultAppId!==e.defaultAppId&&t.deploymentId!==e.deploymentId&&t.name!==e.name&&t.id!==e.id&&t.modelId!==e.modelId&&t.tenantId!==e.tenantId||n.push(t)}))})),n):t},t.prototype.isValidType=function(){return this.layoutType&&(this.layoutType===t.LAYOUT_LIST||this.layoutType===t.LAYOUT_GRID)},t.prototype.setDefaultLayoutType=function(){this.layoutType=t.LAYOUT_GRID},t.prototype.isList=function(){return this.layoutType===t.LAYOUT_LIST},t.prototype.isGrid=function(){return this.layoutType===t.LAYOUT_GRID},t.prototype.isEmpty=function(){return 0===this.appList.length},t.prototype.isLoading=function(){return this.loading},t.prototype.getTheme=function(t){return t.theme?t.theme:""},t.prototype.getBackgroundIcon=function(t){return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(t.icon)},t}();ne.LAYOUT_LIST="LIST",ne.LAYOUT_GRID="GRID",ne.DEFAULT_TASKS_APP="tasks",ne.DEFAULT_TASKS_APP_NAME="ADF_TASK_LIST.APPS.TASK_APP_NAME",ne.DEFAULT_TASKS_APP_THEME="theme-2",ne.DEFAULT_TASKS_APP_ICON="glyphicon-asterisk",ne.DEFAULT_TASKS_APP_MATERIAL_ICON="favorite_border",ne.decorators=[{type:n.Component,args:[{selector:"adf-apps",template:'<div class="menu-container" *ngIf="!isEmpty()">\n    <mat-list *ngIf="isList()" class="adf-app-list">\n        <mat-list-item class="adf-app-list-item" (click)="selectApp(app)" (keyup.enter)="selectApp(app)" *ngFor="let app of appList" tabindex="0" role="button" title="{{app.name}}">\n            <mat-icon matListIcon>touch_app</mat-icon>\n            <span matLine>{{getAppName(app) | async}}</span>\n        </mat-list-item>\n    </mat-list>\n    <div fxLayout="row wrap" *ngIf="isGrid()" class="adf-app-listgrid">\n        <div *ngFor="let app of appList"\n            class="adf-app-listgrid-item"\n            fxFlex="33.33333%" fxFlex.lt-md="50%" fxFlex.lt-sm="100%">\n                <mat-card tabindex="0"\n                    fxLayout="column"\n                    role="button"\n                    class="adf-app-listgrid-item-card"\n                    title="{{getAppName(app) | async}}"\n                    [ngClass]="[getTheme(app)]"\n                    (click)="selectApp(app)"\n                    (keyup.enter)="selectApp(app)">\n                        <div class="adf-app-listgrid-item-card-logo">\n                            <mat-icon class="adf-app-listgrid-item-card-logo-icon">{{getBackgroundIcon(app)}}</mat-icon>\n                        </div>\n                        <div mat-card-title class="adf-app-listgrid-item-card-title">\n                            <h1>{{getAppName(app) | async}}</h1>\n                        </div>\n                        <mat-card-subtitle class="adf-app-listgrid-item-card-subtitle" fxFlex="1 0 auto">\n                            <div class="adf-line-clamp">{{app.description}}</div>\n                        </mat-card-subtitle>\n\n                        <mat-card-actions class="adf-app-listgrid-item-card-actions">\n                            <mat-icon class="adf-app-listgrid-item-card-actions-icon" *ngIf="isSelected(app.id)">done</mat-icon>\n                        </mat-card-actions>\n                </mat-card>\n        </div>\n    </div>\n</div>\n\n<ng-container *ngIf="isLoading(); else empty">\n    <div class="adf-app-list-spinner">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-container>\n\n<ng-template #empty>\n    <div class="adf-app-list-empty" *ngIf="isEmpty()">\n        <ng-content select="adf-custom-empty-content-template" *ngIf="hasEmptyCustomContentTemplate; else defaultEmptyTemplate" class="adf-custom-empty-template"></ng-content>\n\n        <ng-template #defaultEmptyTemplate>\n            <adf-empty-content\n                icon="apps"\n                [title]="\'ADF_TASK_LIST.APPS.TITLE\' | translate"\n                [subtitle]="\'ADF_TASK_LIST.APPS.SUBTITLE\' | translate">\n            </adf-empty-content>\n        </ng-template>\n    </div>\n</ng-template>\n',encapsulation:n.ViewEncapsulation.None,host:{class:"adf-apps"},styles:[".adf-apps{width:100%}.adf-app-list-item{cursor:pointer}.adf-app-list-empty,.adf-app-list-spinner{align-items:center;display:flex;flex-direction:column;height:85vh;justify-content:center}.adf-app-list-empty .mat-spinner,.adf-app-list-spinner .mat-spinner{margin:0 auto}.adf-app-listgrid{padding:8px}.adf-app-listgrid-item{box-sizing:border-box;outline:none;padding:8px}.adf-app-listgrid-item-card{min-height:200px;outline:none;padding:0!important;transition:transform .28s cubic-bezier(.4,0,.2,1),box-shadow .28s cubic-bezier(.4,0,.2,1)}.adf-app-listgrid-item-card.theme-1{background-color:#269abc}.adf-app-listgrid-item-card.theme-2{background-color:#7da9b0}.adf-app-listgrid-item-card.theme-3{background-color:#7689ab}.adf-app-listgrid-item-card.theme-4{background-color:#c74e3e}.adf-app-listgrid-item-card.theme-5{background-color:#fab96c}.adf-app-listgrid-item-card.theme-6{background-color:#759d4c}.adf-app-listgrid-item-card.theme-7{background-color:#b1b489}.adf-app-listgrid-item-card.theme-8{background-color:#a17299}.adf-app-listgrid-item-card.theme-9{background-color:#696c67}.adf-app-listgrid-item-card.theme-10{background-color:#cabb33}.adf-app-listgrid-item-card:hover{box-shadow:0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.2);cursor:pointer;transform:scale(1.015)}.adf-app-listgrid-item-card-logo{padding:16px;position:absolute;right:20px;top:20px;z-index:9}.adf-app-listgrid-item-card-logo-icon{font-size:70px;height:1em!important;width:1em!important}.theme-1 .adf-app-listgrid-item-card-logo-icon{color:#168aac}.theme-2 .adf-app-listgrid-item-card-logo-icon{color:#6d99a0}.theme-3 .adf-app-listgrid-item-card-logo-icon{color:#66799b}.theme-4 .adf-app-listgrid-item-card-logo-icon{color:#b73e2e}.theme-5 .adf-app-listgrid-item-card-logo-icon{color:#eaa95c}.theme-6 .adf-app-listgrid-item-card-logo-icon{color:#658d3c}.theme-7 .adf-app-listgrid-item-card-logo-icon{color:#a1a479}.theme-8 .adf-app-listgrid-item-card-logo-icon{color:#916289}.theme-9 .adf-app-listgrid-item-card-logo-icon{color:#595c57}.theme-10 .adf-app-listgrid-item-card-logo-icon{color:#baab23}.adf-app-listgrid-item-card-title{margin-bottom:0!important;padding:16px;z-index:9999}.adf-app-listgrid-item-card-title h1{color:#fff;font-size:24px;line-height:normal;margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:80%}.adf-app-listgrid-item-card-subtitle{color:#fff;padding:16px;z-index:9999}.adf-app-listgrid-item-card-subtitle .adf-line-clamp{line-height:1.25;overflow:hidden;padding:0!important;position:relative;text-overflow:ellipsis}@supports (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{-webkit-box-orient:vertical;-webkit-line-clamp:3;display:-webkit-box;height:3.7125em}}@supports not (-webkit-line-clamp:1){.adf-app-listgrid-item-card-subtitle .adf-line-clamp{white-space:nowrap;width:100%}}.adf-app-listgrid-item-card-actions{border-top:1px solid rgba(0,0,0,.1);box-sizing:border-box;min-height:48px;padding:0 16px 16px!important}.adf-app-listgrid-item-card-actions-icon{color:#e9f1f3}.adf-app-listgrid-item-card-actions.mat-card-actions{margin-left:0;margin-right:0}.adf-app-listgrid-item-card-actions.mat-card-actions:last-child{margin-bottom:0!important}"]}]}],ne.ctorParameters=function(){return[{type:e.AppsProcessService},{type:e.TranslationService}]},ne.propDecorators={emptyCustomContent:[{type:n.ContentChild,args:[e.CustomEmptyContentTemplateDirective]}],layoutType:[{type:n.Input}],filtersAppId:[{type:n.Input}],appClick:[{type:n.Output}],error:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ie=function(){function t(t,e,n){var i=this;this.appsProcessService=t,this.dialogRef=e,this.data=n,this.appsProcessService.getDeployedApplications().subscribe((function(t){i.processApps=t.filter((function(t){return t.id}))}))}return t.prototype.onStart=function(){this.dialogRef.close(this.selectedProcess)},t}();ie.decorators=[{type:n.Component,args:[{selector:"adf-select-apps-dialog",template:'<header mat-dialog-title id="adf-select-app-dialog-title">{{\'APP.DIALOG.TITLE\' | translate}}</header>\n<section mat-dialog-content>\n\n    <mat-select id="adf-select-app-dialog-dropdown" placeholder="{{\'APP.DIALOG.LIST\' | translate}}" [(value)]="selectedProcess" >\n        <mat-option *ngFor="let currentProcessApp of processApps" [value]="currentProcessApp">\n            {{ currentProcessApp.name }}\n        </mat-option>\n    </mat-select>\n\n</section>\n<footer mat-dialog-actions fxLayout="row" fxLayoutAlign="end center">\n    <button mat-button (click)="onStart()">{{\'APP.DIALOG.START\' | translate}}</button>\n</footer>\n'}]}],ie.ctorParameters=function(){return[{type:e.AppsProcessService},{type:s.MatDialogRef},{type:void 0,decorators:[{type:n.Inject,args:[s.MAT_DIALOG_DATA]}]}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var oe=function(){};oe.decorators=[{type:n.NgModule,args:[{imports:[r.CommonModule,Ct,d.FlexLayoutModule,e.CoreModule],declarations:[ne,ie],exports:[ne,ie]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ae=function(){function t(t,e,i,o){this.activitiContentService=t,this.contentService=e,this.thumbnailService=i,this.ngZone=o,this.disabled=!1,this.attachmentClick=new n.EventEmitter,this.success=new n.EventEmitter,this.error=new n.EventEmitter,this.hasCustomTemplate=!1,this.attachments=[],this.isLoading=!1}return t.prototype.ngOnChanges=function(t){t.taskId&&t.taskId.currentValue&&this.loadAttachmentsByTaskId(t.taskId.currentValue)},t.prototype.ngAfterContentInit=function(){this.emptyTemplate&&(this.hasCustomTemplate=!0)},t.prototype.reset=function(){this.attachments=[]},t.prototype.hasCustomEmptyTemplate=function(){return!!this.emptyTemplate},t.prototype.reload=function(){var t=this;this.ngZone.run((function(){t.loadAttachmentsByTaskId(t.taskId)}))},t.prototype.add=function(t){var e=this;this.ngZone.run((function(){e.attachments.push({id:t.id,name:t.name,created:t.created,createdBy:t.createdBy.firstName+" "+t.createdBy.lastName,icon:e.thumbnailService.getMimeTypeIcon(t.mimeType)})}))},t.prototype.loadAttachmentsByTaskId=function(t){var e=this;if(t){this.isLoading=!0,this.reset();this.activitiContentService.getTaskRelatedContent(t,{isRelatedContent:"true"}).subscribe((function(t){var n=[];t.data.forEach((function(t){n.push({id:t.id,name:t.name,created:t.created,createdBy:t.createdBy.firstName+" "+t.createdBy.lastName,icon:e.thumbnailService.getMimeTypeIcon(t.mimeType)})})),e.attachments=n,e.success.emit(e.attachments),e.isLoading=!1}),(function(t){e.error.emit(t),e.isLoading=!1}))}},t.prototype.deleteAttachmentById=function(t){var e=this;t&&this.activitiContentService.deleteRelatedContent(t).subscribe((function(){e.attachments=e.attachments.filter((function(e){return e.id!==t}))}),(function(t){e.error.emit(t)}))},t.prototype.isEmpty=function(){return this.attachments&&0===this.attachments.length},t.prototype.onShowRowActionsMenu=function(t){t.value.actions=[{title:"ADF_TASK_LIST.MENU_ACTIONS.VIEW_CONTENT",name:"view"},{title:"ADF_TASK_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT",name:"download"}],this.disabled||t.value.actions.splice(1,0,{title:"ADF_TASK_LIST.MENU_ACTIONS.REMOVE_CONTENT",name:"remove"})},t.prototype.onExecuteRowAction=function(t){var e=t.value,n=e.action;"view"===n.name?this.emitDocumentContent(e.row.obj):"remove"===n.name?this.deleteAttachmentById(e.row.obj.id):"download"===n.name&&this.downloadContent(e.row.obj)},t.prototype.openContent=function(t){var e=t.value.obj;this.emitDocumentContent(e)},t.prototype.emitDocumentContent=function(t){var e=this;this.activitiContentService.getContentPreview(t.id).subscribe((function(n){t.contentBlob=n,e.attachmentClick.emit(t)}),(function(t){e.error.emit(t)}))},t.prototype.downloadContent=function(t){var e=this;this.activitiContentService.getFileRawContent(t.id).subscribe((function(n){return e.contentService.downloadBlob(n,t.name)}),(function(t){e.error.emit(t)}))},t.prototype.isDisabled=function(){return this.disabled},t}();ae.decorators=[{type:n.Component,args:[{selector:"adf-task-attachment-list",template:'<adf-datatable [rows]="attachments"\n               [actions]="true"\n               [loading]="isLoading"\n               (rowDblClick)="openContent($event)"\n               (showRowActionsMenu)="onShowRowActionsMenu($event)"\n               (executeRowAction)="onExecuteRowAction($event)">\n            <adf-no-content-template>\n                <ng-template>\n                    <ng-content *ngIf="hasCustomTemplate; else defaulEmptyList" class="adf-custom-empty-template"></ng-content>\n                    <ng-template #defaulEmptyList>\n                        <adf-empty-list>\n                            <div adf-empty-list-header class="adf-empty-list-header">\n                                {{\'ADF_TASK_LIST.ATTACHMENT.EMPTY.HEADER\' | translate}}\n                            </div>\n                        </adf-empty-list>\n                    </ng-template>\n                </ng-template>\n            </adf-no-content-template>\n\n            <data-columns>\n                <data-column key="icon" type="image" srTitle="ADF_TASK_LIST.PROPERTIES.THUMBNAIL" [sortable]="false"></data-column>\n                <data-column key="name" type="text" title="ADF_TASK_LIST.PROPERTIES.NAME" class="adf-full-width adf-ellipsis-cell" [sortable]="true"></data-column>\n                <data-column key="created" type="date" format="shortDate" title="ADF_TASK_LIST.PROPERTIES.CREATED"></data-column>\n            </data-columns>\n            <adf-loading-content-template>\n                <ng-template>\n                \x3c!--Add your custom loading template here--\x3e\n                    <mat-progress-spinner class="adf-attachment-list-loading-margin" [color]="\'primary\'" [mode]="\'indeterminate\'">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n</adf-datatable>\n',encapsulation:n.ViewEncapsulation.None,styles:["adf-datatable .adf-data-cell{cursor:pointer!important}.adf-attachment-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.adf-empty-list-header{font-size:24px;height:32px;letter-spacing:-1px;line-height:1.33;opacity:.26}.adf-empty-list-drag_drop{font-size:56px;letter-spacing:-2px;line-height:1;margin-top:40px;min-height:56px;opacity:.54;white-space:pre-line;word-break:break-all}@media screen and (max-width:599px){.adf-empty-list-drag_drop{font-size:40px}}.adf-empty-list__any-files-here-to-add{font-size:16px;letter-spacing:-.4px;line-height:1.5;margin-top:17px;min-height:24px;opacity:.54;white-space:pre-line;word-break:break-all}.adf-empty-list__empty_doc_lib{height:161px;margin-top:17px;max-width:100%;object-fit:contain;width:565px}@media screen and (max-width:599px){.adf-empty-list__empty_doc_lib{width:250px}}"]}]}],ae.ctorParameters=function(){return[{type:e.ProcessContentService},{type:e.ContentService},{type:e.ThumbnailService},{type:n.NgZone}]},ae.propDecorators={emptyTemplate:[{type:n.ContentChild,args:[e.EmptyListComponent]}],taskId:[{type:n.Input}],disabled:[{type:n.Input}],attachmentClick:[{type:n.Output}],success:[{type:n.Output}],error:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var re=function(){function t(t,e,i,o){this.activitiContentService=t,this.contentService=e,this.thumbnailService=i,this.ngZone=o,this.disabled=!1,this.attachmentClick=new n.EventEmitter,this.success=new n.EventEmitter,this.error=new n.EventEmitter,this.hasCustomTemplate=!1,this.attachments=[],this.isLoading=!1}return t.prototype.ngOnChanges=function(t){t.processInstanceId&&t.processInstanceId.currentValue&&this.loadAttachmentsByProcessInstanceId(t.processInstanceId.currentValue)},t.prototype.ngAfterContentInit=function(){this.emptyTemplate&&(this.hasCustomTemplate=!0)},t.prototype.reset=function(){this.attachments=[]},t.prototype.reload=function(){var t=this;this.ngZone.run((function(){t.loadAttachmentsByProcessInstanceId(t.processInstanceId)}))},t.prototype.hasCustomEmptyTemplate=function(){return!!this.emptyTemplate},t.prototype.add=function(t){var e=this;this.ngZone.run((function(){e.attachments.push({id:t.id,name:t.name,created:t.created,createdBy:t.createdBy.firstName+" "+t.createdBy.lastName,icon:e.thumbnailService.getMimeTypeIcon(t.mimeType)})}))},t.prototype.loadAttachmentsByProcessInstanceId=function(t){var e=this;if(t){this.reset(),this.isLoading=!0;this.activitiContentService.getProcessRelatedContent(t,{isRelatedContent:"true"}).subscribe((function(t){t.data.forEach((function(t){e.attachments.push({id:t.id,name:t.name,created:t.created,createdBy:t.createdBy.firstName+" "+t.createdBy.lastName,icon:e.thumbnailService.getMimeTypeIcon(t.mimeType)})})),e.success.emit(e.attachments),e.isLoading=!1}),(function(t){e.error.emit(t),e.isLoading=!1}))}},t.prototype.deleteAttachmentById=function(t){var e=this;t&&this.activitiContentService.deleteRelatedContent(t).subscribe((function(){e.attachments=e.attachments.filter((function(e){return e.id!==t}))}),(function(t){e.error.emit(t)}))},t.prototype.isEmpty=function(){return this.attachments&&0===this.attachments.length},t.prototype.onShowRowActionsMenu=function(t){t.value.actions=[{title:"ADF_PROCESS_LIST.MENU_ACTIONS.VIEW_CONTENT",name:"view"},{title:"ADF_PROCESS_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT",name:"download"}],this.disabled||t.value.actions.splice(1,0,{title:"ADF_PROCESS_LIST.MENU_ACTIONS.REMOVE_CONTENT",name:"remove"})},t.prototype.onExecuteRowAction=function(t){var e=t.value,n=e.action;"view"===n.name?this.emitDocumentContent(e.row.obj):"remove"===n.name?this.deleteAttachmentById(e.row.obj.id):"download"===n.name&&this.downloadContent(e.row.obj)},t.prototype.openContent=function(t){var e=t.value.obj;this.emitDocumentContent(e)},t.prototype.emitDocumentContent=function(t){var e=this;this.activitiContentService.getContentPreview(t.id).subscribe((function(n){t.contentBlob=n,e.attachmentClick.emit(t)}),(function(t){e.error.emit(t)}))},t.prototype.downloadContent=function(t){var e=this;this.activitiContentService.getFileRawContent(t.id).subscribe((function(n){return e.contentService.downloadBlob(n,t.name)}),(function(t){e.error.emit(t)}))},t.prototype.isDisabled=function(){return this.disabled},t}();re.decorators=[{type:n.Component,args:[{selector:"adf-process-attachment-list",template:'<adf-datatable  [rows]="attachments"\n                [actions]="true"\n                [loading]="isLoading"\n                (rowDblClick)="openContent($event)"\n                (showRowActionsMenu)="onShowRowActionsMenu($event)"\n                (executeRowAction)="onExecuteRowAction($event)">\n\n                <adf-no-content-template>\n                    <ng-template>\n                        <ng-content *ngIf="hasCustomTemplate; else defaulEmptyList" class="adf-custom-empty-template"></ng-content>\n                        <ng-template #defaulEmptyList>\n                            <adf-empty-list>\n                                <div adf-empty-list-header class="adf-empty-list-header">\n                                    {{\'ADF_PROCESS_LIST.PROCESS-ATTACHMENT.EMPTY.HEADER\' | translate}}\n                                </div>\n                            </adf-empty-list>\n                        </ng-template>\n                    </ng-template>\n                </adf-no-content-template>\n\n    <data-columns>\n        <data-column key="icon" type="image" srTitle="ADF_PROCESS_LIST.PROPERTIES.THUMBNAIL" [sortable]="false"></data-column>\n        <data-column key="name" type="text" title="{{\'ADF_PROCESS_LIST.PROPERTIES.NAME\' | translate}}" class="adf-full-width adf-ellipsis-cell" [sortable]="true"></data-column>\n        <data-column key="created" type="date" format="shortDate" title="{{\'ADF_PROCESS_LIST.PROPERTIES.CREATED\' | translate}}"></data-column>\n    </data-columns>\n\n    <adf-loading-content-template>\n        <ng-template>\n            \x3c!--Add your custom loading template here--\x3e\n            <mat-progress-spinner class="adf-attachment-list-loading-margin" [color]="\'primary\'" [mode]="\'indeterminate\'">\n            </mat-progress-spinner>\n        </ng-template>\n    </adf-loading-content-template>\n\n</adf-datatable>\n',encapsulation:n.ViewEncapsulation.None,styles:[".adf-data-cell{cursor:pointer!important}.adf-attachment-list-loading-margin{margin-left:calc(50% - 50px);margin-right:calc(50% - 50px)}.adf-empty-list-header{font-size:24px;height:32px;letter-spacing:-1px;line-height:1.33;opacity:.26!important}.adf-empty-list-drag_drop{font-size:56px;letter-spacing:-2px;line-height:1;margin-top:40px!important;min-height:56px;opacity:.54;white-space:pre-line;word-break:break-all}.adf-empty-list__any-files-here-to-add{font-size:16px;letter-spacing:-.4px;line-height:1.5;margin-top:17px;min-height:24px;opacity:.54;white-space:pre-line;word-break:break-all}.adf-empty-list__empty_doc_lib{height:161px;margin-top:17px;object-fit:contain;width:565px}@media screen and (max-width:599px){.adf-empty-list__empty_doc_lib{width:250px}}"]}]}],re.ctorParameters=function(){return[{type:e.ProcessContentService},{type:e.ContentService},{type:e.ThumbnailService},{type:n.NgZone}]},re.propDecorators={emptyTemplate:[{type:n.ContentChild,args:[e.EmptyListComponent]}],processInstanceId:[{type:n.Input}],disabled:[{type:n.Input}],attachmentClick:[{type:n.Output}],success:[{type:n.Output}],error:[{type:n.Output}]};var se=function(){function t(t){this.activitiContentService=t,this.error=new n.EventEmitter,this.success=new n.EventEmitter}return t.prototype.ngOnChanges=function(t){t.processInstanceId&&t.processInstanceId.currentValue&&(this.processInstanceId=t.processInstanceId.currentValue)},t.prototype.onFileUpload=function(t){var e,n,i=this,o=t.detail.files.map((function(t){return t.file}));try{for(var a=W(o),r=a.next();!r.done;r=a.next()){var s=r.value;this.activitiContentService.createProcessRelatedContent(this.processInstanceId,s,{isRelatedContent:!0}).subscribe((function(t){i.success.emit(t)}),(function(t){i.error.emit(t)}))}}catch(t){e={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(e)throw e.error}}},t}();se.decorators=[{type:n.Component,args:[{selector:"adf-create-process-attachment",template:'<button\n    id="add_new_process_content_button"\n    color="primary"\n    mat-button\n    mat-raised-button\n    mat-icon-button\n    class="adf-create-attachment"\n    [adf-upload]="true"\n    [mode]="[\'click\']"\n    [multiple]="true"\n    (upload-files)="onFileUpload($event)">\n    <mat-icon>add</mat-icon>\n</button>\n',styles:[".adf-create-attachment{display:inline-block;line-height:0;vertical-align:middle}"]}]}],se.ctorParameters=function(){return[{type:e.ProcessContentService}]},se.propDecorators={processInstanceId:[{type:n.Input}],error:[{type:n.Output}],success:[{type:n.Output}]};var ce=function(){function t(t){this.activitiContentService=t,this.error=new n.EventEmitter,this.success=new n.EventEmitter}return t.prototype.ngOnChanges=function(t){t.taskId&&t.taskId.currentValue&&(this.taskId=t.taskId.currentValue)},t.prototype.onFileUpload=function(t){var e,n,i=this,o=t.detail.files.map((function(t){return t.file}));try{for(var a=W(o),r=a.next();!r.done;r=a.next()){var s=r.value;this.activitiContentService.createTaskRelatedContent(this.taskId,s,{isRelatedContent:!0}).subscribe((function(t){i.success.emit(t)}),(function(t){i.error.emit(t)}))}}catch(t){e={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(e)throw e.error}}},t}();ce.decorators=[{type:n.Component,args:[{selector:"adf-create-task-attachment",template:'<button\n    color="primary"\n    mat-button\n    mat-raised-button\n    mat-icon-button\n    class="adf-create-attachment"\n    [adf-upload]="true"\n    [mode]="[\'click\']"\n    [multiple]="true"\n    (upload-files)="onFileUpload($event)">\n    <mat-icon>add</mat-icon>\n</button>\n',styles:[".adf-create-attachment{display:inline-block;line-height:0;vertical-align:middle}"]}]}],ce.ctorParameters=function(){return[{type:e.ProcessContentService}]},ce.propDecorators={taskId:[{type:n.Input}],error:[{type:n.Output}],success:[{type:n.Output}]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var le=function(){};le.decorators=[{type:n.NgModule,args:[{imports:[e.CoreModule,Ct],declarations:[ae,re,se,se,ce],exports:[ae,re,se,se,ce]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var pe=function(t){function e(){var e=t.call(this)||this;return e.register({upload:function(){return Kt},"select-folder":function(){return jt}},!0),e}return G(e,t),e}(e.FormRenderingService);pe.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new pe},token:pe,providedIn:"root"}),pe.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],pe.ctorParameters=function(){return[]};
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var de=function(){};de.decorators=[{type:n.NgModule,args:[{declarations:[Qt],exports:[Qt]}]}];
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
var ue=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[{provide:e.TRANSLATION_PROVIDER,multi:!0,useValue:{name:"adf-process-services",source:"assets/adf-process-services"}},e.FormRenderingService,{provide:e.FormRenderingService,useClass:pe}]}},t.forChild=function(){return{ngModule:t}},t}();ue.decorators=[{type:n.NgModule,args:[{imports:[e.CoreModule,r.CommonModule,Ft,p.FormsModule,p.ReactiveFormsModule,Ct,ee,Yt,oe,le,Ut,qt,de],providers:[{provide:e.TRANSLATION_PROVIDER,multi:!0,useValue:{name:"adf-process-services",source:"assets/adf-process-services"}}],exports:[r.CommonModule,Ft,p.FormsModule,p.ReactiveFormsModule,ee,Yt,oe,le,Ut,qt,de]}]}],
/*!
     * @license
     * Copyright 2019 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
t.AppDefinitionRepresentationModel=Q,t.AppsListComponent=ne,t.AppsListModule=oe,t.AttachFileWidgetComponent=Kt,t.AttachFileWidgetDialogComponent=Vt,t.AttachFileWidgetDialogService=Bt,t.AttachFolderWidgetComponent=jt,t.AttachFormComponent=Tt,t.AttachmentComponent=ce,t.AttachmentModule=le,t.ChecklistComponent=ct,t.ClaimTaskDirective=gt,t.ContentWidgetModule=$t,t.CreateProcessAttachmentComponent=se,t.FilterParamsModel=Z,t.FilterProcessRepresentationModel=P,t.FilterRepresentationModel=tt,t.Form=it,t.FormComponent=zt,t.FormCustomOutcomesComponent=Gt,t.FormModule=qt,t.MaterialModule=Ct,t.NoTaskDetailsTemplateDirective=ut,t.PeopleComponent=_t,t.PeopleListComponent=Lt,t.PeopleModule=Ut,t.PeopleSearchActionLabelDirective=Rt,t.PeopleSearchComponent=Pt,t.PeopleSearchFieldComponent=Mt,t.PeopleSearchTitleDirective=Nt,t.PeopleSelectorComponent=xt,t.ProcessAttachmentListComponent=re,t.ProcessAuditDirective=$,t.ProcessCommentsComponent=wt,t.ProcessCommentsModule=Ft,t.ProcessDefinitionRepresentation=N,t.ProcessFilterParamRepresentationModel=O,t.ProcessFilterRequestRepresentation=te,t.ProcessFilterService=M,t.ProcessFiltersComponent=R,t.ProcessFormRenderingService=pe,t.ProcessInstance=V,t.ProcessInstanceDetailsComponent=j,t.ProcessInstanceHeaderComponent=z,t.ProcessInstanceListComponent=Jt,t.ProcessInstanceTasksComponent=Wt,t.ProcessInstanceVariable=U,t.ProcessListModule=ee,t.ProcessModule=ue,t.ProcessNamePipe=Qt,t.ProcessService=K,t.ProcessServicesPipeModule=de,t.ProcessUploadService=Dt,t.SelectAppsDialogComponent=ie,t.StartFormComponent=Ht,t.StartProcessInstanceComponent=Zt,t.StartTaskComponent=St,t.StartTaskModel=bt,t.TaskAttachmentListComponent=ae,t.TaskAuditDirective=vt,t.TaskDetailsComponent=dt,t.TaskDetailsEvent=Et,t.TaskDetailsModel=ot,t.TaskFilterService=mt,t.TaskFiltersComponent=ft,t.TaskFormComponent=ht,t.TaskHeaderComponent=pt,t.TaskListComponent=st,t.TaskListModel=at,t.TaskListModule=Yt,t.TaskListService=rt,t.TaskQueryRequestRepresentationModel=et,t.TaskStandaloneComponent=At,t.TaskUploadService=kt,t.UnclaimTaskDirective=yt,t.ɵ0=It,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=adf-process-services.umd.min.js.map