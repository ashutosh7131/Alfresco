{"version":3,"file":"adf-process-services.umd.js","sources":["../../../process-services/src/lib/process-list/models/filter-process.model.ts","../../../process-services/src/lib/process-list/services/process-filter.service.ts","../../../process-services/src/lib/app-list/icon.model.ts","../../../process-services/src/lib/process-list/components/process-filters.component.ts","../../../process-services/src/lib/process-list/models/process-definition.model.ts","../../../process-services/src/lib/process-list/models/process-instance-variable.model.ts","../../../process-services/src/lib/process-list/models/process-instance.model.ts","../../../process-services/src/lib/process-list/models/process-list.model.ts","../../../process-services/src/lib/process-list/services/process.service.ts","../../../process-services/src/lib/process-list/components/process-instance-details.component.ts","../../../process-services/src/lib/process-list/components/process-audit.directive.ts","../../../process-services/src/lib/process-list/components/process-instance-header.component.ts","../../../../node_modules/tslib/tslib.es6.js","../../../process-services/src/lib/task-list/models/filter.model.ts","../../../process-services/src/lib/task-list/models/task-preset.model.ts","../../../process-services/src/lib/task-list/models/form.model.ts","../../../process-services/src/lib/task-list/models/task-details.model.ts","../../../process-services/src/lib/task-list/models/task-list.model.ts","../../../process-services/src/lib/task-list/services/tasklist.service.ts","../../../process-services/src/lib/task-list/components/task-list.component.ts","../../../process-services/src/lib/task-list/components/checklist.component.ts","../../../process-services/src/lib/task-list/validators/task-description.validator.ts","../../../process-services/src/lib/task-list/components/task-header.component.ts","../../../process-services/src/lib/task-list/components/task-details.component.ts","../../../process-services/src/lib/task-list/components/no-task-detail-template.directive.ts","../../../process-services/src/lib/task-list/services/task-filter.service.ts","../../../process-services/src/lib/task-list/components/task-filters.component.ts","../../../process-services/src/lib/task-list/components/task-form/task-form.component.ts","../../../process-services/src/lib/task-list/components/task-form/claim-task.directive.ts","../../../process-services/src/lib/task-list/components/task-form/unclaim-task.directive.ts","../../../process-services/src/lib/task-list/components/task-audit.directive.ts","../../../process-services/src/lib/task-list/components/start-task.component.ts","../../../process-services/src/lib/task-list/components/task-standalone.component.ts","../../../process-services/src/lib/task-list/components/attach-form.component.ts","../../../process-services/src/lib/task-list/services/process-upload.service.ts","../../../process-services/src/lib/task-list/services/task-upload.service.ts","../../../process-services/src/lib/task-list/models/start-task.model.ts","../../../process-services/src/lib/task-list/models/task-details.event.ts","../../../process-services/src/lib/task-list/models/user-event.model.ts","../../../process-services/src/lib/task-list/models/user-group.model.ts","../../../process-services/src/lib/material.module.ts","../../../process-services/src/lib/process-comments/process-comments.component.ts","../../../process-services/src/lib/process-comments/process-comments.module.ts","../../../process-services/src/lib/people/components/people/people.component.ts","../../../process-services/src/lib/people/components/people-list/people-list.component.ts","../../../process-services/src/lib/people/components/people-search/people-search.component.ts","../../../process-services/src/lib/people/helpers/get-display-user.ts","../../../process-services/src/lib/people/components/people-search-field/people-search-field.component.ts","../../../process-services/src/lib/people/components/people-selector/people-selector.component.ts","../../../process-services/src/lib/people/directives/people-search-action-label.directive.ts","../../../process-services/src/lib/people/directives/people-search-title.directive.ts","../../../process-services/src/lib/people/people.module.ts","../../../process-services/src/lib/content-widget/attach-file-widget-dialog.component.ts","../../../process-services/src/lib/content-widget/attach-file-widget-dialog.service.ts","../../../process-services/src/lib/content-widget/attach-file-widget.component.ts","../../../process-services/src/lib/content-widget/attach-folder-widget.component.ts","../../../process-services/src/lib/content-widget/content-widget.module.ts","../../../process-services/src/lib/form/form.component.ts","../../../process-services/src/lib/form/start-form.component.ts","../../../process-services/src/lib/form/form-custom-outcomes.component.ts","../../../process-services/src/lib/form/form.module.ts","../../../process-services/src/lib/task-list/task-list.module.ts","../../../process-services/src/lib/task-list/public-api.ts","../../../process-services/src/lib/task-list/index.ts","../../../process-services/src/lib/process-list/components/process-instance-tasks.component.ts","../../../process-services/src/lib/process-list/models/process-preset.model.ts","../../../process-services/src/lib/process-list/components/process-list.component.ts","../../../process-services/src/lib/pipes/process-name.pipe.ts","../../../process-services/src/lib/process-list/components/start-process.component.ts","../../../process-services/src/lib/process-list/models/process-instance-filter.model.ts","../../../process-services/src/lib/process-list/process-list.module.ts","../../../process-services/src/lib/process-list/public-api.ts","../../../process-services/src/lib/process-list/index.ts","../../../process-services/src/lib/app-list/apps-list.component.ts","../../../process-services/src/lib/app-list/select-apps-dialog.component.ts","../../../process-services/src/lib/app-list/apps-list.module.ts","../../../process-services/src/lib/app-list/public-api.ts","../../../process-services/src/lib/app-list/index.ts","../../../process-services/src/lib/attachment/task-attachment-list.component.ts","../../../process-services/src/lib/attachment/process-attachment-list.component.ts","../../../process-services/src/lib/attachment/create-process-attachment.component.ts","../../../process-services/src/lib/attachment/create-task-attachment.component.ts","../../../process-services/src/lib/attachment/attachment.module.ts","../../../process-services/src/lib/attachment/public-api.ts","../../../process-services/src/lib/attachment/index.ts","../../../process-services/src/lib/process-comments/public-api.ts","../../../process-services/src/lib/process-comments/index.ts","../../../process-services/src/lib/people/interfaces/perform-search-callback.interface.ts","../../../process-services/src/lib/people/public-api.ts","../../../process-services/src/lib/people/index.ts","../../../process-services/src/lib/content-widget/attach-file-widget-dialog-component.interface.ts","../../../process-services/src/lib/content-widget/public-api.ts","../../../process-services/src/lib/content-widget/index.ts","../../../process-services/src/lib/form/process-form-rendering.service.ts","../../../process-services/src/lib/form/public-api.ts","../../../process-services/src/lib/form/index.ts","../../../process-services/src/lib/pipes/process-services-pipe.module.ts","../../../process-services/src/lib/process.module.ts","../../../process-services/src/public-api.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ProcessFilterRequestRepresentation,\n    ProcessInstanceFilterRepresentation,\n    UserProcessInstanceFilterRepresentation\n} from '@alfresco/js-api';\n\nexport class FilterProcessRepresentationModel implements UserProcessInstanceFilterRepresentation {\n    appId: number;\n    filter: ProcessInstanceFilterRepresentation;\n    icon: string;\n    id: number;\n    index: number;\n    name: string;\n    recent: boolean;\n\n    constructor(obj: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = obj.filter || null;\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter() {\n        return !!this.filter;\n    }\n}\n\n/**\n * This object represent the parameters of a process filter.\n */\nexport class ProcessFilterParamRepresentationModel implements ProcessFilterRequestRepresentation {\n\n    processDefinitionId?: string;\n    processInstanceId?: string;\n    appDefinitionId?: number;\n    state?: any;\n    sort?: any;\n    page?: number;\n    size?: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj.processDefinitionId || null;\n        this.appDefinitionId = obj.appDefinitionId || null;\n        this.processInstanceId = obj.processInstanceId || null;\n        this.state = obj.state || null;\n        this.sort = obj.sort || null;\n        this.page = obj.page || null;\n        this.size = obj.size || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { map, catchError } from 'rxjs/operators';\nimport {\n    ResultListDataRepresentationUserProcessInstanceFilterRepresentation,\n    UserFiltersApi\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessFilterService {\n\n    private _userFiltersApi;\n    get userFiltersApi(): UserFiltersApi {\n        this._userFiltersApi = this._userFiltersApi ?? new UserFiltersApi(this.alfrescoApiService.getInstance());\n        return this._userFiltersApi;\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets all filters defined for a Process App.\n     * @param appId ID of the target app\n     * @returns Array of filter details\n     */\n    getProcessFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    response.data.forEach((filter) => {\n                        const filterModel = new FilterProcessRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterById(filterId: number, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.id === filterId);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by name.\n     * @param filterName Name of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterByName(filterName: string, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.name === filterName);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates and returns the default filters for an app.\n     * @param appId ID of the target app\n     * @returns Default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        const runningFilter = this.getRunningFilterInstance(appId, 0);\n        const runningObservable = this.addProcessFilter(runningFilter);\n\n        const completedFilter = this.getCompletedFilterInstance(appId, 1);\n        const completedObservable = this.addProcessFilter(completedFilter);\n\n        const allFilter = this.getAllFilterInstance(appId, 2);\n        const allObservable = this.addProcessFilter(allFilter);\n\n        return new Observable((observer) => {\n            forkJoin([\n                    runningObservable,\n                    completedObservable,\n                    allObservable\n                ]\n            ).subscribe(\n                (res) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === runningFilter.name) {\n                            filters.push(new FilterProcessRepresentationModel({ ...filter, filter: runningFilter.filter, appId }));\n                        } else if (filter.name === completedFilter.name) {\n                            filters.push(new FilterProcessRepresentationModel({ ...filter, filter: completedFilter.filter, appId }));\n                        } else if (filter.name === allFilter.name) {\n                            filters.push(new FilterProcessRepresentationModel({ ...filter, filter: allFilter.filter, appId }));\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.handleProcessError(err);\n                });\n        });\n    }\n\n    /**\n     * Creates and returns a filter that matches \"running\" process instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns Filter just created\n     */\n    public getRunningFilterInstance(appId: number, index?: number): FilterProcessRepresentationModel {\n        return  new FilterProcessRepresentationModel({\n            'name': 'Running',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-random',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'running' },\n            index\n        });\n    }\n\n    /**\n     * Returns a static Completed filter instance.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns Details of the filter\n     */\n    private getCompletedFilterInstance(appId: number, index?: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Completed',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-ok-sign',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'completed' },\n            index\n        });\n    }\n\n    /**\n     * Returns a static All filter instance.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns Details of the filter\n     */\n    private getAllFilterInstance(appId: number, index?: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'All',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-th',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'all' },\n            index\n        });\n    }\n\n    /**\n     * Adds a filter.\n     * @param filter The filter to add\n     * @returns The filter just added\n     */\n    addProcessFilter(filter: FilterProcessRepresentationModel): Observable<FilterProcessRepresentationModel> {\n        return from(this.userFiltersApi.createUserProcessInstanceFilter(filter))\n            .pipe(\n                map((response: FilterProcessRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserProcessInstanceFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of filter details\n     */\n    callApiProcessFilters(appId?: number): Promise<ResultListDataRepresentationUserProcessInstanceFilterRepresentation> {\n        if (appId) {\n            return this.userFiltersApi.getUserProcessInstanceFilters({ appId: appId });\n        } else {\n            return this.userFiltersApi.getUserProcessInstanceFilters();\n        }\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nexport class IconModel {\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    private iconsMDL: Map<string, string>;\n\n    constructor() {\n        this.initIconsMDL();\n    }\n\n    mapGlyphiconToMaterialDesignIcons(icon: string) {\n        return this.iconsMDL.get(icon) ? this.iconsMDL.get(icon) : IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON;\n    }\n\n    /**\n     * Map all the bootstrap glyphicon icons with Material design material icon\n     */\n    initIconsMDL() {\n        this.iconsMDL = new Map<string, string>();\n\n        this.iconsMDL.set('glyphicon-asterisk', 'ac_unit');\n        this.iconsMDL.set('glyphicon-plus', 'add');\n        this.iconsMDL.set('glyphicon-euro', 'euro_symbol');\n        this.iconsMDL.set('glyphicon-cloud', 'cloud');\n        this.iconsMDL.set('glyphicon-envelope', 'mail');\n        this.iconsMDL.set('glyphicon-pencil', 'create');\n        this.iconsMDL.set('glyphicon-glass', 'local_bar');\n        this.iconsMDL.set('glyphicon-music', 'music_note');\n        this.iconsMDL.set('glyphicon-search', 'search');\n        this.iconsMDL.set('glyphicon-heart', 'favorite');\n        this.iconsMDL.set('glyphicon-heart-empty', 'favorite_border');\n        this.iconsMDL.set('glyphicon-star', 'star');\n        this.iconsMDL.set('glyphicon-star-empty', 'star_border');\n        this.iconsMDL.set('glyphicon-user', 'person');\n        this.iconsMDL.set('glyphicon-film', 'movie_creation');\n        this.iconsMDL.set('glyphicon-th-large', 'view_comfy');\n        this.iconsMDL.set('glyphicon-th', 'dashboard');\n        this.iconsMDL.set('glyphicon-th-list', 'list');\n        this.iconsMDL.set('glyphicon-ok', 'done');\n        this.iconsMDL.set('glyphicon-remove', 'cancel');\n        this.iconsMDL.set('glyphicon-zoom-in', 'zoom_in');\n        this.iconsMDL.set('glyphicon-zoom-out', 'zoom_out');\n        this.iconsMDL.set('glyphicon-off', 'highlight_off');\n        this.iconsMDL.set('glyphicon-signal', 'signal_cellular_4_bar');\n        this.iconsMDL.set('glyphicon-cog', 'settings');\n        this.iconsMDL.set('glyphicon-trash', 'delete');\n        this.iconsMDL.set('glyphicon-home', 'home');\n        this.iconsMDL.set('glyphicon-file', 'insert_drive_file');\n        this.iconsMDL.set('glyphicon-time', 'access_time');\n        this.iconsMDL.set('glyphicon-road', 'map');\n        this.iconsMDL.set('glyphicon-download-alt', 'file_download');\n        this.iconsMDL.set('glyphicon-download', 'file_download');\n        this.iconsMDL.set('glyphicon-upload', 'file_upload');\n        this.iconsMDL.set('glyphicon-inbox', 'inbox');\n        this.iconsMDL.set('glyphicon-play-circle', 'play_circle_outline');\n        this.iconsMDL.set('glyphicon-repeat', 'refresh');\n        this.iconsMDL.set('glyphicon-refresh', 'sync');\n        this.iconsMDL.set('glyphicon-list-alt', 'event_note');\n        this.iconsMDL.set('glyphicon-lock', 'lock_outline');\n        this.iconsMDL.set('glyphicon-flag', 'assistant_photo');\n        this.iconsMDL.set('glyphicon-headphones', 'headset');\n        this.iconsMDL.set('glyphicon-volume-up', 'volume_up');\n        this.iconsMDL.set('glyphicon-tag', 'local_offer');\n        this.iconsMDL.set('glyphicon-tags', 'local_offer');\n        this.iconsMDL.set('glyphicon-book', 'library_books');\n        this.iconsMDL.set('glyphicon-bookmark', 'collections_bookmark');\n        this.iconsMDL.set('glyphicon-print', 'local_printshop');\n        this.iconsMDL.set('glyphicon-camera', 'local_see');\n        this.iconsMDL.set('glyphicon-list', 'view_list');\n        this.iconsMDL.set('glyphicon-facetime-video', 'video_call');\n        this.iconsMDL.set('glyphicon-picture', 'photo');\n        this.iconsMDL.set('glyphicon-map-marker', 'add_location');\n        this.iconsMDL.set('glyphicon-adjust', 'brightness_4');\n        this.iconsMDL.set('glyphicon-tint', 'invert_colors');\n        this.iconsMDL.set('glyphicon-edit', 'edit');\n        this.iconsMDL.set('glyphicon-share', 'share');\n        this.iconsMDL.set('glyphicon-check', 'assignment_turned_in');\n        this.iconsMDL.set('glyphicon-move', 'open_with');\n        this.iconsMDL.set('glyphicon-play', 'play_arrow');\n        this.iconsMDL.set('glyphicon-eject', 'eject');\n        this.iconsMDL.set('glyphicon-plus-sign', 'add_circle');\n        this.iconsMDL.set('glyphicon-minus-sign', 'remove_circle');\n        this.iconsMDL.set('glyphicon-remove-sign', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-sign', 'check_circle');\n        this.iconsMDL.set('glyphicon-question-sign', 'help');\n        this.iconsMDL.set('glyphicon-info-sign', 'info');\n        this.iconsMDL.set('glyphicon-screenshot', 'flare');\n        this.iconsMDL.set('glyphicon-remove-circle', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-circle', 'add_circle');\n        this.iconsMDL.set('glyphicon-ban-circle', 'block');\n        this.iconsMDL.set('glyphicon-share-alt', 'redo');\n        this.iconsMDL.set('glyphicon-exclamation-sign', 'error');\n        this.iconsMDL.set('glyphicon-gift', 'giftcard');\n        this.iconsMDL.set('glyphicon-leaf', 'spa');\n        this.iconsMDL.set('glyphicon-fire', 'whatshot');\n        this.iconsMDL.set('glyphicon-eye-open', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-eye-close', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-warning-sign', 'warning');\n        this.iconsMDL.set('glyphicon-plane', 'airplanemode_active');\n        this.iconsMDL.set('glyphicon-calendar', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-random', 'shuffle');\n        this.iconsMDL.set('glyphicon-comment', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-magnet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-retweet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-shopping-cart', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-close', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hdd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bullhorn', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bell', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-certificate', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-up', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-down', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hand-left', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-globe', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-wrench', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tasks', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-filter', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-briefcase', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-dashboard', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-paperclip', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-link', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-pushpin', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-usd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-gbp', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-sort', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-flash', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-record', 'radio_button_checked');\n        this.iconsMDL.set('glyphicon-save', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-saved', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-send', 'send');\n        this.iconsMDL.set('glyphicon-floppy-disk', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-credit-card', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cutlery', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-earphone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone-alt', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tower', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-stats', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-download', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-upload', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-conifer', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-deciduous', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-align-left', 'format_align_left');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ProcessInstanceFilterRepresentation, UserProcessInstanceFilterRepresentation } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { ProcessFilterService } from './../services/process-filter.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-process-instance-filters',\n    templateUrl: './process-filters.component.html',\n    styleUrls: ['./process-filters.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessFiltersComponent implements OnInit, OnChanges {\n\n    /** The parameters to filter the task filter. If there is no match then the default one\n     * (ie, the first filter in the list) is selected.\n     */\n    @Input()\n    filterParam: FilterProcessRepresentationModel;\n\n    /** Emitted when a filter is being clicked from the UI. */\n    @Output()\n    filterClicked = new EventEmitter<UserProcessInstanceFilterRepresentation>();\n\n    /** Emitted when the list of filters has been successfully loaded from the server. */\n    @Output()\n    success = new EventEmitter<ProcessInstanceFilterRepresentation[]>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggle to show or hide the filter's icon. */\n    @Input()\n    showIcon: boolean = true;\n\n    /** Emitted when a filter is being selected based on the filterParam input. */\n    @Output()\n    filterSelected = new EventEmitter<UserProcessInstanceFilterRepresentation>();\n\n    filter$: Observable<ProcessInstanceFilterRepresentation>;\n\n    currentFilter: ProcessInstanceFilterRepresentation;\n\n    filters: UserProcessInstanceFilterRepresentation [] = [];\n    active = false;\n\n    private iconsMDL: IconModel;\n\n    constructor(private processFilterService: ProcessFilterService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appId = changes['appId'];\n        const appName = changes['appName'];\n        const filter = changes['filterParam'];\n\n        if (appId && (appId.currentValue || appId.currentValue === null)) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectProcessFilter(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.processFilterService.getProcessFilters(appId).subscribe(\n            (res: ProcessInstanceFilterRepresentation[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.processFilterService.createDefaultFilters(appId).subscribe(\n                        (resDefault: ProcessInstanceFilterRepresentation[]) => {\n                            this.resetFilter();\n                            this.filters = resDefault;\n                            this.selectProcessFilter(this.filterParam);\n                            this.success.emit(resDefault);\n                        },\n                        (errDefault: any) => {\n                            this.error.emit(errDefault);\n                        }\n                    );\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectProcessFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n                this.selectProcessFilter(this.filterParam);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param filter\n     */\n    selectFilter(filter: ProcessInstanceFilterRepresentation) {\n        this.currentFilter = filter;\n        this.active = true;\n        this.filterClicked.emit(filter);\n    }\n\n    /**\n     * Select the first filter of a list if present\n     */\n    selectProcessFilter(filterParam: FilterProcessRepresentationModel) {\n        if (filterParam) {\n            const newFilter = this.filters.find((processFilter, index) =>\n                filterParam.index === index ||\n                filterParam.id === processFilter.id ||\n                (filterParam.name &&\n                    (filterParam.name.toLocaleLowerCase() === processFilter.name.toLocaleLowerCase())\n                ));\n            this.currentFilter = newFilter;\n\n            if (newFilter) {\n                this.filterSelected.emit(newFilter);\n            }\n        }\n    }\n\n    /**\n     * Select the Running filter\n     * @deprecated in 3.9.0, Use the filterParam Input() with a running filter instance instead\n     */\n    selectRunningFilter() {\n        this.selectProcessFilter(this.processFilterService.getRunningFilterInstance(null));\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     */\n    selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n            this.filterSelected.emit(this.filters[0]);\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): ProcessInstanceFilterRepresentation {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon: string): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessDefinitionRepresentation {\n    id: string;\n    name: string;\n    description: string;\n    key: string;\n    category: string;\n    version: number;\n    deploymentId: string;\n    tenantId: string;\n    metaDataValues: any[];\n    hasStartForm: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.key = obj && obj.key || null;\n        this.category = obj && obj.category || null;\n        this.version = obj && obj.version || 0;\n        this.deploymentId = obj && obj.deploymentId || null;\n        this.tenantId = obj && obj.tenantId || null;\n        this.metaDataValues = obj && obj.metaDataValues || [];\n        this.hasStartForm = obj && obj.hasStartForm === true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstanceVariable implements RestVariable {\n\n    name?: string;\n    scope?: string;\n    type?: string;\n    value?: string;\n    valueUrl?: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name !== undefined ? obj.name : null;\n        this.scope = obj && obj.scope !== undefined ? obj.scope : null;\n        this.value = obj && obj.value !== undefined ? obj.value : null;\n        this.valueUrl = obj && obj.valueUrl !== undefined ? obj.valueUrl : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LightUserRepresentation, ProcessInstanceRepresentation, RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstance implements ProcessInstanceRepresentation {\n\n    businessKey?: string;\n    ended?: Date;\n    graphicalNotationDefined?: boolean;\n    id?: string;\n    name?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    startFormDefined?: boolean;\n    started?: Date;\n    startedBy?: LightUserRepresentation;\n    tenantId?: string;\n    variables?: RestVariable[];\n\n    constructor(data?: any) {\n        this.businessKey = data && data.businessKey !== undefined ? data.businessKey : null;\n        this.ended = data && data.ended !== undefined ? data.ended : null;\n        this.graphicalNotationDefined = data && data.graphicalNotationDefined !== undefined ? data.graphicalNotationDefined : null;\n        this.id = data && data.id !== undefined ? data.id : null;\n        this.name = data && data.name !== undefined ? data.name : null;\n        this.processDefinitionCategory = data && data.processDefinitionCategory !== undefined ? data.processDefinitionCategory : null;\n        this.processDefinitionDeploymentId = data && data.processDefinitionDeploymentId !== undefined ? data.processDefinitionDeploymentId : null;\n        this.processDefinitionDescription = data && data.processDefinitionDescription !== undefined ? data.processDefinitionDescription : null;\n        this.processDefinitionId = data && data.processDefinitionId !== undefined ? data.processDefinitionId : null;\n        this.processDefinitionKey = data && data.processDefinitionKey !== undefined ? data.processDefinitionKey : null;\n        this.processDefinitionName = data && data.processDefinitionName !== undefined ? data.processDefinitionName : null;\n        this.processDefinitionVersion = data && data.processDefinitionVersion !== undefined ? data.processDefinitionVersion : null;\n        this.startFormDefined = data && data.startFormDefined !== undefined ? data.startFormDefined : null;\n        this.started = data && data.started !== undefined ? data.started : null;\n        this.startedBy = data && data.startedBy !== undefined ? data.startedBy : null;\n        this.tenantId = data && data.tenantId !== undefined ? data.tenantId : null;\n        this.variables = data && data.variables !== undefined ? data.variables : null;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProcessInstance } from './process-instance.model';\n\nexport class ProcessListModel {\n    size: number;\n    total: number;\n    start: number;\n    length: number;\n    data: ProcessInstance [];\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.size = obj.size || null;\n            this.total = obj.total || null;\n            this.start = obj.start || null;\n            this.length = obj.length || null;\n            this.data = obj.data || [];\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, FormValues } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport {\n    TasksApi,\n    ProcessDefinitionsApi,\n    ProcessInstancesApi,\n    RestVariable,\n    ProcessInstanceRepresentation,\n    ProcessInstanceVariablesApi\n} from '@alfresco/js-api';\nimport { Observable, from, throwError, of } from 'rxjs';\nimport { TaskDetailsModel } from '../../task-list';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { ProcessDefinitionRepresentation } from '../models/process-definition.model';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessListModel } from '../models/process-list.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\n\ndeclare let moment: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessService {\n\n    private _tasksApi;\n    get tasksApi(): TasksApi {\n        this._tasksApi = this._tasksApi ?? new TasksApi(this.alfrescoApiService.getInstance());\n        return this._tasksApi;\n    }\n\n    private _processDefinitionsApi;\n    get processDefinitionsApi(): ProcessDefinitionsApi {\n        this._processDefinitionsApi = this._processDefinitionsApi ?? new ProcessDefinitionsApi(this.alfrescoApiService.getInstance());\n        return this._processDefinitionsApi;\n    }\n\n    private _processInstancesApi;\n    get processInstancesApi(): ProcessInstancesApi {\n        this._processInstancesApi = this._processInstancesApi ?? new ProcessInstancesApi(this.alfrescoApiService.getInstance());\n        return this._processInstancesApi;\n    }\n\n    private _processInstanceVariablesApi;\n    get processInstanceVariablesApi(): ProcessInstanceVariablesApi {\n        this._processInstanceVariablesApi = this._processInstanceVariablesApi ?? new ProcessInstanceVariablesApi(this.alfrescoApiService.getInstance());\n        return this._processInstanceVariablesApi;\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets process instances for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of process instances\n     */\n    getProcessInstances(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return from(this.processInstancesApi.getProcessInstances(requestNode))\n            .pipe(\n                map((res: any) => {\n                    if (processDefinitionKey) {\n                        const filtered = res.data.filter((process) => process.processDefinitionKey === processDefinitionKey);\n                        res.data = filtered;\n                        return res;\n                    } else {\n                        return res;\n                    }\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets processes for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of processes\n     */\n    getProcesses(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return this.getProcessInstances(requestNode, processDefinitionKey)\n            .pipe(\n                map(response => {\n                    return {\n                        ...response,\n                        data: (response.data || []).map(instance => {\n                            instance.name = this.getProcessNameOrDescription(instance, 'medium');\n                            return instance;\n                        })\n                    };\n                }),\n                catchError(() => of(new ProcessListModel({})))\n            );\n    }\n\n    private getProcessNameOrDescription(processInstance: ProcessInstanceRepresentation, dateFormat: string): string {\n        let name = '';\n\n        if (processInstance) {\n            name = processInstance.name ||\n                processInstance.processDefinitionName + ' - ' + this.getFormatDate(processInstance.started, dateFormat);\n        }\n\n        return name;\n    }\n\n    private getFormatDate(value: Date, format: string) {\n        const datePipe = new DatePipe('en-US');\n\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            return '';\n        }\n    }\n\n    /**\n     * Fetches the Process Audit information as a PDF.\n     * @param processId ID of the target process\n     * @returns Binary PDF data\n     */\n    fetchProcessAuditPdfById(processId: string): Observable<Blob> {\n        return from(this.processInstancesApi.getProcessAuditPdf(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Fetches the Process Audit information in a JSON format.\n     * @param processId ID of the target process\n     * @returns JSON data\n     */\n    fetchProcessAuditJsonById(processId: string): Observable<any> {\n        return from(this.processInstancesApi.getTaskAuditLog(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets Process Instance metadata.\n     * @param processInstanceId ID of the target process\n     * @returns Metadata for the instance\n     */\n    getProcess(processInstanceId: string): Observable<ProcessInstance> {\n        return from(this.processInstancesApi.getProcessInstance(processInstanceId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets task instances for a process instance.\n     * @param processInstanceId ID of the process instance\n     * @param state Task state filter (can be \"active\" or \"completed\")\n     * @returns Array of task instance details\n     */\n    getProcessTasks(processInstanceId: string, state?: string): Observable<TaskDetailsModel[]> {\n        const taskOpts = state ? {\n            processInstanceId: processInstanceId,\n            state: state\n        } : {\n            processInstanceId: processInstanceId\n        };\n        return from(this.tasksApi.listTasks(taskOpts))\n            .pipe(\n                map(this.extractData),\n                map((tasks) => tasks.map((task: any) => {\n                    task.created = moment(task.created, 'YYYY-MM-DD').format();\n                    return task;\n                })),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions associated with an app.\n     * @param appId ID of a target app\n     * @returns Array of process definitions\n     */\n    getProcessDefinitions(appId?: number): Observable<ProcessDefinitionRepresentation[]> {\n        const opts = appId ? {\n            latest: true,\n            appDefinitionId: appId\n        } : {\n            latest: true\n        };\n        return from(\n            this.processDefinitionsApi.getProcessDefinitions(opts)\n        )\n            .pipe(\n                map(this.extractData),\n                map((processDefs) => processDefs.map((pd) => new ProcessDefinitionRepresentation(pd))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Starts a process based on a process definition, name, form values or variables.\n     * @param processDefinitionId Process definition ID\n     * @param name Process name\n     * @param outcome Process outcome\n     * @param startFormValues Values for the start form\n     * @param variables Array of process instance variables\n     * @returns Details of the process instance just started\n     */\n    startProcess(processDefinitionId: string, name: string, outcome?: string, startFormValues?: FormValues, variables?: ProcessInstanceVariable[]): Observable<ProcessInstance> {\n        const startRequest: any = {\n            name: name,\n            processDefinitionId: processDefinitionId\n        };\n        if (outcome) {\n            startRequest.outcome = outcome;\n        }\n        if (startFormValues) {\n            startRequest.values = startFormValues;\n        }\n        if (variables) {\n            startRequest.variables = variables;\n        }\n        return from(\n            this.processInstancesApi.startNewProcessInstance(startRequest)\n        )\n            .pipe(\n                map((pd) => new ProcessInstance(pd)),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Cancels a process instance.\n     * @param processInstanceId ID of process to cancel\n     * @returns Null response notifying when the operation is complete\n     */\n    cancelProcess(processInstanceId: string): Observable<void> {\n        return from(\n            this.processInstancesApi.deleteProcessInstance(processInstanceId)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets the variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @returns Array of instance variable info\n     */\n    getProcessInstanceVariables(processInstanceId: string): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId)\n        )\n            .pipe(\n                map((processVars: any[]) => processVars.map((currentProcessVar) => new ProcessInstanceVariable(currentProcessVar))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates or updates variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variables Variables to update\n     * @returns Array of instance variable info\n     */\n    createOrUpdateProcessInstanceVariables(processInstanceId: string, variables: RestVariable[]): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.processInstanceVariablesApi.createOrUpdateProcessInstanceVariables(processInstanceId, variables)\n        ).pipe(\n            catchError((err) => this.handleProcessError(err))\n        );\n    }\n\n    /**\n     * Deletes a variable for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variableName Name of the variable to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteProcessInstanceVariable(processInstanceId: string, variableName: string): Observable<void> {\n        return from(\n            this.processInstanceVariablesApi.deleteProcessInstanceVariable(processInstanceId, variableName)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    private extractData(res: any) {\n        return res.data || {};\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { TaskDetailsEvent } from '../../task-list';\n\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { ProcessInstanceHeaderComponent } from './process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './process-instance-tasks.component';\n\n@Component({\n    selector: 'adf-process-instance-details',\n    templateUrl: './process-instance-details.component.html',\n    styleUrls: ['./process-instance-details.component.css']\n})\nexport class ProcessInstanceDetailsComponent implements OnChanges {\n\n    /** (required) The numeric ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    @ViewChild('processInstanceHeader')\n    processInstanceHeader: ProcessInstanceHeaderComponent;\n\n    @ViewChild('processInstanceTasks')\n    tasksList: ProcessInstanceTasksComponent;\n\n    /** Toggles whether to show or hide the title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggles whether to show or hide the refresh button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when the current process is cancelled by the user from within the component. */\n    @Output()\n    processCancelled = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick = new EventEmitter<TaskDetailsEvent>();\n\n    processInstanceDetails: ProcessInstance;\n\n    /** Emitted when the \"show diagram\" button is clicked. */\n    @Output()\n    showProcessDiagram = new EventEmitter<any>();\n\n    /**\n     * Constructor\n     * @param translate Translation service\n     * @param activitiProcess   Process service\n     */\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId && !processInstanceId.currentValue) {\n            this.reset();\n            return;\n        }\n        if (processInstanceId && processInstanceId.currentValue) {\n            this.load(processInstanceId.currentValue);\n            return;\n        }\n    }\n\n    /**\n     * Reset the task detail\n     */\n    reset() {\n        this.processInstanceDetails = null;\n    }\n\n    load(processId: string) {\n        if (processId) {\n            this.activitiProcess.getProcess(processId).subscribe(\n                (res: ProcessInstance) => {\n                    this.processInstanceDetails = res;\n                }\n            );\n        }\n    }\n\n    isRunning(): boolean {\n        return this.processInstanceDetails && !this.processInstanceDetails.ended;\n    }\n\n    cancelProcess() {\n        this.activitiProcess.cancelProcess(this.processInstanceId).subscribe(\n            (data) => {\n                this.processCancelled.emit(data);\n            }, (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    // bubbles (taskClick) event\n    onTaskClicked(event: TaskDetailsEvent) {\n        this.taskClick.emit(event);\n    }\n\n    getProcessNameOrDescription(dateFormat: string): string {\n        let name = '';\n        if (this.processInstanceDetails) {\n            name = this.processInstanceDetails.name ||\n                this.processInstanceDetails.processDefinitionName + ' - ' + this.getFormatDate(this.processInstanceDetails.started, dateFormat);\n        }\n        return name;\n    }\n\n    getFormatDate(value: any, format: string): any {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceHeader: error parsing date ${value} to format ${format}`);\n        }\n    }\n\n    onShowProcessDiagram() {\n        this.showProcessDiagram.emit({value: this.processInstanceId});\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { DownloadService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { ProcessService } from './../services/process.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: 'button[adf-process-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class ProcessAuditDirective implements OnChanges {\n\n    /** ID of the process. */\n    @Input('process-id')\n    processId: string;\n\n    /** Name of the file to download (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format for the audit information (can be \"pdf\" or \"json\"). */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit file on clicking. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @param downloadService\n     * @param processListService\n     */\n    constructor(private downloadService: DownloadService,\n                private processListService: ProcessService) {\n    }\n\n    ngOnChanges(): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType() {\n        return this.format && (this.isJsonFormat() || this.isPdfFormat());\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.processListService.fetchProcessAuditPdfById(this.processId).subscribe(\n                (blob: Blob) => {\n                    if (this.download) {\n                        this.downloadService.downloadBlob(blob, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: blob, fileName: this.fileName });\n                },\n                (err) => this.error.emit(err));\n        } else {\n            this.processListService.fetchProcessAuditJsonById(this.processId).subscribe(\n                (res) => this.clicked.emit({ format: this.format, value: res, fileName: this.fileName }),\n                (err) => this.error.emit(err));\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfigService, CardViewDateItemModel, CardViewItem, CardViewBaseItemModel, CardViewTextItemModel, TranslationService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { ProcessInstance } from '../models/process-instance.model';\n\n@Component({\n    selector: 'adf-process-instance-header',\n    templateUrl: './process-instance-header.component.html',\n    styleUrls: ['./process-instance-header.component.css']\n})\nexport class ProcessInstanceHeaderComponent implements OnChanges {\n\n    /** (**required**) Full details of the process instance to display information about. */\n    @Input()\n    processInstance: ProcessInstance;\n\n    properties: CardViewItem [];\n    dateFormat: string;\n    dateLocale: string;\n\n    constructor(private translationService: TranslationService,\n                private appConfig: AppConfigService) {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n        this.dateLocale = this.appConfig.get('dateValues.defaultDateLocale');\n    }\n\n    ngOnChanges() {\n        this.refreshData();\n    }\n\n    refreshData(): void {\n        if (this.processInstance) {\n            const defaultProperties = this.initDefaultProperties();\n            const filteredProperties: string[] = this.appConfig.get('adf-process-instance-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    private initDefaultProperties(): any[] {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.STATUS',\n                    value: this.getProcessStatus(),\n                    key: 'status'\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.END_DATE',\n                    value: this.processInstance.ended,\n                    format: this.dateFormat,\n                    locale: this.dateLocale,\n                    key: 'ended',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.END_DATE_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CATEGORY',\n                    value: this.processInstance.processDefinitionCategory,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY',\n                    value: this.processInstance.businessKey,\n                    key: 'businessKey',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED_BY',\n                    value: this.getStartedByFullName(),\n                    key: 'createdBy',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CREATED_BY_DEFAULT')\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n                    value: this.processInstance.started,\n                    format: this.dateFormat,\n                    locale: this.dateLocale,\n                    key: 'created'\n                }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.ID',\n                value: this.processInstance.id,\n                key: 'id'\n            }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION',\n                value: this.processInstance.processDefinitionDescription,\n                key: 'description',\n                default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION_DEFAULT')\n            })\n        ];\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    getProcessStatus(): string {\n        if (this.processInstance) {\n            return this.isRunning() ? 'Running' : 'Completed';\n        }\n        return 'Unknown';\n    }\n\n    getStartedByFullName(): string {\n        let fullName = '';\n        if (this.processInstance && this.processInstance.startedBy) {\n            fullName += this.processInstance.startedBy.firstName || '';\n            fullName += fullName ? ' ' : '';\n            fullName += this.processInstance.startedBy.lastName || '';\n        }\n        return fullName;\n    }\n\n    isRunning(): boolean {\n        return this.processInstance && !this.processInstance.ended;\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskFilterRepresentation, UserTaskFilterRepresentation, TaskQueryRepresentation } from '@alfresco/js-api';\n\nexport class AppDefinitionRepresentationModel {\n    defaultAppId: string;\n    deploymentId: string;\n    name: string;\n    description: string;\n    theme: string;\n    icon: string;\n    id: number;\n    modelId: number;\n    tenantId: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.defaultAppId = obj.defaultAppId ? obj.defaultAppId : null;\n            this.deploymentId = obj.deploymentId ? obj.deploymentId : null;\n            this.name = obj.name ? obj.name : null;\n            this.description = obj.description ? obj.description : null;\n            this.theme = obj.theme ? obj.theme : null;\n            this.icon = obj.icon ? obj.icon : null;\n            this.id = obj.id ? obj.id : null;\n            this.modelId = obj.modelId ? obj.modelId : null;\n            this.tenantId = obj.tenantId ? obj.tenantId : null;\n        }\n    }\n}\n\nexport class FilterParamsModel {\n    id: number;\n    name: string;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.index = obj.index;\n        }\n    }\n}\n\nexport class FilterRepresentationModel implements UserTaskFilterRepresentation {\n    id: number;\n    appId: number;\n    name: string;\n    recent: boolean;\n    icon: string;\n    filter: TaskFilterRepresentation;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = new UserTaskFilterRepresentation(obj.filter);\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter(): boolean {\n        return !!this.filter;\n    }\n}\n\nexport class TaskQueryRequestRepresentationModel extends TaskQueryRepresentation {\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let taskPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        },\n        {\n            'key': 'assignee',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the Form.\n */\nexport class Form {\n\n    id: number;\n    name: string;\n\n    constructor(id: number, name: string) {\n        this.name = name;\n        this.id = id;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the details of a task.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { TaskRepresentation } from '@alfresco/js-api';\nimport { UserGroupModel } from './user-group.model';\n\nexport class TaskDetailsModel implements TaskRepresentation {\n    id?: string;\n    name?: string;\n    assignee?: UserProcessModel;\n    priority?: number;\n    adhocTaskCanBeReassigned?: boolean;\n    category?: string;\n    created?: Date;\n    description?: string;\n    parentName?: string;\n    dueDate?: Date;\n    duration?: number;\n    endDate?: Date;\n    executionId?: string;\n    formKey?: string;\n    initiatorCanCompleteTask?: boolean;\n    managerOfCandidateGroup?: boolean;\n    memberOfCandidateGroup?: boolean;\n    memberOfCandidateUsers?: boolean;\n    involvedGroups?: UserGroupModel [];\n    involvedPeople?: UserProcessModel [];\n    parentTaskId?: string;\n    parentTaskName?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number = 0;\n    processInstanceId?: string;\n    processInstanceName?: string;\n    processInstanceStartUserId?: string;\n    taskDefinitionKey?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.priority = obj.priority;\n            this.assignee = obj.assignee ? new UserProcessModel(obj.assignee) : null;\n            this.adhocTaskCanBeReassigned = obj.adhocTaskCanBeReassigned;\n            this.category = obj.category || null;\n            this.created = obj.created || null;\n            this.description = obj.description || null;\n            this.dueDate = obj.dueDate || null;\n            this.duration = obj.duration || null;\n            this.endDate = obj.endDate || null;\n            this.executionId = obj.executionId || null;\n            this.formKey = obj.formKey || null;\n            this.initiatorCanCompleteTask = !!obj.initiatorCanCompleteTask;\n            this.managerOfCandidateGroup = !!obj.managerOfCandidateGroup;\n            this.memberOfCandidateGroup = !!obj.memberOfCandidateGroup;\n            this.memberOfCandidateUsers = !!obj.memberOfCandidateUsers;\n            this.involvedGroups = obj.involvedGroups;\n            this.involvedPeople = obj.involvedPeople;\n            this.parentTaskId = obj.parentTaskId || null;\n            this.parentTaskName = obj.parentTaskName || null;\n            this.processDefinitionCategory = obj.processDefinitionCategory || null;\n            this.processDefinitionDeploymentId = obj.processDefinitionDeploymentId || null;\n            this.processDefinitionDescription = obj.processDefinitionDescription || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processDefinitionKey = obj.processDefinitionKey || null;\n            this.processDefinitionName = obj.processDefinitionName || null;\n            this.processDefinitionVersion = obj.processDefinitionVersion || 0;\n            this.processInstanceId = obj.processInstanceId || null;\n            this.processInstanceName = obj.processInstanceName || null;\n            this.processInstanceStartUserId = obj.processInstanceStartUserId || null;\n            this.taskDefinitionKey = obj.taskDefinitionKey || null;\n        }\n    }\n\n    getFullName(): string {\n        let fullName: string = '';\n\n        if (this.assignee) {\n            const firstName: string = this.assignee.firstName ? this.assignee.firstName : '';\n            const lastName: string = this.assignee.lastName ? this.assignee.lastName : '';\n            fullName = `${firstName} ${lastName}`;\n        }\n\n        return fullName.trim();\n    }\n\n    isCompleted(): boolean {\n        return !!this.endDate;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskListModel  {\n    size?: number;\n    total?: number;\n    start?: number;\n    length?: number;\n    data?: TaskDetailsModel[] = [];\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n            if (input.data) {\n                this.data = input.data.map((item: any) => {\n                    return new TaskDetailsModel(item);\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError, of } from 'rxjs';\nimport { map, catchError, switchMap, flatMap, filter } from 'rxjs/operators';\nimport { FilterRepresentationModel, TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport {\n    TaskQueryRepresentation, AssigneeIdentifierRepresentation,\n    TaskUpdateRepresentation, ModelsApi, TaskActionsApi, TasksApi,\n    ChecklistsApi\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskListService {\n\n    private _modelsApi;\n    get modelsApi(): ModelsApi {\n        this._modelsApi = this._modelsApi ?? new ModelsApi(this.apiService.getInstance());\n        return this._modelsApi;\n    }\n\n    private _tasksApi;\n    get tasksApi(): TasksApi {\n        this._tasksApi = this._tasksApi ?? new TasksApi(this.apiService.getInstance());\n        return this._tasksApi;\n    }\n\n    private _taskActionsApi;\n    get taskActionsApi(): TaskActionsApi {\n        this._taskActionsApi = this._taskActionsApi ?? new TaskActionsApi(this.apiService.getInstance());\n        return this._taskActionsApi;\n    }\n\n    private _checklistsApi;\n    get checklistsApi(): ChecklistsApi {\n        this._checklistsApi = this._checklistsApi ?? new ChecklistsApi(this.apiService.getInstance());\n        return this._checklistsApi;\n    }\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets all the filters in the list that belong to a task.\n     * @param taskId ID of the target task\n     * @param filterList List of filters to search through\n     * @returns Filters belonging to the task\n     */\n    getFilterForTaskById(taskId: string, filterList: FilterRepresentationModel[]): Observable<FilterRepresentationModel> {\n        return from(filterList)\n            .pipe(\n                flatMap((data: FilterRepresentationModel) => this.isTaskRelatedToFilter(taskId, data)),\n                filter((data: FilterRepresentationModel) => data != null)\n            );\n    }\n\n    /**\n     * Gets the search query for a task based on the supplied filter.\n     * @param filter The filter to use\n     * @returns The search query\n     */\n    private generateTaskRequestNodeFromFilter(filterModel: FilterRepresentationModel): TaskQueryRequestRepresentationModel {\n        const requestNode = {\n            appDefinitionId: filterModel.appId,\n            assignment: filterModel.filter.assignment,\n            state: filterModel.filter.state,\n            sort: filterModel.filter.sort\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    /**\n     * Checks if a taskId is filtered with the given filter.\n     * @param taskId ID of the target task\n     * @param filterModel The filter you want to check\n     * @returns The filter if it is related or null otherwise\n     */\n    isTaskRelatedToFilter(taskId: string, filterModel: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        const requestNodeForFilter = this.generateTaskRequestNodeFromFilter(filterModel);\n        return from(this.callApiTasksFiltered(requestNodeForFilter))\n            .pipe(\n                map(res => {\n                    return res.data.find((element) => element.id === taskId) ? filterModel : null;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks matching the supplied query.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    getTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets tasks matching a query and state value.\n     * @param requestNode Query to search for tasks\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findTasksByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTasks(requestNode)\n            .pipe(catchError(() => of(new TaskListModel())));\n    }\n\n    /**\n     * Gets all tasks matching a query and state value.\n     * @param requestNode Query to search for tasks.\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findAllTaskByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTotalTasks(requestNode)\n            .pipe(\n                switchMap((res: any) => {\n                    requestNode.size = res.total;\n                    return this.getTasks(requestNode);\n                })\n            );\n    }\n\n    /**\n     * Gets all tasks matching the supplied query but ignoring the task state.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    findAllTasksWithoutState(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return forkJoin(\n            this.findTasksByState(requestNode, 'open'),\n            this.findAllTaskByState(requestNode, 'completed'),\n            (activeTasks: TaskListModel, completedTasks: TaskListModel) => {\n                const tasks = Object.assign({}, activeTasks);\n                tasks.total += completedTasks.total;\n                tasks.data = tasks.data.concat(completedTasks.data);\n                return tasks;\n            }\n        );\n    }\n\n    /**\n     * Gets details for a task.\n     * @param taskId ID of the target task.\n     * @returns Task details\n     */\n    getTaskDetails(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiTaskDetails(taskId))\n            .pipe(\n                map(details => {\n                    return new TaskDetailsModel(details);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the checklist for a task.\n     * @param id ID of the target task\n     * @returns Array of checklist task details\n     */\n    getTaskChecklist(id: string): Observable<TaskDetailsModel[]> {\n        return from(this.callApiTaskChecklist(id))\n            .pipe(\n                map(response => {\n                    const checklists: TaskDetailsModel[] = [];\n                    response.data.forEach((checklist) => {\n                        checklists.push(new TaskDetailsModel(checklist));\n                    });\n                    return checklists;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all available reusable forms.\n     * @returns Array of form details\n     */\n    getFormList(): Observable<Form[]> {\n        const opts = {\n            'filter': 'myReusableForms', // String | filter\n            'sort': 'modifiedDesc', // String | sort\n            'modelType': 2 // Integer | modelType\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(response => {\n                    const forms: Form[] = [];\n                    response.data.forEach((form) => {\n                        forms.push(new Form(form.id, form.name));\n                    });\n                    return forms;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Attaches a form to a task.\n     * @param taskId ID of the target task\n     * @param formId ID of the form to add\n     * @returns Null response notifying when the operation is complete\n     */\n    attachFormToATask(taskId: string, formId: number): Observable<any> {\n        return from(this.taskActionsApi.attachForm(taskId, { 'formId': formId }))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a subtask (ie, a checklist task) to a parent task.\n     * @param task The task to add\n     * @returns The subtask that was added\n     */\n    addTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiAddTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a subtask (ie, a checklist task) from a parent task.\n     * @param taskId The task to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a form from a task.\n     * @param taskId Task id related to form\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteForm(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteForm(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gives completed status to a task.\n     * @param taskId ID of the target task\n     * @returns Null response notifying when the operation is complete\n     */\n    completeTask(taskId: string) {\n        return from(this.taskActionsApi.completeTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the total number of the tasks found by a query.\n     * @param requestNode Query to search for tasks\n     * @returns Number of tasks\n     */\n    public getTotalTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<any> {\n        requestNode.size = 0;\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Creates a new standalone task.\n     * @param task Details of the new task\n     * @returns Details of the newly created task\n     */\n    createNewTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiCreateTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user or group.\n     * @param taskId The task to assign\n     * @param requestNode User or group to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTask(taskId: string, requestNode: any): Observable<TaskDetailsModel> {\n        const assignee = { assignee: requestNode.id };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user.\n     * @param taskId ID of the task to assign\n     * @param userId ID of the user to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTaskByUserId(taskId: string, userId: string): Observable<TaskDetailsModel> {\n        const assignee = <AssigneeIdentifierRepresentation> { assignee: userId };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Claims a task for the current user.\n     * @param taskId ID of the task to claim\n     * @returns Details of the claimed task\n     */\n    claimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.taskActionsApi.claimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Un-claims a task for the current user.\n     * @param taskId ID of the task to unclaim\n     * @returns Null response notifying when the operation is complete\n     */\n    unclaimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.taskActionsApi.unclaimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Updates the details (name, description, due date) for a task.\n     * @param taskId ID of the task to update\n     * @param updated Data to update the task (as a `TaskUpdateRepresentation` instance).\n     * @returns Updated task details\n     */\n    updateTask(taskId: string, updated: TaskUpdateRepresentation): Observable<TaskDetailsModel> {\n        return from(this.tasksApi.updateTask(taskId, updated))\n            .pipe(\n                map((result) => <TaskDetailsModel> result),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetches the Task Audit information in PDF format.\n     * @param taskId ID of the target task\n     * @returns Binary PDF data\n     */\n    fetchTaskAuditPdfById(taskId: string): Observable<Blob> {\n        return from(this.tasksApi.getTaskAuditPdf(taskId))\n            .pipe(\n                map((data) => <Blob> data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetch the Task Audit information in JSON format\n     * @param taskId ID of the target task\n     * @returns JSON data\n     */\n    fetchTaskAuditJsonById(taskId: string): Observable<any> {\n        return from(this.tasksApi.getTaskAuditLog(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiTasksFiltered(requestNode: TaskQueryRepresentation): Promise<TaskListModel> {\n        return this.tasksApi.listTasks(requestNode);\n    }\n\n    private callApiTaskDetails(taskId: string): Promise<TaskDetailsModel> {\n        return this.tasksApi.getTask(taskId);\n    }\n\n    private callApiAddTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.checklistsApi.addSubtask(task.parentTaskId, task);\n    }\n\n    private callApiDeleteTask(taskId: string): Promise<any> {\n        return this.tasksApi.deleteTask(taskId);\n    }\n\n    private callApiDeleteForm(taskId: string): Promise<any> {\n        return this.taskActionsApi.removeForm(taskId);\n    }\n\n    private callApiTaskChecklist(taskId: string): Promise<TaskListModel> {\n        return this.checklistsApi.getChecklist(taskId);\n    }\n\n    private callApiCreateTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.tasksApi.createNewTask(task);\n    }\n\n    private callApiAssignTask(taskId: string, requestNode: AssigneeIdentifierRepresentation): Promise<TaskDetailsModel> {\n        return this.taskActionsApi.assignTask(taskId, requestNode);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataRowEvent, DataTableAdapter, DataTableSchema, CustomEmptyContentTemplateDirective, CustomLoadingContentTemplateDirective,\n    AppConfigService, PaginationComponent, PaginatedComponent,\n    UserPreferencesService, UserPreferenceValues, PaginationModel, DataCellEvent } from '@alfresco/adf-core';\nimport {\n    AfterContentInit, Component, ContentChild, EventEmitter,\n    Input, OnChanges, Output, SimpleChanges, OnDestroy, OnInit } from '@angular/core';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport { taskPresetsDefaultModel } from '../models/task-preset.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport moment from 'moment-es6';\nimport { takeUntil, finalize } from 'rxjs/operators';\nimport { TaskDetailsModel } from '../models/task-details.model';\n\n@Component({\n    selector: 'adf-tasklist',\n    templateUrl: './task-list.component.html',\n    styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent, OnDestroy, OnInit {\n\n    static PRESET_KEY = 'adf-task-list.presets';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    requestNode: TaskQueryRequestRepresentationModel;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Instance Id of the process. */\n    @Input()\n    processInstanceId: string;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Current state of the process. Possible values are: `completed`, `active`. */\n    @Input()\n    state: string;\n\n    /** The assignment of the process. Possible values are: \"assignee\" (the current user\n     * is the assignee), \"candidate\" (the current user is a task candidate, \"group_x\" (the task\n     * is assigned to a group where the current user is a member,\n     * no value (the current user is involved).\n     */\n    @Input()\n    assignment: string;\n\n    /** Define the sort order of the tasks. Possible values are : `created-desc`,\n     * `created-asc`, `due-desc`, `due-asc`\n     */\n    @Input()\n    sort: string;\n\n    /** Name of the tasklist. */\n    @Input()\n    name: string;\n\n    /** Define which task id should be selected after reloading. If the task id doesn't\n     * exist or nothing is passed then the first task will be selected.\n     */\n    @Input()\n    landingTaskId: string;\n\n    /**\n     * Data source object that represents the number and the type of the columns that\n     * you want to show.\n     */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** The id of a task */\n    @Input()\n    taskId: string;\n\n    /** Toggles inclusion of Process Instances */\n    @Input()\n    includeProcessInstance: boolean;\n\n    /** Starting point of the list within the full set of tasks. */\n    @Input()\n    start: number;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    showContextMenu: boolean = false;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when a task in the list is clicked */\n    @Output()\n    rowClick = new EventEmitter<string>();\n\n    /** Emitted when rows are selected/unselected */\n    @Output()\n    rowsSelected = new EventEmitter<any[]>();\n\n    /** Emitted when the task list is loaded */\n    @Output()\n    success = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    currentInstanceId: string;\n    selectedInstances: any[];\n    pagination: BehaviorSubject<PaginationModel>;\n\n    /** The page number of the tasks to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of tasks to fetch. Default value: 25. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Filter the tasks. Display only tasks with `created_date` after `dueAfter`. */\n    @Input()\n    dueAfter: string;\n\n    /** Filter the tasks. Display only tasks with `created_date` before `dueBefore`. */\n    @Input()\n    dueBefore: string;\n\n    rows: any[] = [];\n    isLoading: boolean = true;\n    sorting: any[] = ['created', 'desc'];\n\n    /**\n     * Toggles custom data source mode.\n     * When enabled the component reloads data from it's current source instead of the server side.\n     * This allows generating and displaying custom data sets (i.e. filtered out content).\n     *\n     * @memberOf TaskListComponent\n     */\n    hasCustomDataSource: boolean = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private taskListService: TaskListService,\n                appConfigService: AppConfigService,\n                private userPreferences: UserPreferencesService) {\n        super(appConfigService, TaskListComponent.PRESET_KEY, taskPresetsDefaultModel);\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId) {\n            this.reload();\n        }\n    }\n\n    ngOnInit() {\n        this.userPreferences\n            .select(UserPreferenceValues.PaginationSize)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(pageSize => this.size = pageSize);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    setCustomDataSource(rows: any[]): void {\n        if (rows) {\n            this.rows = rows;\n            this.hasCustomDataSource = true;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n\n        const presetColumnChanges = changes['presetColumn'];\n        if (presetColumnChanges && !presetColumnChanges.firstChange) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = true;\n\n        const landingTaskId = changes['landingTaskId'];\n        const page = changes['page'];\n        const size = changes['size'];\n        if (landingTaskId && landingTaskId.currentValue && this.isEqualToCurrentId(landingTaskId.currentValue)) {\n            changed = false;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n\n        return changed;\n    }\n\n    reload(): void {\n        if (!this.hasCustomDataSource) {\n            this.requestNode = this.createRequestNode();\n            this.load();\n        } else {\n            this.isLoading = false;\n        }\n    }\n\n    private load() {\n        this.isLoading = true;\n\n        this.loadTasksByState()\n            .pipe(finalize(() => this.isLoading = false))\n            .subscribe(\n                tasks => {\n                    this.rows = this.optimizeTaskDetails(tasks.data);\n                    this.selectTask(this.landingTaskId);\n                    this.success.emit(tasks);\n                    this.pagination.next({\n                        count: tasks.data.length,\n                        maxItems: this.size,\n                        skipCount: this.page * this.size,\n                        totalItems: tasks.total\n                    });\n                },\n                error => {\n                    this.error.emit(error);\n                });\n    }\n\n    private loadTasksByState(): Observable<TaskListModel> {\n        return this.requestNode.state === 'all'\n            ? this.taskListService.findAllTasksWithoutState(this.requestNode)\n            : this.taskListService.findTasksByState(this.requestNode);\n    }\n\n    /**\n     * Select the task given in input if present\n     */\n    selectTask(taskIdSelected: string): void {\n        if (!this.isListEmpty()) {\n            let dataRow = null;\n\n            if (taskIdSelected) {\n                dataRow = this.rows.find((currentRow: any) => {\n                    return currentRow['id'] === taskIdSelected;\n                });\n            }\n\n            if (!dataRow && this.selectFirstRow) {\n                dataRow = this.rows[0];\n            }\n\n            if (dataRow) {\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            }\n        } else {\n            this.currentInstanceId = null;\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the taskId is the same of the selected task\n     * @param taskId\n     */\n    isEqualToCurrentId(taskId: string): boolean {\n        return this.currentInstanceId === taskId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    onRowClick(item: DataRowEvent) {\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    onRowSelect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowUnselect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        this.showRowContextMenu.emit(event);\n    }\n\n    /**\n     * Optimize name field\n     * @param instances\n     */\n    private optimizeTaskDetails(instances: TaskDetailsModel[]): TaskDetailsModel[] {\n        instances = instances.map((task) => {\n            if (!task.name) {\n                task.name = 'No name';\n            }\n            return task;\n        });\n        return instances;\n    }\n\n    private createRequestNode() {\n        const requestNode = {\n            appDefinitionId: this.appId,\n            dueAfter: this.dueAfter ? moment(this.dueAfter).toDate() : null,\n            dueBefore: this.dueBefore ? moment(this.dueBefore).toDate() : null,\n            processInstanceId: this.processInstanceId,\n            processDefinitionId: this.processDefinitionId,\n            text: this.name,\n            assignment: this.assignment,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: this.start,\n            taskId: this.taskId,\n            includeProcessInstance: this.includeProcessInstance\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\n\n@Component({\n    selector: 'adf-checklist',\n    templateUrl: './checklist.component.html',\n    styleUrls: ['./checklist.component.scss']\n})\nexport class ChecklistComponent implements OnChanges {\n\n    /** (required) The id of the parent task to which subtasks are\n     * attached.\n     */\n    @Input()\n    taskId: string;\n\n    /** Toggle readonly state of the form. All form widgets\n     * will render as readonly if enabled.\n     */\n    @Input()\n    readOnly: boolean = false;\n\n    /** (required) The assignee id that the subtasks are assigned to. */\n    @Input()\n    assignee: string;\n\n    /** Emitted when a new checklist task is created. */\n    @Output()\n    checklistTaskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    checklistTaskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('dialog', { static: true })\n    addNewDialog: any;\n\n    taskName: string;\n\n    checklist: TaskDetailsModel [] = [];\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     */\n    constructor(private activitiTaskList: TaskListService,\n                private dialog: MatDialog) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getTaskChecklist();\n            return;\n        }\n    }\n\n    getTaskChecklist() {\n        this.checklist = [];\n        if (this.taskId) {\n            this.activitiTaskList.getTaskChecklist(this.taskId).subscribe(\n                (taskDetailsModel: TaskDetailsModel[]) => {\n                    taskDetailsModel.forEach((task) => {\n                        this.checklist.push(task);\n                    });\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n        } else {\n            this.checklist = [];\n        }\n    }\n\n    showDialog() {\n        this.dialog.open(this.addNewDialog, { width: '350px' });\n    }\n\n    public add() {\n        const newTask = new TaskDetailsModel({\n            name: this.taskName,\n            parentTaskId: this.taskId,\n            assignee: { id: this.assignee }\n        });\n        this.activitiTaskList.addTask(newTask).subscribe(\n            (taskDetailsModel: TaskDetailsModel) => {\n                this.checklist.push(taskDetailsModel);\n                this.checklistTaskCreated.emit(taskDetailsModel);\n                this.taskName = '';\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n        this.cancel();\n    }\n\n    public delete(taskId: string) {\n        this.activitiTaskList.deleteTask(taskId).subscribe(\n            () => {\n                this.checklist = this.checklist.filter((check) => check.id !== taskId);\n                this.checklistTaskDeleted.emit(taskId);\n            },\n            (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    public cancel() {\n        this.dialog.closeAll();\n        this.taskName = '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '@alfresco/adf-core';\n\nexport class TaskDescriptionValidator implements CardViewItemValidator {\n\n    message: string = 'ADF_CLOUD_TASK_HEADER.FORM_VALIDATION.INVALID_FIELD';\n\n    isValid(value: string): boolean {\n        const isWhitespace = (value || '').trim().length === 0;\n        return value.length === 0 || !isWhitespace;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport {\n    BpmUserService,\n    CardViewDateItemModel,\n    CardViewMapItemModel,\n    CardViewTextItemModel,\n    CardViewBaseItemModel,\n    TranslationService,\n    AppConfigService,\n    CardViewIntItemModel,\n    CardViewItemLengthValidator\n} from '@alfresco/adf-core';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskDescriptionValidator } from '../validators/task-description.validator';\n\n@Component({\n    selector: 'adf-task-header',\n    templateUrl: './task-header.component.html',\n    styleUrls: ['./task-header.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskHeaderComponent implements OnChanges, OnInit {\n\n    /** The name of the form. */\n    @Input()\n    formName: string = null;\n\n    /** (required) Details related to the task. */\n    @Input()\n    taskDetails: TaskDetailsModel;\n\n    /** Toggles display of the claim/release button. */\n    @Input()\n    showClaimRelease = true;\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    claim: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task is unclaimed (ie, requeue). */\n    @Output()\n    unclaim: EventEmitter<any> = new EventEmitter<any>();\n\n    private currentUserId: number;\n\n    properties: any [] = [];\n    inEdit: boolean = false;\n    displayDateClearAction = false;\n    dateFormat: string;\n    dateLocale: string;\n\n    constructor(private bpmUserService: BpmUserService,\n                private translationService: TranslationService,\n                private appConfig: AppConfigService) {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n        this.dateLocale = this.appConfig.get('dateValues.defaultDateLocale');\n    }\n\n    ngOnInit() {\n        this.loadCurrentBpmUserId();\n        this.initData();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskDetailsChange = changes['taskDetails'];\n        if (taskDetailsChange?.currentValue?.id !== taskDetailsChange?.previousValue?.id) {\n            this.initData();\n        } else {\n            this.refreshData();\n        }\n    }\n\n    private initDefaultProperties(parentInfoMap): any[] {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n                    value: this.taskDetails.getFullName(),\n                    key: 'assignee',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.ASSIGNEE_DEFAULT'),\n                    clickable: !this.isCompleted(),\n                    icon: 'create'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.STATUS',\n                    value: this.getTaskStatus(),\n                    key: 'status'\n                }\n            ),\n            new CardViewIntItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PRIORITY',\n                    value: this.taskDetails.priority,\n                    key: 'priority',\n                    editable: true,\n                    validators: [new CardViewItemLengthValidator(1, 10)]\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DUE_DATE',\n                    value: this.taskDetails.dueDate,\n                    key: 'dueDate',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DUE_DATE_DEFAULT'),\n                    editable: true,\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CATEGORY',\n                    value: this.taskDetails.category,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }\n            ),\n            new CardViewMapItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_NAME',\n                    value: parentInfoMap,\n                    key: 'parentName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.PARENT_NAME_DEFAULT'),\n                    clickable: true\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CREATED',\n                    value: this.taskDetails.created,\n                    key: 'created',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DURATION',\n                    value: this.getTaskDuration(),\n                    key: 'duration'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_TASK_ID',\n                    value: this.taskDetails.parentTaskId,\n                    key: 'parentTaskId'\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.END_DATE',\n                    value: this.taskDetails.endDate,\n                    key: 'endDate',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ID',\n                    value: this.taskDetails.id,\n                    key: 'id'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DESCRIPTION',\n                    value: this.taskDetails.description,\n                    key: 'description',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DESCRIPTION_DEFAULT'),\n                    multiline: true,\n                    editable: true,\n                    validators: [new TaskDescriptionValidator()]\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME',\n                    value: this.formName,\n                    key: 'formName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT'),\n                    clickable: this.isFormClickable(),\n                    icon: 'create'\n                }\n            )\n        ];\n    }\n\n    /**\n     * Refresh the card data\n     */\n    initData() {\n        if (this.taskDetails) {\n            const parentInfoMap = this.getParentInfo();\n            const defaultProperties = this.initDefaultProperties(parentInfoMap);\n            const filteredProperties: string[] = this.appConfig.get('adf-task-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    /**\n     * Refresh the card data\n     */\n    refreshData() {\n        this.properties = this.properties.map((cardItem) => {\n            if (cardItem.key === 'formName' && cardItem.value !== this.formName) {\n                return new CardViewTextItemModel({\n                    label: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME',\n                    value: this.formName,\n                    key: 'formName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT'),\n                    clickable: this.isFormClickable(),\n                    icon: 'create'\n                });\n            } else {\n                return cardItem;\n            }\n        });\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    /**\n     * Loads current bpm userId\n     */\n    private loadCurrentBpmUserId(): void {\n        this.bpmUserService.getCurrentUserInfo().subscribe((res) => {\n            this.currentUserId = res ? +res.id : null;\n        });\n    }\n\n    /**\n     * Return the process parent information\n     */\n    getParentInfo(): Map<string, string> {\n        if (this.taskDetails.processInstanceId && this.taskDetails.processDefinitionName) {\n            return new Map([[this.taskDetails.processInstanceId, this.taskDetails.processDefinitionName]]);\n        }\n        return new Map();\n    }\n\n    /**\n     * Does the task have an assignee\n     */\n    public hasAssignee(): boolean {\n        return !!this.taskDetails.assignee;\n    }\n\n    /**\n     * Returns true if the task is assigned to logged in user\n     */\n    public isAssignedTo(userId: number): boolean {\n        return this.hasAssignee() ? this.taskDetails.assignee.id === userId : false;\n    }\n\n    /**\n     * Return true if the task assigned\n     */\n    public isAssignedToCurrentUser(): boolean {\n        return this.hasAssignee() && this.isAssignedTo(this.currentUserId);\n    }\n\n    /**\n     * Return true if the user is a candidate member\n     */\n    isCandidateMember(): boolean {\n        return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;\n    }\n\n    /**\n     * Return true if the task claimable\n     */\n    public isTaskClaimable(): boolean {\n        return !this.hasAssignee() && this.isCandidateMember();\n    }\n\n    /**\n     * Return true if the task claimed by candidate member.\n     */\n    public isTaskClaimedByCandidateMember(): boolean {\n        return this.isCandidateMember() && this.isAssignedToCurrentUser() && !this.isCompleted();\n    }\n\n    /**\n     * Returns task's status\n     */\n    getTaskStatus(): string {\n        return (this.taskDetails && this.taskDetails.isCompleted()) ? 'Completed' : 'Running';\n    }\n\n    onClaimTask(taskId: string) {\n        this.claim.emit(taskId);\n    }\n\n    onUnclaimTask(taskId: string) {\n        this.unclaim.emit(taskId);\n    }\n\n    /**\n     * Returns true if the task is completed\n     */\n    isCompleted(): boolean {\n        return this.taskDetails && !!this.taskDetails.endDate;\n    }\n\n    isFormClickable(): boolean {\n        return !!this.formName && !this.isCompleted();\n    }\n\n    getTaskDuration(): string {\n        return this.taskDetails.duration ? `${this.taskDetails.duration} ms` : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    PeopleProcessService, UserProcessModel,\n    CardViewUpdateService,\n    ClickNotification,\n    LogService,\n    UpdateNotification,\n    CommentsComponent,\n    ContentLinkModel, FormFieldValidator, FormModel, FormOutcomeEvent\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    OnDestroy\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable, Observer, of, Subject } from 'rxjs';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { catchError, share, takeUntil } from 'rxjs/operators';\nimport { TaskFormComponent } from './task-form/task-form.component';\n\n@Component({\n    selector: 'adf-task-details',\n    templateUrl: './task-details.component.html',\n    styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit, OnChanges, OnDestroy {\n\n    @ViewChild('activitiComments')\n    activitiComments: CommentsComponent;\n\n    @ViewChild('activitiChecklist')\n    activitiChecklist: any;\n\n    @ViewChild('errorDialog')\n    errorDialog: TemplateRef<any>;\n\n    @ViewChild('activitiTaskForm')\n    taskFormComponent: TaskFormComponent;\n\n    /** Toggles debug mode. */\n    @Input()\n    debugMode: boolean = false;\n\n    /** (**required**) The id of the task whose details we are asking for. */\n    @Input()\n    taskId: string;\n\n    /** Automatically renders the next task when the current one is completed. */\n    @Input()\n    showNextTask: boolean = true;\n\n    /** Toggles task details Header component. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles collapsed/expanded state of the Header component. */\n    @Input()\n    showHeaderContent: boolean = true;\n\n    /** Toggles `Involve People` feature for the Header component. */\n    @Input()\n    showInvolvePeople: boolean = true;\n\n    /** Toggles `Comments` feature for the Header component. */\n    @Input()\n    showComments: boolean = true;\n\n    /** Toggles `Checklist` feature for the Header component. */\n    @Input()\n    showChecklist: boolean = true;\n\n    /** Toggles rendering of the form title. */\n    @Input()\n    showFormTitle: boolean = false;\n\n    /** Toggles rendering of the `Complete` outcome button. */\n    @Input()\n    showFormCompleteButton: boolean = true;\n\n    /** Toggles rendering of the `Save` outcome button. */\n    @Input()\n    showFormSaveButton: boolean = true;\n\n    /** Toggles read-only state of the form. All form widgets render as read-only\n     * if enabled.\n     */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Toggles rendering of the `Refresh` button. */\n    @Input()\n    showFormRefreshButton: boolean = true;\n\n    /** Field validators for use with the form. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form field content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when a checklist task is created. */\n    @Output()\n    taskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    taskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /** Emitted when a task is assigned. */\n    @Output()\n    assignTask: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when a task is claimed. */\n    @Output()\n    claimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when a task is unclaimed. */\n    @Output()\n    unClaimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    taskDetails: TaskDetailsModel;\n    taskFormName: string = null;\n    taskPeople: UserProcessModel[] = [];\n    noTaskDetailsTemplateComponent: TemplateRef<any>;\n    showAssignee: boolean = false;\n    showAttachForm: boolean = false;\n    internalReadOnlyForm: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    public errorDialogRef: MatDialogRef<TemplateRef<any>>;\n    private onDestroy$ = new Subject<boolean>();\n\n    peopleSearch: Observable<UserProcessModel[]>;\n\n    data: any;\n\n    constructor(private taskListService: TaskListService,\n                private peopleProcessService: PeopleProcessService,\n                private logService: LogService,\n                private cardViewUpdateService: CardViewUpdateService,\n                private dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        this.peopleSearch = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer).pipe(share());\n\n        if (this.taskId) {\n            this.loadDetails(this.taskId);\n        }\n\n        this.cardViewUpdateService.itemUpdated$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(this.updateTaskDetails.bind(this));\n\n        this.cardViewUpdateService.itemClicked$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(this.clickTaskDetails.bind(this));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const taskId = changes.taskId;\n        this.showAssignee = false;\n\n        if (taskId && !taskId.currentValue) {\n            this.reset();\n        } else if (taskId && taskId.currentValue) {\n            this.loadDetails(taskId.currentValue);\n        }\n    }\n\n    isShowAttachForm(): boolean {\n        return this.showAttachForm;\n    }\n\n    /**\n     * Reset the task details\n     */\n    private reset() {\n        this.taskDetails = null;\n    }\n\n    isTaskActive() {\n        return this.taskDetails && this.taskDetails.duration === null;\n    }\n\n    /**\n     * Save a task detail and update it after a successful response\n     *\n     * @param updateNotification\n     */\n    private updateTaskDetails(updateNotification: UpdateNotification) {\n        this.taskListService\n            .updateTask(this.taskId, updateNotification.changed)\n            .pipe(catchError(() => {\n                this.cardViewUpdateService.updateElement(updateNotification.target);\n                return of(null);\n            }))\n            .subscribe(() => this.loadDetails(this.taskId));\n    }\n\n    private clickTaskDetails(clickNotification: ClickNotification) {\n        if (clickNotification.target.key === 'assignee') {\n            this.showAssignee = true;\n        }\n        if (clickNotification.target.key === 'formName') {\n            this.showAttachForm = true;\n        }\n    }\n\n    /**\n     * Load the activiti task details\n     * @param taskId\n     */\n    private loadDetails(taskId: string) {\n        this.taskPeople = [];\n\n        if (taskId) {\n            this.taskListService.getTaskDetails(taskId).subscribe(\n                (res: TaskDetailsModel) => {\n                    this.showAttachForm = false;\n                    this.taskDetails = res;\n\n                    if (this.taskDetails.name === 'null') {\n                        this.taskDetails.name = 'No name';\n                    }\n\n                    const endDate: any = res.endDate;\n                    if (endDate && !isNaN(endDate.getTime())) {\n                        this.internalReadOnlyForm = true;\n                    } else {\n                        this.internalReadOnlyForm = this.readOnlyForm;\n                    }\n\n                    if (this.taskDetails && this.taskDetails.involvedPeople) {\n                        this.taskDetails.involvedPeople.forEach((user) => {\n                            this.taskPeople.push(new UserProcessModel(user));\n                        });\n                    }\n                });\n        }\n    }\n\n    isAssigned(): boolean {\n        return !!this.taskDetails.assignee;\n    }\n\n    /**\n     * Retrieve the next open task\n     * @param processInstanceId\n     * @param processDefinitionId\n     */\n    private loadNextTask(processInstanceId: string, processDefinitionId: string): void {\n        const requestNode = new TaskQueryRequestRepresentationModel(\n            {\n                processInstanceId: processInstanceId,\n                processDefinitionId: processDefinitionId\n            }\n        );\n        this.taskListService.getTasks(requestNode).subscribe(\n            (response) => {\n                if (response && response.length > 0) {\n                    this.taskDetails = new TaskDetailsModel(response[0]);\n                } else {\n                    this.reset();\n                }\n            }, (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    /**\n     * Complete button clicked\n     */\n    onComplete(): void {\n        this.onFormCompleted(null);\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm = true;\n    }\n\n    onCancelAttachForm() {\n        this.showAttachForm = false;\n    }\n\n    onCompleteAttachForm() {\n        this.taskFormName = null;\n        this.showAttachForm = false;\n        this.taskFormComponent.loadTask(this.taskId);\n        this.loadDetails(this.taskId);\n    }\n\n    onFormContentClick(content: ContentLinkModel): void {\n        this.formContentClicked.emit(content);\n    }\n\n    onFormSaved(form: FormModel): void {\n        this.formSaved.emit(form);\n    }\n\n    onFormCompleted(form: FormModel): void {\n        this.formCompleted.emit(form);\n        if (this.showNextTask && (this.taskDetails.processInstanceId || this.taskDetails.processDefinitionId)) {\n            this.loadNextTask(this.taskDetails.processInstanceId, this.taskDetails.processDefinitionId);\n        }\n    }\n\n    onFormLoaded(form: FormModel): void {\n        this.taskFormName = (form && form.name ? form.name : null);\n        this.formLoaded.emit(form);\n    }\n\n    onChecklistTaskCreated(task: TaskDetailsModel): void {\n        this.taskCreated.emit(task);\n    }\n\n    onChecklistTaskDeleted(taskId: string): void {\n        this.taskDeleted.emit(taskId);\n    }\n\n    onFormError(error: any): void {\n        this.errorDialogRef = this.dialog.open(this.errorDialog, { width: '500px' });\n        this.error.emit(error);\n    }\n\n    onFormExecuteOutcome(event: FormOutcomeEvent): void {\n        this.executeOutcome.emit(event);\n    }\n\n    closeErrorDialog(): void {\n        this.dialog.closeAll();\n    }\n\n    onClaimAction(taskId: string): void {\n        this.claimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    onUnclaimAction(taskId: string): void {\n        this.unClaimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(null, searchedWord)\n            .subscribe(\n                users => {\n                    users = users.filter((user) => user.id !== this.taskDetails.assignee.id);\n                    this.peopleSearchObserver.next(users);\n                },\n                () => this.logService.error('Could not load users')\n            );\n    }\n\n    onCloseSearch() {\n        this.showAssignee = false;\n    }\n\n    assignTaskToUser(selectedUser: UserProcessModel) {\n        this.taskListService\n            .assignTask(this.taskDetails.id, selectedUser)\n            .subscribe(() => {\n                this.logService.info('Task Assigned to ' + selectedUser.email);\n                this.assignTask.emit();\n            });\n        this.showAssignee = false;\n    }\n\n    getTaskHeaderViewClass(): string {\n        if (this.showAssignee) {\n            return 'assign-edit-view';\n        } else {\n            return 'default-view';\n        }\n    }\n\n    isReadOnlyComment(): boolean {\n        return (this.taskDetails && this.taskDetails.isCompleted()) && (this.taskPeople && this.taskPeople.length === 0);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { TaskDetailsComponent } from './task-details.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: 'adf-no-task-details-template, no-task-details-template'\n})\nexport class NoTaskDetailsTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private activitiTaskDetails: TaskDetailsComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.activitiTaskDetails.noTaskDetailsTemplateComponent = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, forkJoin, from, throwError } from 'rxjs';\nimport { FilterRepresentationModel } from '../models/filter.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserFiltersApi } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskFilterService {\n\n    private _userFiltersApi;\n    get userFiltersApi(): UserFiltersApi {\n        this._userFiltersApi = this._userFiltersApi ?? new UserFiltersApi(this.apiService.getInstance());\n        return this._userFiltersApi;\n    }\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates and returns the default filters for a process app.\n     * @param appId ID of the target app\n     * @returns Array of default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterRepresentationModel[]> {\n        const myTasksFilter = this.getMyTasksFilterInstance(appId, 0);\n        const myTaskObservable = this.addFilter(myTasksFilter);\n\n        const involvedTasksFilter = this.getInvolvedTasksFilterInstance(appId, 1);\n        const involvedObservable = this.addFilter(involvedTasksFilter);\n\n        const queuedTasksFilter = this.getQueuedTasksFilterInstance(appId, 2);\n        const queuedObservable = this.addFilter(queuedTasksFilter);\n\n        const completedTasksFilter = this.getCompletedTasksFilterInstance(appId, 3);\n        const completeObservable = this.addFilter(completedTasksFilter);\n\n        return new Observable((observer) => {\n            forkJoin([\n                    myTaskObservable,\n                    involvedObservable,\n                    queuedObservable,\n                    completeObservable\n                ]\n            ).subscribe(\n                (res) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === involvedTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: involvedTasksFilter.filter,\n                                appId\n                            }));\n                        } else if (filter.name === myTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: myTasksFilter.filter,\n                                appId\n                            }));\n                        } else if (filter.name === queuedTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: queuedTasksFilter.filter,\n                                appId\n                            }));\n                        } else if (filter.name === completedTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: completedTasksFilter.filter,\n                                appId\n                            }));\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.logService.error(err);\n                });\n        });\n    }\n\n    /**\n     * Gets all task filters for a process app.\n     * @param appId Optional ID for a specific app\n     * @returns Array of task filter details\n     */\n    getTaskListFilters(appId?: number): Observable<FilterRepresentationModel[]> {\n        return from(this.callApiTaskFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    response.data.forEach((filter: FilterRepresentationModel) => {\n                        const filterModel = new FilterRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterById(filterId: number, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.id === filterId)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a task filter by name.\n     * @param taskName Name of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterByName(taskName: string, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.name === taskName)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Adds a new task filter\n     * @param filter The new filter to add\n     * @returns Details of task filter just added\n     */\n    addFilter(filter: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        return from(this.userFiltersApi.createUserTaskFilter(filter))\n            .pipe(\n                map((response: FilterRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserTaskFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of task filters\n     */\n    callApiTaskFilters(appId?: number): Promise<any> {\n        if (appId) {\n            return this.userFiltersApi.getUserTaskFilters({ appId: appId });\n        } else {\n            return this.userFiltersApi.getUserTaskFilters();\n        }\n    }\n\n    /**\n     * Creates and returns a filter for \"My Tasks\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getMyTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'My Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-inbox',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'assignee' },\n            index\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Involved\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getInvolvedTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Involved Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-align-left',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'involved' },\n            index\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Queued Tasks\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getQueuedTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Queued Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-record',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'candidate' },\n            index\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Completed\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getCompletedTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Completed Tasks',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-ok-sign',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'completed', 'assignment': 'involved' },\n            index\n        });\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FilterParamsModel, FilterRepresentationModel } from '../models/filter.model';\nimport { TaskFilterService } from './../services/task-filter.service';\nimport { TaskListService } from './../services/tasklist.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-task-filters',\n    templateUrl: './task-filters.component.html',\n    styleUrls: ['./task-filters.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskFiltersComponent implements OnInit, OnChanges {\n\n    /** Parameters to use for the task filter. If there is no match then\n     * the default filter (the first one the list) is selected.\n     */\n    @Input()\n    filterParam: FilterParamsModel;\n\n    /** Emitted when a filter is being clicked from the UI. */\n    @Output()\n    filterClicked: EventEmitter<FilterRepresentationModel> = new EventEmitter<FilterRepresentationModel>();\n\n    /** Emitted when a filter is being selected based on the filterParam input. */\n    @Output()\n    filterSelected: EventEmitter<FilterRepresentationModel> = new EventEmitter<FilterRepresentationModel>();\n\n    /** Emitted when the list is loaded. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs during loading. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggles display of the filter's icon. */\n    @Input()\n    showIcon: boolean;\n\n    filter$: Observable<FilterRepresentationModel>;\n\n    currentFilter: FilterRepresentationModel;\n\n    filters: FilterRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    constructor(private taskFilterService: TaskFilterService,\n                private taskListService: TaskListService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        const appId = changes['appId'];\n        const filter = changes['filterParam'];\n        if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (appId && appId.currentValue !== appId.previousValue) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectFilterAndEmit(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the task list filtered by appId or by appName\n     * @param appId\n     * @param appName\n     */\n    getFilters(appId?: number, appName?: string) {\n        appName ? this.getFiltersByAppName(appName) : this.getFiltersByAppId(appId);\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.taskFilterService.getTaskListFilters(appId).subscribe(\n            (res: FilterRepresentationModel[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.createFiltersByAppId(appId);\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Create default filters by appId\n     * @param appId\n     */\n    createFiltersByAppId(appId?: number) {\n        this.taskFilterService.createDefaultFilters(appId).subscribe(\n            (resDefault: FilterRepresentationModel[]) => {\n                this.resetFilter();\n                this.filters = resDefault;\n                this.selectFilter(this.filterParam);\n                this.success.emit(resDefault);\n            },\n            (errDefault: any) => {\n                this.error.emit(errDefault);\n            }\n        );\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param newFilter\n     */\n    public selectFilter(newFilter: FilterParamsModel) {\n        if (newFilter) {\n            this.currentFilter = this.filters.find( (filter, index) =>\n                newFilter.index === index ||\n                newFilter.id === filter.id ||\n                (newFilter.name &&\n                    (newFilter.name.toLocaleLowerCase() === filter.name.toLocaleLowerCase())\n                ));\n        }\n    }\n\n    public selectFilterAndEmit(newFilter: FilterParamsModel) {\n        this.selectFilter(newFilter);\n        this.filterSelected.emit(this.currentFilter);\n    }\n\n    /**\n     * Selects and emits the clicked filter.\n     */\n    onFilterClick(filter: FilterParamsModel) {\n        this.selectFilter(filter);\n        this.filterClicked.emit(this.currentFilter);\n    }\n\n    /**\n     * Select filter with task\n     * @param taskId\n     */\n    public selectFilterWithTask(taskId: string) {\n        const filteredFilterList: FilterRepresentationModel[] = [];\n        this.taskListService.getFilterForTaskById(taskId, this.filters).subscribe(\n            (filter: FilterRepresentationModel) => {\n                filteredFilterList.push(filter);\n            },\n            (err) => {\n                this.error.emit(err);\n            },\n            () => {\n                if (filteredFilterList.length > 0) {\n                    this.selectFilter(filteredFilterList[0]);\n                    this.filterSelected.emit(this.currentFilter);\n                }\n            });\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     * @param filteredFilterList\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): FilterRepresentationModel {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport {\n  FormModel,\n  ContentLinkModel,\n  FormFieldValidator,\n  FormOutcomeEvent,\n  AuthenticationService,\n  TranslationService,\n  FormFieldModel\n} from '@alfresco/adf-core';\nimport { TaskDetailsModel } from '../../models/task-details.model';\nimport { TaskListService } from '../../services/tasklist.service';\nimport { UserRepresentation, LightGroupRepresentation, LightUserRepresentation } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'adf-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskFormComponent implements OnInit {\n\n  /** (**required**) The id of the task whose details we are asking for. */\n  @Input()\n  taskId: string;\n\n  /** Toggles rendering of the form title. */\n  @Input()\n  showFormTitle: boolean = false;\n\n  /** Toggles rendering of the `Complete` outcome button. */\n  @Input()\n  showFormCompleteButton: boolean = true;\n\n  /** Toggles rendering of the `Save` outcome button. */\n  @Input()\n  showFormSaveButton: boolean = true;\n\n  /** Toggle rendering of the `Cancel` button. */\n  @Input()\n  showCancelButton: boolean = true;\n\n  /** Toggles read-only state of the form. All form widgets render as read-only\n   * if enabled.\n   */\n  @Input()\n  readOnlyForm: boolean = false;\n\n  /** Toggles rendering of the `Refresh` button. */\n  @Input()\n  showFormRefreshButton: boolean = true;\n\n  /** Toggle rendering of the validation icon next to the form title. */\n  @Input()\n  showFormValidationIcon: boolean = true;\n\n  /** Field validators for use with the form. */\n  @Input()\n  fieldValidators: FormFieldValidator[] = [];\n\n  /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n  @Output()\n  formSaved = new EventEmitter<FormModel>();\n\n  /** Emitted when the form is submitted with the `Complete` outcome. */\n  @Output()\n  formCompleted = new EventEmitter<FormModel>();\n\n  /** Emitted when the form field content is clicked. */\n  @Output()\n  formContentClicked = new EventEmitter<ContentLinkModel>();\n\n  /** Emitted when the form is loaded or reloaded. */\n  @Output()\n  formLoaded = new EventEmitter<FormModel>();\n\n  /** Emitted when the form associated with the form task is attached. */\n  @Output()\n  showAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emitted when any outcome is executed. Default behaviour can be prevented\n   * via `event.preventDefault()`.\n   */\n  @Output()\n  executeOutcome = new EventEmitter<FormOutcomeEvent>();\n\n  /** Emitted when the form associated with the task is completed. */\n  @Output()\n  completed = new EventEmitter<void>();\n\n  /** Emitted when the supplied form values have a validation error. */\n  @Output()\n  formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n  /** Emitted when an error occurs. */\n  @Output()\n  error = new EventEmitter<any>();\n\n  /** Emitted when the \"Cancel\" button is clicked. */\n  @Output()\n  cancel = new EventEmitter<void>();\n\n  /** Emitted when the task is claimed. */\n  @Output()\n  taskClaimed = new EventEmitter<string>();\n\n  /** Emitted when the task is unclaimed (ie, requeued).. */\n  @Output()\n  taskUnclaimed = new EventEmitter<string>();\n\n  taskDetails: TaskDetailsModel;\n  currentLoggedUser: UserRepresentation;\n  loading: boolean = false;\n  completedTaskMessage: string;\n  internalReadOnlyForm: boolean = false;\n\n  constructor(\n    private taskListService: TaskListService,\n    private authService: AuthenticationService,\n    private translationService: TranslationService\n  ) {\n  }\n\n  ngOnInit() {\n    this.authService.getBpmLoggedUser().subscribe(user => {\n      this.currentLoggedUser = user;\n    });\n    this.loadTask(this.taskId);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const taskId = changes['taskId'];\n    if (taskId && taskId.currentValue) {\n        this.loadTask(this.taskId);\n        return;\n    }\n  }\n\n  loadTask(taskId: string) {\n    this.loading = true;\n    if (taskId) {\n      this.taskListService.getTaskDetails(taskId).subscribe(\n        (res: TaskDetailsModel) => {\n            this.taskDetails = res;\n\n            if (!this.taskDetails.name) {\n                this.taskDetails.name = 'No name';\n            }\n\n            const endDate: any = res.endDate;\n            if (endDate && !isNaN(endDate.getTime())) {\n              this.internalReadOnlyForm = true;\n            } else {\n                this.internalReadOnlyForm = this.readOnlyForm;\n            }\n            this.loading = false;\n        });\n    }\n  }\n\n  onFormSaved(savedForm: FormModel) {\n    this.formSaved.emit(savedForm);\n  }\n\n  onFormCompleted(form: FormModel) {\n      this.formCompleted.emit(form);\n  }\n\n  onFormLoaded(form: FormModel): void {\n    this.formLoaded.emit(form);\n  }\n\n  onFormContentClick(content: ContentLinkModel): void {\n      this.formContentClicked.emit(content);\n  }\n\n  onFormExecuteOutcome(outcome: FormOutcomeEvent) {\n    this.executeOutcome.emit(outcome);\n  }\n\n  onFormError(error: any) {\n    this.formError.emit(error);\n  }\n\n  onError(error: any) {\n    this.error.emit(error);\n  }\n\n  onCompleteTask() {\n    this.taskListService.completeTask(this.taskDetails.id).subscribe(\n      () => this.completed.emit(),\n      (error) => this.error.emit(error));\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  onShowAttachForm() {\n    this.showAttachForm.emit();\n  }\n\n  hasFormKey(): boolean {\n    return (this.taskDetails && (!!this.taskDetails.formKey));\n  }\n\n  isStandaloneTask(): boolean {\n    return !(this.taskDetails && (!!this.taskDetails.processDefinitionId));\n  }\n\n  isTaskLoaded(): boolean {\n      return !!this.taskDetails;\n  }\n\n  isCompletedTask(): boolean {\n      return this.taskDetails && this.taskDetails.endDate !== undefined && this.taskDetails.endDate !== null;\n  }\n\n  isCompleteButtonVisible(): boolean {\n      return !this.hasFormKey() && this.isTaskActive() && this.isCompleteButtonEnabled();\n  }\n\n  isTaskActive() {\n    return this.taskDetails && this.taskDetails.duration === null;\n  }\n\n  isAssigned(): boolean {\n    return !!this.taskDetails.assignee;\n  }\n\n  private hasEmailAddress(): boolean {\n        return this.taskDetails.assignee.email ? true : false;\n  }\n\n  isAssignedToMe(): boolean {\n      return this.isAssigned() && this.hasEmailAddress() ?\n          this.isEmailEqual() :\n          this.isExternalIdEqual();\n  }\n\n  private isEmailEqual(): boolean {\n    return (this.taskDetails.assignee && this.currentLoggedUser) && ( this.taskDetails.assignee.email.toLocaleLowerCase() === this.currentLoggedUser.email.toLocaleLowerCase());\n  }\n\n  private isExternalIdEqual(): boolean {\n    return (this.taskDetails.assignee && this.currentLoggedUser) && (this.taskDetails.assignee.externalId === this.currentLoggedUser.externalId);\n  }\n\n  isCompleteButtonEnabled(): boolean {\n    return this.isAssignedToMe() || this.canInitiatorComplete();\n  }\n\n  canInitiatorComplete(): boolean {\n      return this.taskDetails.initiatorCanCompleteTask;\n  }\n\n  isReadOnlyForm(): boolean {\n    let readOnlyForm: boolean;\n    if (this.isCandidateMember()) {\n      readOnlyForm = this.internalReadOnlyForm || !this.isAssignedToMe();\n    } else {\n      readOnlyForm = this.internalReadOnlyForm || !(this.isAssignedToMe() || this.canCurrentUserAsInitiatorComplete() || this.isCurrentUserInvolved());\n    }\n\n    return readOnlyForm;\n  }\n\n  isCurrentUserInvolved(): boolean {\n    let isInvolved = false;\n    if (this.taskDetails.involvedPeople && this.currentLoggedUser) {\n      const userInvolved = this.taskDetails.involvedPeople.find(\n        (involvedUser: LightUserRepresentation) =>\n          involvedUser.email.toLocaleLowerCase() === this.currentLoggedUser.email.toLocaleLowerCase() ||\n          involvedUser.id + '' === this.currentLoggedUser.externalId\n        );\n      isInvolved = !!userInvolved;\n    }\n\n    if (this.taskDetails.involvedGroups?.length && this.currentLoggedUser.groups?.length && !isInvolved) {\n        const userGroup = this.taskDetails.involvedGroups.find(\n            (involvedGroup: LightGroupRepresentation) =>\n                this.currentLoggedUser.groups.find(\n                    group => group.name === involvedGroup.name.toLocaleLowerCase() || group.id === involvedGroup.id\n                )\n        );\n        isInvolved = !!userGroup;\n    }\n    return isInvolved;\n  }\n\n  canCurrentUserAsInitiatorComplete(): boolean {\n    return this.canInitiatorComplete() && this.isProcessInitiator();\n  }\n\n  isProcessInitiator(): boolean {\n    return this.currentLoggedUser && ( this.currentLoggedUser.id === +this.taskDetails.processInstanceStartUserId);\n  }\n\n  isSaveButtonVisible(): boolean {\n    return this.showFormSaveButton && (!this.canInitiatorComplete() || this.isAssignedToMe() || this.isCurrentUserInvolved());\n  }\n\n  canCompleteNoFormTask(): boolean {\n    return this.isReadOnlyForm();\n  }\n\n  getCompletedTaskTranslatedMessage(): Observable<string> {\n    return this.translationService.get('ADF_TASK_FORM.COMPLETED_TASK.TITLE', { taskName: this.taskDetails.name });\n  }\n\n  isCandidateMember(): boolean {\n      return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;\n  }\n\n  isTaskClaimable(): boolean {\n      return this.isCandidateMember() && !this.isAssigned();\n  }\n\n  isTaskClaimedByCandidateMember(): boolean {\n    return this.isCandidateMember() && this.isAssignedToMe() && !this.isCompletedTask();\n  }\n\n  reloadTask() {\n    this.loadTask(this.taskId);\n  }\n\n  onClaimTask(taskId: string) {\n    this.taskClaimed.emit(taskId);\n  }\n\n  onClaimTaskError(error: any) {\n    this.error.emit(error);\n  }\n\n  onUnclaimTask(taskId: string) {\n    this.taskUnclaimed.emit(taskId);\n  }\n\n  onUnclaimTaskError(error: any) {\n    this.error.emit(error);\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Directive,\n    Input,\n    Output,\n    EventEmitter,\n    HostListener\n} from '@angular/core';\nimport { TaskListService } from '../../services/tasklist.service';\nimport { LogService } from '@alfresco/adf-core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n    selector: '[adf-claim-task]'\n})\nexport class ClaimTaskDirective {\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task cannot be claimed. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    invalidParams: string[] = [];\n\n    constructor(\n        private taskListService: TaskListService,\n        private logService: LogService) {}\n\n    ngOnInit() {\n        this.validateInputs();\n    }\n\n    validateInputs() {\n        if (!this.isTaskValid()) {\n            this.invalidParams.push('taskId');\n        }\n\n        if (this.invalidParams.length) {\n            throw new Error(\n                `Attribute ${this.invalidParams.join(', ')} is required`\n            );\n        }\n    }\n\n    isTaskValid(): boolean {\n        return this.taskId && this.taskId.length > 0;\n    }\n\n    @HostListener('click')\n    async onClick() {\n        try {\n            await this.claimTask();\n        } catch (error) {\n            this.error.emit(error);\n        }\n    }\n\n    private async claimTask() {\n        await this.taskListService.claimTask(this.taskId).subscribe(\n            () => {\n                this.logService.info('Task claimed');\n                this.success.emit(this.taskId);\n            },\n            error => this.error.emit(error)\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Directive,\n    HostListener,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\nimport { TaskListService } from '../../services/tasklist.service';\nimport { LogService } from '@alfresco/adf-core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[adf-unclaim-task]'\n})\nexport class UnclaimTaskDirective {\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when the task is released. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task cannot be released. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    invalidParams: string[] = [];\n\n    constructor(\n        private taskListService: TaskListService,\n        private logService: LogService) {}\n\n    ngOnInit() {\n        this.validateInputs();\n    }\n\n    validateInputs() {\n        if (!this.isTaskValid()) {\n            this.invalidParams.push('taskId');\n        }\n        if (this.invalidParams.length) {\n            throw new Error(\n                `Attribute ${this.invalidParams.join(', ')} is required`\n            );\n        }\n    }\n\n    isTaskValid(): boolean {\n        return this.taskId && this.taskId.length > 0;\n    }\n\n    @HostListener('click')\n    async onClick() {\n        try {\n            await this.unclaimTask();\n        } catch (error) {\n            this.error.emit(error);\n        }\n    }\n\n    private async unclaimTask() {\n        await this.taskListService.unclaimTask(this.taskId).subscribe(\n            () => {\n                this.logService.info('Task unclaimed');\n                this.success.emit(this.taskId);\n            },\n            error => this.error.emit(error)\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { TaskListService } from './../services/tasklist.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: 'button[adf-task-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class TaskAuditDirective implements OnChanges {\n\n    /** (**required**) The id of the task. */\n    @Input('task-id')\n    taskId: string;\n\n    /** Name of the downloaded file (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format of the audit information. Can be \"pdf\" or \"json\". */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit when the decorated element is clicked. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    public audit: any;\n\n    constructor(private contentService: ContentService,\n                private taskListService: TaskListService) {\n    }\n\n    ngOnChanges(): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType(): boolean {\n        return this.format && (this.isJsonFormat() || this.isPdfFormat());\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.taskListService.fetchTaskAuditPdfById(this.taskId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.taskListService.fetchTaskAuditJsonById(this.taskId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    LogService, UserPreferencesService, UserPreferenceValues, UserProcessModel, FormFieldModel, FormModel,\n    MOMENT_DATE_FORMATS, MomentDateAdapter\n} from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { switchMap, defaultIfEmpty, takeUntil } from 'rxjs/operators';\nimport { FormBuilder, AbstractControl, Validators, FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'adf-start-task',\n    templateUrl: './start-task.component.html',\n    styleUrls: ['./start-task.component.scss'],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartTaskComponent implements OnInit, OnDestroy {\n\n    public FORMAT_DATE: string = 'DD/MM/YYYY';\n    MAX_LENGTH: number = 255;\n\n    /** (required) The id of the app. */\n    @Input()\n    appId: number;\n\n    /** Default Task Name. */\n    @Input()\n    name: string = '';\n\n    /** Emitted when the task is successfully created. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the cancel button is clicked by the user. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    taskDetailsModel: TaskDetailsModel = new TaskDetailsModel();\n    forms$: Observable<Form[]>;\n    assigneeId: number;\n    field: FormFieldModel;\n    taskForm: FormGroup;\n    dateError: boolean = false;\n    maxTaskNameLength: number = this.MAX_LENGTH;\n    loading = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     * @param taskService\n     */\n    constructor(private taskService: TaskListService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService,\n                private formBuilder: FormBuilder,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (this.name) {\n            this.taskDetailsModel.name = this.name;\n        }\n\n        this.validateMaxTaskNameLength();\n\n        this.field = new FormFieldModel(new FormModel(), { id: this.assigneeId, value: this.assigneeId, placeholder: 'Assignee' });\n\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n\n        this.loadFormsTask();\n        this.buildForm();\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    buildForm(): void {\n        this.taskForm = this.formBuilder.group({\n            name: new FormControl(this.taskDetailsModel.name, [Validators.required, Validators.maxLength(this.maxTaskNameLength), this.whitespaceValidator]),\n            description: new FormControl('', [this.whitespaceValidator]),\n            formKey: new FormControl('')\n        });\n\n        this.taskForm.valueChanges\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(taskFormValues => this.setTaskDetails(taskFormValues));\n    }\n\n    whitespaceValidator(control: FormControl): any {\n        if (control.value) {\n            const isWhitespace = (control.value || '').trim().length === 0;\n            const isValid =  control.value.length === 0 || !isWhitespace;\n            return isValid ? null : { 'whitespace': true };\n        }\n        return null;\n    }\n\n    setTaskDetails(form: any) {\n        this.taskDetailsModel.name = form.name;\n        this.taskDetailsModel.description = form.description;\n        this.taskDetailsModel.formKey = form.formKey ? form.formKey.toString() : null;\n    }\n\n    isFormValid(): boolean {\n        return this.taskForm.valid && !this.dateError && !this.loading;\n    }\n\n    saveTask(): void {\n        this.loading = true;\n        if (this.appId) {\n            this.taskDetailsModel.category = this.appId.toString();\n        }\n        this.taskService.createNewTask(this.taskDetailsModel)\n            .pipe(\n                switchMap((createRes: any) =>\n                    this.attachForm(createRes.id, this.taskDetailsModel.formKey).pipe(\n                        defaultIfEmpty(createRes),\n                        switchMap((attachRes: any) =>\n                            this.assignTaskByUserId(createRes.id, this.assigneeId).pipe(\n                                defaultIfEmpty(attachRes ? attachRes : createRes)\n                            )\n                        )\n                    )\n                )\n            )\n            .subscribe(\n                (res: any) => {\n                    this.loading = false;\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.loading = false;\n                    this.error.emit(err);\n                    this.logService.error('An error occurred while creating new task');\n                });\n    }\n\n    getAssigneeId(userId: number): void {\n        this.assigneeId = userId;\n    }\n\n    private attachForm(taskId: string, formKey: string): Observable<any> {\n        let response = of();\n        if (taskId && formKey) {\n            response = this.taskService.attachFormToATask(taskId, parseInt(formKey, 10));\n        }\n        return response;\n    }\n\n    private assignTaskByUserId(taskId: string, userId: any): Observable<any> {\n        let response = of();\n        if (taskId && userId) {\n            response = this.taskService.assignTaskByUserId(taskId, userId);\n        }\n        return response;\n    }\n\n    onCancel(): void {\n        this.cancel.emit();\n    }\n\n    private loadFormsTask(): void {\n        this.forms$ = this.taskService.getFormList();\n    }\n\n    isUserNameEmpty(user: UserProcessModel): boolean {\n        return !user || (this.isEmpty(user.firstName) && this.isEmpty(user.lastName));\n    }\n\n    private isEmpty(data: string): boolean {\n        return data === undefined || data === null || data.trim().length === 0;\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    onDateChanged(newDateValue: any) {\n        this.dateError = false;\n\n        if (newDateValue) {\n            let momentDate: moment.Moment;\n\n            if (typeof newDateValue === 'string') {\n                momentDate = moment(newDateValue, this.FORMAT_DATE, true);\n            } else {\n                momentDate = newDateValue;\n            }\n\n            if (momentDate.isValid()) {\n                this.taskDetailsModel.dueDate = momentDate.toDate();\n            } else {\n                this.dateError = true;\n                this.taskDetailsModel.dueDate = null;\n            }\n        } else {\n            this.taskDetailsModel.dueDate = null;\n        }\n    }\n\n    private validateMaxTaskNameLength() {\n        if (this.maxTaskNameLength > this.MAX_LENGTH) {\n            this.maxTaskNameLength = this.MAX_LENGTH;\n            this.logService.log(`the task name length cannot be greater than ${this.MAX_LENGTH}`);\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.taskForm.get('name');\n    }\n\n    get descriptionController(): AbstractControl {\n        return this.taskForm.get('description');\n    }\n\n    get formKeyController(): AbstractControl {\n        return this.taskForm.get('formKey');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-task-standalone',\n    templateUrl: './task-standalone.component.html',\n    styleUrls: ['./task-standalone.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class TaskStandaloneComponent {\n\n    /** Name of the task. */\n    @Input()\n    taskName;\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** If true then Task completed message is shown and `Complete` and `Cancel` buttons are hidden. */\n    @Input()\n    isCompleted: boolean = false;\n\n    /** Toggles rendering of the `Complete` button. */\n    @Input()\n    hasCompletePermission: boolean = true;\n\n    // TODO: rename all with show prefix\n    /** Toggles rendering of the `Cancel` button. */\n    @Input()\n    hideCancelButton: boolean = true;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the task is completed. */\n    @Output()\n    complete: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the form task is attached. */\n    @Output()\n    showAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() { }\n\n    onCancelButtonClick(): void {\n        this.cancel.emit();\n    }\n\n    onCompleteButtonClick(): void {\n        this.complete.emit();\n    }\n\n    hasCompleteButton(): boolean {\n        return this.hasCompletePermission && !this.isCompleted;\n    }\n\n    hasCancelButton(): boolean {\n        return !this.hideCancelButton && !this.isCompleted;\n    }\n\n    hasAttachFormButton(): boolean {\n        return !this.isCompleted;\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm.emit();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Form } from '../models/form.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'adf-attach-form',\n    templateUrl: './attach-form.component.html',\n    styleUrls: ['./attach-form.component.scss']\n})\n\nexport class AttachFormComponent implements OnInit, OnChanges {\n    constructor(private taskService: TaskListService,\n                private logService: LogService,\n                private formService: FormService) { }\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** Identifier of the form to attach. */\n    @Input()\n    formKey;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancelAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form is attached successfully. */\n    @Output()\n    success: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    forms: Form[];\n\n    formId: number;\n    disableSubmit: boolean = true;\n    selectedFormId: number;\n\n    attachFormControl: FormControl;\n\n    ngOnInit() {\n        this.attachFormControl = new FormControl('', Validators.required);\n        this.attachFormControl.valueChanges.subscribe( (currentValue) => {\n            if (this.attachFormControl.valid) {\n                this.disableSubmit = this.formId === currentValue;\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.formId = undefined;\n        this.disableSubmit = true;\n        this.loadFormsTask();\n        if (this.formKey) {\n            this.onFormAttached();\n        }\n    }\n\n    onCancelButtonClick(): void {\n        this.selectedFormId = this.formId;\n        this.cancelAttachForm.emit();\n    }\n\n    onRemoveButtonClick(): void {\n        this.taskService.deleteForm(this.taskId).subscribe(\n            () => {\n                this.formId = this.selectedFormId = null;\n                this.success.emit();\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to delete the form');\n            });\n    }\n\n    onAttachFormButtonClick(): void {\n        this.attachForm(this.taskId, this.selectedFormId);\n    }\n\n    private loadFormsTask(): void {\n        this.taskService.getFormList().subscribe((form: Form[]) => {\n                this.forms = form;\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to get the forms');\n            });\n    }\n\n    private onFormAttached() {\n        this.formService.getTaskForm(this.taskId)\n            .subscribe((res) => {\n                this.formService.getFormDefinitionByName(res.name).subscribe((formDef) => {\n                    this.formId = this.selectedFormId = formDef;\n                });\n            }, (err) => {\n                this.error.emit(err);\n                this.logService.error('Could not load forms');\n            });\n    }\n\n    private attachForm(taskId: string, formId: number) {\n        if (taskId && formId) {\n            this.taskService.attachFormToATask(taskId, formId)\n                .subscribe(() => {\n                    this.success.emit();\n                }, (err) => {\n                    this.error.emit(err);\n                    this.logService.error('Could not attach form');\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, DiscoveryApiService, UploadService } from '@alfresco/adf-core';\nimport { ActivitiContentApi } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessUploadService extends UploadService {\n\n    private _contentApi;\n    get contentApi(): ActivitiContentApi {\n        this._contentApi = this._contentApi ?? new ActivitiContentApi(this.apiService.getInstance());\n        return this._contentApi;\n    }\n\n    constructor(protected apiService: AlfrescoApiService, appConfigService: AppConfigService, discoveryApiService: DiscoveryApiService) {\n        super(apiService, appConfigService, discoveryApiService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const processInstanceId = file.options.parentId;\n        const promise = this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, DiscoveryApiService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { ActivitiContentApi } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskUploadService extends UploadService {\n\n    private _contentApi;\n    get contentApi(): ActivitiContentApi {\n        this._contentApi = this._contentApi ?? new ActivitiContentApi(this.apiService.getInstance());\n        return this._contentApi;\n    }\n\n    constructor(protected apiService: AlfrescoApiService, appConfigService: AppConfigService, discoveryApiService: DiscoveryApiService) {\n        super(apiService, appConfigService, discoveryApiService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const taskId = file.options.parentId;\n        const promise = this.contentApi.createRelatedContentOnTask(taskId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the StartTaskModel.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\n\nexport class StartTaskModel {\n\n    name: string;\n    description: string;\n    assignee: UserProcessModel;\n    dueDate: any;\n    formKey: any;\n    category: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.assignee = obj && obj.assignee ? new UserProcessModel(obj.assignee) : null;\n        this.dueDate = obj && obj.dueDate || null;\n        this.formKey = obj && obj.formKey || null;\n        this.category = obj && obj.category || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskDetailsEvent {\n\n    private _value: TaskDetailsModel;\n    private _defaultPrevented: boolean = false;\n\n    get value(): TaskDetailsModel {\n        return this._value;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(value: TaskDetailsModel) {\n        this._value = value;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the User Event.\n */\nexport interface UserEventModel {\n    type: string;\n    value: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user group.*\n */\n\nexport interface UserGroupModel {\n    id?: number;\n    name?: string;\n    externalId?: string;\n    status?: string;\n    groups?: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatOptionModule, MatRippleModule } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { floatLabel: 'never' } }\n    ],\n    imports: [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule\n    ],\n    exports: [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule\n    ]\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel, CommentProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Observable, Observer, Subject } from 'rxjs';\nimport { share, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-comments',\n    templateUrl: './process-comments.component.html',\n    styleUrls: ['./process-comments.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-process-instance-comments' }\n})\nexport class ProcessCommentsComponent implements OnChanges, OnDestroy {\n\n    /** (**required**) The numeric ID of the process instance to display comments for. */\n    @Input()\n    processInstanceId: string;\n\n    /** Should the comments be read-only? */\n    @Input()\n    readOnly: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService) {\n        this.comment$ = new Observable<CommentModel>(observer =>  this.commentObserver = observer).pipe(share());\n        this.comment$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(comment => this.comments.push(comment));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId) {\n            if (processInstanceId.currentValue) {\n                this.getProcessInstanceComments(processInstanceId.currentValue);\n            } else {\n                this.resetComments();\n            }\n        }\n    }\n\n    private getProcessInstanceComments(processInstanceId: string): void {\n        this.resetComments();\n        if (processInstanceId) {\n            this.commentProcessService.getProcessInstanceComments(processInstanceId).subscribe(\n                (res: CommentModel[]) => {\n                    res = res.sort((comment1: CommentModel, comment2: CommentModel) => {\n                        const date1 = new Date(comment1.created);\n                        const date2 = new Date(comment2.created);\n                        return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                    });\n                    res.forEach((comment) => {\n                        this.commentObserver.next(comment);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            this.beingAdded = true;\n            this.commentProcessService.addProcessInstanceComment(this.processInstanceId, this.message)\n                .subscribe(\n                    (res: CommentModel) => {\n                        this.comments.unshift(res);\n                        this.message = '';\n                        this.beingAdded = false;\n\n                    },\n                    (err) => {\n                        this.error.emit(err);\n                        this.beingAdded = false;\n                    }\n                );\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    onError(error: any) {\n        this.error.emit(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { ProcessCommentsComponent } from './process-comments.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule\n    ],\n    declarations: [\n        ProcessCommentsComponent\n    ],\n    exports: [\n        ProcessCommentsComponent\n    ]\n})\nexport class ProcessCommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService, UserProcessModel, PeopleProcessService } from '@alfresco/adf-core';\nimport { Component, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\nimport { PeopleSearchComponent } from '../people-search/people-search.component';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people',\n    templateUrl: './people.component.html',\n    styleUrls: ['./people.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleComponent {\n\n    /** The array of User objects to display. */\n    @Input()\n    people: UserProcessModel[] = [];\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string = '';\n\n    /** Should the data be read-only? */\n    @Input()\n    readOnly: boolean = false;\n\n    @ViewChild('peopleSearch')\n    peopleSearch: PeopleSearchComponent;\n\n    showAssignment: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    peopleSearch$: Observable<UserProcessModel[]>;\n\n    constructor(private logService: LogService, public peopleProcessService: PeopleProcessService) {\n        this.peopleSearch$ = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer)\n            .pipe(\n                share()\n            );\n    }\n\n    involveUserAndCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUserAndClose();\n        }\n    }\n\n    involveUserWithoutCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUser();\n        }\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(this.taskId, searchedWord)\n            .subscribe((users) => {\n                this.peopleSearchObserver.next(users);\n            }, (error) => this.logService.error(error));\n    }\n\n    involveUser(user: UserProcessModel) {\n        if (user && user.id) {\n            this.peopleProcessService\n                .involveUserWithTask(this.taskId, user.id.toString())\n                .subscribe(\n                    () => this.people = [...this.people, user],\n                    () => this.logService.error('Impossible to involve user with task')\n                );\n        }\n    }\n\n    removeInvolvedUser(user: UserProcessModel) {\n        this.peopleProcessService\n            .removeInvolvedUser(this.taskId, user.id.toString())\n            .subscribe(\n                () => {\n                    this.people = this.people.filter(involvedUser => involvedUser.id !== user.id);\n                },\n                () => this.logService.error('Impossible to remove involved user from task'));\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    getInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n\n    onAddAssignment() {\n        this.showAssignment = true;\n    }\n\n    onClickAction(event: UserEventModel) {\n        if (event && event.value && event.type === 'remove') {\n            this.removeInvolvedUser(event.value);\n        }\n    }\n\n    hasPeople(): boolean {\n        return this.people && this.people.length > 0;\n    }\n\n    isEditMode(): boolean {\n        return !this.readOnly;\n    }\n\n    onCloseSearch() {\n        this.showAssignment = false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataTableComponent, DataCellEvent, DataColumnListComponent, UserProcessModel, ShowHeaderMode } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\n\n@Component({\n    selector: 'adf-people-list',\n    templateUrl: './people-list.component.html',\n    styleUrls: ['./people-list.component.scss']\n})\n\nexport class PeopleListComponent implements AfterContentInit {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    @ViewChild('dataTable', { static: true })\n    peopleDataTable: DataTableComponent;\n\n    /** The array of user data used to populate the people list. */\n    @Input()\n    users: UserProcessModel[];\n\n    /** Toggles whether or not actions should be visible, i.e. the 'Three-Dots' menu. */\n    @Input()\n    actions: boolean = false;\n\n    /** Emitted when the user clicks a row in the people list. */\n    @Output()\n    clickRow = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the user clicks in the 'Three Dots' drop down menu for a row. */\n    @Output()\n    clickAction = new EventEmitter<UserEventModel>();\n\n    user: UserProcessModel;\n    showHeader = ShowHeaderMode.Never;\n\n    ngAfterContentInit() {\n        this.peopleDataTable.columnList = this.columnList;\n    }\n\n    selectUser(event: any) {\n        this.user = event.value.obj;\n        this.clickRow.emit(this.user);\n    }\n\n    hasActions(): boolean {\n        return this.actions;\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n\n        const removeAction = {\n            title: 'Remove',\n            name: 'remove'\n        };\n\n        event.value.actions = [\n            removeAction\n        ];\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        this.clickAction.emit({type: action.name, value: args.row.obj});\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { Component, EventEmitter, OnInit, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people-search',\n    templateUrl: './people-search.component.html',\n    styleUrls: ['./people-search.component.scss'],\n    host: {\n        'class': 'adf-people-search'\n    },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchComponent implements OnInit {\n\n    /** Parameters for displaying the list. */\n    @Input()\n    results: Observable<UserProcessModel[]>;\n\n    /** Emitted when a search is performed with a new keyword. */\n    @Output()\n    searchPeople = new EventEmitter<any>();\n\n    /** Emitted when a user is selected and the action button is clicked. */\n    @Output()\n    success = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the \"close\" button is clicked. */\n    @Output()\n    closeSearch = new EventEmitter();\n\n    filteredResults$: Observable<UserProcessModel[]>;\n    selectedUser: UserProcessModel = {};\n    performSearch: PerformSearchCallback;\n\n    constructor() {}\n\n    ngOnInit() {\n        this.filteredResults$ = this.results\n            .pipe(\n                map((users) => {\n                    return users.filter((user) => user.id !== this.selectedUser.id);\n                })\n            );\n        this.performSearch = this.performSearchCallback.bind(this);\n    }\n\n    private performSearchCallback(event: any): Observable<UserProcessModel[]> {\n        this.searchPeople.emit(event);\n        return this.filteredResults$;\n    }\n\n    onRowClick(user: UserProcessModel) {\n        this.selectedUser = user;\n    }\n\n    closeSearchList() {\n        this.closeSearch.emit();\n    }\n\n    involveUserAndClose() {\n        this.involveUser();\n        this.closeSearchList();\n    }\n\n    involveUser() {\n        if (this.selectedUser === undefined) {\n            return;\n        }\n        this.success.emit(this.selectedUser);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n    firstName = (firstName !== null ? firstName : '');\n    lastName = (lastName !== null ? lastName : '');\n    return firstName + delimiter + lastName;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel, TranslationService, PeopleProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { getDisplayUser } from '../../helpers/get-display-user';\n\n@Component({\n    selector: 'adf-people-search-field',\n    templateUrl: './people-search-field.component.html',\n    styleUrls: ['./people-search-field.component.scss'],\n    host: { 'class': 'adf-people-search-field' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchFieldComponent {\n\n    @Input()\n    performSearch: PerformSearchCallback;\n\n    @Input()\n    placeholder: string;\n\n    @Output()\n    rowClick = new EventEmitter<UserProcessModel>();\n\n    users$: Observable<UserProcessModel[]>;\n    searchUser: FormControl = new FormControl();\n\n    defaultPlaceholder = 'ADF_TASK_LIST.PEOPLE.SEARCH_USER';\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                private translationService: TranslationService) {\n        this.users$ = this.searchUser.valueChanges\n            .pipe(\n                debounceTime(200),\n                switchMap((searchWord: string) => {\n                    if (searchWord && searchWord.trim()) {\n                        return this.performSearch(searchWord);\n                    } else {\n                        return of([]);\n                    }\n                })\n            );\n\n        this.defaultPlaceholder = this.translationService.instant(this.defaultPlaceholder);\n    }\n\n    reset() {\n        this.searchUser.reset();\n    }\n\n    get searchPlaceholder(): string {\n        return this.placeholder || this.defaultPlaceholder;\n    }\n\n    onRowClick(model: UserProcessModel) {\n        this.rowClick.emit(model);\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        return getDisplayUser(firstName, lastName, delimiter);\n    }\n\n    getInitialUserName(firstName: string, lastName: string): string {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewChild, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { PeopleProcessService, UserProcessModel, LogService, TranslationService } from '@alfresco/adf-core';\nimport { PeopleSearchFieldComponent } from '../people-search-field/people-search-field.component';\nimport { getDisplayUser } from '../../helpers/get-display-user';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst DEFAULT_ASSIGNEE_PLACEHOLDER = 'ADF_TASK_LIST.PEOPLE.ASSIGNEE';\n\n@Component({\n    selector: 'adf-people-selector',\n    templateUrl: './people-selector.component.html',\n    styleUrls: ['./people-selector.component.scss'],\n    host: { 'class': 'adf-people-selector' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSelectorComponent {\n\n    @Input()\n    peopleId: UserProcessModel;\n\n    // Poorly documented Angular magic for [(peopleId)]\n    @Output()\n    peopleIdChange: EventEmitter<number>;\n\n    @ViewChild('peopleSearchField', { static: true })\n    searchFieldComponent: PeopleSearchFieldComponent;\n\n    performSearch: PerformSearchCallback;\n    selectedUser: UserProcessModel;\n    defaultPlaceholder: string;\n\n    constructor(\n        private peopleProcessService: PeopleProcessService,\n        private logService: LogService,\n        private translationService: TranslationService) {\n\n        this.peopleIdChange = new EventEmitter();\n        this.performSearch = this.searchUser.bind(this);\n        this.defaultPlaceholder = this.translationService.instant(DEFAULT_ASSIGNEE_PLACEHOLDER);\n    }\n\n    searchUser(searchWord: string): Observable<{} | UserProcessModel[]> {\n        return this.peopleProcessService.getWorkflowUsers(undefined, searchWord)\n            .pipe(\n                catchError(this.onSearchUserError.bind(this))\n            );\n    }\n\n    private onSearchUserError(): Observable<UserProcessModel[]> {\n        this.logService.error('getWorkflowUsers threw error');\n        return of([]);\n    }\n\n    userSelected(user: UserProcessModel): void {\n        this.updateUserSelection(user);\n    }\n\n    userDeselected(): void {\n        this.updateUserSelection(undefined);\n    }\n\n    private updateUserSelection(user: UserProcessModel): void {\n        this.selectedUser = user;\n        this.peopleIdChange.emit(user && user.id || undefined);\n        this.searchFieldComponent.reset();\n    }\n\n    get placeholder() {\n        if (!this.selectedUser) {\n            return this.defaultPlaceholder;\n        }\n\n        return getDisplayUser(this.selectedUser.firstName, this.selectedUser.lastName, ' ');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n// tslint:disable-next-line: directive-selector\n@Directive({ selector: 'adf-people-search-action-label, people-search-action-label' })\nexport class PeopleSearchActionLabelDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n// tslint:disable-next-line: directive-selector\n@Directive({ selector: '[adf-people-search-title]' })\nexport class PeopleSearchTitleDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { PeopleComponent } from './components/people/people.component';\nimport { PeopleListComponent } from './components/people-list/people-list.component';\nimport { PeopleSearchComponent } from './components/people-search/people-search.component';\nimport { PeopleSearchFieldComponent } from './components/people-search-field/people-search-field.component';\nimport { PeopleSelectorComponent } from './components/people-selector/people-selector.component';\n\nimport { PeopleSearchActionLabelDirective } from './directives/people-search-action-label.directive';\nimport { PeopleSearchTitleDirective } from './directives/people-search-title.directive';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule\n    ],\n    declarations: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ],\n    exports: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ]\n})\nexport class PeopleModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ExternalAlfrescoApiService, AlfrescoApiService, LoginDialogPanelComponent, SearchService, TranslationService, AuthenticationService, SitesService } from '@alfresco/adf-core';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { DocumentListService } from '@alfresco/adf-content-services';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-attach-file-widget-dialog',\n    templateUrl: './attach-file-widget-dialog.component.html',\n    styleUrls: ['./attach-file-widget-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        AuthenticationService,\n        DocumentListService,\n        SitesService,\n        SearchService,\n        { provide: AlfrescoApiService, useClass: ExternalAlfrescoApiService } ]\n})\nexport class AttachFileWidgetDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    title: string;\n    action: string;\n    buttonActionName: string;\n    chosenNode: Node[];\n\n    constructor(private translation: TranslationService,\n                @Inject(MAT_DIALOG_DATA) public data: AttachFileWidgetDialogComponentData,\n                private externalApiService: AlfrescoApiService,\n                private authenticationService: AuthenticationService,\n                private matDialogRef: MatDialogRef<AttachFileWidgetDialogComponent>) {\n        (<any> externalApiService).init(data.ecmHost, data.context);\n        this.action = data.actionName ? data.actionName.toUpperCase() : 'CHOOSE';\n        this.buttonActionName = `ATTACH-FILE.ACTIONS.${this.action}`;\n        this.updateTitle('DROPDOWN.MY_FILES_OPTION');\n        this.updateExternalHost();\n    }\n\n    updateExternalHost() {\n        this.authenticationService.onLogin.subscribe(() => this.registerAndClose());\n        if (this.externalApiService.getInstance().isLoggedIn()) {\n            this.registerAndClose();\n        }\n    }\n\n    private registerAndClose() {\n        this.data.registerExternalHost(this.data.accountIdentifier, this.externalApiService);\n        if (this.data.loginOnly) {\n            this.data.selected.complete();\n            this.matDialogRef.close();\n        }\n    }\n\n    isLoggedIn() {\n        return this.externalApiService.getInstance().isLoggedIn();\n    }\n\n    performLogin() {\n        this.loginPanel.submitForm();\n    }\n\n    close() {\n        this.data.selected.complete();\n    }\n\n    onSelect(nodeList: Node[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onSiteChange(siteTitle: string) {\n        this.updateTitle(siteTitle);\n    }\n\n    onClick() {\n        this.data.selected.next(this.chosenNode);\n        this.data.selected.complete();\n    }\n\n    updateTitle(siteTitle: string) {\n        if (this.action === 'CHOOSE' && siteTitle) {\n            this.title = this.getTitleTranslation(this.action, siteTitle);\n        }\n    }\n\n    getTitleTranslation(action: string, name?: string): string {\n        return this.translation.instant(`ATTACH-FILE.ACTIONS.${action}_ITEM`, { name: this.translation.instant(name) });\n    }\n\n    hasNodeSelected(): boolean {\n        return this.chosenNode?.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { AlfrescoApiService, TranslationService } from '@alfresco/adf-core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { AlfrescoEndpointRepresentation, Node, ContentApi } from '@alfresco/js-api';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\n// tslint:disable-next-line: directive-class-suffix\nexport class AttachFileWidgetDialogService {\n    private externalApis: { [key: string]: AlfrescoApiService } = {};\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param repository Alfresco endpoint that represents the content service\n     * @param currentFolderId Upload file from specific folder\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(repository: AlfrescoEndpointRepresentation, currentFolderId = '-my-', accountIdentifier?: string): Observable<Node[]> {\n        const { title, ecmHost, selected, registerExternalHost } = this.constructPayload(repository);\n        const data: AttachFileWidgetDialogComponentData = {\n            title,\n            selected,\n            ecmHost,\n            currentFolderId,\n            isSelectionValid: (entry: Node) => entry.isFile,\n            showFilesInResult: true,\n            registerExternalHost,\n            accountIdentifier\n        };\n\n        this.openLoginDialog(data, 'adf-attach-file-widget-dialog', '630px');\n        return selected;\n    }\n\n    private openLoginDialog(data: AttachFileWidgetDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AttachFileWidgetDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    private showExternalHostLoginDialog(repository: AlfrescoEndpointRepresentation): Observable<AlfrescoApiService> {\n        const data = {\n            ...this.constructPayload(repository),\n            loginOnly: true\n        };\n        return this.dialog.open(AttachFileWidgetDialogComponent, { data, panelClass: 'adf-attach-file-widget-dialog', width: '630px' })\n            .afterClosed();\n    }\n\n    downloadURL(repository: AlfrescoEndpointRepresentation, sourceId: string): Observable<string> {\n        const { accountIdentifier } = this.constructPayload(repository);\n\n        if (this.externalApis[accountIdentifier]?.getInstance()) {\n            const contentApi = new ContentApi(this.externalApis[accountIdentifier].getInstance());\n\n            if (this.externalApis[accountIdentifier].getInstance().isLoggedIn()) {\n                return of(contentApi.getContentUrl(sourceId));\n            }\n        }\n\n        return this.showExternalHostLoginDialog(repository).pipe(\n            switchMap(() => {\n                const contentApi = new ContentApi(this.externalApis[accountIdentifier].getInstance());\n                return of(contentApi.getContentUrl(sourceId));\n            })\n        );\n    }\n\n    private constructPayload(repository: AlfrescoEndpointRepresentation) {\n        const accountIdentifier = 'alfresco-' + repository.id + '-' + repository.name;\n        const ecmHost = repository.repositoryUrl.replace('/alfresco', '');\n        const selected = new Subject<Node[]>();\n        selected.subscribe({\n            complete: this.close.bind(this)\n        });\n        const title = this.getLoginTitleTranslation(ecmHost);\n        const registerExternalHost = this.addService.bind(this);\n        return { ecmHost, accountIdentifier, selected, title, registerExternalHost };\n    }\n\n    addService(accountIdentifier: string, apiService: AlfrescoApiService) {\n        if (!this.externalApis[accountIdentifier]) {\n            this.externalApis[accountIdentifier] = apiService;\n        }\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    private getLoginTitleTranslation(ecmHost: string): string {\n        return this.translation.instant(`ATTACH-FILE.DIALOG.LOGIN`, { ecmHost });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector */\n\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n    ActivitiContentService,\n    AppConfigService,\n    AppConfigValues,\n    ContentService,\n    DownloadService,\n    FormService,\n    LogService,\n    ProcessContentService,\n    ThumbnailService,\n    UploadWidgetComponent\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport {\n    AlfrescoEndpointRepresentation,\n    Node,\n    NodeChildAssociation,\n    RelatedContentRepresentation\n} from '@alfresco/js-api';\nimport { from, of, Subject, zip } from 'rxjs';\nimport { mergeMap, takeUntil } from 'rxjs/operators';\nimport { AttachFileWidgetDialogService } from './attach-file-widget-dialog.service';\n\n@Component({\n    selector: 'attach-widget',\n    templateUrl: './attach-file-widget.component.html',\n    styleUrls: ['./attach-file-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFileWidgetComponent extends UploadWidgetComponent implements OnInit, OnDestroy {\n\n    typeId = 'AttachFileWidgetComponent';\n    repositoryList: AlfrescoEndpointRepresentation[] = [];\n    private tempFilesList = [];\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public formService: FormService,\n                private logger: LogService,\n                public thumbnails: ThumbnailService,\n                public processContentService: ProcessContentService,\n                private activitiContentService: ActivitiContentService,\n                private contentService: ContentService,\n                private contentDialog: ContentNodeDialogService,\n                private appConfigService: AppConfigService,\n                private downloadService: DownloadService,\n                private attachDialogService: AttachFileWidgetDialogService) {\n        super(formService, logger, thumbnails, processContentService);\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        this.activitiContentService.getAlfrescoRepositories().subscribe((repoList) => {\n            this.repositoryList = repoList;\n        });\n\n        this.formService.taskSaved\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(formSaved => {\n                if (formSaved.form.id === this.field.form.id) {\n                    this.tempFilesList = [];\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    isFileSourceConfigured(): boolean {\n        return !!this.field.params && !!this.field.params.fileSource;\n    }\n\n    isMultipleSourceUpload(): boolean {\n        return !this.field.readOnly && this.isFileSourceConfigured() && !this.isOnlyLocalSourceSelected();\n    }\n\n    isAllFileSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'all-file-sources' &&\n            !this.field.params.link;\n    }\n\n    isOnlyLocalSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'local-file';\n    }\n\n    isSimpleUploadButton(): boolean {\n        return this.isUploadButtonVisible() &&\n            !this.isFileSourceConfigured() ||\n            this.isOnlyLocalSourceSelected();\n    }\n\n    isUploadButtonVisible(): boolean {\n        return (!this.hasFile || this.multipleOption) && !this.field.readOnly;\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params?.fileSource?.selectedFolder;\n    }\n\n    isTemporaryFile(file): boolean {\n        return this.tempFilesList.findIndex((elem) => elem.name === file.name) >= 0;\n    }\n\n    getNodeFromTempFile(file): NodeChildAssociation {\n        return this.tempFilesList.find((elem) => elem.name === file.name);\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        const repository = this.repositoryList.find((repo) => repo.name === params?.fileSource?.name);\n        if (repository && this.isExternalHost(repository)) {\n            this.uploadFileFromExternalCS(repository, params?.fileSource?.selectedFolder?.pathId);\n        } else {\n            this.contentDialog.openFileBrowseDialogByFolderId(params.fileSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections,\n                        this.field.params.fileSource.selectedFolder.accountId,\n                        this.field.params.fileSource.selectedFolder.siteId);\n                });\n        }\n    }\n\n    onAttachFileChanged(event: any) {\n        this.tempFilesList.push(...Array.from(event.target.files));\n        this.onFileChanged(event);\n    }\n\n    onRemoveAttachFile(file: File | RelatedContentRepresentation) {\n        if (this.isTemporaryFile(file)) {\n            this.tempFilesList.splice(this.tempFilesList.indexOf((<RelatedContentRepresentation> file).contentBlob), 1);\n        }\n        this.removeFile(file);\n    }\n\n    onAttachFileClicked(file: any) {\n        if (file.isExternal || !file.contentAvailable) {\n            this.logger.info(`The file ${file.name} comes from an external source and cannot be showed at this moment`);\n            return;\n        }\n        if (this.isTemporaryFile(file)) {\n            this.formService.formContentClicked.next(file);\n        } else {\n            this.fileClicked(file);\n        }\n    }\n\n    downloadContent(file: any | RelatedContentRepresentation): void {\n        if (this.isTemporaryFile(file)) {\n            const fileBlob = (<RelatedContentRepresentation> file).contentBlob;\n            if (fileBlob) {\n                this.downloadService.downloadBlob(fileBlob, file.name);\n            } else {\n                const nodeUploaded: NodeChildAssociation = this.getNodeFromTempFile(file);\n                const nodeUrl = this.contentService.getContentUrl(nodeUploaded.id);\n                this.downloadService.downloadUrl(nodeUrl, file.name);\n            }\n        }\n        if (file.sourceId) {\n            const sourceHost = this.findSource(file.source);\n            if (sourceHost && this.isExternalHost(sourceHost)) {\n                this.attachDialogService.downloadURL(sourceHost, file.sourceId).subscribe((nodeUrl) => {\n                    this.downloadService.downloadUrl(nodeUrl, file.name);\n                });\n            } else {\n                const nodeUrl = this.contentService.getContentUrl(file.sourceId);\n                this.downloadService.downloadUrl(nodeUrl, file.name);\n            }\n        } else {\n            this.processContentService.getFileRawContent((<any> file).id).subscribe(\n                (blob: Blob) => {\n                    this.downloadService.downloadBlob(blob, (<any> file).name);\n                },\n                () => {\n                    this.logger.error('Impossible retrieve content for download');\n                }\n            );\n        }\n    }\n\n    openSelectDialog(repository: AlfrescoEndpointRepresentation) {\n        if (this.isExternalHost(repository)) {\n            this.uploadFileFromExternalCS(repository);\n        } else {\n            this.contentDialog.openFileBrowseDialogByDefaultLocation().subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections, `alfresco-${repository.id}-${repository.name}`);\n                });\n        }\n    }\n\n    private isExternalHost(repository: AlfrescoEndpointRepresentation): boolean {\n        const currentECMHost = this.getDomainHost(this.appConfigService.get(AppConfigValues.ECMHOST));\n        const chosenRepositoryHost = this.getDomainHost(repository.repositoryUrl);\n        return chosenRepositoryHost !== currentECMHost;\n    }\n\n    private findSource(sourceIdentifier: string): AlfrescoEndpointRepresentation {\n        return this.repositoryList.find(repository => sourceIdentifier === `alfresco-${repository.id}-${repository.name}`);\n    }\n\n    private uploadFileFromExternalCS(repository: AlfrescoEndpointRepresentation, currentFolderId?: string) {\n        const accountIdentifier = `alfresco-${repository.id}-${repository.name}`;\n        this.attachDialogService.openLogin(repository, currentFolderId, accountIdentifier).subscribe(\n            (selections: any[]) => {\n                selections.forEach((node) => node.isExternal = true);\n                this.tempFilesList.push(...selections);\n                this.uploadFileFromCS(selections, accountIdentifier);\n            });\n    }\n\n    private uploadFileFromCS(fileNodeList: any[], accountId: string, siteId?: string) {\n        const filesSaved = [];\n\n        fileNodeList.forEach(node => {\n            node.isLink = this.field.params.link;\n        });\n\n        from(fileNodeList).pipe(\n            mergeMap((node) =>\n                zip(\n                    of(node?.content?.mimeType),\n                    this.activitiContentService.applyAlfrescoNode(node, siteId, accountId),\n                    of(node.isExternal)\n                )\n            )\n        )\n            .subscribe(([mimeType, res, isExternal]) => {\n                    res.mimeType = mimeType;\n                    res.isExternal = isExternal;\n                    filesSaved.push(res);\n                },\n                (error) => {\n                    this.logger.error(error);\n                },\n                () => {\n                    const previousFiles = this.field.value ? this.field.value : [];\n                    this.field.value = [...previousFiles, ...filesSaved];\n                    this.field.json.value = [...previousFiles, ...filesSaved];\n                    this.hasFile = true;\n                });\n    }\n\n    private getDomainHost(urlToCheck: string): string {\n        const result = urlToCheck.match('^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/?\\n]+)');\n        return result[1];\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector*/\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport {\n    WidgetComponent,\n    FormService,\n    NodesApiService\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'attach-folder-widget',\n    templateUrl: './attach-folder-widget.component.html',\n    styleUrls: ['./attach-folder-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFolderWidgetComponent extends WidgetComponent implements OnInit {\n\n    typeId = 'AttachFolderWidgetComponent';\n    hasFolder: boolean = false;\n    selectedFolderName: string = '';\n\n    constructor(private contentDialog: ContentNodeDialogService,\n                public formService: FormService,\n                private nodeService: NodesApiService) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value) {\n            this.hasFolder = true;\n            this.nodeService.getNode(this.field.value).subscribe((node: Node) => {\n                this.selectedFolderName = node.name;\n            });\n        }\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params &&\n            !!this.field.params.folderSource &&\n            !!this.field.params.folderSource.selectedFolder;\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        if (this.isDefinedSourceFolder()) {\n            this.contentDialog.openFolderBrowseDialogByFolderId(params.folderSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        } else {\n            this.contentDialog.openFolderBrowseDialogBySite().subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        }\n    }\n\n    removeFolder() {\n        this.field.value = null;\n        this.selectedFolderName = '';\n        this.hasFolder = false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentNodeSelectorModule } from '@alfresco/adf-content-services';\n\nimport { AttachFileWidgetComponent } from './attach-file-widget.component';\nimport { AttachFolderWidgetComponent } from './attach-folder-widget.component';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        ContentNodeSelectorModule,\n        MaterialModule\n    ],\n    declarations: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ],\n    exports: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ]\n})\nexport class ContentWidgetModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation, SimpleChanges, OnInit, OnDestroy, OnChanges } from '@angular/core';\nimport { EcmModelService, NodeService, WidgetVisibilityService,\n    FormService, FormBaseComponent, FormOutcomeModel,\n    FormEvent, FormErrorEvent, FormFieldModel,\n    FormModel, FormOutcomeEvent, FormValues, ContentLinkModel } from '@alfresco/adf-core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-form',\n    templateUrl: './form.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormComponent extends FormBaseComponent implements OnInit, OnDestroy, OnChanges {\n\n    /** Underlying form model instance. */\n    @Input()\n    form: FormModel;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Content Services node ID for the form metadata. */\n    @Input()\n    nodeId: string;\n\n    /** The id of the form definition to load and display with custom values. */\n    @Input()\n    formId: number;\n\n    /** Name of the form definition to load and display with custom values. */\n    @Input()\n    formName: string;\n\n    /** Toggle saving of form metadata. */\n    @Input()\n    saveMetadata: boolean = false;\n\n    /** Custom form values map to be used with the rendered form. */\n    @Input()\n    data: FormValues;\n\n    /** The form will set a prefixed space for invisible fields. */\n     @Input()\n    enableFixedSpacedForm: boolean = true;\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form values are refreshed due to a data property change. */\n    @Output()\n    formDataRefreshed: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    debugMode: boolean = false;\n\n    protected onDestroy$ = new Subject<boolean>();\n\n    constructor(protected formService: FormService,\n                protected visibilityService: WidgetVisibilityService,\n                protected ecmModelService: EcmModelService,\n                protected nodeService: NodeService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.formService.formContentClicked\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(content => this.formContentClicked.emit(content));\n\n        this.formService.validateForm\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(validateFormEvent => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getFormByTaskId(taskId.currentValue);\n            return;\n        }\n\n        const formId = changes['formId'];\n        if (formId && formId.currentValue) {\n            this.getFormDefinitionByFormId(formId.currentValue);\n            return;\n        }\n\n        const formName = changes['formName'];\n        if (formName && formName.currentValue) {\n            this.getFormDefinitionByFormName(formName.currentValue);\n            return;\n        }\n\n        const nodeId = changes['nodeId'];\n        if (nodeId && nodeId.currentValue) {\n            this.loadFormForEcmNode(nodeId.currentValue);\n            return;\n        }\n\n        const data = changes['data'];\n        if (data && data.currentValue) {\n            this.refreshFormData();\n            return;\n        }\n    }\n\n    /**\n     * Invoked when user clicks form refresh button.\n     */\n    onRefreshClicked() {\n        this.loadForm();\n    }\n\n    loadForm() {\n        if (this.taskId) {\n            this.getFormByTaskId(this.taskId);\n            return;\n        }\n\n        if (this.formId) {\n            this.getFormDefinitionByFormId(this.formId);\n            return;\n        }\n\n        if (this.formName) {\n            this.getFormDefinitionByFormName(this.formName);\n            return;\n        }\n    }\n\n    findProcessVariablesByTaskId(taskId: string): Observable<any> {\n        return this.formService.getTask(taskId).pipe(\n            switchMap((task: any) => {\n                if (this.isAProcessTask(task)) {\n                    return this.visibilityService.getTaskProcessVariable(taskId);\n                } else {\n                    return of({});\n                }\n            })\n        );\n    }\n\n    isAProcessTask(taskRepresentation) {\n        return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';\n    }\n\n    getFormByTaskId(taskId: string): Promise<FormModel> {\n        return new Promise<FormModel>(resolve => {\n            this.findProcessVariablesByTaskId(taskId).subscribe(() => {\n                this.formService\n                    .getTaskForm(taskId)\n                    .subscribe(\n                        (form) => {\n                            const parsedForm = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(parsedForm);\n                            parsedForm.validateForm();\n                            this.form = parsedForm;\n                            this.onFormLoaded(this.form);\n                            resolve(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                            resolve(null);\n                        }\n                    );\n            });\n        });\n    }\n\n    getFormDefinitionByFormId(formId: number) {\n        this.formService\n            .getFormDefinitionById(formId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.name;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.onFormLoaded(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    getFormDefinitionByFormName(formName: string) {\n        this.formService\n            .getFormDefinitionByName(formName)\n            .subscribe(\n                (id) => {\n                    this.formService.getFormDefinitionById(id).subscribe(\n                        (form) => {\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                        }\n                    );\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    saveTaskForm() {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .saveTaskForm(this.form.taskId, this.form.values)\n                .subscribe(\n                    () => {\n                        this.onTaskSaved(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskSavedError(this.form, error)\n                );\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .completeTaskForm(this.form.taskId, this.form.values, outcome)\n                .subscribe(\n                    () => {\n                        this.onTaskCompleted(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskCompletedError(this.form, error)\n                );\n        }\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    parseForm(formRepresentationJSON: any): FormModel {\n        if (formRepresentationJSON) {\n            const form = new FormModel(formRepresentationJSON, this.data, this.readOnly, this.formService, this.enableFixedSpacedForm);\n            if (!formRepresentationJSON.fields) {\n                form.outcomes = this.getFormDefinitionOutcomes(form);\n            }\n            if (this.fieldValidators && this.fieldValidators.length > 0) {\n                form.fieldValidators = this.fieldValidators;\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Get custom set of outcomes for a Form Definition.\n     * @param form Form definition model.\n     */\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[] {\n        return [\n            new FormOutcomeModel(form, { id: '$save', name: FormOutcomeModel.SAVE_ACTION, isSystem: true })\n        ];\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        if (field && field.form) {\n            this.visibilityService.refreshVisibility(field.form);\n        }\n    }\n\n    private refreshFormData() {\n        this.form = this.parseForm(this.form.json);\n        this.onFormLoaded(this.form);\n        this.onFormDataRefreshed(this.form);\n    }\n\n    private loadFormForEcmNode(nodeId: string): void {\n        this.nodeService.getNodeMetadata(nodeId).subscribe((data) => {\n                this.data = data.metadata;\n                this.loadFormFromActiviti(data.nodeType);\n            },\n            this.handleError);\n    }\n\n    loadFormFromActiviti(nodeType: string): any {\n        this.formService.searchFrom(nodeType).subscribe(\n            (form) => {\n                if (!form) {\n                    this.formService.createFormFromANode(nodeType).subscribe((formMetadata) => {\n                        this.loadFormFromFormId(formMetadata.id);\n                    });\n                } else {\n                    this.loadFormFromFormId(form.id);\n                }\n            },\n            (error) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private loadFormFromFormId(formId: number) {\n        this.formId = formId;\n        this.loadForm();\n    }\n\n    protected storeFormAsMetadata() {\n        if (this.saveMetadata) {\n            this.ecmModelService.createEcmTypeForActivitiForm(this.formName, this.form).subscribe((type) => {\n                    this.nodeService.createNodeMetadata(type.nodeType || type.entry.prefixedName, EcmModelService.MODEL_NAMESPACE, this.form.values, this.path, this.nameNode);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n        }\n    }\n\n    protected onFormLoaded(form: FormModel) {\n        this.formLoaded.emit(form);\n        this.formService.formLoaded.next(new FormEvent(form));\n    }\n\n    protected onFormDataRefreshed(form: FormModel) {\n        this.formDataRefreshed.emit(form);\n        this.formService.formDataRefreshed.next(new FormEvent(form));\n    }\n\n    protected onTaskSaved(form: FormModel) {\n        this.formSaved.emit(form);\n        this.formService.taskSaved.next(new FormEvent(form));\n    }\n\n    protected onTaskSavedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskSavedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onTaskCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n        this.formService.taskCompleted.next(new FormEvent(form));\n    }\n\n    protected onTaskCompletedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskCompletedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean {\n        const args = new FormOutcomeEvent(outcome);\n\n        this.formService.executeOutcome.next(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        this.executeOutcome.emit(args);\n        return !args.defaultPrevented;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ContentLinkModel, FormService, WidgetVisibilityService, FormOutcomeModel } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-start-form',\n    templateUrl: './start-form.component.html',\n    styleUrls: ['./start-form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartFormComponent extends FormComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** Definition ID of the process to start, this parameter can not be use in combination with processId */\n    @Input()\n    processDefinitionId: string;\n\n    /** Process ID of the process to start, this parameter can not be use in combination with processDefinitionId */\n    @Input()\n    processId: string;\n\n    /** Should form outcome buttons be shown? */\n    @Input()\n    showOutcomeButtons: boolean = true;\n\n    /** Should the refresh button be shown? */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Is the form read-only (ie, can't be edited)? */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Emitted when the user clicks one of the outcome buttons that completes the form. */\n    @Output()\n    outcomeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a field of the form is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    @ViewChild('outcomesContainer')\n    outcomesContainer: ElementRef = null;\n\n    constructor(formService: FormService, visibilityService: WidgetVisibilityService) {\n        super(formService, visibilityService, null, null);\n        this.showTitle = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processDefinitionId = changes['processDefinitionId'];\n        if (processDefinitionId && processDefinitionId.currentValue) {\n            this.processDefinitionId = processDefinitionId.currentValue;\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n            return;\n        }\n\n        const data = changes['data'];\n        if (data && data.currentValue) {\n            this.parseRefreshVisibilityValidateForm(this.form.json);\n            return;\n        }\n\n        const processId = changes['processId'];\n        if (processId && processId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(processId.currentValue);\n            return;\n        }\n    }\n\n    loadStartForm(processId: string) {\n        this.formService.getProcessInstance(processId)\n            .subscribe((instance: any) => {\n                this.formService\n                    .getStartFormInstance(processId)\n                    .subscribe(\n                        (form) => {\n                            this.formName = form.name;\n                            if (instance.variables) {\n                                form.processVariables = instance.variables;\n                            }\n                            this.parseRefreshVisibilityValidateForm(form);\n                        },\n                        (error) => this.handleError(error)\n                    );\n            });\n    }\n\n    getStartFormDefinition(processId: string) {\n        this.formService\n            .getStartFormDefinition(processId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.processDefinitionName;\n                    this.parseRefreshVisibilityValidateForm(form);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    parseRefreshVisibilityValidateForm(form) {\n        this.form = this.parseForm(form);\n        this.visibilityService.refreshVisibility(this.form);\n        this.form.validateForm();\n        this.form.readOnly = this.readOnlyForm;\n        this.onFormLoaded(this.form);\n    }\n\n    /** @override */\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.isSystem && (outcome.name === FormOutcomeModel.SAVE_ACTION ||\n            outcome.name === FormOutcomeModel.COMPLETE_ACTION)) {\n            return false;\n        } else if (outcome && outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n            return true;\n        }\n        return super.isOutcomeButtonVisible(outcome, isFormReadOnly);\n    }\n\n    /** @override */\n    saveTaskForm() {\n        // do nothing\n    }\n\n    /** @override */\n    onRefreshClicked() {\n        if (this.processDefinitionId) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n        } else if (this.processId) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(this.processId);\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        this.outcomeClick.emit(outcome);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-form-custom-outcomes',\n    template: '<ng-content></ng-content>'\n})\nexport class FormCustomOutcomesComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FormComponent } from './form.component';\nimport { StartFormComponent } from './start-form.component';\nimport { FormCustomOutcomesComponent } from './form-custom-outcomes.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    declarations: [\n        FormComponent,\n        StartFormComponent,\n        FormCustomOutcomesComponent\n    ],\n    exports: [\n        FormComponent,\n        StartFormComponent,\n        FormCustomOutcomesComponent\n    ]\n})\nexport class FormModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\n\nimport { ChecklistComponent } from './components/checklist.component';\nimport { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';\nimport { StartTaskComponent } from './components/start-task.component';\nimport { TaskAuditDirective } from './components/task-audit.directive';\nimport { TaskDetailsComponent } from './components/task-details.component';\nimport { TaskFormComponent } from './components/task-form/task-form.component';\nimport { TaskFiltersComponent } from './components/task-filters.component';\nimport { TaskHeaderComponent } from './components/task-header.component';\nimport { TaskListComponent } from './components/task-list.component';\nimport { TaskStandaloneComponent } from './components/task-standalone.component';\nimport { AttachFormComponent } from './components/attach-form.component';\nimport { FormModule } from '../form/form.module';\nimport { ClaimTaskDirective } from './components/task-form/claim-task.directive';\nimport { UnclaimTaskDirective } from './components/task-form/unclaim-task.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        FormModule,\n        ReactiveFormsModule,\n        CoreModule,\n        PeopleModule,\n        ProcessCommentsModule,\n        ContentWidgetModule\n    ],\n    declarations: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskFormComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent,\n        ClaimTaskDirective,\n        UnclaimTaskDirective\n    ],\n    exports: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskFormComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent,\n        ClaimTaskDirective,\n        UnclaimTaskDirective\n    ]\n})\nexport class TaskListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/task-list.component';\nexport * from './components/checklist.component';\nexport * from './components/task-header.component';\nexport * from './components/no-task-detail-template.directive';\nexport * from './components/task-filters.component';\nexport * from './components/task-form/task-form.component';\nexport * from './components/task-form/claim-task.directive';\nexport * from './components/task-form/unclaim-task.directive';\nexport * from './components/task-details.component';\nexport * from './components/task-audit.directive';\nexport * from './components/start-task.component';\nexport * from './components/task-standalone.component';\nexport * from './components/attach-form.component';\n\nexport * from './services/tasklist.service';\nexport * from './services/process-upload.service';\nexport * from './services/task-upload.service';\nexport * from './services/task-filter.service';\n\nexport * from './models/filter.model';\nexport * from './models/form.model';\nexport * from './models/start-task.model';\nexport * from './models/task-details.event';\nexport * from './models/task-details.model';\nexport * from './models/task-list.model';\nexport * from './models/user-event.model';\nexport * from './models/user-group.model';\n\nexport * from './task-list.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Observer, Subject } from 'rxjs';\nimport { TaskDetailsEvent, TaskDetailsModel } from '../../task-list';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { share, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-tasks',\n    templateUrl: './process-instance-tasks.component.html',\n    styleUrls: ['./process-instance-tasks.component.css']\n})\nexport class ProcessInstanceTasksComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** (**required**) The ID of the process instance to display tasks for. */\n    @Input()\n    processInstanceDetails: ProcessInstance;\n\n    /** Toggles whether to show a refresh button next to the list of tasks to allow\n     * it to be updated from the server.\n     */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    activeTasks: TaskDetailsModel[] = [];\n    completedTasks: TaskDetailsModel[] = [];\n\n    private taskObserver: Observer<TaskDetailsModel>;\n    private completedTaskObserver: Observer<TaskDetailsModel>;\n    private onDestroy$ = new Subject<boolean>();\n\n    task$: Observable<TaskDetailsModel>;\n    completedTask$: Observable<TaskDetailsModel>;\n    message: string;\n    processId: string;\n\n    @ViewChild('startDialog')\n    startDialog: any;\n\n    @ViewChild('taskDetails')\n    taskDetails: any;\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService,\n                private dialog: MatDialog) {\n        this.task$ = new Observable<TaskDetailsModel>((observer) => this.taskObserver = observer)\n            .pipe(share());\n        this.completedTask$ = new Observable<TaskDetailsModel>((observer) => this.completedTaskObserver = observer)\n            .pipe(share());\n    }\n\n    ngOnInit() {\n        this.task$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(task => this.activeTasks.push(task));\n\n        this.completedTask$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(task => this.completedTasks.push(task));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceDetails = changes['processInstanceDetails'];\n        if (processInstanceDetails && processInstanceDetails.currentValue) {\n            this.load(processInstanceDetails.currentValue.id);\n        }\n    }\n\n    load(processInstanceId: string) {\n        this.loadActive(processInstanceId);\n        this.loadCompleted(processInstanceId);\n    }\n\n    loadActive(processInstanceId: string) {\n        this.activeTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, null).subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.taskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.activeTasks = [];\n        }\n    }\n\n    loadCompleted(processInstanceId: string) {\n        this.completedTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, 'completed').subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.completedTaskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.completedTasks = [];\n        }\n    }\n\n    hasStartFormDefined(): boolean {\n        return this.processInstanceDetails && this.processInstanceDetails.startFormDefined === true;\n    }\n\n    getUserFullName(user: any): string {\n        if (user) {\n            return (user.firstName && user.firstName !== 'null'\n                    ? user.firstName + ' ' : '') +\n                user.lastName;\n        }\n        return 'Nobody';\n    }\n\n    getFormatDate(value: any, format: string): any {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceTask: error parsing date ${value} to format ${format}`);\n            return value;\n        }\n    }\n\n    clickTask(task: TaskDetailsModel) {\n        const args = new TaskDetailsEvent(task);\n        this.taskClick.emit(args);\n    }\n\n    clickStartTask() {\n        this.processId = this.processInstanceDetails.id;\n        this.showStartDialog();\n    }\n\n    showStartDialog() {\n        this.dialog.open(this.startDialog, { height: '500px', width: '700px' });\n    }\n\n    closeStartDialog() {\n        this.dialog.closeAll();\n    }\n\n    onRefreshClicked() {\n        this.load(this.processInstanceDetails.id);\n    }\n\n    onFormContentClick() {\n        this.closeStartDialog();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let processPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataTableSchema,\n    DataRowEvent,\n    DataTableAdapter,\n    CustomEmptyContentTemplateDirective,\n    CustomLoadingContentTemplateDirective,\n    DataRow,\n    DataColumn,\n    AppConfigService,\n    PaginatedComponent,\n    PaginationComponent,\n    PaginationModel,\n    UserPreferencesService,\n    DataCellEvent\n} from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { processPresetsDefaultModel } from '../models/process-preset.model';\nimport { ProcessService } from '../services/process.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { ProcessListModel } from '../models/process-list.model';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-list',\n    styleUrls: ['./process-list.component.css'],\n    templateUrl: './process-list.component.html'\n})\nexport class ProcessInstanceListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent {\n\n    static PRESET_KEY = 'adf-process-list.presets';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** The id of the process instance. */\n    @Input()\n    processInstanceId: number | string;\n\n    /** Defines the state of the processes. Possible values are `running`, `completed` and `all` */\n    @Input()\n    state: string;\n\n    /** Defines the sort ordering of the list. Possible values are `created-desc`, `created-asc`,\n     * `ended-desc`, `ended-asc`.\n     */\n    @Input()\n    sort: string;\n\n    /** The page number of the processes to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of processes to fetch in each page. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Data source to define the datatable. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    showContextMenu: boolean = false;\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /**\n     * Resolver function is used to show dynamic complex column objects\n     * see the docs to learn how to configure a resolverFn.\n     */\n    @Input()\n    resolverFn: (row: DataRow, col: DataColumn) => any = null;\n\n    /** Emitted when a row in the process list is clicked. */\n    @Output()\n    rowClick = new EventEmitter<string>();\n\n    /** Emitted when the list of process instances has been loaded successfully from the server. */\n    @Output()\n    success = new EventEmitter<ProcessListModel>();\n\n    /** Emitted when an error occurs while loading the list of process instances from the server. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    requestNode: ProcessFilterParamRepresentationModel;\n    currentInstanceId: string;\n    isLoading: boolean = true;\n    rows: any[] = [];\n    sorting: any[] = ['created', 'desc'];\n    pagination: BehaviorSubject<PaginationModel>;\n\n    constructor(private processService: ProcessService,\n                private userPreferences: UserPreferencesService,\n                appConfig: AppConfigService) {\n        super(appConfig, ProcessInstanceListComponent.PRESET_KEY, processPresetsDefaultModel);\n        this.size = this.userPreferences.paginationSize;\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId != null) {\n            this.reload();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n\n        const presetColumnChanges = changes['presetColumn'];\n        if (presetColumnChanges && !presetColumnChanges.firstChange) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = false;\n\n        const appId = changes['appId'];\n        const processDefinitionId = changes['processDefinitionId'];\n        const processInstanceId = changes['processInstanceId'];\n        const state = changes['state'];\n        const sort = changes['sort'];\n        const page = changes['page'];\n        const size = changes['size'];\n\n        if (appId && appId.currentValue) {\n            changed = true;\n        } else if (processDefinitionId) {\n            changed = true;\n        } else if (processInstanceId) {\n            changed = true;\n        } else if (state && state.currentValue) {\n            changed = true;\n        } else if (sort && sort.currentValue) {\n            changed = true;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n        return changed;\n    }\n\n    public reload() {\n        this.requestNode = this.createRequestNode();\n        this.load(this.requestNode);\n    }\n\n    private load(requestNode: ProcessFilterParamRepresentationModel) {\n        this.isLoading = true;\n        this.processService.getProcesses(requestNode)\n            .pipe(finalize(() => this.isLoading = false))\n            .subscribe(\n                response => {\n                    this.rows = response.data;\n                    this.selectFirst();\n                    this.success.emit(response);\n                    this.pagination.next({\n                        count: response.data.length,\n                        maxItems: this.size,\n                        skipCount: this.page * this.size,\n                        totalItems: response.total\n                    });\n                },\n                error => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    /**\n     * Select the first instance of a list if present\n     */\n    selectFirst() {\n        if (this.selectFirstRow) {\n            if (!this.isListEmpty()) {\n                const dataRow = this.rows[0];\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            } else {\n                this.currentInstanceId = null;\n            }\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when the row is clicked\n     * @param event\n     */\n    onRowClick(event: DataRowEvent) {\n        const item = event;\n\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when pressed the Enter key on the selected row\n     * @param event\n     */\n    onRowKeyUp(event: CustomEvent<any>) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        this.showRowContextMenu.emit(event);\n    }\n\n    private createRequestNode(): ProcessFilterParamRepresentationModel {\n        return new ProcessFilterParamRepresentationModel({\n            appDefinitionId: this.appId,\n            processDefinitionId: this.processDefinitionId,\n            processInstanceId: this.processInstanceId,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: 0\n        });\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { LocalizedDatePipe } from '@alfresco/adf-core';\nimport { ProcessInstance } from '../process-list';\n\n@Pipe({ name: 'processName' })\nexport class ProcessNamePipe implements PipeTransform {\n    static DATE_TIME_IDENTIFIER_REG_EXP = new RegExp('%{datetime}', 'i');\n    static PROCESS_DEFINITION_IDENTIFIER_REG_EXP = new RegExp('%{processdefinition}', 'i');\n\n    constructor(private localizedDatePipe: LocalizedDatePipe) {\n    }\n\n    transform(processNameFormat: string, processInstance?: ProcessInstance): string {\n        let processName = processNameFormat;\n        if (processName.match(ProcessNamePipe.DATE_TIME_IDENTIFIER_REG_EXP)) {\n            const presentDateTime = moment.now();\n            processName = processName.replace(\n                ProcessNamePipe.DATE_TIME_IDENTIFIER_REG_EXP,\n                this.localizedDatePipe.transform(presentDateTime, 'medium')\n            );\n        }\n\n        if (processName.match(ProcessNamePipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP)) {\n            const selectedProcessDefinitionName = processInstance ? processInstance.processDefinitionName : '';\n            processName = processName.replace(\n                ProcessNamePipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP,\n                selectedProcessDefinitionName\n            );\n        }\n        return processName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, OnChanges, OnInit,\n    Output, SimpleChanges, ViewChild, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport {\n    ActivitiContentService,\n    AppConfigService,\n    AppConfigValues,\n    AppsProcessService,\n    FormValues\n} from '@alfresco/adf-core';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessDefinitionRepresentation } from './../models/process-definition.model';\nimport { ProcessInstance } from './../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Observable, Subject, forkJoin } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatSelectChange } from '@angular/material/select';\nimport { StartFormComponent } from '../../form';\nimport { MinimalNode, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { AppDefinitionRepresentationModel } from '../../task-list';\nimport { ProcessNamePipe } from '../../pipes/process-name.pipe';\n\n@Component({\n    selector: 'adf-start-process',\n    templateUrl: './start-process.component.html',\n    styleUrls: ['./start-process.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartProcessInstanceComponent implements OnChanges, OnInit, OnDestroy {\n\n    MAX_LENGTH: number = 255;\n\n    /** (optional) Limit the list of processes that can be started to those\n     * contained in the specified app.\n     */\n    @Input()\n    appId: number;\n\n    /** (optional) Define the header of the component. */\n    @Input()\n    title: string;\n\n    /** (optional) Definition name of the process to start. */\n    @Input()\n    processDefinitionName: string;\n\n    /** Variables in the input to the process\n     * [RestVariable](https://github.com/Alfresco/alfresco-js-api/tree/master/src/alfresco-activiti-rest-api/docs/RestVariable.md).\n     */\n    @Input()\n    variables: ProcessInstanceVariable[];\n\n    /** Parameter to pass form field values in the start form if one is associated. */\n    @Input()\n    values: FormValues;\n\n    /** (optional) Name to assign to the current process. */\n    @Input()\n    name: string = '';\n\n    /** Hide or show the process selection dropdown. */\n    @Input()\n    showSelectProcessDropdown: boolean = true;\n\n    /** (optional) Hide or show application selection dropdown. */\n    @Input()\n    showSelectApplicationDropdown: boolean = false;\n\n    /** (optional) Parameter to enable selection of process when filtering. */\n    @Input()\n    processFilterSelector: boolean = true;\n\n    /** Emitted when the process starts. */\n    @Output()\n    start: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    /** Emitted when the process is canceled. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when process definition selection changes. */\n    @Output()\n    processDefinitionSelection: EventEmitter<ProcessDefinitionRepresentation> = new EventEmitter<ProcessDefinitionRepresentation>();\n\n    /** Emitted when application selection changes. */\n    @Output()\n    applicationSelection: EventEmitter<AppDefinitionRepresentationModel> = new EventEmitter<AppDefinitionRepresentationModel>();\n\n    @ViewChild('startForm')\n    startForm: StartFormComponent;\n\n    @ViewChild(MatAutocompleteTrigger)\n    inputAutocomplete: MatAutocompleteTrigger;\n\n    processDefinitions: ProcessDefinitionRepresentation[] = [];\n    selectedProcessDef: ProcessDefinitionRepresentation;\n    processNameInput: FormControl;\n    processDefinitionInput: FormControl;\n    filteredProcessesDefinitions$: Observable<ProcessDefinitionRepresentation[]>;\n    maxProcessNameLength: number = this.MAX_LENGTH;\n    alfrescoRepositoryName: string;\n    applications: AppDefinitionRepresentationModel[] = [];\n    selectedApplication: AppDefinitionRepresentationModel;\n\n    isProcessDefinitionsLoading = true;\n    isAppsLoading = true;\n    movedNodeToPS: FormValues;\n\n    private onDestroy$ = new Subject<boolean>();\n    constructor(private activitiProcess: ProcessService,\n                private activitiContentService: ActivitiContentService,\n                private appsProcessService: AppsProcessService,\n                private appConfig: AppConfigService,\n                private processNamePipe: ProcessNamePipe) {\n        }\n\n    ngOnInit() {\n        this.processNameInput = new FormControl('', [Validators.required, Validators.maxLength(this.maxProcessNameLength), Validators.pattern('^[^\\\\s]+(\\\\s+[^\\\\s]+)*$')]);\n        this.processDefinitionInput = new FormControl();\n\n        this.load();\n\n        this.filteredProcessesDefinitions$ = this.processDefinitionInput.valueChanges\n            .pipe(\n                map((value) => this._filter(value)),\n                takeUntil(this.onDestroy$)\n            );\n\n        this.activitiContentService.getAlfrescoRepositories().subscribe((repoList) => {\n            if (repoList && repoList[0]) {\n                const alfrescoRepository = repoList[0];\n                this.alfrescoRepositoryName = `alfresco-${alfrescoRepository.id}-${alfrescoRepository.name}`;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['values'] && changes['values'].currentValue) {\n            this.moveNodeFromCStoPS();\n        }\n\n        if (this.isAppIdChanged(changes)) {\n            this.appId = changes['appId'].currentValue;\n            this.load();\n        }\n\n        if (this.isProcessDefinitionChanged(changes)) {\n            this.processDefinitionName = changes['processDefinitionName'].currentValue;\n            this.filterProcessDefinitionByName();\n        }\n    }\n\n    private isAppIdChanged(changes: SimpleChanges) {\n        return changes['appId'] && changes['appId'].currentValue && changes['appId'].currentValue !== changes['appId'].previousValue;\n    }\n\n    private isProcessDefinitionChanged(changes: SimpleChanges) {\n        return changes['processDefinitionName'] && changes['processDefinitionName'].currentValue &&\n        changes['processDefinitionName'].currentValue !== changes['processDefinitionName'].previousValue;\n    }\n\n    private _filter(value: string): ProcessDefinitionRepresentation[] {\n        if (value !== null && value !== undefined) {\n            const filterValue = value.toLowerCase();\n            const filteredProcess = this.processDefinitions.filter((option) => option.name.toLowerCase().includes(filterValue));\n\n            if (this.processFilterSelector) {\n                this.selectedProcessDef = this.getSelectedProcess(filterValue);\n            }\n            return filteredProcess;\n        }\n\n        return [];\n    }\n\n    getSelectedProcess(selectedProcess: string): ProcessDefinitionRepresentation {\n        let processSelected = this.processDefinitions.find((process) => process.name.toLowerCase() === selectedProcess);\n\n        if (!processSelected) {\n            processSelected = new ProcessDefinitionRepresentation();\n        }\n        return processSelected;\n    }\n\n    load() {\n        if (this.showSelectApplicationDropdown) {\n            this.loadApps();\n        } else {\n            this.loadProcessDefinitions(this.appId);\n        }\n    }\n\n    loadProcessDefinitions(appId: any): void {\n        this.isProcessDefinitionsLoading = true;\n        this.resetSelectedProcessDefinition();\n\n        this.activitiProcess.getProcessDefinitions(appId).pipe(\n            map((processDefinitionRepresentations: ProcessDefinitionRepresentation[]) => {\n                let currentProcessDef: ProcessDefinitionRepresentation;\n\n                if (processDefinitionRepresentations.length === 1) {\n                    currentProcessDef = processDefinitionRepresentations[0];\n                }\n\n                if (this.processDefinitionName) {\n                    const filteredProcessDefinition = processDefinitionRepresentations.find((processDefinition) => {\n                        return processDefinition.name === this.processDefinitionName;\n                    });\n                    if (filteredProcessDefinition) {\n                        currentProcessDef = filteredProcessDefinition;\n                    }\n                }\n\n                return { currentProcessDef, processDefinitionRepresentations };\n            })\n        ).subscribe(\n            (filteredProcessDefinitions) => {\n                this.processDefinitions = filteredProcessDefinitions.processDefinitionRepresentations;\n                this.processDefinitionSelectionChanged(filteredProcessDefinitions.currentProcessDef);\n                this.processDefinitionInput.setValue(this.selectedProcessDef ? this.selectedProcessDef.name : '');\n                this.isProcessDefinitionsLoading = false;\n            },\n            (error) => {\n                this.isProcessDefinitionsLoading = false;\n                this.error.emit(error);\n            });\n    }\n\n    filterProcessDefinitionByName() {\n        if (this.processDefinitionName) {\n            const filteredProcessDef = this.processDefinitions.find((processDefinition) => {\n                return processDefinition.name === this.processDefinitionName;\n            });\n\n            if (filteredProcessDef) {\n                this.processDefinitionSelectionChanged(filteredProcessDef);\n                this.processDefinitionInput.setValue(this.selectedProcessDef ? this.selectedProcessDef.name : '');\n            }\n        }\n    }\n\n    loadApps() {\n        this.isAppsLoading = true;\n        this.appsProcessService\n            .getDeployedApplications()\n            .pipe(map((response: AppDefinitionRepresentationModel[]) => {\n                    const applications = this.removeDefaultApps(response);\n                    let currentApplication: AppDefinitionRepresentationModel;\n\n                    if (applications && applications.length === 1) {\n                        currentApplication = applications[0];\n                    }\n\n                    const filteredApp = applications.find( app => app.id === +this.appId );\n\n                    if (filteredApp) {\n                        currentApplication = filteredApp;\n                    }\n\n                    return { currentApplication, applications };\n                })\n            )\n            .subscribe((filteredApps) => {\n                    this.applications = filteredApps.applications;\n                    this.selectedApplication = filteredApps.currentApplication;\n                    this.applicationSelection.emit(this.selectedApplication);\n                    this.toggleProcessNameAndDefinitionsDropdown();\n                    this.isAppsLoading = false;\n                    this.loadProcessDefinitionsBasedOnSelectedApp();\n                },\n                (err) => {\n                    this.isAppsLoading = false;\n                    this.error.emit(err);\n                }\n            );\n\n    }\n\n    loadProcessDefinitionsBasedOnSelectedApp() {\n        if (this.selectedApplication && this.selectedApplication.id) {\n            this.loadProcessDefinitions(this.selectedApplication ? this.selectedApplication.id : null);\n        } else {\n            this.isProcessDefinitionsLoading = false;\n            this.resetProcessDefinitions();\n        }\n    }\n\n    onAppSelectionChange(selectedApplication: MatSelectChange) {\n        this.resetProcessDefinitions();\n        this.selectedApplication = selectedApplication.value;\n        this.applicationSelection.emit(this.selectedApplication);\n        this.toggleProcessNameAndDefinitionsDropdown();\n        this.loadProcessDefinitionsBasedOnSelectedApp();\n    }\n\n    private isAppSelected(): boolean {\n        return !!(this.selectedApplication && this.selectedApplication.id);\n    }\n\n    private removeDefaultApps(apps: AppDefinitionRepresentationModel []): AppDefinitionRepresentationModel[] {\n        return apps.filter((app) => app.id);\n    }\n\n    hasApplications(): boolean {\n        return this.applications && this.applications.length > 0;\n    }\n\n    hasProcessDefinitions(): boolean {\n        return this.processDefinitions && this.processDefinitions.length > 0;\n    }\n\n    isProcessDefinitionSelected(): boolean {\n        return !!(this.selectedProcessDef && this.selectedProcessDef.id);\n    }\n\n    isProcessDefinitionsEmpty(): boolean {\n        return this.processDefinitions.length === 0;\n    }\n\n    disableDropdownButton(): boolean {\n        return this.showSelectApplicationDropdown && !this.isAppSelected();\n    }\n\n    getAlfrescoRepositoryName(): string {\n        let alfrescoRepositoryName = this.appConfig.get<string>(AppConfigValues.ALFRESCO_REPOSITORY_NAME);\n        if (!alfrescoRepositoryName) {\n            alfrescoRepositoryName = this.alfrescoRepositoryName;\n        }\n        return alfrescoRepositoryName + 'Alfresco';\n    }\n\n    moveNodeFromCStoPS(): void {\n        const accountIdentifier = this.getAlfrescoRepositoryName();\n\n        for (const key in this.values) {\n            if (this.values.hasOwnProperty(key)) {\n                const currentValue = Array.isArray(this.values[key]) ? this.values[key] : [this.values[key]];\n                const contents = currentValue.filter((value: any) => value && value.isFile)\n                                             .map((content: MinimalNode) => this.activitiContentService.applyAlfrescoNode(content, null, accountIdentifier));\n                forkJoin(contents).subscribe((res: RelatedContentRepresentation[]) => {\n                    this.movedNodeToPS = { [key]: [...res]};\n                });\n            }\n        }\n    }\n\n    startProcess(outcome?: string) {\n        if (this.selectedProcessDef && this.selectedProcessDef.id && this.nameController.value) {\n            const formValues = this.startForm ? this.startForm.form.values : undefined;\n            this.activitiProcess.startProcess(this.selectedProcessDef.id, this.nameController.value, outcome, formValues, this.variables).subscribe(\n                (res) => {\n                    this.name = '';\n                    this.start.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    cancelStartProcess(): void {\n        this.cancel.emit();\n    }\n\n    hasStartForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.hasStartForm;\n    }\n\n    isStartFormMissingOrValid(): boolean {\n        if (this.startForm) {\n            return this.startForm.form && this.startForm.form.isValid;\n        } else {\n            return true;\n        }\n    }\n\n    validateForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.id && this.processNameInput.valid && this.isStartFormMissingOrValid();\n    }\n\n    private resetSelectedProcessDefinition() {\n        this.selectedProcessDef = undefined;\n        if (this.processDefinitionInput) {\n            this.processDefinitionInput.setValue('');\n        }\n    }\n\n    private resetProcessDefinitions() {\n        this.processDefinitions = [];\n        this.resetSelectedProcessDefinition();\n    }\n\n    public onOutcomeClick(outcome: string) {\n        this.startProcess(outcome);\n    }\n\n    reset(): void {\n        this.resetSelectedProcessDefinition();\n        this.name = '';\n        if (this.startForm) {\n            this.startForm.data = {};\n        }\n    }\n\n    displayFn(process: any): string {\n        if (process) {\n            let processName = process;\n            if (typeof process !== 'string') {\n                processName = process.name;\n            }\n            return processName;\n        }\n        return undefined;\n    }\n\n    displayDropdown(event) {\n        event.stopPropagation();\n        if (!this.inputAutocomplete.panelOpen) {\n            this.processDefinitionInput.setValue('');\n            this.inputAutocomplete.openPanel();\n        } else {\n            this.inputAutocomplete.closePanel();\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.processNameInput;\n    }\n\n    get processDefinitionController(): AbstractControl {\n        return this.processDefinitionInput;\n    }\n\n    private toggleProcessNameAndDefinitionsDropdown() {\n        if (!this.isAppSelected()) {\n            this.processDefinitionController.disable();\n            this.nameController.disable();\n        } else {\n            this.processDefinitionController.enable();\n            this.nameController.enable();\n        }\n    }\n\n    processDefinitionSelectionChanged(processDefinition: ProcessDefinitionRepresentation) {\n        if (processDefinition) {\n            const processInstanceDetails = new ProcessInstance({ processDefinitionName: processDefinition.name });\n            const processName = this.processNamePipe.transform(this.name, processInstanceDetails);\n            this.processNameInput.setValue(processName);\n            this.processNameInput.markAsDirty();\n            this.processNameInput.markAsTouched();\n            this.selectedProcessDef = processDefinition;\n            this.processDefinitionSelection.emit(this.selectedProcessDef);\n        } else {\n            this.nameController.reset();\n        }\n    }\n\n    isLoading(): boolean {\n        return this.showSelectApplicationDropdown ? this.isAppsLoading : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessFilterRequestRepresentation {\n    processDefinitionId: string;\n    appDefinitionId: string;\n    state: string;\n    sort: string;\n    page: number;\n    size: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj && obj.processDefinitionId || null;\n        this.appDefinitionId = obj && obj.appDefinitionId || null;\n        this.state = obj && obj.state || null;\n        this.sort = obj && obj.sort || null;\n        this.page = obj && obj.page || 0;\n        this.size = obj && obj.size || 25;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { TaskListModule } from '../task-list/task-list.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\nimport { ProcessAuditDirective } from './components/process-audit.directive';\nimport { ProcessFiltersComponent } from './components/process-filters.component';\nimport { ProcessInstanceDetailsComponent } from './components/process-instance-details.component';\nimport { ProcessInstanceHeaderComponent } from './components/process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './components/process-instance-tasks.component';\nimport { ProcessInstanceListComponent } from './components/process-list.component';\nimport { StartProcessInstanceComponent } from './components/start-process.component';\nimport { FormModule } from '../form/form.module';\nimport { ProcessNamePipe } from '../pipes/process-name.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule,\n        TaskListModule,\n        PeopleModule,\n        ContentWidgetModule,\n        ProcessCommentsModule,\n        FormModule\n    ],\n    declarations: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ],\n    exports: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ],\n    providers: [\n        ProcessNamePipe\n    ]\n})\nexport class ProcessListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// component\nexport * from './components/process-filters.component';\nexport * from './components/process-instance-details.component';\nexport * from './components/process-audit.directive';\nexport * from './components/process-instance-header.component';\nexport * from './components/process-instance-tasks.component';\nexport * from './components/process-list.component';\nexport * from './components/start-process.component';\n\n// services\nexport * from './services/process.service';\nexport * from './services/process-filter.service';\n\n// models\nexport * from './models/filter-process.model';\nexport * from './models/process-definition.model';\nexport * from './models/process-instance.model';\nexport * from './models/process-instance-filter.model';\nexport * from './models/process-instance-variable.model';\n\nexport * from './process-list.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService, TranslationService, CustomEmptyContentTemplateDirective } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, EventEmitter, Input, OnInit, Output, ContentChild, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Observable, Observer, of, Subject } from 'rxjs';\nimport { AppDefinitionRepresentationModel } from '../task-list';\nimport { IconModel } from './icon.model';\nimport { share, takeUntil, finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-apps',\n    templateUrl: './apps-list.component.html',\n    styleUrls: ['./apps-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-apps' }\n})\nexport class AppsListComponent implements OnInit, AfterContentInit, OnDestroy {\n\n    public static LAYOUT_LIST: string = 'LIST';\n    public static LAYOUT_GRID: string = 'GRID';\n    public static DEFAULT_TASKS_APP: string = 'tasks';\n    public static DEFAULT_TASKS_APP_NAME: string = 'ADF_TASK_LIST.APPS.TASK_APP_NAME';\n    public static DEFAULT_TASKS_APP_THEME: string = 'theme-2';\n    public static DEFAULT_TASKS_APP_ICON: string = 'glyphicon-asterisk';\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n\n    /** (**required**) Defines the layout of the apps. There are two possible\n     * values, \"GRID\" and \"LIST\".\n     */\n    @Input()\n    layoutType: string = AppsListComponent.LAYOUT_GRID;\n\n    /** Provides a way to filter the apps to show. */\n    @Input()\n    filtersAppId: any[];\n\n    /** Emitted when an app entry is clicked. */\n    @Output()\n    appClick: EventEmitter<AppDefinitionRepresentationModel> = new EventEmitter<AppDefinitionRepresentationModel>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    private appsObserver: Observer<AppDefinitionRepresentationModel>;\n    apps$: Observable<AppDefinitionRepresentationModel>;\n    currentApp: AppDefinitionRepresentationModel;\n    appList: AppDefinitionRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    loading: boolean = false;\n    hasEmptyCustomContentTemplate: boolean = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private appsProcessService: AppsProcessService,\n        private translationService: TranslationService) {\n            this.apps$ = new Observable<AppDefinitionRepresentationModel>((observer) => this.appsObserver = observer)\n                .pipe(share());\n    }\n\n    ngOnInit() {\n        if (!this.isValidType()) {\n            this.setDefaultLayoutType();\n        }\n\n        this.apps$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((app: any) => this.appList.push(app));\n\n        this.iconsMDL = new IconModel();\n        this.load();\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyCustomContent) {\n            this.hasEmptyCustomContentTemplate = true;\n        }\n    }\n\n    private load() {\n        this.loading = true;\n        this.appsProcessService\n            .getDeployedApplications()\n            .pipe(finalize(() => this.loading = false))\n            .subscribe(\n                (res: AppDefinitionRepresentationModel[]) => {\n                    this.filterApps(res).forEach((app) => {\n                        if (this.isDefaultApp(app)) {\n                            app.theme = AppsListComponent.DEFAULT_TASKS_APP_THEME;\n                            app.icon = AppsListComponent.DEFAULT_TASKS_APP_ICON;\n                            this.appsObserver.next(app);\n                        } else if (app.deploymentId) {\n                            this.appsObserver.next(app);\n                        }\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n    }\n\n    isDefaultApp(app) {\n        return app.defaultAppId === AppsListComponent.DEFAULT_TASKS_APP;\n    }\n\n    getAppName(app) {\n        return this.isDefaultApp(app)\n            ? this.translationService.get(AppsListComponent.DEFAULT_TASKS_APP_NAME)\n            : of(app.name);\n    }\n\n    /**\n     * Pass the selected app as next\n     * @param app\n     */\n    public selectApp(app: AppDefinitionRepresentationModel) {\n        this.currentApp = app;\n        this.appClick.emit(app);\n    }\n\n    /**\n     * Return true if the appId is the current app\n     * @param appId\n     */\n    isSelected(appId: number): boolean {\n        return (this.currentApp !== undefined && appId === this.currentApp.id);\n    }\n\n    private filterApps(apps: AppDefinitionRepresentationModel []): AppDefinitionRepresentationModel[] {\n        const filteredApps: AppDefinitionRepresentationModel[] = [];\n        if (this.filtersAppId) {\n            apps.filter((app: AppDefinitionRepresentationModel) => {\n                this.filtersAppId.forEach((filter) => {\n                    if (app.defaultAppId === filter.defaultAppId ||\n                        app.deploymentId === filter.deploymentId ||\n                        app.name === filter.name ||\n                        app.id === filter.id ||\n                        app.modelId === filter.modelId ||\n                        app.tenantId === filter.tenantId) {\n                        filteredApps.push(app);\n                    }\n                });\n            });\n        } else {\n            return apps;\n        }\n        return filteredApps;\n    }\n\n    /**\n     * Check if the value of the layoutType property is an allowed value\n     */\n    isValidType(): boolean {\n        return this.layoutType && (this.layoutType === AppsListComponent.LAYOUT_LIST || this.layoutType === AppsListComponent.LAYOUT_GRID);\n    }\n\n    /**\n     * Assign the default value to LayoutType\n     */\n    setDefaultLayoutType(): void {\n        this.layoutType = AppsListComponent.LAYOUT_GRID;\n    }\n\n    /**\n     * Return true if the layout type is LIST\n     */\n    isList(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_LIST;\n    }\n\n    /**\n     * Return true if the layout type is GRID\n     */\n    isGrid(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_GRID;\n    }\n\n    isEmpty(): boolean {\n        return this.appList.length === 0;\n    }\n\n    isLoading(): boolean {\n        return this.loading;\n    }\n\n    getTheme(app: AppDefinitionRepresentationModel): string {\n        return app.theme ? app.theme : '';\n    }\n\n    getBackgroundIcon(app: AppDefinitionRepresentationModel): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(app.icon);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'adf-select-apps-dialog',\n    templateUrl: './select-apps-dialog.component.html'\n})\nexport class SelectAppsDialogComponent {\n\n    processApps: any;\n\n    selectedProcess: any;\n\n    constructor(private appsProcessService: AppsProcessService,\n                public dialogRef: MatDialogRef<SelectAppsDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        this.appsProcessService.getDeployedApplications().subscribe(\n            (apps: any[]) => {\n                this.processApps = apps.filter((currentApp) => {\n                    return currentApp.id;\n                });\n            }\n        );\n    }\n\n    onStart(): void {\n        this.dialogRef.close(this.selectedProcess);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { AppsListComponent } from './apps-list.component';\nimport { SelectAppsDialogComponent } from './select-apps-dialog.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule\n    ],\n    declarations: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ],\n    exports: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ]\n})\nexport class AppsListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './apps-list.component';\nexport * from './select-apps-dialog.component';\n\nexport * from './apps-list.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, ThumbnailService, EmptyListComponent, ProcessContentService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-task-attachment-list',\n    styleUrls: ['./task-attachment-list.component.scss'],\n    templateUrl: './task-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Disable/Enable read only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or a view\n     * option is selected from the context menu by the user from within the component.\n     * Returns a Blob representing the clicked object.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs while fetching the attachments. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.loadAttachmentsByTaskId(changes['taskId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset(): void {\n        this.attachments = [];\n    }\n\n    hasCustomEmptyTemplate() {\n        return !!this.emptyTemplate;\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByTaskId(this.taskId);\n        });\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByTaskId(taskId: string) {\n        if (taskId) {\n            this.isLoading = true;\n            this.reset();\n            const isRelatedContent = 'true';\n            this.activitiContentService.getTaskRelatedContent(taskId, { isRelatedContent }).subscribe(\n                (res: any) => {\n                    const attachList = [];\n                    res.data.forEach((content) => {\n                        attachList.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.attachments = attachList;\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                () => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getContentPreview(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, EmptyListComponent, ThumbnailService, ProcessContentService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-process-attachment-list',\n    styleUrls: ['./process-attachment-list.component.scss'],\n    templateUrl: './process-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Disable/Enable read-only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or the\n     * view option is selected from the context menu by the user from\n     * within the component. Returns a Blob representing the object\n     * that was clicked.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when the attachment list is not able to fetch the attachments\n     * (eg, following a network error).\n     */\n    @Output()\n    error = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.loadAttachmentsByProcessInstanceId(changes['processInstanceId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset() {\n        this.attachments = [];\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByProcessInstanceId(this.processInstanceId);\n        });\n    }\n\n    hasCustomEmptyTemplate(): boolean {\n        return !!this.emptyTemplate;\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByProcessInstanceId(processInstanceId: string) {\n        if (processInstanceId) {\n            this.reset();\n            this.isLoading = true;\n            const isRelatedContent = 'true';\n            this.activitiContentService.getProcessRelatedContent(processInstanceId, { isRelatedContent }).subscribe(\n                (res: any) => {\n                    res.data.forEach((content) => {\n                        this.attachments.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    private deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                () => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getContentPreview(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-process-attachment',\n    styleUrls: ['./create-process-attachment.component.css'],\n    templateUrl: './create-process-attachment.component.html'\n})\nexport class CreateProcessAttachmentComponent implements OnChanges {\n\n    /** (required) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Emitted when an error occurs while creating or uploading an attachment\n     * from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is successfully created or uploaded\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.processInstanceId = changes['processInstanceId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createProcessRelatedContent(this.processInstanceId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-task-attachment',\n    styleUrls: ['./create-task-attachment.component.scss'],\n    templateUrl: './create-task-attachment.component.html'\n})\nexport class AttachmentComponent implements OnChanges {\n\n    /** (required) The numeric ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when an error occurs while creating or uploading an\n     *  attachment from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is created or uploaded successfully\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.taskId = changes['taskId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createTaskRelatedContent(this.taskId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { TaskAttachmentListComponent } from './task-attachment-list.component';\nimport { ProcessAttachmentListComponent } from './process-attachment-list.component';\nimport { CreateProcessAttachmentComponent } from './create-process-attachment.component';\nimport { AttachmentComponent } from './create-task-attachment.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    declarations: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ],\n    exports: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ]\n})\nexport class AttachmentModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './task-attachment-list.component';\nexport * from './process-attachment-list.component';\nexport * from './create-process-attachment.component';\nexport * from './create-task-attachment.component';\n\nexport * from './attachment.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './process-comments.component';\n\nexport * from './process-comments.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\nimport { UserProcessModel } from '@alfresco/adf-core';\n\nexport type PerformSearchCallback = (searchWord: string) => Observable<UserProcessModel[]>;\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/people/people.component';\nexport * from './components/people-list/people-list.component';\nexport * from './components/people-search/people-search.component';\nexport * from './components/people-search-field/people-search-field.component';\nexport * from './components/people-selector/people-selector.component';\n\nexport * from './interfaces/perform-search-callback.interface';\n\nexport * from './directives/people-search-action-label.directive';\nexport * from './directives/people-search-title.directive';\n\nexport * from './people.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Subject } from 'rxjs';\nimport { Node } from '@alfresco/js-api';\n\nexport interface AttachFileWidgetDialogComponentData {\n    title: string;\n    actionName?: string;\n    selected: Subject<Node[]>;\n    currentFolderId: string;\n    ecmHost: string;\n    context?: string;\n    isSelectionValid?: (entry: Node) => boolean;\n    showFilesInResult?: boolean;\n    loginOnly?: boolean;\n    accountIdentifier?: string;\n    registerExternalHost?: Function;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './attach-file-widget.component';\nexport * from './attach-folder-widget.component';\nexport * from './attach-file-widget-dialog-component.interface';\nexport * from './attach-file-widget-dialog.component';\nexport * from './attach-file-widget-dialog.service';\n\nexport * from './content-widget.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { FormRenderingService } from '@alfresco/adf-core';\nimport { AttachFileWidgetComponent } from '../content-widget/attach-file-widget.component';\nimport { AttachFolderWidgetComponent } from '../content-widget/attach-folder-widget.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessFormRenderingService extends FormRenderingService {\n    constructor() {\n        super();\n\n        this.register({\n            'upload': () => AttachFileWidgetComponent,\n            'select-folder': () => AttachFolderWidgetComponent\n        }, true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './form.component';\nexport * from './start-form.component';\nexport * from './process-form-rendering.service';\nexport * from './form-custom-outcomes.component';\nexport * from './form.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { ProcessNamePipe } from './process-name.pipe';\n\n@NgModule({\n    declarations: [\n        ProcessNamePipe\n    ],\n    exports: [\n        ProcessNamePipe\n    ]\n})\nexport class ProcessServicesPipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER, FormRenderingService } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { ProcessListModule } from './process-list/process-list.module';\nimport { TaskListModule } from './task-list/task-list.module';\nimport { AppsListModule } from './app-list/apps-list.module';\nimport { ProcessCommentsModule } from './process-comments/process-comments.module';\nimport { AttachmentModule } from './attachment/attachment.module';\nimport { PeopleModule } from './people/people.module';\nimport { FormModule } from './form/form.module';\nimport { ProcessFormRenderingService } from './form/process-form-rendering.service';\nimport { ProcessServicesPipeModule } from './pipes/process-services-pipe.module';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule,\n        ProcessServicesPipeModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-process-services',\n                source: 'assets/adf-process-services'\n            }\n        }\n    ],\n    exports: [\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule,\n        ProcessServicesPipeModule\n    ]\n})\nexport class ProcessModule {\n    static forRoot(): ModuleWithProviders<ProcessModule> {\n        return {\n            ngModule: ProcessModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-process-services',\n                        source: 'assets/adf-process-services'\n                    }\n                },\n                FormRenderingService,\n                { provide: FormRenderingService, useClass: ProcessFormRenderingService }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders<ProcessModule> {\n        return {\n            ngModule: ProcessModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './lib/process-list/index';\nexport * from './lib/task-list/index';\nexport * from './lib/app-list/index';\nexport * from './lib/attachment/index';\nexport * from './lib/process-comments/index';\nexport * from './lib/people/index';\nexport * from './lib/content-widget/index';\nexport * from './lib/form/index';\nexport * from './lib/pipes/process-name.pipe';\nexport * from './lib/pipes/process-services-pipe.module';\n\nexport * from './lib/pipes/process-name.pipe';\nexport * from './lib/pipes/process-services-pipe.module';\nexport * from './lib/material.module';\nexport * from './lib/process.module';\n"],"names":["UserFiltersApi","from","map","catchError","Observable","forkJoin","throwError","Injectable","AlfrescoApiService","EventEmitter","Component","ViewEncapsulation","AppsProcessService","Input","Output","TasksApi","ProcessDefinitionsApi","ProcessInstancesApi","ProcessInstanceVariablesApi","of","DatePipe","LogService","ViewChild","Directive","DownloadService","CardViewTextItemModel","CardViewDateItemModel","TranslationService","AppConfigService","UserTaskFilterRepresentation","TaskQueryRepresentation","UserProcessModel","ModelsApi","TaskActionsApi","ChecklistsApi","flatMap","filter","switchMap","PaginationComponent","Subject","BehaviorSubject","UserPreferenceValues","takeUntil","finalize","moment","DataTableSchema","UserPreferencesService","ContentChild","CustomEmptyContentTemplateDirective","CustomLoadingContentTemplateDirective","MatDialog","CardViewIntItemModel","CardViewItemLengthValidator","CardViewMapItemModel","BpmUserService","share","PeopleProcessService","CardViewUpdateService","TemplateRef","AuthenticationService","HostListener","JSON_FORMAT","PDF_FORMAT","ContentService","MOMENT_DATE_FORMATS","FormFieldModel","FormModel","FormControl","Validators","defaultIfEmpty","DateAdapter","MomentDateAdapter","MAT_DATE_FORMATS","FormBuilder","FormService","ActivitiContentApi","UploadService","DiscoveryApiService","NgModule","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatAutocompleteModule","MatButtonModule","MatCardModule","MatDialogModule","MatCheckboxModule","MatDatepickerModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatOptionModule","MatRadioModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatProgressSpinnerModule","MatNativeDateModule","MatRippleModule","MatTooltipModule","MatChipsModule","MatMenuModule","CommentProcessService","FormsModule","ReactiveFormsModule","CommonModule","CoreModule","ShowHeaderMode","DataColumnListComponent","debounceTime","DocumentListService","SitesService","SearchService","ExternalAlfrescoApiService","Inject","MAT_DIALOG_DATA","MatDialogRef","ContentApi","AppConfigValues","mergeMap","zip","UploadWidgetComponent","ThumbnailService","ProcessContentService","ActivitiContentService","ContentNodeDialogService","WidgetComponent","NodesApiService","ContentNodeSelectorModule","FormOutcomeModel","EcmModelService","FormEvent","FormErrorEvent","FormOutcomeEvent","FormBaseComponent","WidgetVisibilityService","NodeService","FlexLayoutModule","Pipe","LocalizedDatePipe","MatAutocompleteTrigger","NgZone","EmptyListComponent","FormRenderingService","TRANSLATION_PROVIDER"],"mappings":"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"}