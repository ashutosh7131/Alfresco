{"version":3,"file":"adf-process-services.js","sources":["../../../process-services/src/lib/process-list/models/filter-process.model.ts","../../../process-services/src/lib/process-list/services/process-filter.service.ts","../../../process-services/src/lib/app-list/icon.model.ts","../../../process-services/src/lib/process-list/components/process-filters.component.ts","../../../process-services/src/lib/process-list/models/process-definition.model.ts","../../../process-services/src/lib/process-list/models/process-instance-variable.model.ts","../../../process-services/src/lib/process-list/models/process-instance.model.ts","../../../process-services/src/lib/process-list/models/process-list.model.ts","../../../process-services/src/lib/process-list/services/process.service.ts","../../../process-services/src/lib/process-list/components/process-instance-header.component.ts","../../../process-services/src/lib/task-list/models/filter.model.ts","../../../process-services/src/lib/task-list/models/task-preset.model.ts","../../../process-services/src/lib/task-list/models/form.model.ts","../../../process-services/src/lib/task-list/models/task-details.model.ts","../../../process-services/src/lib/task-list/models/task-list.model.ts","../../../process-services/src/lib/task-list/services/tasklist.service.ts","../../../process-services/src/lib/task-list/components/task-list.component.ts","../../../process-services/src/lib/task-list/components/checklist.component.ts","../../../process-services/src/lib/task-list/validators/task-description.validator.ts","../../../process-services/src/lib/task-list/components/task-header.component.ts","../../../process-services/src/lib/task-list/components/task-form/task-form.component.ts","../../../process-services/src/lib/task-list/components/task-details.component.ts","../../../process-services/src/lib/task-list/components/no-task-detail-template.directive.ts","../../../process-services/src/lib/task-list/services/task-filter.service.ts","../../../process-services/src/lib/task-list/components/task-filters.component.ts","../../../process-services/src/lib/task-list/components/task-form/claim-task.directive.ts","../../../process-services/src/lib/task-list/components/task-form/unclaim-task.directive.ts","../../../process-services/src/lib/task-list/components/task-audit.directive.ts","../../../process-services/src/lib/task-list/components/start-task.component.ts","../../../process-services/src/lib/task-list/components/task-standalone.component.ts","../../../process-services/src/lib/task-list/components/attach-form.component.ts","../../../process-services/src/lib/task-list/services/process-upload.service.ts","../../../process-services/src/lib/task-list/services/task-upload.service.ts","../../../process-services/src/lib/task-list/models/start-task.model.ts","../../../process-services/src/lib/task-list/models/task-details.event.ts","../../../process-services/src/lib/task-list/models/user-event.model.ts","../../../process-services/src/lib/task-list/models/user-group.model.ts","../../../process-services/src/lib/material.module.ts","../../../process-services/src/lib/process-comments/process-comments.component.ts","../../../process-services/src/lib/process-comments/process-comments.module.ts","../../../process-services/src/lib/people/components/people-search/people-search.component.ts","../../../process-services/src/lib/people/components/people/people.component.ts","../../../process-services/src/lib/people/components/people-list/people-list.component.ts","../../../process-services/src/lib/people/helpers/get-display-user.ts","../../../process-services/src/lib/people/components/people-search-field/people-search-field.component.ts","../../../process-services/src/lib/people/components/people-selector/people-selector.component.ts","../../../process-services/src/lib/people/directives/people-search-action-label.directive.ts","../../../process-services/src/lib/people/directives/people-search-title.directive.ts","../../../process-services/src/lib/people/people.module.ts","../../../process-services/src/lib/content-widget/attach-file-widget-dialog.component.ts","../../../process-services/src/lib/content-widget/attach-file-widget-dialog.service.ts","../../../process-services/src/lib/content-widget/attach-file-widget.component.ts","../../../process-services/src/lib/content-widget/attach-folder-widget.component.ts","../../../process-services/src/lib/content-widget/content-widget.module.ts","../../../process-services/src/lib/form/form.component.ts","../../../process-services/src/lib/form/start-form.component.ts","../../../process-services/src/lib/form/form-custom-outcomes.component.ts","../../../process-services/src/lib/form/form.module.ts","../../../process-services/src/lib/task-list/task-list.module.ts","../../../process-services/src/lib/task-list/public-api.ts","../../../process-services/src/lib/task-list/index.ts","../../../process-services/src/lib/process-list/components/process-instance-tasks.component.ts","../../../process-services/src/lib/process-list/components/process-instance-details.component.ts","../../../process-services/src/lib/process-list/components/process-audit.directive.ts","../../../process-services/src/lib/process-list/models/process-preset.model.ts","../../../process-services/src/lib/process-list/components/process-list.component.ts","../../../process-services/src/lib/form/process-form-rendering.service.ts","../../../process-services/src/lib/form/public-api.ts","../../../process-services/src/lib/form/index.ts","../../../process-services/src/lib/pipes/process-name.pipe.ts","../../../process-services/src/lib/process-list/components/start-process.component.ts","../../../process-services/src/lib/process-list/models/process-instance-filter.model.ts","../../../process-services/src/lib/process-list/process-list.module.ts","../../../process-services/src/lib/process-list/public-api.ts","../../../process-services/src/lib/process-list/index.ts","../../../process-services/src/lib/app-list/apps-list.component.ts","../../../process-services/src/lib/app-list/select-apps-dialog.component.ts","../../../process-services/src/lib/app-list/apps-list.module.ts","../../../process-services/src/lib/app-list/public-api.ts","../../../process-services/src/lib/app-list/index.ts","../../../process-services/src/lib/attachment/task-attachment-list.component.ts","../../../process-services/src/lib/attachment/process-attachment-list.component.ts","../../../process-services/src/lib/attachment/create-process-attachment.component.ts","../../../process-services/src/lib/attachment/create-task-attachment.component.ts","../../../process-services/src/lib/attachment/attachment.module.ts","../../../process-services/src/lib/attachment/public-api.ts","../../../process-services/src/lib/attachment/index.ts","../../../process-services/src/lib/process-comments/public-api.ts","../../../process-services/src/lib/process-comments/index.ts","../../../process-services/src/lib/people/interfaces/perform-search-callback.interface.ts","../../../process-services/src/lib/people/public-api.ts","../../../process-services/src/lib/people/index.ts","../../../process-services/src/lib/content-widget/attach-file-widget-dialog-component.interface.ts","../../../process-services/src/lib/content-widget/public-api.ts","../../../process-services/src/lib/content-widget/index.ts","../../../process-services/src/lib/pipes/process-services-pipe.module.ts","../../../process-services/src/lib/process.module.ts","../../../process-services/src/public-api.ts"],"names":["moment","JSON_FORMAT","PDF_FORMAT"],"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a,UAAU;AAAG;sCAhBzB,QAAQ,SAAC;QACN,OAAO,EAAE,sBACL,UAAU,sBACV,cAAc,kBACjB,kBACD;AAAY,EAAE;AACV,aAAa;QACb;WAAkB,sBAClB,2BAA2B,kBAC9B,kBACD,OAAO,EAAE,sBACL,aAAa,sBACb,kBAAkB,sBAClB,2BAA2B,kBAC9B,cACJ;;;;;;;;;;;;;;;;;;;0BACI;AAAC;ACxCN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAuEa,cAAc;AAC3B;0CA7CC,QAAQ,SAAC;IACN,OAAO,EAAE,sBACL,YAAY,sBACZ,gBAAgB,sBAChB,cAAc,sBACd;SAAW;KACX,UAAU;OACV,mBAAmB;oBACnB;KAAU;GACV,YAAY;IACZ;CAAqB,sBACrB;gBAAmB,kBACtB;iBACD,YAAY,EAAE;;MACV,8BAA8B,sBAC9B,oBAAoB,sBACpB,iBAAiB,sBACjB,oBAAoB,sBACpB,iBAAiB,sBACjB,kBAAkB,sBAClB,kBAAkB,sBAClB,mBAAmB,sBACnB,kBAAkB,sBAClB,uBAAuB,sBACvB,mBAAmB,sBACnB;OAAkB,sBAClB,oBAAoB,kBACvB,kBACD;IAAO,EAAE,sBACL,8BAA8B,sBAC9B,oBAAoB,sBACpB,iBAAiB,sBACjB,oBAAoB,sBACpB,iBAAiB,sBACjB,kBAAkB,sBAClB,kBAAkB,sBAClB,mBAAmB,sBACnB,kBAAkB,sBAClB;iBAAuB,sBACvB,mBAAmB;OACnB;CAAkB;MAClB,oBAAoB;iBACvB,cACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;ACvFN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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,SAAC;EACN,OAAO,EAAE,sBACL,UAAU,sBACV,cAAc,kBACjB,kBACD,YAAY,EAAE;AACV;GAA2B,sBAC3B;;aAA8B,sBAC9B,gCAAgC,sBAChC,gCAAgC,sBAChC,mBAAmB,kBACtB,kBACD,OAAO,EAAE,sBACL,2BAA2B,sBAC3B,8BAA8B,sBAC9B,gCAAgC,sBAChC,gCAAgC,sBAChC,mBAAmB,kBACtB,cACJ;;;;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;AC9CN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAaa,yBAAyB;AACtC;qDATC,QAAQ,SAAC,kBACN;KAAY,EAAE,sBACV,eAAe,kBAClB,kBACD,OAAO,EAAE,sBACL,eAAe,kBAClB,cACJ;;;;;;;;;;;;0BACI;AAAC;AC7BN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAsCsB;AACtB,IAAgB,IAAI,EAAE,sBAAsB;AAC5C,IAAgB,MAAM,EAAE,6BAA6B;AACrD,CAAa;AACZ,MAgBY,aAAa;AAC1B,IAAI,OAAO,OAAO;AAAK,QACf,OAAO;AACf,YAAY,QAAQ,EAAE,aAAa;AACnC,YAAY,SAAS,EAAE;AACvB,gBAAgB;AAChB,oBAAoB,OAAO,EAAE,oBAAoB;AACjD,oBAAoB,KAAK,EAAE,IAAI;AAC/B,oBAAoB,QAAQ,EAAE;AAC9B,wBAAwB,IAAI,EAAE,sBAAsB;AACpD,wBAAwB,MAAM,EAAE,6BAA6B;AAC7D,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,oBAAoB;AACpC,gBAAgB,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,2BAA2B,EAAE;AACxF,aAAa;AACb,SAAS,CAAC;AACV,KAAK;AACL,IACI,OAAO,QAAQ;AAAK,QAChB,OAAO;AACf,YAAY,QAAQ,EAAE,aAAa;AACnC,SAAS,CAAC;AACV,KAAK;AACL;yCAhEC,QAAQ,SAAC;KACN,OAAO,EAAE,sBACL,UAAU,sBACV,YAAY,sBACZ,qBAAqB;EACrB;GAAW,sBACX;CAAmB,sBACnB;YAAc;OACd;cAAiB;iBACjB;OAAc;GACd,cAAc;IACd,gBAAgB;iBAChB,YAAY;kBACZ;AAAU,sBACV;gBAAyB;MAC5B,kBACD;KAAS,EAAE,sBACP;yBACI;MAAO,EAAE;IAAoB,0BAC7B,KAAK,EAAE;GAAI,0BACX,QAAQ,MAGP;IACJ,kBACJ,kBACD,OAAO,EAAE,sBACL,YAAY,sBACZ,qBAAqB,sBACrB;IAAW,sBACX,mBAAmB,sBACnB,iBAAiB,sBACjB,cAAc,sBACd;IAAc,sBACd,gBAAgB;MAChB,YAAY,sBACZ,UAAU,sBACV,yBAAyB,kBAC5B,cACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;AC1EN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAewpC","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ProcessFilterRequestRepresentation,\n    ProcessInstanceFilterRepresentation,\n    UserProcessInstanceFilterRepresentation\n} from '@alfresco/js-api';\n\nexport class FilterProcessRepresentationModel implements UserProcessInstanceFilterRepresentation {\n    appId: number;\n    filter: ProcessInstanceFilterRepresentation;\n    icon: string;\n    id: number;\n    index: number;\n    name: string;\n    recent: boolean;\n\n    constructor(obj: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = obj.filter || null;\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter() {\n        return !!this.filter;\n    }\n}\n\n/**\n * This object represent the parameters of a process filter.\n */\nexport class ProcessFilterParamRepresentationModel implements ProcessFilterRequestRepresentation {\n\n    processDefinitionId?: string;\n    processInstanceId?: string;\n    appDefinitionId?: number;\n    state?: any;\n    sort?: any;\n    page?: number;\n    size?: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj.processDefinitionId || null;\n        this.appDefinitionId = obj.appDefinitionId || null;\n        this.processInstanceId = obj.processInstanceId || null;\n        this.state = obj.state || null;\n        this.sort = obj.sort || null;\n        this.page = obj.page || null;\n        this.size = obj.size || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { map, catchError } from 'rxjs/operators';\nimport {\n    ResultListDataRepresentationUserProcessInstanceFilterRepresentation,\n    UserFiltersApi\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessFilterService {\n\n    private _userFiltersApi;\n    get userFiltersApi(): UserFiltersApi {\n        this._userFiltersApi = this._userFiltersApi ?? new UserFiltersApi(this.alfrescoApiService.getInstance());\n        return this._userFiltersApi;\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets all filters defined for a Process App.\n     * @param appId ID of the target app\n     * @returns Array of filter details\n     */\n    getProcessFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    response.data.forEach((filter) => {\n                        const filterModel = new FilterProcessRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterById(filterId: number, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.id === filterId);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by name.\n     * @param filterName Name of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterByName(filterName: string, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.name === filterName);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates and returns the default filters for an app.\n     * @param appId ID of the target app\n     * @returns Default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        const runningFilter = this.getRunningFilterInstance(appId, 0);\n        const runningObservable = this.addProcessFilter(runningFilter);\n\n        const completedFilter = this.getCompletedFilterInstance(appId, 1);\n        const completedObservable = this.addProcessFilter(completedFilter);\n\n        const allFilter = this.getAllFilterInstance(appId, 2);\n        const allObservable = this.addProcessFilter(allFilter);\n\n        return new Observable((observer) => {\n            forkJoin([\n                    runningObservable,\n                    completedObservable,\n                    allObservable\n                ]\n            ).subscribe(\n                (res) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === runningFilter.name) {\n                            filters.push(new FilterProcessRepresentationModel({ ...filter, filter: runningFilter.filter, appId }));\n                        } else if (filter.name === completedFilter.name) {\n                            filters.push(new FilterProcessRepresentationModel({ ...filter, filter: completedFilter.filter, appId }));\n                        } else if (filter.name === allFilter.name) {\n                            filters.push(new FilterProcessRepresentationModel({ ...filter, filter: allFilter.filter, appId }));\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.handleProcessError(err);\n                });\n        });\n    }\n\n    /**\n     * Creates and returns a filter that matches \"running\" process instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns Filter just created\n     */\n    public getRunningFilterInstance(appId: number, index?: number): FilterProcessRepresentationModel {\n        return  new FilterProcessRepresentationModel({\n            'name': 'Running',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-random',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'running' },\n            index\n        });\n    }\n\n    /**\n     * Returns a static Completed filter instance.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns Details of the filter\n     */\n    private getCompletedFilterInstance(appId: number, index?: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Completed',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-ok-sign',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'completed' },\n            index\n        });\n    }\n\n    /**\n     * Returns a static All filter instance.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns Details of the filter\n     */\n    private getAllFilterInstance(appId: number, index?: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'All',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-th',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'all' },\n            index\n        });\n    }\n\n    /**\n     * Adds a filter.\n     * @param filter The filter to add\n     * @returns The filter just added\n     */\n    addProcessFilter(filter: FilterProcessRepresentationModel): Observable<FilterProcessRepresentationModel> {\n        return from(this.userFiltersApi.createUserProcessInstanceFilter(filter))\n            .pipe(\n                map((response: FilterProcessRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserProcessInstanceFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of filter details\n     */\n    callApiProcessFilters(appId?: number): Promise<ResultListDataRepresentationUserProcessInstanceFilterRepresentation> {\n        if (appId) {\n            return this.userFiltersApi.getUserProcessInstanceFilters({ appId: appId });\n        } else {\n            return this.userFiltersApi.getUserProcessInstanceFilters();\n        }\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nexport class IconModel {\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    private iconsMDL: Map<string, string>;\n\n    constructor() {\n        this.initIconsMDL();\n    }\n\n    mapGlyphiconToMaterialDesignIcons(icon: string) {\n        return this.iconsMDL.get(icon) ? this.iconsMDL.get(icon) : IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON;\n    }\n\n    /**\n     * Map all the bootstrap glyphicon icons with Material design material icon\n     */\n    initIconsMDL() {\n        this.iconsMDL = new Map<string, string>();\n\n        this.iconsMDL.set('glyphicon-asterisk', 'ac_unit');\n        this.iconsMDL.set('glyphicon-plus', 'add');\n        this.iconsMDL.set('glyphicon-euro', 'euro_symbol');\n        this.iconsMDL.set('glyphicon-cloud', 'cloud');\n        this.iconsMDL.set('glyphicon-envelope', 'mail');\n        this.iconsMDL.set('glyphicon-pencil', 'create');\n        this.iconsMDL.set('glyphicon-glass', 'local_bar');\n        this.iconsMDL.set('glyphicon-music', 'music_note');\n        this.iconsMDL.set('glyphicon-search', 'search');\n        this.iconsMDL.set('glyphicon-heart', 'favorite');\n        this.iconsMDL.set('glyphicon-heart-empty', 'favorite_border');\n        this.iconsMDL.set('glyphicon-star', 'star');\n        this.iconsMDL.set('glyphicon-star-empty', 'star_border');\n        this.iconsMDL.set('glyphicon-user', 'person');\n        this.iconsMDL.set('glyphicon-film', 'movie_creation');\n        this.iconsMDL.set('glyphicon-th-large', 'view_comfy');\n        this.iconsMDL.set('glyphicon-th', 'dashboard');\n        this.iconsMDL.set('glyphicon-th-list', 'list');\n        this.iconsMDL.set('glyphicon-ok', 'done');\n        this.iconsMDL.set('glyphicon-remove', 'cancel');\n        this.iconsMDL.set('glyphicon-zoom-in', 'zoom_in');\n        this.iconsMDL.set('glyphicon-zoom-out', 'zoom_out');\n        this.iconsMDL.set('glyphicon-off', 'highlight_off');\n        this.iconsMDL.set('glyphicon-signal', 'signal_cellular_4_bar');\n        this.iconsMDL.set('glyphicon-cog', 'settings');\n        this.iconsMDL.set('glyphicon-trash', 'delete');\n        this.iconsMDL.set('glyphicon-home', 'home');\n        this.iconsMDL.set('glyphicon-file', 'insert_drive_file');\n        this.iconsMDL.set('glyphicon-time', 'access_time');\n        this.iconsMDL.set('glyphicon-road', 'map');\n        this.iconsMDL.set('glyphicon-download-alt', 'file_download');\n        this.iconsMDL.set('glyphicon-download', 'file_download');\n        this.iconsMDL.set('glyphicon-upload', 'file_upload');\n        this.iconsMDL.set('glyphicon-inbox', 'inbox');\n        this.iconsMDL.set('glyphicon-play-circle', 'play_circle_outline');\n        this.iconsMDL.set('glyphicon-repeat', 'refresh');\n        this.iconsMDL.set('glyphicon-refresh', 'sync');\n        this.iconsMDL.set('glyphicon-list-alt', 'event_note');\n        this.iconsMDL.set('glyphicon-lock', 'lock_outline');\n        this.iconsMDL.set('glyphicon-flag', 'assistant_photo');\n        this.iconsMDL.set('glyphicon-headphones', 'headset');\n        this.iconsMDL.set('glyphicon-volume-up', 'volume_up');\n        this.iconsMDL.set('glyphicon-tag', 'local_offer');\n        this.iconsMDL.set('glyphicon-tags', 'local_offer');\n        this.iconsMDL.set('glyphicon-book', 'library_books');\n        this.iconsMDL.set('glyphicon-bookmark', 'collections_bookmark');\n        this.iconsMDL.set('glyphicon-print', 'local_printshop');\n        this.iconsMDL.set('glyphicon-camera', 'local_see');\n        this.iconsMDL.set('glyphicon-list', 'view_list');\n        this.iconsMDL.set('glyphicon-facetime-video', 'video_call');\n        this.iconsMDL.set('glyphicon-picture', 'photo');\n        this.iconsMDL.set('glyphicon-map-marker', 'add_location');\n        this.iconsMDL.set('glyphicon-adjust', 'brightness_4');\n        this.iconsMDL.set('glyphicon-tint', 'invert_colors');\n        this.iconsMDL.set('glyphicon-edit', 'edit');\n        this.iconsMDL.set('glyphicon-share', 'share');\n        this.iconsMDL.set('glyphicon-check', 'assignment_turned_in');\n        this.iconsMDL.set('glyphicon-move', 'open_with');\n        this.iconsMDL.set('glyphicon-play', 'play_arrow');\n        this.iconsMDL.set('glyphicon-eject', 'eject');\n        this.iconsMDL.set('glyphicon-plus-sign', 'add_circle');\n        this.iconsMDL.set('glyphicon-minus-sign', 'remove_circle');\n        this.iconsMDL.set('glyphicon-remove-sign', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-sign', 'check_circle');\n        this.iconsMDL.set('glyphicon-question-sign', 'help');\n        this.iconsMDL.set('glyphicon-info-sign', 'info');\n        this.iconsMDL.set('glyphicon-screenshot', 'flare');\n        this.iconsMDL.set('glyphicon-remove-circle', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-circle', 'add_circle');\n        this.iconsMDL.set('glyphicon-ban-circle', 'block');\n        this.iconsMDL.set('glyphicon-share-alt', 'redo');\n        this.iconsMDL.set('glyphicon-exclamation-sign', 'error');\n        this.iconsMDL.set('glyphicon-gift', 'giftcard');\n        this.iconsMDL.set('glyphicon-leaf', 'spa');\n        this.iconsMDL.set('glyphicon-fire', 'whatshot');\n        this.iconsMDL.set('glyphicon-eye-open', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-eye-close', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-warning-sign', 'warning');\n        this.iconsMDL.set('glyphicon-plane', 'airplanemode_active');\n        this.iconsMDL.set('glyphicon-calendar', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-random', 'shuffle');\n        this.iconsMDL.set('glyphicon-comment', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-magnet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-retweet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-shopping-cart', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-close', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hdd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bullhorn', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bell', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-certificate', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-up', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-down', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hand-left', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-globe', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-wrench', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tasks', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-filter', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-briefcase', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-dashboard', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-paperclip', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-link', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-pushpin', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-usd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-gbp', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-sort', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-flash', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-record', 'radio_button_checked');\n        this.iconsMDL.set('glyphicon-save', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-saved', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-send', 'send');\n        this.iconsMDL.set('glyphicon-floppy-disk', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-credit-card', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cutlery', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-earphone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone-alt', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tower', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-stats', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-download', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-upload', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-conifer', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-deciduous', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-align-left', 'format_align_left');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ProcessInstanceFilterRepresentation, UserProcessInstanceFilterRepresentation } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { ProcessFilterService } from './../services/process-filter.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-process-instance-filters',\n    templateUrl: './process-filters.component.html',\n    styleUrls: ['./process-filters.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessFiltersComponent implements OnInit, OnChanges {\n\n    /** The parameters to filter the task filter. If there is no match then the default one\n     * (ie, the first filter in the list) is selected.\n     */\n    @Input()\n    filterParam: FilterProcessRepresentationModel;\n\n    /** Emitted when a filter is being clicked from the UI. */\n    @Output()\n    filterClicked = new EventEmitter<UserProcessInstanceFilterRepresentation>();\n\n    /** Emitted when the list of filters has been successfully loaded from the server. */\n    @Output()\n    success = new EventEmitter<ProcessInstanceFilterRepresentation[]>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggle to show or hide the filter's icon. */\n    @Input()\n    showIcon: boolean = true;\n\n    /** Emitted when a filter is being selected based on the filterParam input. */\n    @Output()\n    filterSelected = new EventEmitter<UserProcessInstanceFilterRepresentation>();\n\n    filter$: Observable<ProcessInstanceFilterRepresentation>;\n\n    currentFilter: ProcessInstanceFilterRepresentation;\n\n    filters: UserProcessInstanceFilterRepresentation [] = [];\n    active = false;\n\n    private iconsMDL: IconModel;\n\n    constructor(private processFilterService: ProcessFilterService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appId = changes['appId'];\n        const appName = changes['appName'];\n        const filter = changes['filterParam'];\n\n        if (appId && (appId.currentValue || appId.currentValue === null)) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectProcessFilter(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.processFilterService.getProcessFilters(appId).subscribe(\n            (res: ProcessInstanceFilterRepresentation[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.processFilterService.createDefaultFilters(appId).subscribe(\n                        (resDefault: ProcessInstanceFilterRepresentation[]) => {\n                            this.resetFilter();\n                            this.filters = resDefault;\n                            this.selectProcessFilter(this.filterParam);\n                            this.success.emit(resDefault);\n                        },\n                        (errDefault: any) => {\n                            this.error.emit(errDefault);\n                        }\n                    );\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectProcessFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n                this.selectProcessFilter(this.filterParam);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param filter\n     */\n    selectFilter(filter: ProcessInstanceFilterRepresentation) {\n        this.currentFilter = filter;\n        this.active = true;\n        this.filterClicked.emit(filter);\n    }\n\n    /**\n     * Select the first filter of a list if present\n     */\n    selectProcessFilter(filterParam: FilterProcessRepresentationModel) {\n        if (filterParam) {\n            const newFilter = this.filters.find((processFilter, index) =>\n                filterParam.index === index ||\n                filterParam.id === processFilter.id ||\n                (filterParam.name &&\n                    (filterParam.name.toLocaleLowerCase() === processFilter.name.toLocaleLowerCase())\n                ));\n            this.currentFilter = newFilter;\n\n            if (newFilter) {\n                this.filterSelected.emit(newFilter);\n            }\n        }\n    }\n\n    /**\n     * Select the Running filter\n     * @deprecated in 3.9.0, Use the filterParam Input() with a running filter instance instead\n     */\n    selectRunningFilter() {\n        this.selectProcessFilter(this.processFilterService.getRunningFilterInstance(null));\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     */\n    selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n            this.filterSelected.emit(this.filters[0]);\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): ProcessInstanceFilterRepresentation {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon: string): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessDefinitionRepresentation {\n    id: string;\n    name: string;\n    description: string;\n    key: string;\n    category: string;\n    version: number;\n    deploymentId: string;\n    tenantId: string;\n    metaDataValues: any[];\n    hasStartForm: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.key = obj && obj.key || null;\n        this.category = obj && obj.category || null;\n        this.version = obj && obj.version || 0;\n        this.deploymentId = obj && obj.deploymentId || null;\n        this.tenantId = obj && obj.tenantId || null;\n        this.metaDataValues = obj && obj.metaDataValues || [];\n        this.hasStartForm = obj && obj.hasStartForm === true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstanceVariable implements RestVariable {\n\n    name?: string;\n    scope?: string;\n    type?: string;\n    value?: string;\n    valueUrl?: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name !== undefined ? obj.name : null;\n        this.scope = obj && obj.scope !== undefined ? obj.scope : null;\n        this.value = obj && obj.value !== undefined ? obj.value : null;\n        this.valueUrl = obj && obj.valueUrl !== undefined ? obj.valueUrl : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LightUserRepresentation, ProcessInstanceRepresentation, RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstance implements ProcessInstanceRepresentation {\n\n    businessKey?: string;\n    ended?: Date;\n    graphicalNotationDefined?: boolean;\n    id?: string;\n    name?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    startFormDefined?: boolean;\n    started?: Date;\n    startedBy?: LightUserRepresentation;\n    tenantId?: string;\n    variables?: RestVariable[];\n\n    constructor(data?: any) {\n        this.businessKey = data && data.businessKey !== undefined ? data.businessKey : null;\n        this.ended = data && data.ended !== undefined ? data.ended : null;\n        this.graphicalNotationDefined = data && data.graphicalNotationDefined !== undefined ? data.graphicalNotationDefined : null;\n        this.id = data && data.id !== undefined ? data.id : null;\n        this.name = data && data.name !== undefined ? data.name : null;\n        this.processDefinitionCategory = data && data.processDefinitionCategory !== undefined ? data.processDefinitionCategory : null;\n        this.processDefinitionDeploymentId = data && data.processDefinitionDeploymentId !== undefined ? data.processDefinitionDeploymentId : null;\n        this.processDefinitionDescription = data && data.processDefinitionDescription !== undefined ? data.processDefinitionDescription : null;\n        this.processDefinitionId = data && data.processDefinitionId !== undefined ? data.processDefinitionId : null;\n        this.processDefinitionKey = data && data.processDefinitionKey !== undefined ? data.processDefinitionKey : null;\n        this.processDefinitionName = data && data.processDefinitionName !== undefined ? data.processDefinitionName : null;\n        this.processDefinitionVersion = data && data.processDefinitionVersion !== undefined ? data.processDefinitionVersion : null;\n        this.startFormDefined = data && data.startFormDefined !== undefined ? data.startFormDefined : null;\n        this.started = data && data.started !== undefined ? data.started : null;\n        this.startedBy = data && data.startedBy !== undefined ? data.startedBy : null;\n        this.tenantId = data && data.tenantId !== undefined ? data.tenantId : null;\n        this.variables = data && data.variables !== undefined ? data.variables : null;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProcessInstance } from './process-instance.model';\n\nexport class ProcessListModel {\n    size: number;\n    total: number;\n    start: number;\n    length: number;\n    data: ProcessInstance [];\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.size = obj.size || null;\n            this.total = obj.total || null;\n            this.start = obj.start || null;\n            this.length = obj.length || null;\n            this.data = obj.data || [];\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, FormValues } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport {\n    TasksApi,\n    ProcessDefinitionsApi,\n    ProcessInstancesApi,\n    RestVariable,\n    ProcessInstanceRepresentation,\n    ProcessInstanceVariablesApi\n} from '@alfresco/js-api';\nimport { Observable, from, throwError, of } from 'rxjs';\nimport { TaskDetailsModel } from '../../task-list';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { ProcessDefinitionRepresentation } from '../models/process-definition.model';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessListModel } from '../models/process-list.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\n\ndeclare let moment: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessService {\n\n    private _tasksApi;\n    get tasksApi(): TasksApi {\n        this._tasksApi = this._tasksApi ?? new TasksApi(this.alfrescoApiService.getInstance());\n        return this._tasksApi;\n    }\n\n    private _processDefinitionsApi;\n    get processDefinitionsApi(): ProcessDefinitionsApi {\n        this._processDefinitionsApi = this._processDefinitionsApi ?? new ProcessDefinitionsApi(this.alfrescoApiService.getInstance());\n        return this._processDefinitionsApi;\n    }\n\n    private _processInstancesApi;\n    get processInstancesApi(): ProcessInstancesApi {\n        this._processInstancesApi = this._processInstancesApi ?? new ProcessInstancesApi(this.alfrescoApiService.getInstance());\n        return this._processInstancesApi;\n    }\n\n    private _processInstanceVariablesApi;\n    get processInstanceVariablesApi(): ProcessInstanceVariablesApi {\n        this._processInstanceVariablesApi = this._processInstanceVariablesApi ?? new ProcessInstanceVariablesApi(this.alfrescoApiService.getInstance());\n        return this._processInstanceVariablesApi;\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets process instances for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of process instances\n     */\n    getProcessInstances(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return from(this.processInstancesApi.getProcessInstances(requestNode))\n            .pipe(\n                map((res: any) => {\n                    if (processDefinitionKey) {\n                        const filtered = res.data.filter((process) => process.processDefinitionKey === processDefinitionKey);\n                        res.data = filtered;\n                        return res;\n                    } else {\n                        return res;\n                    }\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets processes for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of processes\n     */\n    getProcesses(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return this.getProcessInstances(requestNode, processDefinitionKey)\n            .pipe(\n                map(response => {\n                    return {\n                        ...response,\n                        data: (response.data || []).map(instance => {\n                            instance.name = this.getProcessNameOrDescription(instance, 'medium');\n                            return instance;\n                        })\n                    };\n                }),\n                catchError(() => of(new ProcessListModel({})))\n            );\n    }\n\n    private getProcessNameOrDescription(processInstance: ProcessInstanceRepresentation, dateFormat: string): string {\n        let name = '';\n\n        if (processInstance) {\n            name = processInstance.name ||\n                processInstance.processDefinitionName + ' - ' + this.getFormatDate(processInstance.started, dateFormat);\n        }\n\n        return name;\n    }\n\n    private getFormatDate(value: Date, format: string) {\n        const datePipe = new DatePipe('en-US');\n\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            return '';\n        }\n    }\n\n    /**\n     * Fetches the Process Audit information as a PDF.\n     * @param processId ID of the target process\n     * @returns Binary PDF data\n     */\n    fetchProcessAuditPdfById(processId: string): Observable<Blob> {\n        return from(this.processInstancesApi.getProcessAuditPdf(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Fetches the Process Audit information in a JSON format.\n     * @param processId ID of the target process\n     * @returns JSON data\n     */\n    fetchProcessAuditJsonById(processId: string): Observable<any> {\n        return from(this.processInstancesApi.getTaskAuditLog(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets Process Instance metadata.\n     * @param processInstanceId ID of the target process\n     * @returns Metadata for the instance\n     */\n    getProcess(processInstanceId: string): Observable<ProcessInstance> {\n        return from(this.processInstancesApi.getProcessInstance(processInstanceId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets task instances for a process instance.\n     * @param processInstanceId ID of the process instance\n     * @param state Task state filter (can be \"active\" or \"completed\")\n     * @returns Array of task instance details\n     */\n    getProcessTasks(processInstanceId: string, state?: string): Observable<TaskDetailsModel[]> {\n        const taskOpts = state ? {\n            processInstanceId: processInstanceId,\n            state: state\n        } : {\n            processInstanceId: processInstanceId\n        };\n        return from(this.tasksApi.listTasks(taskOpts))\n            .pipe(\n                map(this.extractData),\n                map((tasks) => tasks.map((task: any) => {\n                    task.created = moment(task.created, 'YYYY-MM-DD').format();\n                    return task;\n                })),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions associated with an app.\n     * @param appId ID of a target app\n     * @returns Array of process definitions\n     */\n    getProcessDefinitions(appId?: number): Observable<ProcessDefinitionRepresentation[]> {\n        const opts = appId ? {\n            latest: true,\n            appDefinitionId: appId\n        } : {\n            latest: true\n        };\n        return from(\n            this.processDefinitionsApi.getProcessDefinitions(opts)\n        )\n            .pipe(\n                map(this.extractData),\n                map((processDefs) => processDefs.map((pd) => new ProcessDefinitionRepresentation(pd))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Starts a process based on a process definition, name, form values or variables.\n     * @param processDefinitionId Process definition ID\n     * @param name Process name\n     * @param outcome Process outcome\n     * @param startFormValues Values for the start form\n     * @param variables Array of process instance variables\n     * @returns Details of the process instance just started\n     */\n    startProcess(processDefinitionId: string, name: string, outcome?: string, startFormValues?: FormValues, variables?: ProcessInstanceVariable[]): Observable<ProcessInstance> {\n        const startRequest: any = {\n            name: name,\n            processDefinitionId: processDefinitionId\n        };\n        if (outcome) {\n            startRequest.outcome = outcome;\n        }\n        if (startFormValues) {\n            startRequest.values = startFormValues;\n        }\n        if (variables) {\n            startRequest.variables = variables;\n        }\n        return from(\n            this.processInstancesApi.startNewProcessInstance(startRequest)\n        )\n            .pipe(\n                map((pd) => new ProcessInstance(pd)),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Cancels a process instance.\n     * @param processInstanceId ID of process to cancel\n     * @returns Null response notifying when the operation is complete\n     */\n    cancelProcess(processInstanceId: string): Observable<void> {\n        return from(\n            this.processInstancesApi.deleteProcessInstance(processInstanceId)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets the variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @returns Array of instance variable info\n     */\n    getProcessInstanceVariables(processInstanceId: string): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId)\n        )\n            .pipe(\n                map((processVars: any[]) => processVars.map((currentProcessVar) => new ProcessInstanceVariable(currentProcessVar))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates or updates variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variables Variables to update\n     * @returns Array of instance variable info\n     */\n    createOrUpdateProcessInstanceVariables(processInstanceId: string, variables: RestVariable[]): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.processInstanceVariablesApi.createOrUpdateProcessInstanceVariables(processInstanceId, variables)\n        ).pipe(\n            catchError((err) => this.handleProcessError(err))\n        );\n    }\n\n    /**\n     * Deletes a variable for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variableName Name of the variable to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteProcessInstanceVariable(processInstanceId: string, variableName: string): Observable<void> {\n        return from(\n            this.processInstanceVariablesApi.deleteProcessInstanceVariable(processInstanceId, variableName)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    private extractData(res: any) {\n        return res.data || {};\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfigService, CardViewDateItemModel, CardViewItem, CardViewBaseItemModel, CardViewTextItemModel, TranslationService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { ProcessInstance } from '../models/process-instance.model';\n\n@Component({\n    selector: 'adf-process-instance-header',\n    templateUrl: './process-instance-header.component.html',\n    styleUrls: ['./process-instance-header.component.css']\n})\nexport class ProcessInstanceHeaderComponent implements OnChanges {\n\n    /** (**required**) Full details of the process instance to display information about. */\n    @Input()\n    processInstance: ProcessInstance;\n\n    properties: CardViewItem [];\n    dateFormat: string;\n    dateLocale: string;\n\n    constructor(private translationService: TranslationService,\n                private appConfig: AppConfigService) {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n        this.dateLocale = this.appConfig.get('dateValues.defaultDateLocale');\n    }\n\n    ngOnChanges() {\n        this.refreshData();\n    }\n\n    refreshData(): void {\n        if (this.processInstance) {\n            const defaultProperties = this.initDefaultProperties();\n            const filteredProperties: string[] = this.appConfig.get('adf-process-instance-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    private initDefaultProperties(): any[] {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.STATUS',\n                    value: this.getProcessStatus(),\n                    key: 'status'\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.END_DATE',\n                    value: this.processInstance.ended,\n                    format: this.dateFormat,\n                    locale: this.dateLocale,\n                    key: 'ended',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.END_DATE_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CATEGORY',\n                    value: this.processInstance.processDefinitionCategory,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY',\n                    value: this.processInstance.businessKey,\n                    key: 'businessKey',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED_BY',\n                    value: this.getStartedByFullName(),\n                    key: 'createdBy',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CREATED_BY_DEFAULT')\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n                    value: this.processInstance.started,\n                    format: this.dateFormat,\n                    locale: this.dateLocale,\n                    key: 'created'\n                }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.ID',\n                value: this.processInstance.id,\n                key: 'id'\n            }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION',\n                value: this.processInstance.processDefinitionDescription,\n                key: 'description',\n                default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION_DEFAULT')\n            })\n        ];\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    getProcessStatus(): string {\n        if (this.processInstance) {\n            return this.isRunning() ? 'Running' : 'Completed';\n        }\n        return 'Unknown';\n    }\n\n    getStartedByFullName(): string {\n        let fullName = '';\n        if (this.processInstance && this.processInstance.startedBy) {\n            fullName += this.processInstance.startedBy.firstName || '';\n            fullName += fullName ? ' ' : '';\n            fullName += this.processInstance.startedBy.lastName || '';\n        }\n        return fullName;\n    }\n\n    isRunning(): boolean {\n        return this.processInstance && !this.processInstance.ended;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskFilterRepresentation, UserTaskFilterRepresentation, TaskQueryRepresentation } from '@alfresco/js-api';\n\nexport class AppDefinitionRepresentationModel {\n    defaultAppId: string;\n    deploymentId: string;\n    name: string;\n    description: string;\n    theme: string;\n    icon: string;\n    id: number;\n    modelId: number;\n    tenantId: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.defaultAppId = obj.defaultAppId ? obj.defaultAppId : null;\n            this.deploymentId = obj.deploymentId ? obj.deploymentId : null;\n            this.name = obj.name ? obj.name : null;\n            this.description = obj.description ? obj.description : null;\n            this.theme = obj.theme ? obj.theme : null;\n            this.icon = obj.icon ? obj.icon : null;\n            this.id = obj.id ? obj.id : null;\n            this.modelId = obj.modelId ? obj.modelId : null;\n            this.tenantId = obj.tenantId ? obj.tenantId : null;\n        }\n    }\n}\n\nexport class FilterParamsModel {\n    id: number;\n    name: string;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.index = obj.index;\n        }\n    }\n}\n\nexport class FilterRepresentationModel implements UserTaskFilterRepresentation {\n    id: number;\n    appId: number;\n    name: string;\n    recent: boolean;\n    icon: string;\n    filter: TaskFilterRepresentation;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = new UserTaskFilterRepresentation(obj.filter);\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter(): boolean {\n        return !!this.filter;\n    }\n}\n\nexport class TaskQueryRequestRepresentationModel extends TaskQueryRepresentation {\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let taskPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        },\n        {\n            'key': 'assignee',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the Form.\n */\nexport class Form {\n\n    id: number;\n    name: string;\n\n    constructor(id: number, name: string) {\n        this.name = name;\n        this.id = id;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the details of a task.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { TaskRepresentation } from '@alfresco/js-api';\nimport { UserGroupModel } from './user-group.model';\n\nexport class TaskDetailsModel implements TaskRepresentation {\n    id?: string;\n    name?: string;\n    assignee?: UserProcessModel;\n    priority?: number;\n    adhocTaskCanBeReassigned?: boolean;\n    category?: string;\n    created?: Date;\n    description?: string;\n    parentName?: string;\n    dueDate?: Date;\n    duration?: number;\n    endDate?: Date;\n    executionId?: string;\n    formKey?: string;\n    initiatorCanCompleteTask?: boolean;\n    managerOfCandidateGroup?: boolean;\n    memberOfCandidateGroup?: boolean;\n    memberOfCandidateUsers?: boolean;\n    involvedGroups?: UserGroupModel [];\n    involvedPeople?: UserProcessModel [];\n    parentTaskId?: string;\n    parentTaskName?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number = 0;\n    processInstanceId?: string;\n    processInstanceName?: string;\n    processInstanceStartUserId?: string;\n    taskDefinitionKey?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.priority = obj.priority;\n            this.assignee = obj.assignee ? new UserProcessModel(obj.assignee) : null;\n            this.adhocTaskCanBeReassigned = obj.adhocTaskCanBeReassigned;\n            this.category = obj.category || null;\n            this.created = obj.created || null;\n            this.description = obj.description || null;\n            this.dueDate = obj.dueDate || null;\n            this.duration = obj.duration || null;\n            this.endDate = obj.endDate || null;\n            this.executionId = obj.executionId || null;\n            this.formKey = obj.formKey || null;\n            this.initiatorCanCompleteTask = !!obj.initiatorCanCompleteTask;\n            this.managerOfCandidateGroup = !!obj.managerOfCandidateGroup;\n            this.memberOfCandidateGroup = !!obj.memberOfCandidateGroup;\n            this.memberOfCandidateUsers = !!obj.memberOfCandidateUsers;\n            this.involvedGroups = obj.involvedGroups;\n            this.involvedPeople = obj.involvedPeople;\n            this.parentTaskId = obj.parentTaskId || null;\n            this.parentTaskName = obj.parentTaskName || null;\n            this.processDefinitionCategory = obj.processDefinitionCategory || null;\n            this.processDefinitionDeploymentId = obj.processDefinitionDeploymentId || null;\n            this.processDefinitionDescription = obj.processDefinitionDescription || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processDefinitionKey = obj.processDefinitionKey || null;\n            this.processDefinitionName = obj.processDefinitionName || null;\n            this.processDefinitionVersion = obj.processDefinitionVersion || 0;\n            this.processInstanceId = obj.processInstanceId || null;\n            this.processInstanceName = obj.processInstanceName || null;\n            this.processInstanceStartUserId = obj.processInstanceStartUserId || null;\n            this.taskDefinitionKey = obj.taskDefinitionKey || null;\n        }\n    }\n\n    getFullName(): string {\n        let fullName: string = '';\n\n        if (this.assignee) {\n            const firstName: string = this.assignee.firstName ? this.assignee.firstName : '';\n            const lastName: string = this.assignee.lastName ? this.assignee.lastName : '';\n            fullName = `${firstName} ${lastName}`;\n        }\n\n        return fullName.trim();\n    }\n\n    isCompleted(): boolean {\n        return !!this.endDate;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskListModel  {\n    size?: number;\n    total?: number;\n    start?: number;\n    length?: number;\n    data?: TaskDetailsModel[] = [];\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n            if (input.data) {\n                this.data = input.data.map((item: any) => {\n                    return new TaskDetailsModel(item);\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError, of } from 'rxjs';\nimport { map, catchError, switchMap, flatMap, filter } from 'rxjs/operators';\nimport { FilterRepresentationModel, TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport {\n    TaskQueryRepresentation, AssigneeIdentifierRepresentation,\n    TaskUpdateRepresentation, ModelsApi, TaskActionsApi, TasksApi,\n    ChecklistsApi\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskListService {\n\n    private _modelsApi;\n    get modelsApi(): ModelsApi {\n        this._modelsApi = this._modelsApi ?? new ModelsApi(this.apiService.getInstance());\n        return this._modelsApi;\n    }\n\n    private _tasksApi;\n    get tasksApi(): TasksApi {\n        this._tasksApi = this._tasksApi ?? new TasksApi(this.apiService.getInstance());\n        return this._tasksApi;\n    }\n\n    private _taskActionsApi;\n    get taskActionsApi(): TaskActionsApi {\n        this._taskActionsApi = this._taskActionsApi ?? new TaskActionsApi(this.apiService.getInstance());\n        return this._taskActionsApi;\n    }\n\n    private _checklistsApi;\n    get checklistsApi(): ChecklistsApi {\n        this._checklistsApi = this._checklistsApi ?? new ChecklistsApi(this.apiService.getInstance());\n        return this._checklistsApi;\n    }\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets all the filters in the list that belong to a task.\n     * @param taskId ID of the target task\n     * @param filterList List of filters to search through\n     * @returns Filters belonging to the task\n     */\n    getFilterForTaskById(taskId: string, filterList: FilterRepresentationModel[]): Observable<FilterRepresentationModel> {\n        return from(filterList)\n            .pipe(\n                flatMap((data: FilterRepresentationModel) => this.isTaskRelatedToFilter(taskId, data)),\n                filter((data: FilterRepresentationModel) => data != null)\n            );\n    }\n\n    /**\n     * Gets the search query for a task based on the supplied filter.\n     * @param filter The filter to use\n     * @returns The search query\n     */\n    private generateTaskRequestNodeFromFilter(filterModel: FilterRepresentationModel): TaskQueryRequestRepresentationModel {\n        const requestNode = {\n            appDefinitionId: filterModel.appId,\n            assignment: filterModel.filter.assignment,\n            state: filterModel.filter.state,\n            sort: filterModel.filter.sort\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    /**\n     * Checks if a taskId is filtered with the given filter.\n     * @param taskId ID of the target task\n     * @param filterModel The filter you want to check\n     * @returns The filter if it is related or null otherwise\n     */\n    isTaskRelatedToFilter(taskId: string, filterModel: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        const requestNodeForFilter = this.generateTaskRequestNodeFromFilter(filterModel);\n        return from(this.callApiTasksFiltered(requestNodeForFilter))\n            .pipe(\n                map(res => {\n                    return res.data.find((element) => element.id === taskId) ? filterModel : null;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks matching the supplied query.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    getTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets tasks matching a query and state value.\n     * @param requestNode Query to search for tasks\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findTasksByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTasks(requestNode)\n            .pipe(catchError(() => of(new TaskListModel())));\n    }\n\n    /**\n     * Gets all tasks matching a query and state value.\n     * @param requestNode Query to search for tasks.\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findAllTaskByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTotalTasks(requestNode)\n            .pipe(\n                switchMap((res: any) => {\n                    requestNode.size = res.total;\n                    return this.getTasks(requestNode);\n                })\n            );\n    }\n\n    /**\n     * Gets all tasks matching the supplied query but ignoring the task state.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    findAllTasksWithoutState(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return forkJoin(\n            this.findTasksByState(requestNode, 'open'),\n            this.findAllTaskByState(requestNode, 'completed'),\n            (activeTasks: TaskListModel, completedTasks: TaskListModel) => {\n                const tasks = Object.assign({}, activeTasks);\n                tasks.total += completedTasks.total;\n                tasks.data = tasks.data.concat(completedTasks.data);\n                return tasks;\n            }\n        );\n    }\n\n    /**\n     * Gets details for a task.\n     * @param taskId ID of the target task.\n     * @returns Task details\n     */\n    getTaskDetails(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiTaskDetails(taskId))\n            .pipe(\n                map(details => {\n                    return new TaskDetailsModel(details);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the checklist for a task.\n     * @param id ID of the target task\n     * @returns Array of checklist task details\n     */\n    getTaskChecklist(id: string): Observable<TaskDetailsModel[]> {\n        return from(this.callApiTaskChecklist(id))\n            .pipe(\n                map(response => {\n                    const checklists: TaskDetailsModel[] = [];\n                    response.data.forEach((checklist) => {\n                        checklists.push(new TaskDetailsModel(checklist));\n                    });\n                    return checklists;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all available reusable forms.\n     * @returns Array of form details\n     */\n    getFormList(): Observable<Form[]> {\n        const opts = {\n            'filter': 'myReusableForms', // String | filter\n            'sort': 'modifiedDesc', // String | sort\n            'modelType': 2 // Integer | modelType\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(response => {\n                    const forms: Form[] = [];\n                    response.data.forEach((form) => {\n                        forms.push(new Form(form.id, form.name));\n                    });\n                    return forms;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Attaches a form to a task.\n     * @param taskId ID of the target task\n     * @param formId ID of the form to add\n     * @returns Null response notifying when the operation is complete\n     */\n    attachFormToATask(taskId: string, formId: number): Observable<any> {\n        return from(this.taskActionsApi.attachForm(taskId, { 'formId': formId }))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a subtask (ie, a checklist task) to a parent task.\n     * @param task The task to add\n     * @returns The subtask that was added\n     */\n    addTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiAddTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a subtask (ie, a checklist task) from a parent task.\n     * @param taskId The task to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a form from a task.\n     * @param taskId Task id related to form\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteForm(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteForm(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gives completed status to a task.\n     * @param taskId ID of the target task\n     * @returns Null response notifying when the operation is complete\n     */\n    completeTask(taskId: string) {\n        return from(this.taskActionsApi.completeTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the total number of the tasks found by a query.\n     * @param requestNode Query to search for tasks\n     * @returns Number of tasks\n     */\n    public getTotalTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<any> {\n        requestNode.size = 0;\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Creates a new standalone task.\n     * @param task Details of the new task\n     * @returns Details of the newly created task\n     */\n    createNewTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiCreateTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user or group.\n     * @param taskId The task to assign\n     * @param requestNode User or group to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTask(taskId: string, requestNode: any): Observable<TaskDetailsModel> {\n        const assignee = { assignee: requestNode.id };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user.\n     * @param taskId ID of the task to assign\n     * @param userId ID of the user to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTaskByUserId(taskId: string, userId: string): Observable<TaskDetailsModel> {\n        const assignee = <AssigneeIdentifierRepresentation> { assignee: userId };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Claims a task for the current user.\n     * @param taskId ID of the task to claim\n     * @returns Details of the claimed task\n     */\n    claimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.taskActionsApi.claimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Un-claims a task for the current user.\n     * @param taskId ID of the task to unclaim\n     * @returns Null response notifying when the operation is complete\n     */\n    unclaimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.taskActionsApi.unclaimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Updates the details (name, description, due date) for a task.\n     * @param taskId ID of the task to update\n     * @param updated Data to update the task (as a `TaskUpdateRepresentation` instance).\n     * @returns Updated task details\n     */\n    updateTask(taskId: string, updated: TaskUpdateRepresentation): Observable<TaskDetailsModel> {\n        return from(this.tasksApi.updateTask(taskId, updated))\n            .pipe(\n                map((result) => <TaskDetailsModel> result),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetches the Task Audit information in PDF format.\n     * @param taskId ID of the target task\n     * @returns Binary PDF data\n     */\n    fetchTaskAuditPdfById(taskId: string): Observable<Blob> {\n        return from(this.tasksApi.getTaskAuditPdf(taskId))\n            .pipe(\n                map((data) => <Blob> data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetch the Task Audit information in JSON format\n     * @param taskId ID of the target task\n     * @returns JSON data\n     */\n    fetchTaskAuditJsonById(taskId: string): Observable<any> {\n        return from(this.tasksApi.getTaskAuditLog(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiTasksFiltered(requestNode: TaskQueryRepresentation): Promise<TaskListModel> {\n        return this.tasksApi.listTasks(requestNode);\n    }\n\n    private callApiTaskDetails(taskId: string): Promise<TaskDetailsModel> {\n        return this.tasksApi.getTask(taskId);\n    }\n\n    private callApiAddTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.checklistsApi.addSubtask(task.parentTaskId, task);\n    }\n\n    private callApiDeleteTask(taskId: string): Promise<any> {\n        return this.tasksApi.deleteTask(taskId);\n    }\n\n    private callApiDeleteForm(taskId: string): Promise<any> {\n        return this.taskActionsApi.removeForm(taskId);\n    }\n\n    private callApiTaskChecklist(taskId: string): Promise<TaskListModel> {\n        return this.checklistsApi.getChecklist(taskId);\n    }\n\n    private callApiCreateTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.tasksApi.createNewTask(task);\n    }\n\n    private callApiAssignTask(taskId: string, requestNode: AssigneeIdentifierRepresentation): Promise<TaskDetailsModel> {\n        return this.taskActionsApi.assignTask(taskId, requestNode);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataRowEvent, DataTableAdapter, DataTableSchema, CustomEmptyContentTemplateDirective, CustomLoadingContentTemplateDirective,\n    AppConfigService, PaginationComponent, PaginatedComponent,\n    UserPreferencesService, UserPreferenceValues, PaginationModel, DataCellEvent } from '@alfresco/adf-core';\nimport {\n    AfterContentInit, Component, ContentChild, EventEmitter,\n    Input, OnChanges, Output, SimpleChanges, OnDestroy, OnInit } from '@angular/core';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport { taskPresetsDefaultModel } from '../models/task-preset.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport moment from 'moment-es6';\nimport { takeUntil, finalize } from 'rxjs/operators';\nimport { TaskDetailsModel } from '../models/task-details.model';\n\n@Component({\n    selector: 'adf-tasklist',\n    templateUrl: './task-list.component.html',\n    styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent, OnDestroy, OnInit {\n\n    static PRESET_KEY = 'adf-task-list.presets';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    requestNode: TaskQueryRequestRepresentationModel;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Instance Id of the process. */\n    @Input()\n    processInstanceId: string;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Current state of the process. Possible values are: `completed`, `active`. */\n    @Input()\n    state: string;\n\n    /** The assignment of the process. Possible values are: \"assignee\" (the current user\n     * is the assignee), \"candidate\" (the current user is a task candidate, \"group_x\" (the task\n     * is assigned to a group where the current user is a member,\n     * no value (the current user is involved).\n     */\n    @Input()\n    assignment: string;\n\n    /** Define the sort order of the tasks. Possible values are : `created-desc`,\n     * `created-asc`, `due-desc`, `due-asc`\n     */\n    @Input()\n    sort: string;\n\n    /** Name of the tasklist. */\n    @Input()\n    name: string;\n\n    /** Define which task id should be selected after reloading. If the task id doesn't\n     * exist or nothing is passed then the first task will be selected.\n     */\n    @Input()\n    landingTaskId: string;\n\n    /**\n     * Data source object that represents the number and the type of the columns that\n     * you want to show.\n     */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** The id of a task */\n    @Input()\n    taskId: string;\n\n    /** Toggles inclusion of Process Instances */\n    @Input()\n    includeProcessInstance: boolean;\n\n    /** Starting point of the list within the full set of tasks. */\n    @Input()\n    start: number;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    showContextMenu: boolean = false;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when a task in the list is clicked */\n    @Output()\n    rowClick = new EventEmitter<string>();\n\n    /** Emitted when rows are selected/unselected */\n    @Output()\n    rowsSelected = new EventEmitter<any[]>();\n\n    /** Emitted when the task list is loaded */\n    @Output()\n    success = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    currentInstanceId: string;\n    selectedInstances: any[];\n    pagination: BehaviorSubject<PaginationModel>;\n\n    /** The page number of the tasks to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of tasks to fetch. Default value: 25. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Filter the tasks. Display only tasks with `created_date` after `dueAfter`. */\n    @Input()\n    dueAfter: string;\n\n    /** Filter the tasks. Display only tasks with `created_date` before `dueBefore`. */\n    @Input()\n    dueBefore: string;\n\n    rows: any[] = [];\n    isLoading: boolean = true;\n    sorting: any[] = ['created', 'desc'];\n\n    /**\n     * Toggles custom data source mode.\n     * When enabled the component reloads data from it's current source instead of the server side.\n     * This allows generating and displaying custom data sets (i.e. filtered out content).\n     *\n     * @memberOf TaskListComponent\n     */\n    hasCustomDataSource: boolean = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private taskListService: TaskListService,\n                appConfigService: AppConfigService,\n                private userPreferences: UserPreferencesService) {\n        super(appConfigService, TaskListComponent.PRESET_KEY, taskPresetsDefaultModel);\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId) {\n            this.reload();\n        }\n    }\n\n    ngOnInit() {\n        this.userPreferences\n            .select(UserPreferenceValues.PaginationSize)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(pageSize => this.size = pageSize);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    setCustomDataSource(rows: any[]): void {\n        if (rows) {\n            this.rows = rows;\n            this.hasCustomDataSource = true;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n\n        const presetColumnChanges = changes['presetColumn'];\n        if (presetColumnChanges && !presetColumnChanges.firstChange) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = true;\n\n        const landingTaskId = changes['landingTaskId'];\n        const page = changes['page'];\n        const size = changes['size'];\n        if (landingTaskId && landingTaskId.currentValue && this.isEqualToCurrentId(landingTaskId.currentValue)) {\n            changed = false;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n\n        return changed;\n    }\n\n    reload(): void {\n        if (!this.hasCustomDataSource) {\n            this.requestNode = this.createRequestNode();\n            this.load();\n        } else {\n            this.isLoading = false;\n        }\n    }\n\n    private load() {\n        this.isLoading = true;\n\n        this.loadTasksByState()\n            .pipe(finalize(() => this.isLoading = false))\n            .subscribe(\n                tasks => {\n                    this.rows = this.optimizeTaskDetails(tasks.data);\n                    this.selectTask(this.landingTaskId);\n                    this.success.emit(tasks);\n                    this.pagination.next({\n                        count: tasks.data.length,\n                        maxItems: this.size,\n                        skipCount: this.page * this.size,\n                        totalItems: tasks.total\n                    });\n                },\n                error => {\n                    this.error.emit(error);\n                });\n    }\n\n    private loadTasksByState(): Observable<TaskListModel> {\n        return this.requestNode.state === 'all'\n            ? this.taskListService.findAllTasksWithoutState(this.requestNode)\n            : this.taskListService.findTasksByState(this.requestNode);\n    }\n\n    /**\n     * Select the task given in input if present\n     */\n    selectTask(taskIdSelected: string): void {\n        if (!this.isListEmpty()) {\n            let dataRow = null;\n\n            if (taskIdSelected) {\n                dataRow = this.rows.find((currentRow: any) => {\n                    return currentRow['id'] === taskIdSelected;\n                });\n            }\n\n            if (!dataRow && this.selectFirstRow) {\n                dataRow = this.rows[0];\n            }\n\n            if (dataRow) {\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            }\n        } else {\n            this.currentInstanceId = null;\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the taskId is the same of the selected task\n     * @param taskId\n     */\n    isEqualToCurrentId(taskId: string): boolean {\n        return this.currentInstanceId === taskId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    onRowClick(item: DataRowEvent) {\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    onRowSelect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowUnselect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        this.showRowContextMenu.emit(event);\n    }\n\n    /**\n     * Optimize name field\n     * @param instances\n     */\n    private optimizeTaskDetails(instances: TaskDetailsModel[]): TaskDetailsModel[] {\n        instances = instances.map((task) => {\n            if (!task.name) {\n                task.name = 'No name';\n            }\n            return task;\n        });\n        return instances;\n    }\n\n    private createRequestNode() {\n        const requestNode = {\n            appDefinitionId: this.appId,\n            dueAfter: this.dueAfter ? moment(this.dueAfter).toDate() : null,\n            dueBefore: this.dueBefore ? moment(this.dueBefore).toDate() : null,\n            processInstanceId: this.processInstanceId,\n            processDefinitionId: this.processDefinitionId,\n            text: this.name,\n            assignment: this.assignment,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: this.start,\n            taskId: this.taskId,\n            includeProcessInstance: this.includeProcessInstance\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\n\n@Component({\n    selector: 'adf-checklist',\n    templateUrl: './checklist.component.html',\n    styleUrls: ['./checklist.component.scss']\n})\nexport class ChecklistComponent implements OnChanges {\n\n    /** (required) The id of the parent task to which subtasks are\n     * attached.\n     */\n    @Input()\n    taskId: string;\n\n    /** Toggle readonly state of the form. All form widgets\n     * will render as readonly if enabled.\n     */\n    @Input()\n    readOnly: boolean = false;\n\n    /** (required) The assignee id that the subtasks are assigned to. */\n    @Input()\n    assignee: string;\n\n    /** Emitted when a new checklist task is created. */\n    @Output()\n    checklistTaskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    checklistTaskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('dialog', { static: true })\n    addNewDialog: any;\n\n    taskName: string;\n\n    checklist: TaskDetailsModel [] = [];\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     */\n    constructor(private activitiTaskList: TaskListService,\n                private dialog: MatDialog) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getTaskChecklist();\n            return;\n        }\n    }\n\n    getTaskChecklist() {\n        this.checklist = [];\n        if (this.taskId) {\n            this.activitiTaskList.getTaskChecklist(this.taskId).subscribe(\n                (taskDetailsModel: TaskDetailsModel[]) => {\n                    taskDetailsModel.forEach((task) => {\n                        this.checklist.push(task);\n                    });\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n        } else {\n            this.checklist = [];\n        }\n    }\n\n    showDialog() {\n        this.dialog.open(this.addNewDialog, { width: '350px' });\n    }\n\n    public add() {\n        const newTask = new TaskDetailsModel({\n            name: this.taskName,\n            parentTaskId: this.taskId,\n            assignee: { id: this.assignee }\n        });\n        this.activitiTaskList.addTask(newTask).subscribe(\n            (taskDetailsModel: TaskDetailsModel) => {\n                this.checklist.push(taskDetailsModel);\n                this.checklistTaskCreated.emit(taskDetailsModel);\n                this.taskName = '';\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n        this.cancel();\n    }\n\n    public delete(taskId: string) {\n        this.activitiTaskList.deleteTask(taskId).subscribe(\n            () => {\n                this.checklist = this.checklist.filter((check) => check.id !== taskId);\n                this.checklistTaskDeleted.emit(taskId);\n            },\n            (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    public cancel() {\n        this.dialog.closeAll();\n        this.taskName = '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '@alfresco/adf-core';\n\nexport class TaskDescriptionValidator implements CardViewItemValidator {\n\n    message: string = 'ADF_CLOUD_TASK_HEADER.FORM_VALIDATION.INVALID_FIELD';\n\n    isValid(value: string): boolean {\n        const isWhitespace = (value || '').trim().length === 0;\n        return value.length === 0 || !isWhitespace;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport {\n    BpmUserService,\n    CardViewDateItemModel,\n    CardViewMapItemModel,\n    CardViewTextItemModel,\n    CardViewBaseItemModel,\n    TranslationService,\n    AppConfigService,\n    CardViewIntItemModel,\n    CardViewItemLengthValidator\n} from '@alfresco/adf-core';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskDescriptionValidator } from '../validators/task-description.validator';\n\n@Component({\n    selector: 'adf-task-header',\n    templateUrl: './task-header.component.html',\n    styleUrls: ['./task-header.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskHeaderComponent implements OnChanges, OnInit {\n\n    /** The name of the form. */\n    @Input()\n    formName: string = null;\n\n    /** (required) Details related to the task. */\n    @Input()\n    taskDetails: TaskDetailsModel;\n\n    /** Toggles display of the claim/release button. */\n    @Input()\n    showClaimRelease = true;\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    claim: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task is unclaimed (ie, requeue). */\n    @Output()\n    unclaim: EventEmitter<any> = new EventEmitter<any>();\n\n    private currentUserId: number;\n\n    properties: any [] = [];\n    inEdit: boolean = false;\n    displayDateClearAction = false;\n    dateFormat: string;\n    dateLocale: string;\n\n    constructor(private bpmUserService: BpmUserService,\n                private translationService: TranslationService,\n                private appConfig: AppConfigService) {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n        this.dateLocale = this.appConfig.get('dateValues.defaultDateLocale');\n    }\n\n    ngOnInit() {\n        this.loadCurrentBpmUserId();\n        this.initData();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskDetailsChange = changes['taskDetails'];\n        if (taskDetailsChange?.currentValue?.id !== taskDetailsChange?.previousValue?.id) {\n            this.initData();\n        } else {\n            this.refreshData();\n        }\n    }\n\n    private initDefaultProperties(parentInfoMap): any[] {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n                    value: this.taskDetails.getFullName(),\n                    key: 'assignee',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.ASSIGNEE_DEFAULT'),\n                    clickable: !this.isCompleted(),\n                    icon: 'create'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.STATUS',\n                    value: this.getTaskStatus(),\n                    key: 'status'\n                }\n            ),\n            new CardViewIntItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PRIORITY',\n                    value: this.taskDetails.priority,\n                    key: 'priority',\n                    editable: true,\n                    validators: [new CardViewItemLengthValidator(1, 10)]\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DUE_DATE',\n                    value: this.taskDetails.dueDate,\n                    key: 'dueDate',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DUE_DATE_DEFAULT'),\n                    editable: true,\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CATEGORY',\n                    value: this.taskDetails.category,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }\n            ),\n            new CardViewMapItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_NAME',\n                    value: parentInfoMap,\n                    key: 'parentName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.PARENT_NAME_DEFAULT'),\n                    clickable: true\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CREATED',\n                    value: this.taskDetails.created,\n                    key: 'created',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DURATION',\n                    value: this.getTaskDuration(),\n                    key: 'duration'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_TASK_ID',\n                    value: this.taskDetails.parentTaskId,\n                    key: 'parentTaskId'\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.END_DATE',\n                    value: this.taskDetails.endDate,\n                    key: 'endDate',\n                    format: this.dateFormat,\n                    locale: this.dateLocale\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ID',\n                    value: this.taskDetails.id,\n                    key: 'id'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DESCRIPTION',\n                    value: this.taskDetails.description,\n                    key: 'description',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DESCRIPTION_DEFAULT'),\n                    multiline: true,\n                    editable: true,\n                    validators: [new TaskDescriptionValidator()]\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME',\n                    value: this.formName,\n                    key: 'formName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT'),\n                    clickable: this.isFormClickable(),\n                    icon: 'create'\n                }\n            )\n        ];\n    }\n\n    /**\n     * Refresh the card data\n     */\n    initData() {\n        if (this.taskDetails) {\n            const parentInfoMap = this.getParentInfo();\n            const defaultProperties = this.initDefaultProperties(parentInfoMap);\n            const filteredProperties: string[] = this.appConfig.get('adf-task-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    /**\n     * Refresh the card data\n     */\n    refreshData() {\n        this.properties = this.properties.map((cardItem) => {\n            if (cardItem.key === 'formName' && cardItem.value !== this.formName) {\n                return new CardViewTextItemModel({\n                    label: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME',\n                    value: this.formName,\n                    key: 'formName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT'),\n                    clickable: this.isFormClickable(),\n                    icon: 'create'\n                });\n            } else {\n                return cardItem;\n            }\n        });\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    /**\n     * Loads current bpm userId\n     */\n    private loadCurrentBpmUserId(): void {\n        this.bpmUserService.getCurrentUserInfo().subscribe((res) => {\n            this.currentUserId = res ? +res.id : null;\n        });\n    }\n\n    /**\n     * Return the process parent information\n     */\n    getParentInfo(): Map<string, string> {\n        if (this.taskDetails.processInstanceId && this.taskDetails.processDefinitionName) {\n            return new Map([[this.taskDetails.processInstanceId, this.taskDetails.processDefinitionName]]);\n        }\n        return new Map();\n    }\n\n    /**\n     * Does the task have an assignee\n     */\n    public hasAssignee(): boolean {\n        return !!this.taskDetails.assignee;\n    }\n\n    /**\n     * Returns true if the task is assigned to logged in user\n     */\n    public isAssignedTo(userId: number): boolean {\n        return this.hasAssignee() ? this.taskDetails.assignee.id === userId : false;\n    }\n\n    /**\n     * Return true if the task assigned\n     */\n    public isAssignedToCurrentUser(): boolean {\n        return this.hasAssignee() && this.isAssignedTo(this.currentUserId);\n    }\n\n    /**\n     * Return true if the user is a candidate member\n     */\n    isCandidateMember(): boolean {\n        return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;\n    }\n\n    /**\n     * Return true if the task claimable\n     */\n    public isTaskClaimable(): boolean {\n        return !this.hasAssignee() && this.isCandidateMember();\n    }\n\n    /**\n     * Return true if the task claimed by candidate member.\n     */\n    public isTaskClaimedByCandidateMember(): boolean {\n        return this.isCandidateMember() && this.isAssignedToCurrentUser() && !this.isCompleted();\n    }\n\n    /**\n     * Returns task's status\n     */\n    getTaskStatus(): string {\n        return (this.taskDetails && this.taskDetails.isCompleted()) ? 'Completed' : 'Running';\n    }\n\n    onClaimTask(taskId: string) {\n        this.claim.emit(taskId);\n    }\n\n    onUnclaimTask(taskId: string) {\n        this.unclaim.emit(taskId);\n    }\n\n    /**\n     * Returns true if the task is completed\n     */\n    isCompleted(): boolean {\n        return this.taskDetails && !!this.taskDetails.endDate;\n    }\n\n    isFormClickable(): boolean {\n        return !!this.formName && !this.isCompleted();\n    }\n\n    getTaskDuration(): string {\n        return this.taskDetails.duration ? `${this.taskDetails.duration} ms` : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport {\n  FormModel,\n  ContentLinkModel,\n  FormFieldValidator,\n  FormOutcomeEvent,\n  AuthenticationService,\n  TranslationService,\n  FormFieldModel\n} from '@alfresco/adf-core';\nimport { TaskDetailsModel } from '../../models/task-details.model';\nimport { TaskListService } from '../../services/tasklist.service';\nimport { UserRepresentation, LightGroupRepresentation, LightUserRepresentation } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'adf-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskFormComponent implements OnInit {\n\n  /** (**required**) The id of the task whose details we are asking for. */\n  @Input()\n  taskId: string;\n\n  /** Toggles rendering of the form title. */\n  @Input()\n  showFormTitle: boolean = false;\n\n  /** Toggles rendering of the `Complete` outcome button. */\n  @Input()\n  showFormCompleteButton: boolean = true;\n\n  /** Toggles rendering of the `Save` outcome button. */\n  @Input()\n  showFormSaveButton: boolean = true;\n\n  /** Toggle rendering of the `Cancel` button. */\n  @Input()\n  showCancelButton: boolean = true;\n\n  /** Toggles read-only state of the form. All form widgets render as read-only\n   * if enabled.\n   */\n  @Input()\n  readOnlyForm: boolean = false;\n\n  /** Toggles rendering of the `Refresh` button. */\n  @Input()\n  showFormRefreshButton: boolean = true;\n\n  /** Toggle rendering of the validation icon next to the form title. */\n  @Input()\n  showFormValidationIcon: boolean = true;\n\n  /** Field validators for use with the form. */\n  @Input()\n  fieldValidators: FormFieldValidator[] = [];\n\n  /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n  @Output()\n  formSaved = new EventEmitter<FormModel>();\n\n  /** Emitted when the form is submitted with the `Complete` outcome. */\n  @Output()\n  formCompleted = new EventEmitter<FormModel>();\n\n  /** Emitted when the form field content is clicked. */\n  @Output()\n  formContentClicked = new EventEmitter<ContentLinkModel>();\n\n  /** Emitted when the form is loaded or reloaded. */\n  @Output()\n  formLoaded = new EventEmitter<FormModel>();\n\n  /** Emitted when the form associated with the form task is attached. */\n  @Output()\n  showAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emitted when any outcome is executed. Default behaviour can be prevented\n   * via `event.preventDefault()`.\n   */\n  @Output()\n  executeOutcome = new EventEmitter<FormOutcomeEvent>();\n\n  /** Emitted when the form associated with the task is completed. */\n  @Output()\n  completed = new EventEmitter<void>();\n\n  /** Emitted when the supplied form values have a validation error. */\n  @Output()\n  formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n  /** Emitted when an error occurs. */\n  @Output()\n  error = new EventEmitter<any>();\n\n  /** Emitted when the \"Cancel\" button is clicked. */\n  @Output()\n  cancel = new EventEmitter<void>();\n\n  /** Emitted when the task is claimed. */\n  @Output()\n  taskClaimed = new EventEmitter<string>();\n\n  /** Emitted when the task is unclaimed (ie, requeued).. */\n  @Output()\n  taskUnclaimed = new EventEmitter<string>();\n\n  taskDetails: TaskDetailsModel;\n  currentLoggedUser: UserRepresentation;\n  loading: boolean = false;\n  completedTaskMessage: string;\n  internalReadOnlyForm: boolean = false;\n\n  constructor(\n    private taskListService: TaskListService,\n    private authService: AuthenticationService,\n    private translationService: TranslationService\n  ) {\n  }\n\n  ngOnInit() {\n    this.authService.getBpmLoggedUser().subscribe(user => {\n      this.currentLoggedUser = user;\n    });\n    this.loadTask(this.taskId);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const taskId = changes['taskId'];\n    if (taskId && taskId.currentValue) {\n        this.loadTask(this.taskId);\n        return;\n    }\n  }\n\n  loadTask(taskId: string) {\n    this.loading = true;\n    if (taskId) {\n      this.taskListService.getTaskDetails(taskId).subscribe(\n        (res: TaskDetailsModel) => {\n            this.taskDetails = res;\n\n            if (!this.taskDetails.name) {\n                this.taskDetails.name = 'No name';\n            }\n\n            const endDate: any = res.endDate;\n            if (endDate && !isNaN(endDate.getTime())) {\n              this.internalReadOnlyForm = true;\n            } else {\n                this.internalReadOnlyForm = this.readOnlyForm;\n            }\n            this.loading = false;\n        });\n    }\n  }\n\n  onFormSaved(savedForm: FormModel) {\n    this.formSaved.emit(savedForm);\n  }\n\n  onFormCompleted(form: FormModel) {\n      this.formCompleted.emit(form);\n  }\n\n  onFormLoaded(form: FormModel): void {\n    this.formLoaded.emit(form);\n  }\n\n  onFormContentClick(content: ContentLinkModel): void {\n      this.formContentClicked.emit(content);\n  }\n\n  onFormExecuteOutcome(outcome: FormOutcomeEvent) {\n    this.executeOutcome.emit(outcome);\n  }\n\n  onFormError(error: any) {\n    this.formError.emit(error);\n  }\n\n  onError(error: any) {\n    this.error.emit(error);\n  }\n\n  onCompleteTask() {\n    this.taskListService.completeTask(this.taskDetails.id).subscribe(\n      () => this.completed.emit(),\n      (error) => this.error.emit(error));\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  onShowAttachForm() {\n    this.showAttachForm.emit();\n  }\n\n  hasFormKey(): boolean {\n    return (this.taskDetails && (!!this.taskDetails.formKey));\n  }\n\n  isStandaloneTask(): boolean {\n    return !(this.taskDetails && (!!this.taskDetails.processDefinitionId));\n  }\n\n  isTaskLoaded(): boolean {\n      return !!this.taskDetails;\n  }\n\n  isCompletedTask(): boolean {\n      return this.taskDetails && this.taskDetails.endDate !== undefined && this.taskDetails.endDate !== null;\n  }\n\n  isCompleteButtonVisible(): boolean {\n      return !this.hasFormKey() && this.isTaskActive() && this.isCompleteButtonEnabled();\n  }\n\n  isTaskActive() {\n    return this.taskDetails && this.taskDetails.duration === null;\n  }\n\n  isAssigned(): boolean {\n    return !!this.taskDetails.assignee;\n  }\n\n  private hasEmailAddress(): boolean {\n        return this.taskDetails.assignee.email ? true : false;\n  }\n\n  isAssignedToMe(): boolean {\n      return this.isAssigned() && this.hasEmailAddress() ?\n          this.isEmailEqual() :\n          this.isExternalIdEqual();\n  }\n\n  private isEmailEqual(): boolean {\n    return (this.taskDetails.assignee && this.currentLoggedUser) && ( this.taskDetails.assignee.email.toLocaleLowerCase() === this.currentLoggedUser.email.toLocaleLowerCase());\n  }\n\n  private isExternalIdEqual(): boolean {\n    return (this.taskDetails.assignee && this.currentLoggedUser) && (this.taskDetails.assignee.externalId === this.currentLoggedUser.externalId);\n  }\n\n  isCompleteButtonEnabled(): boolean {\n    return this.isAssignedToMe() || this.canInitiatorComplete();\n  }\n\n  canInitiatorComplete(): boolean {\n      return this.taskDetails.initiatorCanCompleteTask;\n  }\n\n  isReadOnlyForm(): boolean {\n    let readOnlyForm: boolean;\n    if (this.isCandidateMember()) {\n      readOnlyForm = this.internalReadOnlyForm || !this.isAssignedToMe();\n    } else {\n      readOnlyForm = this.internalReadOnlyForm || !(this.isAssignedToMe() || this.canCurrentUserAsInitiatorComplete() || this.isCurrentUserInvolved());\n    }\n\n    return readOnlyForm;\n  }\n\n  isCurrentUserInvolved(): boolean {\n    let isInvolved = false;\n    if (this.taskDetails.involvedPeople && this.currentLoggedUser) {\n      const userInvolved = this.taskDetails.involvedPeople.find(\n        (involvedUser: LightUserRepresentation) =>\n          involvedUser.email.toLocaleLowerCase() === this.currentLoggedUser.email.toLocaleLowerCase() ||\n          involvedUser.id + '' === this.currentLoggedUser.externalId\n        );\n      isInvolved = !!userInvolved;\n    }\n\n    if (this.taskDetails.involvedGroups?.length && this.currentLoggedUser.groups?.length && !isInvolved) {\n        const userGroup = this.taskDetails.involvedGroups.find(\n            (involvedGroup: LightGroupRepresentation) =>\n                this.currentLoggedUser.groups.find(\n                    group => group.name === involvedGroup.name.toLocaleLowerCase() || group.id === involvedGroup.id\n                )\n        );\n        isInvolved = !!userGroup;\n    }\n    return isInvolved;\n  }\n\n  canCurrentUserAsInitiatorComplete(): boolean {\n    return this.canInitiatorComplete() && this.isProcessInitiator();\n  }\n\n  isProcessInitiator(): boolean {\n    return this.currentLoggedUser && ( this.currentLoggedUser.id === +this.taskDetails.processInstanceStartUserId);\n  }\n\n  isSaveButtonVisible(): boolean {\n    return this.showFormSaveButton && (!this.canInitiatorComplete() || this.isAssignedToMe() || this.isCurrentUserInvolved());\n  }\n\n  canCompleteNoFormTask(): boolean {\n    return this.isReadOnlyForm();\n  }\n\n  getCompletedTaskTranslatedMessage(): Observable<string> {\n    return this.translationService.get('ADF_TASK_FORM.COMPLETED_TASK.TITLE', { taskName: this.taskDetails.name });\n  }\n\n  isCandidateMember(): boolean {\n      return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;\n  }\n\n  isTaskClaimable(): boolean {\n      return this.isCandidateMember() && !this.isAssigned();\n  }\n\n  isTaskClaimedByCandidateMember(): boolean {\n    return this.isCandidateMember() && this.isAssignedToMe() && !this.isCompletedTask();\n  }\n\n  reloadTask() {\n    this.loadTask(this.taskId);\n  }\n\n  onClaimTask(taskId: string) {\n    this.taskClaimed.emit(taskId);\n  }\n\n  onClaimTaskError(error: any) {\n    this.error.emit(error);\n  }\n\n  onUnclaimTask(taskId: string) {\n    this.taskUnclaimed.emit(taskId);\n  }\n\n  onUnclaimTaskError(error: any) {\n    this.error.emit(error);\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    PeopleProcessService, UserProcessModel,\n    CardViewUpdateService,\n    ClickNotification,\n    LogService,\n    UpdateNotification,\n    CommentsComponent,\n    ContentLinkModel, FormFieldValidator, FormModel, FormOutcomeEvent\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    OnDestroy\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable, Observer, of, Subject } from 'rxjs';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { catchError, share, takeUntil } from 'rxjs/operators';\nimport { TaskFormComponent } from './task-form/task-form.component';\n\n@Component({\n    selector: 'adf-task-details',\n    templateUrl: './task-details.component.html',\n    styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit, OnChanges, OnDestroy {\n\n    @ViewChild('activitiComments')\n    activitiComments: CommentsComponent;\n\n    @ViewChild('activitiChecklist')\n    activitiChecklist: any;\n\n    @ViewChild('errorDialog')\n    errorDialog: TemplateRef<any>;\n\n    @ViewChild('activitiTaskForm')\n    taskFormComponent: TaskFormComponent;\n\n    /** Toggles debug mode. */\n    @Input()\n    debugMode: boolean = false;\n\n    /** (**required**) The id of the task whose details we are asking for. */\n    @Input()\n    taskId: string;\n\n    /** Automatically renders the next task when the current one is completed. */\n    @Input()\n    showNextTask: boolean = true;\n\n    /** Toggles task details Header component. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles collapsed/expanded state of the Header component. */\n    @Input()\n    showHeaderContent: boolean = true;\n\n    /** Toggles `Involve People` feature for the Header component. */\n    @Input()\n    showInvolvePeople: boolean = true;\n\n    /** Toggles `Comments` feature for the Header component. */\n    @Input()\n    showComments: boolean = true;\n\n    /** Toggles `Checklist` feature for the Header component. */\n    @Input()\n    showChecklist: boolean = true;\n\n    /** Toggles rendering of the form title. */\n    @Input()\n    showFormTitle: boolean = false;\n\n    /** Toggles rendering of the `Complete` outcome button. */\n    @Input()\n    showFormCompleteButton: boolean = true;\n\n    /** Toggles rendering of the `Save` outcome button. */\n    @Input()\n    showFormSaveButton: boolean = true;\n\n    /** Toggles read-only state of the form. All form widgets render as read-only\n     * if enabled.\n     */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Toggles rendering of the `Refresh` button. */\n    @Input()\n    showFormRefreshButton: boolean = true;\n\n    /** Field validators for use with the form. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form field content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when a checklist task is created. */\n    @Output()\n    taskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    taskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /** Emitted when a task is assigned. */\n    @Output()\n    assignTask: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when a task is claimed. */\n    @Output()\n    claimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when a task is unclaimed. */\n    @Output()\n    unClaimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    taskDetails: TaskDetailsModel;\n    taskFormName: string = null;\n    taskPeople: UserProcessModel[] = [];\n    noTaskDetailsTemplateComponent: TemplateRef<any>;\n    showAssignee: boolean = false;\n    showAttachForm: boolean = false;\n    internalReadOnlyForm: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    public errorDialogRef: MatDialogRef<TemplateRef<any>>;\n    private onDestroy$ = new Subject<boolean>();\n\n    peopleSearch: Observable<UserProcessModel[]>;\n\n    data: any;\n\n    constructor(private taskListService: TaskListService,\n                private peopleProcessService: PeopleProcessService,\n                private logService: LogService,\n                private cardViewUpdateService: CardViewUpdateService,\n                private dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        this.peopleSearch = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer).pipe(share());\n\n        if (this.taskId) {\n            this.loadDetails(this.taskId);\n        }\n\n        this.cardViewUpdateService.itemUpdated$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(this.updateTaskDetails.bind(this));\n\n        this.cardViewUpdateService.itemClicked$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(this.clickTaskDetails.bind(this));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const taskId = changes.taskId;\n        this.showAssignee = false;\n\n        if (taskId && !taskId.currentValue) {\n            this.reset();\n        } else if (taskId && taskId.currentValue) {\n            this.loadDetails(taskId.currentValue);\n        }\n    }\n\n    isShowAttachForm(): boolean {\n        return this.showAttachForm;\n    }\n\n    /**\n     * Reset the task details\n     */\n    private reset() {\n        this.taskDetails = null;\n    }\n\n    isTaskActive() {\n        return this.taskDetails && this.taskDetails.duration === null;\n    }\n\n    /**\n     * Save a task detail and update it after a successful response\n     *\n     * @param updateNotification\n     */\n    private updateTaskDetails(updateNotification: UpdateNotification) {\n        this.taskListService\n            .updateTask(this.taskId, updateNotification.changed)\n            .pipe(catchError(() => {\n                this.cardViewUpdateService.updateElement(updateNotification.target);\n                return of(null);\n            }))\n            .subscribe(() => this.loadDetails(this.taskId));\n    }\n\n    private clickTaskDetails(clickNotification: ClickNotification) {\n        if (clickNotification.target.key === 'assignee') {\n            this.showAssignee = true;\n        }\n        if (clickNotification.target.key === 'formName') {\n            this.showAttachForm = true;\n        }\n    }\n\n    /**\n     * Load the activiti task details\n     * @param taskId\n     */\n    private loadDetails(taskId: string) {\n        this.taskPeople = [];\n\n        if (taskId) {\n            this.taskListService.getTaskDetails(taskId).subscribe(\n                (res: TaskDetailsModel) => {\n                    this.showAttachForm = false;\n                    this.taskDetails = res;\n\n                    if (this.taskDetails.name === 'null') {\n                        this.taskDetails.name = 'No name';\n                    }\n\n                    const endDate: any = res.endDate;\n                    if (endDate && !isNaN(endDate.getTime())) {\n                        this.internalReadOnlyForm = true;\n                    } else {\n                        this.internalReadOnlyForm = this.readOnlyForm;\n                    }\n\n                    if (this.taskDetails && this.taskDetails.involvedPeople) {\n                        this.taskDetails.involvedPeople.forEach((user) => {\n                            this.taskPeople.push(new UserProcessModel(user));\n                        });\n                    }\n                });\n        }\n    }\n\n    isAssigned(): boolean {\n        return !!this.taskDetails.assignee;\n    }\n\n    /**\n     * Retrieve the next open task\n     * @param processInstanceId\n     * @param processDefinitionId\n     */\n    private loadNextTask(processInstanceId: string, processDefinitionId: string): void {\n        const requestNode = new TaskQueryRequestRepresentationModel(\n            {\n                processInstanceId: processInstanceId,\n                processDefinitionId: processDefinitionId\n            }\n        );\n        this.taskListService.getTasks(requestNode).subscribe(\n            (response) => {\n                if (response && response.length > 0) {\n                    this.taskDetails = new TaskDetailsModel(response[0]);\n                } else {\n                    this.reset();\n                }\n            }, (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    /**\n     * Complete button clicked\n     */\n    onComplete(): void {\n        this.onFormCompleted(null);\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm = true;\n    }\n\n    onCancelAttachForm() {\n        this.showAttachForm = false;\n    }\n\n    onCompleteAttachForm() {\n        this.taskFormName = null;\n        this.showAttachForm = false;\n        this.taskFormComponent.loadTask(this.taskId);\n        this.loadDetails(this.taskId);\n    }\n\n    onFormContentClick(content: ContentLinkModel): void {\n        this.formContentClicked.emit(content);\n    }\n\n    onFormSaved(form: FormModel): void {\n        this.formSaved.emit(form);\n    }\n\n    onFormCompleted(form: FormModel): void {\n        this.formCompleted.emit(form);\n        if (this.showNextTask && (this.taskDetails.processInstanceId || this.taskDetails.processDefinitionId)) {\n            this.loadNextTask(this.taskDetails.processInstanceId, this.taskDetails.processDefinitionId);\n        }\n    }\n\n    onFormLoaded(form: FormModel): void {\n        this.taskFormName = (form && form.name ? form.name : null);\n        this.formLoaded.emit(form);\n    }\n\n    onChecklistTaskCreated(task: TaskDetailsModel): void {\n        this.taskCreated.emit(task);\n    }\n\n    onChecklistTaskDeleted(taskId: string): void {\n        this.taskDeleted.emit(taskId);\n    }\n\n    onFormError(error: any): void {\n        this.errorDialogRef = this.dialog.open(this.errorDialog, { width: '500px' });\n        this.error.emit(error);\n    }\n\n    onFormExecuteOutcome(event: FormOutcomeEvent): void {\n        this.executeOutcome.emit(event);\n    }\n\n    closeErrorDialog(): void {\n        this.dialog.closeAll();\n    }\n\n    onClaimAction(taskId: string): void {\n        this.claimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    onUnclaimAction(taskId: string): void {\n        this.unClaimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(null, searchedWord)\n            .subscribe(\n                users => {\n                    users = users.filter((user) => user.id !== this.taskDetails.assignee.id);\n                    this.peopleSearchObserver.next(users);\n                },\n                () => this.logService.error('Could not load users')\n            );\n    }\n\n    onCloseSearch() {\n        this.showAssignee = false;\n    }\n\n    assignTaskToUser(selectedUser: UserProcessModel) {\n        this.taskListService\n            .assignTask(this.taskDetails.id, selectedUser)\n            .subscribe(() => {\n                this.logService.info('Task Assigned to ' + selectedUser.email);\n                this.assignTask.emit();\n            });\n        this.showAssignee = false;\n    }\n\n    getTaskHeaderViewClass(): string {\n        if (this.showAssignee) {\n            return 'assign-edit-view';\n        } else {\n            return 'default-view';\n        }\n    }\n\n    isReadOnlyComment(): boolean {\n        return (this.taskDetails && this.taskDetails.isCompleted()) && (this.taskPeople && this.taskPeople.length === 0);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { TaskDetailsComponent } from './task-details.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: 'adf-no-task-details-template, no-task-details-template'\n})\nexport class NoTaskDetailsTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private activitiTaskDetails: TaskDetailsComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.activitiTaskDetails.noTaskDetailsTemplateComponent = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, forkJoin, from, throwError } from 'rxjs';\nimport { FilterRepresentationModel } from '../models/filter.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserFiltersApi } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskFilterService {\n\n    private _userFiltersApi;\n    get userFiltersApi(): UserFiltersApi {\n        this._userFiltersApi = this._userFiltersApi ?? new UserFiltersApi(this.apiService.getInstance());\n        return this._userFiltersApi;\n    }\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates and returns the default filters for a process app.\n     * @param appId ID of the target app\n     * @returns Array of default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterRepresentationModel[]> {\n        const myTasksFilter = this.getMyTasksFilterInstance(appId, 0);\n        const myTaskObservable = this.addFilter(myTasksFilter);\n\n        const involvedTasksFilter = this.getInvolvedTasksFilterInstance(appId, 1);\n        const involvedObservable = this.addFilter(involvedTasksFilter);\n\n        const queuedTasksFilter = this.getQueuedTasksFilterInstance(appId, 2);\n        const queuedObservable = this.addFilter(queuedTasksFilter);\n\n        const completedTasksFilter = this.getCompletedTasksFilterInstance(appId, 3);\n        const completeObservable = this.addFilter(completedTasksFilter);\n\n        return new Observable((observer) => {\n            forkJoin([\n                    myTaskObservable,\n                    involvedObservable,\n                    queuedObservable,\n                    completeObservable\n                ]\n            ).subscribe(\n                (res) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === involvedTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: involvedTasksFilter.filter,\n                                appId\n                            }));\n                        } else if (filter.name === myTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: myTasksFilter.filter,\n                                appId\n                            }));\n                        } else if (filter.name === queuedTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: queuedTasksFilter.filter,\n                                appId\n                            }));\n                        } else if (filter.name === completedTasksFilter.name) {\n                            filters.push(new FilterRepresentationModel({\n                                ...filter,\n                                filter: completedTasksFilter.filter,\n                                appId\n                            }));\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.logService.error(err);\n                });\n        });\n    }\n\n    /**\n     * Gets all task filters for a process app.\n     * @param appId Optional ID for a specific app\n     * @returns Array of task filter details\n     */\n    getTaskListFilters(appId?: number): Observable<FilterRepresentationModel[]> {\n        return from(this.callApiTaskFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    response.data.forEach((filter: FilterRepresentationModel) => {\n                        const filterModel = new FilterRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterById(filterId: number, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.id === filterId)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a task filter by name.\n     * @param taskName Name of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterByName(taskName: string, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.name === taskName)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Adds a new task filter\n     * @param filter The new filter to add\n     * @returns Details of task filter just added\n     */\n    addFilter(filter: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        return from(this.userFiltersApi.createUserTaskFilter(filter))\n            .pipe(\n                map((response: FilterRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserTaskFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of task filters\n     */\n    callApiTaskFilters(appId?: number): Promise<any> {\n        if (appId) {\n            return this.userFiltersApi.getUserTaskFilters({ appId: appId });\n        } else {\n            return this.userFiltersApi.getUserTaskFilters();\n        }\n    }\n\n    /**\n     * Creates and returns a filter for \"My Tasks\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getMyTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'My Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-inbox',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'assignee' },\n            index\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Involved\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getInvolvedTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Involved Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-align-left',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'involved' },\n            index\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Queued Tasks\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getQueuedTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Queued Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-record',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'candidate' },\n            index\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Completed\" task instances.\n     * @param appId ID of the target app\n     * @param index of the filter (optional)\n     * @returns The newly created filter\n     */\n    getCompletedTasksFilterInstance(appId: number, index?: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Completed Tasks',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-ok-sign',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'completed', 'assignment': 'involved' },\n            index\n        });\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FilterParamsModel, FilterRepresentationModel } from '../models/filter.model';\nimport { TaskFilterService } from './../services/task-filter.service';\nimport { TaskListService } from './../services/tasklist.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-task-filters',\n    templateUrl: './task-filters.component.html',\n    styleUrls: ['./task-filters.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskFiltersComponent implements OnInit, OnChanges {\n\n    /** Parameters to use for the task filter. If there is no match then\n     * the default filter (the first one the list) is selected.\n     */\n    @Input()\n    filterParam: FilterParamsModel;\n\n    /** Emitted when a filter is being clicked from the UI. */\n    @Output()\n    filterClicked: EventEmitter<FilterRepresentationModel> = new EventEmitter<FilterRepresentationModel>();\n\n    /** Emitted when a filter is being selected based on the filterParam input. */\n    @Output()\n    filterSelected: EventEmitter<FilterRepresentationModel> = new EventEmitter<FilterRepresentationModel>();\n\n    /** Emitted when the list is loaded. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs during loading. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggles display of the filter's icon. */\n    @Input()\n    showIcon: boolean;\n\n    filter$: Observable<FilterRepresentationModel>;\n\n    currentFilter: FilterRepresentationModel;\n\n    filters: FilterRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    constructor(private taskFilterService: TaskFilterService,\n                private taskListService: TaskListService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        const appId = changes['appId'];\n        const filter = changes['filterParam'];\n        if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (appId && appId.currentValue !== appId.previousValue) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectFilterAndEmit(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the task list filtered by appId or by appName\n     * @param appId\n     * @param appName\n     */\n    getFilters(appId?: number, appName?: string) {\n        appName ? this.getFiltersByAppName(appName) : this.getFiltersByAppId(appId);\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.taskFilterService.getTaskListFilters(appId).subscribe(\n            (res: FilterRepresentationModel[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.createFiltersByAppId(appId);\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Create default filters by appId\n     * @param appId\n     */\n    createFiltersByAppId(appId?: number) {\n        this.taskFilterService.createDefaultFilters(appId).subscribe(\n            (resDefault: FilterRepresentationModel[]) => {\n                this.resetFilter();\n                this.filters = resDefault;\n                this.selectFilter(this.filterParam);\n                this.success.emit(resDefault);\n            },\n            (errDefault: any) => {\n                this.error.emit(errDefault);\n            }\n        );\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param newFilter\n     */\n    public selectFilter(newFilter: FilterParamsModel) {\n        if (newFilter) {\n            this.currentFilter = this.filters.find( (filter, index) =>\n                newFilter.index === index ||\n                newFilter.id === filter.id ||\n                (newFilter.name &&\n                    (newFilter.name.toLocaleLowerCase() === filter.name.toLocaleLowerCase())\n                ));\n        }\n    }\n\n    public selectFilterAndEmit(newFilter: FilterParamsModel) {\n        this.selectFilter(newFilter);\n        this.filterSelected.emit(this.currentFilter);\n    }\n\n    /**\n     * Selects and emits the clicked filter.\n     */\n    onFilterClick(filter: FilterParamsModel) {\n        this.selectFilter(filter);\n        this.filterClicked.emit(this.currentFilter);\n    }\n\n    /**\n     * Select filter with task\n     * @param taskId\n     */\n    public selectFilterWithTask(taskId: string) {\n        const filteredFilterList: FilterRepresentationModel[] = [];\n        this.taskListService.getFilterForTaskById(taskId, this.filters).subscribe(\n            (filter: FilterRepresentationModel) => {\n                filteredFilterList.push(filter);\n            },\n            (err) => {\n                this.error.emit(err);\n            },\n            () => {\n                if (filteredFilterList.length > 0) {\n                    this.selectFilter(filteredFilterList[0]);\n                    this.filterSelected.emit(this.currentFilter);\n                }\n            });\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     * @param filteredFilterList\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): FilterRepresentationModel {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Directive,\n    Input,\n    Output,\n    EventEmitter,\n    HostListener\n} from '@angular/core';\nimport { TaskListService } from '../../services/tasklist.service';\nimport { LogService } from '@alfresco/adf-core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n    selector: '[adf-claim-task]'\n})\nexport class ClaimTaskDirective {\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task cannot be claimed. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    invalidParams: string[] = [];\n\n    constructor(\n        private taskListService: TaskListService,\n        private logService: LogService) {}\n\n    ngOnInit() {\n        this.validateInputs();\n    }\n\n    validateInputs() {\n        if (!this.isTaskValid()) {\n            this.invalidParams.push('taskId');\n        }\n\n        if (this.invalidParams.length) {\n            throw new Error(\n                `Attribute ${this.invalidParams.join(', ')} is required`\n            );\n        }\n    }\n\n    isTaskValid(): boolean {\n        return this.taskId && this.taskId.length > 0;\n    }\n\n    @HostListener('click')\n    async onClick() {\n        try {\n            await this.claimTask();\n        } catch (error) {\n            this.error.emit(error);\n        }\n    }\n\n    private async claimTask() {\n        await this.taskListService.claimTask(this.taskId).subscribe(\n            () => {\n                this.logService.info('Task claimed');\n                this.success.emit(this.taskId);\n            },\n            error => this.error.emit(error)\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Directive,\n    HostListener,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\nimport { TaskListService } from '../../services/tasklist.service';\nimport { LogService } from '@alfresco/adf-core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[adf-unclaim-task]'\n})\nexport class UnclaimTaskDirective {\n    /** (Required) The id of the task. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when the task is released. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task cannot be released. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    invalidParams: string[] = [];\n\n    constructor(\n        private taskListService: TaskListService,\n        private logService: LogService) {}\n\n    ngOnInit() {\n        this.validateInputs();\n    }\n\n    validateInputs() {\n        if (!this.isTaskValid()) {\n            this.invalidParams.push('taskId');\n        }\n        if (this.invalidParams.length) {\n            throw new Error(\n                `Attribute ${this.invalidParams.join(', ')} is required`\n            );\n        }\n    }\n\n    isTaskValid(): boolean {\n        return this.taskId && this.taskId.length > 0;\n    }\n\n    @HostListener('click')\n    async onClick() {\n        try {\n            await this.unclaimTask();\n        } catch (error) {\n            this.error.emit(error);\n        }\n    }\n\n    private async unclaimTask() {\n        await this.taskListService.unclaimTask(this.taskId).subscribe(\n            () => {\n                this.logService.info('Task unclaimed');\n                this.success.emit(this.taskId);\n            },\n            error => this.error.emit(error)\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { TaskListService } from './../services/tasklist.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: 'button[adf-task-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class TaskAuditDirective implements OnChanges {\n\n    /** (**required**) The id of the task. */\n    @Input('task-id')\n    taskId: string;\n\n    /** Name of the downloaded file (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format of the audit information. Can be \"pdf\" or \"json\". */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit when the decorated element is clicked. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    public audit: any;\n\n    constructor(private contentService: ContentService,\n                private taskListService: TaskListService) {\n    }\n\n    ngOnChanges(): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType(): boolean {\n        return this.format && (this.isJsonFormat() || this.isPdfFormat());\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.taskListService.fetchTaskAuditPdfById(this.taskId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.taskListService.fetchTaskAuditJsonById(this.taskId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    LogService, UserPreferencesService, UserPreferenceValues, UserProcessModel, FormFieldModel, FormModel,\n    MOMENT_DATE_FORMATS, MomentDateAdapter\n} from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { switchMap, defaultIfEmpty, takeUntil } from 'rxjs/operators';\nimport { FormBuilder, AbstractControl, Validators, FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'adf-start-task',\n    templateUrl: './start-task.component.html',\n    styleUrls: ['./start-task.component.scss'],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartTaskComponent implements OnInit, OnDestroy {\n\n    public FORMAT_DATE: string = 'DD/MM/YYYY';\n    MAX_LENGTH: number = 255;\n\n    /** (required) The id of the app. */\n    @Input()\n    appId: number;\n\n    /** Default Task Name. */\n    @Input()\n    name: string = '';\n\n    /** Emitted when the task is successfully created. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the cancel button is clicked by the user. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    taskDetailsModel: TaskDetailsModel = new TaskDetailsModel();\n    forms$: Observable<Form[]>;\n    assigneeId: number;\n    field: FormFieldModel;\n    taskForm: FormGroup;\n    dateError: boolean = false;\n    maxTaskNameLength: number = this.MAX_LENGTH;\n    loading = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     * @param taskService\n     */\n    constructor(private taskService: TaskListService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService,\n                private formBuilder: FormBuilder,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (this.name) {\n            this.taskDetailsModel.name = this.name;\n        }\n\n        this.validateMaxTaskNameLength();\n\n        this.field = new FormFieldModel(new FormModel(), { id: this.assigneeId, value: this.assigneeId, placeholder: 'Assignee' });\n\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n\n        this.loadFormsTask();\n        this.buildForm();\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    buildForm(): void {\n        this.taskForm = this.formBuilder.group({\n            name: new FormControl(this.taskDetailsModel.name, [Validators.required, Validators.maxLength(this.maxTaskNameLength), this.whitespaceValidator]),\n            description: new FormControl('', [this.whitespaceValidator]),\n            formKey: new FormControl('')\n        });\n\n        this.taskForm.valueChanges\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(taskFormValues => this.setTaskDetails(taskFormValues));\n    }\n\n    whitespaceValidator(control: FormControl): any {\n        if (control.value) {\n            const isWhitespace = (control.value || '').trim().length === 0;\n            const isValid =  control.value.length === 0 || !isWhitespace;\n            return isValid ? null : { 'whitespace': true };\n        }\n        return null;\n    }\n\n    setTaskDetails(form: any) {\n        this.taskDetailsModel.name = form.name;\n        this.taskDetailsModel.description = form.description;\n        this.taskDetailsModel.formKey = form.formKey ? form.formKey.toString() : null;\n    }\n\n    isFormValid(): boolean {\n        return this.taskForm.valid && !this.dateError && !this.loading;\n    }\n\n    saveTask(): void {\n        this.loading = true;\n        if (this.appId) {\n            this.taskDetailsModel.category = this.appId.toString();\n        }\n        this.taskService.createNewTask(this.taskDetailsModel)\n            .pipe(\n                switchMap((createRes: any) =>\n                    this.attachForm(createRes.id, this.taskDetailsModel.formKey).pipe(\n                        defaultIfEmpty(createRes),\n                        switchMap((attachRes: any) =>\n                            this.assignTaskByUserId(createRes.id, this.assigneeId).pipe(\n                                defaultIfEmpty(attachRes ? attachRes : createRes)\n                            )\n                        )\n                    )\n                )\n            )\n            .subscribe(\n                (res: any) => {\n                    this.loading = false;\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.loading = false;\n                    this.error.emit(err);\n                    this.logService.error('An error occurred while creating new task');\n                });\n    }\n\n    getAssigneeId(userId: number): void {\n        this.assigneeId = userId;\n    }\n\n    private attachForm(taskId: string, formKey: string): Observable<any> {\n        let response = of();\n        if (taskId && formKey) {\n            response = this.taskService.attachFormToATask(taskId, parseInt(formKey, 10));\n        }\n        return response;\n    }\n\n    private assignTaskByUserId(taskId: string, userId: any): Observable<any> {\n        let response = of();\n        if (taskId && userId) {\n            response = this.taskService.assignTaskByUserId(taskId, userId);\n        }\n        return response;\n    }\n\n    onCancel(): void {\n        this.cancel.emit();\n    }\n\n    private loadFormsTask(): void {\n        this.forms$ = this.taskService.getFormList();\n    }\n\n    isUserNameEmpty(user: UserProcessModel): boolean {\n        return !user || (this.isEmpty(user.firstName) && this.isEmpty(user.lastName));\n    }\n\n    private isEmpty(data: string): boolean {\n        return data === undefined || data === null || data.trim().length === 0;\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    onDateChanged(newDateValue: any) {\n        this.dateError = false;\n\n        if (newDateValue) {\n            let momentDate: moment.Moment;\n\n            if (typeof newDateValue === 'string') {\n                momentDate = moment(newDateValue, this.FORMAT_DATE, true);\n            } else {\n                momentDate = newDateValue;\n            }\n\n            if (momentDate.isValid()) {\n                this.taskDetailsModel.dueDate = momentDate.toDate();\n            } else {\n                this.dateError = true;\n                this.taskDetailsModel.dueDate = null;\n            }\n        } else {\n            this.taskDetailsModel.dueDate = null;\n        }\n    }\n\n    private validateMaxTaskNameLength() {\n        if (this.maxTaskNameLength > this.MAX_LENGTH) {\n            this.maxTaskNameLength = this.MAX_LENGTH;\n            this.logService.log(`the task name length cannot be greater than ${this.MAX_LENGTH}`);\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.taskForm.get('name');\n    }\n\n    get descriptionController(): AbstractControl {\n        return this.taskForm.get('description');\n    }\n\n    get formKeyController(): AbstractControl {\n        return this.taskForm.get('formKey');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-task-standalone',\n    templateUrl: './task-standalone.component.html',\n    styleUrls: ['./task-standalone.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class TaskStandaloneComponent {\n\n    /** Name of the task. */\n    @Input()\n    taskName;\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** If true then Task completed message is shown and `Complete` and `Cancel` buttons are hidden. */\n    @Input()\n    isCompleted: boolean = false;\n\n    /** Toggles rendering of the `Complete` button. */\n    @Input()\n    hasCompletePermission: boolean = true;\n\n    // TODO: rename all with show prefix\n    /** Toggles rendering of the `Cancel` button. */\n    @Input()\n    hideCancelButton: boolean = true;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the task is completed. */\n    @Output()\n    complete: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the form task is attached. */\n    @Output()\n    showAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() { }\n\n    onCancelButtonClick(): void {\n        this.cancel.emit();\n    }\n\n    onCompleteButtonClick(): void {\n        this.complete.emit();\n    }\n\n    hasCompleteButton(): boolean {\n        return this.hasCompletePermission && !this.isCompleted;\n    }\n\n    hasCancelButton(): boolean {\n        return !this.hideCancelButton && !this.isCompleted;\n    }\n\n    hasAttachFormButton(): boolean {\n        return !this.isCompleted;\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm.emit();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Form } from '../models/form.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'adf-attach-form',\n    templateUrl: './attach-form.component.html',\n    styleUrls: ['./attach-form.component.scss']\n})\n\nexport class AttachFormComponent implements OnInit, OnChanges {\n    constructor(private taskService: TaskListService,\n                private logService: LogService,\n                private formService: FormService) { }\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** Identifier of the form to attach. */\n    @Input()\n    formKey;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancelAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form is attached successfully. */\n    @Output()\n    success: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    forms: Form[];\n\n    formId: number;\n    disableSubmit: boolean = true;\n    selectedFormId: number;\n\n    attachFormControl: FormControl;\n\n    ngOnInit() {\n        this.attachFormControl = new FormControl('', Validators.required);\n        this.attachFormControl.valueChanges.subscribe( (currentValue) => {\n            if (this.attachFormControl.valid) {\n                this.disableSubmit = this.formId === currentValue;\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.formId = undefined;\n        this.disableSubmit = true;\n        this.loadFormsTask();\n        if (this.formKey) {\n            this.onFormAttached();\n        }\n    }\n\n    onCancelButtonClick(): void {\n        this.selectedFormId = this.formId;\n        this.cancelAttachForm.emit();\n    }\n\n    onRemoveButtonClick(): void {\n        this.taskService.deleteForm(this.taskId).subscribe(\n            () => {\n                this.formId = this.selectedFormId = null;\n                this.success.emit();\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to delete the form');\n            });\n    }\n\n    onAttachFormButtonClick(): void {\n        this.attachForm(this.taskId, this.selectedFormId);\n    }\n\n    private loadFormsTask(): void {\n        this.taskService.getFormList().subscribe((form: Form[]) => {\n                this.forms = form;\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to get the forms');\n            });\n    }\n\n    private onFormAttached() {\n        this.formService.getTaskForm(this.taskId)\n            .subscribe((res) => {\n                this.formService.getFormDefinitionByName(res.name).subscribe((formDef) => {\n                    this.formId = this.selectedFormId = formDef;\n                });\n            }, (err) => {\n                this.error.emit(err);\n                this.logService.error('Could not load forms');\n            });\n    }\n\n    private attachForm(taskId: string, formId: number) {\n        if (taskId && formId) {\n            this.taskService.attachFormToATask(taskId, formId)\n                .subscribe(() => {\n                    this.success.emit();\n                }, (err) => {\n                    this.error.emit(err);\n                    this.logService.error('Could not attach form');\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, DiscoveryApiService, UploadService } from '@alfresco/adf-core';\nimport { ActivitiContentApi } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessUploadService extends UploadService {\n\n    private _contentApi;\n    get contentApi(): ActivitiContentApi {\n        this._contentApi = this._contentApi ?? new ActivitiContentApi(this.apiService.getInstance());\n        return this._contentApi;\n    }\n\n    constructor(protected apiService: AlfrescoApiService, appConfigService: AppConfigService, discoveryApiService: DiscoveryApiService) {\n        super(apiService, appConfigService, discoveryApiService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const processInstanceId = file.options.parentId;\n        const promise = this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, DiscoveryApiService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { ActivitiContentApi } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskUploadService extends UploadService {\n\n    private _contentApi;\n    get contentApi(): ActivitiContentApi {\n        this._contentApi = this._contentApi ?? new ActivitiContentApi(this.apiService.getInstance());\n        return this._contentApi;\n    }\n\n    constructor(protected apiService: AlfrescoApiService, appConfigService: AppConfigService, discoveryApiService: DiscoveryApiService) {\n        super(apiService, appConfigService, discoveryApiService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const taskId = file.options.parentId;\n        const promise = this.contentApi.createRelatedContentOnTask(taskId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the StartTaskModel.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\n\nexport class StartTaskModel {\n\n    name: string;\n    description: string;\n    assignee: UserProcessModel;\n    dueDate: any;\n    formKey: any;\n    category: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.assignee = obj && obj.assignee ? new UserProcessModel(obj.assignee) : null;\n        this.dueDate = obj && obj.dueDate || null;\n        this.formKey = obj && obj.formKey || null;\n        this.category = obj && obj.category || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskDetailsEvent {\n\n    private _value: TaskDetailsModel;\n    private _defaultPrevented: boolean = false;\n\n    get value(): TaskDetailsModel {\n        return this._value;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(value: TaskDetailsModel) {\n        this._value = value;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the User Event.\n */\nexport interface UserEventModel {\n    type: string;\n    value: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user group.*\n */\n\nexport interface UserGroupModel {\n    id?: number;\n    name?: string;\n    externalId?: string;\n    status?: string;\n    groups?: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatOptionModule, MatRippleModule } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { floatLabel: 'never' } }\n    ],\n    imports: [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule\n    ],\n    exports: [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule\n    ]\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel, CommentProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Observable, Observer, Subject } from 'rxjs';\nimport { share, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-comments',\n    templateUrl: './process-comments.component.html',\n    styleUrls: ['./process-comments.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-process-instance-comments' }\n})\nexport class ProcessCommentsComponent implements OnChanges, OnDestroy {\n\n    /** (**required**) The numeric ID of the process instance to display comments for. */\n    @Input()\n    processInstanceId: string;\n\n    /** Should the comments be read-only? */\n    @Input()\n    readOnly: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService) {\n        this.comment$ = new Observable<CommentModel>(observer =>  this.commentObserver = observer).pipe(share());\n        this.comment$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(comment => this.comments.push(comment));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId) {\n            if (processInstanceId.currentValue) {\n                this.getProcessInstanceComments(processInstanceId.currentValue);\n            } else {\n                this.resetComments();\n            }\n        }\n    }\n\n    private getProcessInstanceComments(processInstanceId: string): void {\n        this.resetComments();\n        if (processInstanceId) {\n            this.commentProcessService.getProcessInstanceComments(processInstanceId).subscribe(\n                (res: CommentModel[]) => {\n                    res = res.sort((comment1: CommentModel, comment2: CommentModel) => {\n                        const date1 = new Date(comment1.created);\n                        const date2 = new Date(comment2.created);\n                        return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                    });\n                    res.forEach((comment) => {\n                        this.commentObserver.next(comment);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            this.beingAdded = true;\n            this.commentProcessService.addProcessInstanceComment(this.processInstanceId, this.message)\n                .subscribe(\n                    (res: CommentModel) => {\n                        this.comments.unshift(res);\n                        this.message = '';\n                        this.beingAdded = false;\n\n                    },\n                    (err) => {\n                        this.error.emit(err);\n                        this.beingAdded = false;\n                    }\n                );\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    onError(error: any) {\n        this.error.emit(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { ProcessCommentsComponent } from './process-comments.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule\n    ],\n    declarations: [\n        ProcessCommentsComponent\n    ],\n    exports: [\n        ProcessCommentsComponent\n    ]\n})\nexport class ProcessCommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { Component, EventEmitter, OnInit, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people-search',\n    templateUrl: './people-search.component.html',\n    styleUrls: ['./people-search.component.scss'],\n    host: {\n        'class': 'adf-people-search'\n    },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchComponent implements OnInit {\n\n    /** Parameters for displaying the list. */\n    @Input()\n    results: Observable<UserProcessModel[]>;\n\n    /** Emitted when a search is performed with a new keyword. */\n    @Output()\n    searchPeople = new EventEmitter<any>();\n\n    /** Emitted when a user is selected and the action button is clicked. */\n    @Output()\n    success = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the \"close\" button is clicked. */\n    @Output()\n    closeSearch = new EventEmitter();\n\n    filteredResults$: Observable<UserProcessModel[]>;\n    selectedUser: UserProcessModel = {};\n    performSearch: PerformSearchCallback;\n\n    constructor() {}\n\n    ngOnInit() {\n        this.filteredResults$ = this.results\n            .pipe(\n                map((users) => {\n                    return users.filter((user) => user.id !== this.selectedUser.id);\n                })\n            );\n        this.performSearch = this.performSearchCallback.bind(this);\n    }\n\n    private performSearchCallback(event: any): Observable<UserProcessModel[]> {\n        this.searchPeople.emit(event);\n        return this.filteredResults$;\n    }\n\n    onRowClick(user: UserProcessModel) {\n        this.selectedUser = user;\n    }\n\n    closeSearchList() {\n        this.closeSearch.emit();\n    }\n\n    involveUserAndClose() {\n        this.involveUser();\n        this.closeSearchList();\n    }\n\n    involveUser() {\n        if (this.selectedUser === undefined) {\n            return;\n        }\n        this.success.emit(this.selectedUser);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService, UserProcessModel, PeopleProcessService } from '@alfresco/adf-core';\nimport { Component, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\nimport { PeopleSearchComponent } from '../people-search/people-search.component';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people',\n    templateUrl: './people.component.html',\n    styleUrls: ['./people.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleComponent {\n\n    /** The array of User objects to display. */\n    @Input()\n    people: UserProcessModel[] = [];\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string = '';\n\n    /** Should the data be read-only? */\n    @Input()\n    readOnly: boolean = false;\n\n    @ViewChild('peopleSearch')\n    peopleSearch: PeopleSearchComponent;\n\n    showAssignment: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    peopleSearch$: Observable<UserProcessModel[]>;\n\n    constructor(private logService: LogService, public peopleProcessService: PeopleProcessService) {\n        this.peopleSearch$ = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer)\n            .pipe(\n                share()\n            );\n    }\n\n    involveUserAndCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUserAndClose();\n        }\n    }\n\n    involveUserWithoutCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUser();\n        }\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(this.taskId, searchedWord)\n            .subscribe((users) => {\n                this.peopleSearchObserver.next(users);\n            }, (error) => this.logService.error(error));\n    }\n\n    involveUser(user: UserProcessModel) {\n        if (user && user.id) {\n            this.peopleProcessService\n                .involveUserWithTask(this.taskId, user.id.toString())\n                .subscribe(\n                    () => this.people = [...this.people, user],\n                    () => this.logService.error('Impossible to involve user with task')\n                );\n        }\n    }\n\n    removeInvolvedUser(user: UserProcessModel) {\n        this.peopleProcessService\n            .removeInvolvedUser(this.taskId, user.id.toString())\n            .subscribe(\n                () => {\n                    this.people = this.people.filter(involvedUser => involvedUser.id !== user.id);\n                },\n                () => this.logService.error('Impossible to remove involved user from task'));\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    getInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n\n    onAddAssignment() {\n        this.showAssignment = true;\n    }\n\n    onClickAction(event: UserEventModel) {\n        if (event && event.value && event.type === 'remove') {\n            this.removeInvolvedUser(event.value);\n        }\n    }\n\n    hasPeople(): boolean {\n        return this.people && this.people.length > 0;\n    }\n\n    isEditMode(): boolean {\n        return !this.readOnly;\n    }\n\n    onCloseSearch() {\n        this.showAssignment = false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataTableComponent, DataCellEvent, DataColumnListComponent, UserProcessModel, ShowHeaderMode } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\n\n@Component({\n    selector: 'adf-people-list',\n    templateUrl: './people-list.component.html',\n    styleUrls: ['./people-list.component.scss']\n})\n\nexport class PeopleListComponent implements AfterContentInit {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    @ViewChild('dataTable', { static: true })\n    peopleDataTable: DataTableComponent;\n\n    /** The array of user data used to populate the people list. */\n    @Input()\n    users: UserProcessModel[];\n\n    /** Toggles whether or not actions should be visible, i.e. the 'Three-Dots' menu. */\n    @Input()\n    actions: boolean = false;\n\n    /** Emitted when the user clicks a row in the people list. */\n    @Output()\n    clickRow = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the user clicks in the 'Three Dots' drop down menu for a row. */\n    @Output()\n    clickAction = new EventEmitter<UserEventModel>();\n\n    user: UserProcessModel;\n    showHeader = ShowHeaderMode.Never;\n\n    ngAfterContentInit() {\n        this.peopleDataTable.columnList = this.columnList;\n    }\n\n    selectUser(event: any) {\n        this.user = event.value.obj;\n        this.clickRow.emit(this.user);\n    }\n\n    hasActions(): boolean {\n        return this.actions;\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n\n        const removeAction = {\n            title: 'Remove',\n            name: 'remove'\n        };\n\n        event.value.actions = [\n            removeAction\n        ];\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        this.clickAction.emit({type: action.name, value: args.row.obj});\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n    firstName = (firstName !== null ? firstName : '');\n    lastName = (lastName !== null ? lastName : '');\n    return firstName + delimiter + lastName;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel, TranslationService, PeopleProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { getDisplayUser } from '../../helpers/get-display-user';\n\n@Component({\n    selector: 'adf-people-search-field',\n    templateUrl: './people-search-field.component.html',\n    styleUrls: ['./people-search-field.component.scss'],\n    host: { 'class': 'adf-people-search-field' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchFieldComponent {\n\n    @Input()\n    performSearch: PerformSearchCallback;\n\n    @Input()\n    placeholder: string;\n\n    @Output()\n    rowClick = new EventEmitter<UserProcessModel>();\n\n    users$: Observable<UserProcessModel[]>;\n    searchUser: FormControl = new FormControl();\n\n    defaultPlaceholder = 'ADF_TASK_LIST.PEOPLE.SEARCH_USER';\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                private translationService: TranslationService) {\n        this.users$ = this.searchUser.valueChanges\n            .pipe(\n                debounceTime(200),\n                switchMap((searchWord: string) => {\n                    if (searchWord && searchWord.trim()) {\n                        return this.performSearch(searchWord);\n                    } else {\n                        return of([]);\n                    }\n                })\n            );\n\n        this.defaultPlaceholder = this.translationService.instant(this.defaultPlaceholder);\n    }\n\n    reset() {\n        this.searchUser.reset();\n    }\n\n    get searchPlaceholder(): string {\n        return this.placeholder || this.defaultPlaceholder;\n    }\n\n    onRowClick(model: UserProcessModel) {\n        this.rowClick.emit(model);\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        return getDisplayUser(firstName, lastName, delimiter);\n    }\n\n    getInitialUserName(firstName: string, lastName: string): string {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewChild, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { PeopleProcessService, UserProcessModel, LogService, TranslationService } from '@alfresco/adf-core';\nimport { PeopleSearchFieldComponent } from '../people-search-field/people-search-field.component';\nimport { getDisplayUser } from '../../helpers/get-display-user';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst DEFAULT_ASSIGNEE_PLACEHOLDER = 'ADF_TASK_LIST.PEOPLE.ASSIGNEE';\n\n@Component({\n    selector: 'adf-people-selector',\n    templateUrl: './people-selector.component.html',\n    styleUrls: ['./people-selector.component.scss'],\n    host: { 'class': 'adf-people-selector' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSelectorComponent {\n\n    @Input()\n    peopleId: UserProcessModel;\n\n    // Poorly documented Angular magic for [(peopleId)]\n    @Output()\n    peopleIdChange: EventEmitter<number>;\n\n    @ViewChild('peopleSearchField', { static: true })\n    searchFieldComponent: PeopleSearchFieldComponent;\n\n    performSearch: PerformSearchCallback;\n    selectedUser: UserProcessModel;\n    defaultPlaceholder: string;\n\n    constructor(\n        private peopleProcessService: PeopleProcessService,\n        private logService: LogService,\n        private translationService: TranslationService) {\n\n        this.peopleIdChange = new EventEmitter();\n        this.performSearch = this.searchUser.bind(this);\n        this.defaultPlaceholder = this.translationService.instant(DEFAULT_ASSIGNEE_PLACEHOLDER);\n    }\n\n    searchUser(searchWord: string): Observable<{} | UserProcessModel[]> {\n        return this.peopleProcessService.getWorkflowUsers(undefined, searchWord)\n            .pipe(\n                catchError(this.onSearchUserError.bind(this))\n            );\n    }\n\n    private onSearchUserError(): Observable<UserProcessModel[]> {\n        this.logService.error('getWorkflowUsers threw error');\n        return of([]);\n    }\n\n    userSelected(user: UserProcessModel): void {\n        this.updateUserSelection(user);\n    }\n\n    userDeselected(): void {\n        this.updateUserSelection(undefined);\n    }\n\n    private updateUserSelection(user: UserProcessModel): void {\n        this.selectedUser = user;\n        this.peopleIdChange.emit(user && user.id || undefined);\n        this.searchFieldComponent.reset();\n    }\n\n    get placeholder() {\n        if (!this.selectedUser) {\n            return this.defaultPlaceholder;\n        }\n\n        return getDisplayUser(this.selectedUser.firstName, this.selectedUser.lastName, ' ');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n// tslint:disable-next-line: directive-selector\n@Directive({ selector: 'adf-people-search-action-label, people-search-action-label' })\nexport class PeopleSearchActionLabelDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n// tslint:disable-next-line: directive-selector\n@Directive({ selector: '[adf-people-search-title]' })\nexport class PeopleSearchTitleDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { PeopleComponent } from './components/people/people.component';\nimport { PeopleListComponent } from './components/people-list/people-list.component';\nimport { PeopleSearchComponent } from './components/people-search/people-search.component';\nimport { PeopleSearchFieldComponent } from './components/people-search-field/people-search-field.component';\nimport { PeopleSelectorComponent } from './components/people-selector/people-selector.component';\n\nimport { PeopleSearchActionLabelDirective } from './directives/people-search-action-label.directive';\nimport { PeopleSearchTitleDirective } from './directives/people-search-title.directive';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule\n    ],\n    declarations: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ],\n    exports: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ]\n})\nexport class PeopleModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ExternalAlfrescoApiService, AlfrescoApiService, LoginDialogPanelComponent, SearchService, TranslationService, AuthenticationService, SitesService } from '@alfresco/adf-core';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { DocumentListService } from '@alfresco/adf-content-services';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-attach-file-widget-dialog',\n    templateUrl: './attach-file-widget-dialog.component.html',\n    styleUrls: ['./attach-file-widget-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        AuthenticationService,\n        DocumentListService,\n        SitesService,\n        SearchService,\n        { provide: AlfrescoApiService, useClass: ExternalAlfrescoApiService } ]\n})\nexport class AttachFileWidgetDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    title: string;\n    action: string;\n    buttonActionName: string;\n    chosenNode: Node[];\n\n    constructor(private translation: TranslationService,\n                @Inject(MAT_DIALOG_DATA) public data: AttachFileWidgetDialogComponentData,\n                private externalApiService: AlfrescoApiService,\n                private authenticationService: AuthenticationService,\n                private matDialogRef: MatDialogRef<AttachFileWidgetDialogComponent>) {\n        (<any> externalApiService).init(data.ecmHost, data.context);\n        this.action = data.actionName ? data.actionName.toUpperCase() : 'CHOOSE';\n        this.buttonActionName = `ATTACH-FILE.ACTIONS.${this.action}`;\n        this.updateTitle('DROPDOWN.MY_FILES_OPTION');\n        this.updateExternalHost();\n    }\n\n    updateExternalHost() {\n        this.authenticationService.onLogin.subscribe(() => this.registerAndClose());\n        if (this.externalApiService.getInstance().isLoggedIn()) {\n            this.registerAndClose();\n        }\n    }\n\n    private registerAndClose() {\n        this.data.registerExternalHost(this.data.accountIdentifier, this.externalApiService);\n        if (this.data.loginOnly) {\n            this.data.selected.complete();\n            this.matDialogRef.close();\n        }\n    }\n\n    isLoggedIn() {\n        return this.externalApiService.getInstance().isLoggedIn();\n    }\n\n    performLogin() {\n        this.loginPanel.submitForm();\n    }\n\n    close() {\n        this.data.selected.complete();\n    }\n\n    onSelect(nodeList: Node[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onSiteChange(siteTitle: string) {\n        this.updateTitle(siteTitle);\n    }\n\n    onClick() {\n        this.data.selected.next(this.chosenNode);\n        this.data.selected.complete();\n    }\n\n    updateTitle(siteTitle: string) {\n        if (this.action === 'CHOOSE' && siteTitle) {\n            this.title = this.getTitleTranslation(this.action, siteTitle);\n        }\n    }\n\n    getTitleTranslation(action: string, name?: string): string {\n        return this.translation.instant(`ATTACH-FILE.ACTIONS.${action}_ITEM`, { name: this.translation.instant(name) });\n    }\n\n    hasNodeSelected(): boolean {\n        return this.chosenNode?.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { AlfrescoApiService, TranslationService } from '@alfresco/adf-core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { AlfrescoEndpointRepresentation, Node, ContentApi } from '@alfresco/js-api';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\n// tslint:disable-next-line: directive-class-suffix\nexport class AttachFileWidgetDialogService {\n    private externalApis: { [key: string]: AlfrescoApiService } = {};\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param repository Alfresco endpoint that represents the content service\n     * @param currentFolderId Upload file from specific folder\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(repository: AlfrescoEndpointRepresentation, currentFolderId = '-my-', accountIdentifier?: string): Observable<Node[]> {\n        const { title, ecmHost, selected, registerExternalHost } = this.constructPayload(repository);\n        const data: AttachFileWidgetDialogComponentData = {\n            title,\n            selected,\n            ecmHost,\n            currentFolderId,\n            isSelectionValid: (entry: Node) => entry.isFile,\n            showFilesInResult: true,\n            registerExternalHost,\n            accountIdentifier\n        };\n\n        this.openLoginDialog(data, 'adf-attach-file-widget-dialog', '630px');\n        return selected;\n    }\n\n    private openLoginDialog(data: AttachFileWidgetDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AttachFileWidgetDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    private showExternalHostLoginDialog(repository: AlfrescoEndpointRepresentation): Observable<AlfrescoApiService> {\n        const data = {\n            ...this.constructPayload(repository),\n            loginOnly: true\n        };\n        return this.dialog.open(AttachFileWidgetDialogComponent, { data, panelClass: 'adf-attach-file-widget-dialog', width: '630px' })\n            .afterClosed();\n    }\n\n    downloadURL(repository: AlfrescoEndpointRepresentation, sourceId: string): Observable<string> {\n        const { accountIdentifier } = this.constructPayload(repository);\n\n        if (this.externalApis[accountIdentifier]?.getInstance()) {\n            const contentApi = new ContentApi(this.externalApis[accountIdentifier].getInstance());\n\n            if (this.externalApis[accountIdentifier].getInstance().isLoggedIn()) {\n                return of(contentApi.getContentUrl(sourceId));\n            }\n        }\n\n        return this.showExternalHostLoginDialog(repository).pipe(\n            switchMap(() => {\n                const contentApi = new ContentApi(this.externalApis[accountIdentifier].getInstance());\n                return of(contentApi.getContentUrl(sourceId));\n            })\n        );\n    }\n\n    private constructPayload(repository: AlfrescoEndpointRepresentation) {\n        const accountIdentifier = 'alfresco-' + repository.id + '-' + repository.name;\n        const ecmHost = repository.repositoryUrl.replace('/alfresco', '');\n        const selected = new Subject<Node[]>();\n        selected.subscribe({\n            complete: this.close.bind(this)\n        });\n        const title = this.getLoginTitleTranslation(ecmHost);\n        const registerExternalHost = this.addService.bind(this);\n        return { ecmHost, accountIdentifier, selected, title, registerExternalHost };\n    }\n\n    addService(accountIdentifier: string, apiService: AlfrescoApiService) {\n        if (!this.externalApis[accountIdentifier]) {\n            this.externalApis[accountIdentifier] = apiService;\n        }\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    private getLoginTitleTranslation(ecmHost: string): string {\n        return this.translation.instant(`ATTACH-FILE.DIALOG.LOGIN`, { ecmHost });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector */\n\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n    ActivitiContentService,\n    AppConfigService,\n    AppConfigValues,\n    ContentService,\n    DownloadService,\n    FormService,\n    LogService,\n    ProcessContentService,\n    ThumbnailService,\n    UploadWidgetComponent\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport {\n    AlfrescoEndpointRepresentation,\n    Node,\n    NodeChildAssociation,\n    RelatedContentRepresentation\n} from '@alfresco/js-api';\nimport { from, of, Subject, zip } from 'rxjs';\nimport { mergeMap, takeUntil } from 'rxjs/operators';\nimport { AttachFileWidgetDialogService } from './attach-file-widget-dialog.service';\n\n@Component({\n    selector: 'attach-widget',\n    templateUrl: './attach-file-widget.component.html',\n    styleUrls: ['./attach-file-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFileWidgetComponent extends UploadWidgetComponent implements OnInit, OnDestroy {\n\n    typeId = 'AttachFileWidgetComponent';\n    repositoryList: AlfrescoEndpointRepresentation[] = [];\n    private tempFilesList = [];\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public formService: FormService,\n                private logger: LogService,\n                public thumbnails: ThumbnailService,\n                public processContentService: ProcessContentService,\n                private activitiContentService: ActivitiContentService,\n                private contentService: ContentService,\n                private contentDialog: ContentNodeDialogService,\n                private appConfigService: AppConfigService,\n                private downloadService: DownloadService,\n                private attachDialogService: AttachFileWidgetDialogService) {\n        super(formService, logger, thumbnails, processContentService);\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        this.activitiContentService.getAlfrescoRepositories().subscribe((repoList) => {\n            this.repositoryList = repoList;\n        });\n\n        this.formService.taskSaved\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(formSaved => {\n                if (formSaved.form.id === this.field.form.id) {\n                    this.tempFilesList = [];\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    isFileSourceConfigured(): boolean {\n        return !!this.field.params && !!this.field.params.fileSource;\n    }\n\n    isMultipleSourceUpload(): boolean {\n        return !this.field.readOnly && this.isFileSourceConfigured() && !this.isOnlyLocalSourceSelected();\n    }\n\n    isAllFileSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'all-file-sources' &&\n            !this.field.params.link;\n    }\n\n    isOnlyLocalSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'local-file';\n    }\n\n    isSimpleUploadButton(): boolean {\n        return this.isUploadButtonVisible() &&\n            !this.isFileSourceConfigured() ||\n            this.isOnlyLocalSourceSelected();\n    }\n\n    isUploadButtonVisible(): boolean {\n        return (!this.hasFile || this.multipleOption) && !this.field.readOnly;\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params?.fileSource?.selectedFolder;\n    }\n\n    isTemporaryFile(file): boolean {\n        return this.tempFilesList.findIndex((elem) => elem.name === file.name) >= 0;\n    }\n\n    getNodeFromTempFile(file): NodeChildAssociation {\n        return this.tempFilesList.find((elem) => elem.name === file.name);\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        const repository = this.repositoryList.find((repo) => repo.name === params?.fileSource?.name);\n        if (repository && this.isExternalHost(repository)) {\n            this.uploadFileFromExternalCS(repository, params?.fileSource?.selectedFolder?.pathId);\n        } else {\n            this.contentDialog.openFileBrowseDialogByFolderId(params.fileSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections,\n                        this.field.params.fileSource.selectedFolder.accountId,\n                        this.field.params.fileSource.selectedFolder.siteId);\n                });\n        }\n    }\n\n    onAttachFileChanged(event: any) {\n        this.tempFilesList.push(...Array.from(event.target.files));\n        this.onFileChanged(event);\n    }\n\n    onRemoveAttachFile(file: File | RelatedContentRepresentation) {\n        if (this.isTemporaryFile(file)) {\n            this.tempFilesList.splice(this.tempFilesList.indexOf((<RelatedContentRepresentation> file).contentBlob), 1);\n        }\n        this.removeFile(file);\n    }\n\n    onAttachFileClicked(file: any) {\n        if (file.isExternal || !file.contentAvailable) {\n            this.logger.info(`The file ${file.name} comes from an external source and cannot be showed at this moment`);\n            return;\n        }\n        if (this.isTemporaryFile(file)) {\n            this.formService.formContentClicked.next(file);\n        } else {\n            this.fileClicked(file);\n        }\n    }\n\n    downloadContent(file: any | RelatedContentRepresentation): void {\n        if (this.isTemporaryFile(file)) {\n            const fileBlob = (<RelatedContentRepresentation> file).contentBlob;\n            if (fileBlob) {\n                this.downloadService.downloadBlob(fileBlob, file.name);\n            } else {\n                const nodeUploaded: NodeChildAssociation = this.getNodeFromTempFile(file);\n                const nodeUrl = this.contentService.getContentUrl(nodeUploaded.id);\n                this.downloadService.downloadUrl(nodeUrl, file.name);\n            }\n        }\n        if (file.sourceId) {\n            const sourceHost = this.findSource(file.source);\n            if (sourceHost && this.isExternalHost(sourceHost)) {\n                this.attachDialogService.downloadURL(sourceHost, file.sourceId).subscribe((nodeUrl) => {\n                    this.downloadService.downloadUrl(nodeUrl, file.name);\n                });\n            } else {\n                const nodeUrl = this.contentService.getContentUrl(file.sourceId);\n                this.downloadService.downloadUrl(nodeUrl, file.name);\n            }\n        } else {\n            this.processContentService.getFileRawContent((<any> file).id).subscribe(\n                (blob: Blob) => {\n                    this.downloadService.downloadBlob(blob, (<any> file).name);\n                },\n                () => {\n                    this.logger.error('Impossible retrieve content for download');\n                }\n            );\n        }\n    }\n\n    openSelectDialog(repository: AlfrescoEndpointRepresentation) {\n        if (this.isExternalHost(repository)) {\n            this.uploadFileFromExternalCS(repository);\n        } else {\n            this.contentDialog.openFileBrowseDialogByDefaultLocation().subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections, `alfresco-${repository.id}-${repository.name}`);\n                });\n        }\n    }\n\n    private isExternalHost(repository: AlfrescoEndpointRepresentation): boolean {\n        const currentECMHost = this.getDomainHost(this.appConfigService.get(AppConfigValues.ECMHOST));\n        const chosenRepositoryHost = this.getDomainHost(repository.repositoryUrl);\n        return chosenRepositoryHost !== currentECMHost;\n    }\n\n    private findSource(sourceIdentifier: string): AlfrescoEndpointRepresentation {\n        return this.repositoryList.find(repository => sourceIdentifier === `alfresco-${repository.id}-${repository.name}`);\n    }\n\n    private uploadFileFromExternalCS(repository: AlfrescoEndpointRepresentation, currentFolderId?: string) {\n        const accountIdentifier = `alfresco-${repository.id}-${repository.name}`;\n        this.attachDialogService.openLogin(repository, currentFolderId, accountIdentifier).subscribe(\n            (selections: any[]) => {\n                selections.forEach((node) => node.isExternal = true);\n                this.tempFilesList.push(...selections);\n                this.uploadFileFromCS(selections, accountIdentifier);\n            });\n    }\n\n    private uploadFileFromCS(fileNodeList: any[], accountId: string, siteId?: string) {\n        const filesSaved = [];\n\n        fileNodeList.forEach(node => {\n            node.isLink = this.field.params.link;\n        });\n\n        from(fileNodeList).pipe(\n            mergeMap((node) =>\n                zip(\n                    of(node?.content?.mimeType),\n                    this.activitiContentService.applyAlfrescoNode(node, siteId, accountId),\n                    of(node.isExternal)\n                )\n            )\n        )\n            .subscribe(([mimeType, res, isExternal]) => {\n                    res.mimeType = mimeType;\n                    res.isExternal = isExternal;\n                    filesSaved.push(res);\n                },\n                (error) => {\n                    this.logger.error(error);\n                },\n                () => {\n                    const previousFiles = this.field.value ? this.field.value : [];\n                    this.field.value = [...previousFiles, ...filesSaved];\n                    this.field.json.value = [...previousFiles, ...filesSaved];\n                    this.hasFile = true;\n                });\n    }\n\n    private getDomainHost(urlToCheck: string): string {\n        const result = urlToCheck.match('^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/?\\n]+)');\n        return result[1];\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector*/\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport {\n    WidgetComponent,\n    FormService,\n    NodesApiService\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'attach-folder-widget',\n    templateUrl: './attach-folder-widget.component.html',\n    styleUrls: ['./attach-folder-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFolderWidgetComponent extends WidgetComponent implements OnInit {\n\n    typeId = 'AttachFolderWidgetComponent';\n    hasFolder: boolean = false;\n    selectedFolderName: string = '';\n\n    constructor(private contentDialog: ContentNodeDialogService,\n                public formService: FormService,\n                private nodeService: NodesApiService) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value) {\n            this.hasFolder = true;\n            this.nodeService.getNode(this.field.value).subscribe((node: Node) => {\n                this.selectedFolderName = node.name;\n            });\n        }\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params &&\n            !!this.field.params.folderSource &&\n            !!this.field.params.folderSource.selectedFolder;\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        if (this.isDefinedSourceFolder()) {\n            this.contentDialog.openFolderBrowseDialogByFolderId(params.folderSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        } else {\n            this.contentDialog.openFolderBrowseDialogBySite().subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        }\n    }\n\n    removeFolder() {\n        this.field.value = null;\n        this.selectedFolderName = '';\n        this.hasFolder = false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentNodeSelectorModule } from '@alfresco/adf-content-services';\n\nimport { AttachFileWidgetComponent } from './attach-file-widget.component';\nimport { AttachFolderWidgetComponent } from './attach-folder-widget.component';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        ContentNodeSelectorModule,\n        MaterialModule\n    ],\n    declarations: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ],\n    exports: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ]\n})\nexport class ContentWidgetModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation, SimpleChanges, OnInit, OnDestroy, OnChanges } from '@angular/core';\nimport { EcmModelService, NodeService, WidgetVisibilityService,\n    FormService, FormBaseComponent, FormOutcomeModel,\n    FormEvent, FormErrorEvent, FormFieldModel,\n    FormModel, FormOutcomeEvent, FormValues, ContentLinkModel } from '@alfresco/adf-core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-form',\n    templateUrl: './form.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormComponent extends FormBaseComponent implements OnInit, OnDestroy, OnChanges {\n\n    /** Underlying form model instance. */\n    @Input()\n    form: FormModel;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Content Services node ID for the form metadata. */\n    @Input()\n    nodeId: string;\n\n    /** The id of the form definition to load and display with custom values. */\n    @Input()\n    formId: number;\n\n    /** Name of the form definition to load and display with custom values. */\n    @Input()\n    formName: string;\n\n    /** Toggle saving of form metadata. */\n    @Input()\n    saveMetadata: boolean = false;\n\n    /** Custom form values map to be used with the rendered form. */\n    @Input()\n    data: FormValues;\n\n    /** The form will set a prefixed space for invisible fields. */\n     @Input()\n    enableFixedSpacedForm: boolean = true;\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form values are refreshed due to a data property change. */\n    @Output()\n    formDataRefreshed: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    debugMode: boolean = false;\n\n    protected onDestroy$ = new Subject<boolean>();\n\n    constructor(protected formService: FormService,\n                protected visibilityService: WidgetVisibilityService,\n                protected ecmModelService: EcmModelService,\n                protected nodeService: NodeService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.formService.formContentClicked\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(content => this.formContentClicked.emit(content));\n\n        this.formService.validateForm\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(validateFormEvent => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getFormByTaskId(taskId.currentValue);\n            return;\n        }\n\n        const formId = changes['formId'];\n        if (formId && formId.currentValue) {\n            this.getFormDefinitionByFormId(formId.currentValue);\n            return;\n        }\n\n        const formName = changes['formName'];\n        if (formName && formName.currentValue) {\n            this.getFormDefinitionByFormName(formName.currentValue);\n            return;\n        }\n\n        const nodeId = changes['nodeId'];\n        if (nodeId && nodeId.currentValue) {\n            this.loadFormForEcmNode(nodeId.currentValue);\n            return;\n        }\n\n        const data = changes['data'];\n        if (data && data.currentValue) {\n            this.refreshFormData();\n            return;\n        }\n    }\n\n    /**\n     * Invoked when user clicks form refresh button.\n     */\n    onRefreshClicked() {\n        this.loadForm();\n    }\n\n    loadForm() {\n        if (this.taskId) {\n            this.getFormByTaskId(this.taskId);\n            return;\n        }\n\n        if (this.formId) {\n            this.getFormDefinitionByFormId(this.formId);\n            return;\n        }\n\n        if (this.formName) {\n            this.getFormDefinitionByFormName(this.formName);\n            return;\n        }\n    }\n\n    findProcessVariablesByTaskId(taskId: string): Observable<any> {\n        return this.formService.getTask(taskId).pipe(\n            switchMap((task: any) => {\n                if (this.isAProcessTask(task)) {\n                    return this.visibilityService.getTaskProcessVariable(taskId);\n                } else {\n                    return of({});\n                }\n            })\n        );\n    }\n\n    isAProcessTask(taskRepresentation) {\n        return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';\n    }\n\n    getFormByTaskId(taskId: string): Promise<FormModel> {\n        return new Promise<FormModel>(resolve => {\n            this.findProcessVariablesByTaskId(taskId).subscribe(() => {\n                this.formService\n                    .getTaskForm(taskId)\n                    .subscribe(\n                        (form) => {\n                            const parsedForm = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(parsedForm);\n                            parsedForm.validateForm();\n                            this.form = parsedForm;\n                            this.onFormLoaded(this.form);\n                            resolve(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                            resolve(null);\n                        }\n                    );\n            });\n        });\n    }\n\n    getFormDefinitionByFormId(formId: number) {\n        this.formService\n            .getFormDefinitionById(formId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.name;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.onFormLoaded(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    getFormDefinitionByFormName(formName: string) {\n        this.formService\n            .getFormDefinitionByName(formName)\n            .subscribe(\n                (id) => {\n                    this.formService.getFormDefinitionById(id).subscribe(\n                        (form) => {\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                        }\n                    );\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    saveTaskForm() {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .saveTaskForm(this.form.taskId, this.form.values)\n                .subscribe(\n                    () => {\n                        this.onTaskSaved(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskSavedError(this.form, error)\n                );\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .completeTaskForm(this.form.taskId, this.form.values, outcome)\n                .subscribe(\n                    () => {\n                        this.onTaskCompleted(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskCompletedError(this.form, error)\n                );\n        }\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    parseForm(formRepresentationJSON: any): FormModel {\n        if (formRepresentationJSON) {\n            const form = new FormModel(formRepresentationJSON, this.data, this.readOnly, this.formService, this.enableFixedSpacedForm);\n            if (!formRepresentationJSON.fields) {\n                form.outcomes = this.getFormDefinitionOutcomes(form);\n            }\n            if (this.fieldValidators && this.fieldValidators.length > 0) {\n                form.fieldValidators = this.fieldValidators;\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Get custom set of outcomes for a Form Definition.\n     * @param form Form definition model.\n     */\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[] {\n        return [\n            new FormOutcomeModel(form, { id: '$save', name: FormOutcomeModel.SAVE_ACTION, isSystem: true })\n        ];\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        if (field && field.form) {\n            this.visibilityService.refreshVisibility(field.form);\n        }\n    }\n\n    private refreshFormData() {\n        this.form = this.parseForm(this.form.json);\n        this.onFormLoaded(this.form);\n        this.onFormDataRefreshed(this.form);\n    }\n\n    private loadFormForEcmNode(nodeId: string): void {\n        this.nodeService.getNodeMetadata(nodeId).subscribe((data) => {\n                this.data = data.metadata;\n                this.loadFormFromActiviti(data.nodeType);\n            },\n            this.handleError);\n    }\n\n    loadFormFromActiviti(nodeType: string): any {\n        this.formService.searchFrom(nodeType).subscribe(\n            (form) => {\n                if (!form) {\n                    this.formService.createFormFromANode(nodeType).subscribe((formMetadata) => {\n                        this.loadFormFromFormId(formMetadata.id);\n                    });\n                } else {\n                    this.loadFormFromFormId(form.id);\n                }\n            },\n            (error) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private loadFormFromFormId(formId: number) {\n        this.formId = formId;\n        this.loadForm();\n    }\n\n    protected storeFormAsMetadata() {\n        if (this.saveMetadata) {\n            this.ecmModelService.createEcmTypeForActivitiForm(this.formName, this.form).subscribe((type) => {\n                    this.nodeService.createNodeMetadata(type.nodeType || type.entry.prefixedName, EcmModelService.MODEL_NAMESPACE, this.form.values, this.path, this.nameNode);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n        }\n    }\n\n    protected onFormLoaded(form: FormModel) {\n        this.formLoaded.emit(form);\n        this.formService.formLoaded.next(new FormEvent(form));\n    }\n\n    protected onFormDataRefreshed(form: FormModel) {\n        this.formDataRefreshed.emit(form);\n        this.formService.formDataRefreshed.next(new FormEvent(form));\n    }\n\n    protected onTaskSaved(form: FormModel) {\n        this.formSaved.emit(form);\n        this.formService.taskSaved.next(new FormEvent(form));\n    }\n\n    protected onTaskSavedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskSavedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onTaskCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n        this.formService.taskCompleted.next(new FormEvent(form));\n    }\n\n    protected onTaskCompletedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskCompletedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean {\n        const args = new FormOutcomeEvent(outcome);\n\n        this.formService.executeOutcome.next(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        this.executeOutcome.emit(args);\n        return !args.defaultPrevented;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ContentLinkModel, FormService, WidgetVisibilityService, FormOutcomeModel } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-start-form',\n    templateUrl: './start-form.component.html',\n    styleUrls: ['./start-form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartFormComponent extends FormComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** Definition ID of the process to start, this parameter can not be use in combination with processId */\n    @Input()\n    processDefinitionId: string;\n\n    /** Process ID of the process to start, this parameter can not be use in combination with processDefinitionId */\n    @Input()\n    processId: string;\n\n    /** Should form outcome buttons be shown? */\n    @Input()\n    showOutcomeButtons: boolean = true;\n\n    /** Should the refresh button be shown? */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Is the form read-only (ie, can't be edited)? */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Emitted when the user clicks one of the outcome buttons that completes the form. */\n    @Output()\n    outcomeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a field of the form is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    @ViewChild('outcomesContainer')\n    outcomesContainer: ElementRef = null;\n\n    constructor(formService: FormService, visibilityService: WidgetVisibilityService) {\n        super(formService, visibilityService, null, null);\n        this.showTitle = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processDefinitionId = changes['processDefinitionId'];\n        if (processDefinitionId && processDefinitionId.currentValue) {\n            this.processDefinitionId = processDefinitionId.currentValue;\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n            return;\n        }\n\n        const data = changes['data'];\n        if (data && data.currentValue) {\n            this.parseRefreshVisibilityValidateForm(this.form.json);\n            return;\n        }\n\n        const processId = changes['processId'];\n        if (processId && processId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(processId.currentValue);\n            return;\n        }\n    }\n\n    loadStartForm(processId: string) {\n        this.formService.getProcessInstance(processId)\n            .subscribe((instance: any) => {\n                this.formService\n                    .getStartFormInstance(processId)\n                    .subscribe(\n                        (form) => {\n                            this.formName = form.name;\n                            if (instance.variables) {\n                                form.processVariables = instance.variables;\n                            }\n                            this.parseRefreshVisibilityValidateForm(form);\n                        },\n                        (error) => this.handleError(error)\n                    );\n            });\n    }\n\n    getStartFormDefinition(processId: string) {\n        this.formService\n            .getStartFormDefinition(processId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.processDefinitionName;\n                    this.parseRefreshVisibilityValidateForm(form);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    parseRefreshVisibilityValidateForm(form) {\n        this.form = this.parseForm(form);\n        this.visibilityService.refreshVisibility(this.form);\n        this.form.validateForm();\n        this.form.readOnly = this.readOnlyForm;\n        this.onFormLoaded(this.form);\n    }\n\n    /** @override */\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.isSystem && (outcome.name === FormOutcomeModel.SAVE_ACTION ||\n            outcome.name === FormOutcomeModel.COMPLETE_ACTION)) {\n            return false;\n        } else if (outcome && outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n            return true;\n        }\n        return super.isOutcomeButtonVisible(outcome, isFormReadOnly);\n    }\n\n    /** @override */\n    saveTaskForm() {\n        // do nothing\n    }\n\n    /** @override */\n    onRefreshClicked() {\n        if (this.processDefinitionId) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n        } else if (this.processId) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(this.processId);\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        this.outcomeClick.emit(outcome);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-form-custom-outcomes',\n    template: '<ng-content></ng-content>'\n})\nexport class FormCustomOutcomesComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FormComponent } from './form.component';\nimport { StartFormComponent } from './start-form.component';\nimport { FormCustomOutcomesComponent } from './form-custom-outcomes.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    declarations: [\n        FormComponent,\n        StartFormComponent,\n        FormCustomOutcomesComponent\n    ],\n    exports: [\n        FormComponent,\n        StartFormComponent,\n        FormCustomOutcomesComponent\n    ]\n})\nexport class FormModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\n\nimport { ChecklistComponent } from './components/checklist.component';\nimport { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';\nimport { StartTaskComponent } from './components/start-task.component';\nimport { TaskAuditDirective } from './components/task-audit.directive';\nimport { TaskDetailsComponent } from './components/task-details.component';\nimport { TaskFormComponent } from './components/task-form/task-form.component';\nimport { TaskFiltersComponent } from './components/task-filters.component';\nimport { TaskHeaderComponent } from './components/task-header.component';\nimport { TaskListComponent } from './components/task-list.component';\nimport { TaskStandaloneComponent } from './components/task-standalone.component';\nimport { AttachFormComponent } from './components/attach-form.component';\nimport { FormModule } from '../form/form.module';\nimport { ClaimTaskDirective } from './components/task-form/claim-task.directive';\nimport { UnclaimTaskDirective } from './components/task-form/unclaim-task.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        FormModule,\n        ReactiveFormsModule,\n        CoreModule,\n        PeopleModule,\n        ProcessCommentsModule,\n        ContentWidgetModule\n    ],\n    declarations: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskFormComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent,\n        ClaimTaskDirective,\n        UnclaimTaskDirective\n    ],\n    exports: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskFormComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent,\n        ClaimTaskDirective,\n        UnclaimTaskDirective\n    ]\n})\nexport class TaskListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/task-list.component';\nexport * from './components/checklist.component';\nexport * from './components/task-header.component';\nexport * from './components/no-task-detail-template.directive';\nexport * from './components/task-filters.component';\nexport * from './components/task-form/task-form.component';\nexport * from './components/task-form/claim-task.directive';\nexport * from './components/task-form/unclaim-task.directive';\nexport * from './components/task-details.component';\nexport * from './components/task-audit.directive';\nexport * from './components/start-task.component';\nexport * from './components/task-standalone.component';\nexport * from './components/attach-form.component';\n\nexport * from './services/tasklist.service';\nexport * from './services/process-upload.service';\nexport * from './services/task-upload.service';\nexport * from './services/task-filter.service';\n\nexport * from './models/filter.model';\nexport * from './models/form.model';\nexport * from './models/start-task.model';\nexport * from './models/task-details.event';\nexport * from './models/task-details.model';\nexport * from './models/task-list.model';\nexport * from './models/user-event.model';\nexport * from './models/user-group.model';\n\nexport * from './task-list.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Observer, Subject } from 'rxjs';\nimport { TaskDetailsEvent, TaskDetailsModel } from '../../task-list';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { share, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-tasks',\n    templateUrl: './process-instance-tasks.component.html',\n    styleUrls: ['./process-instance-tasks.component.css']\n})\nexport class ProcessInstanceTasksComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** (**required**) The ID of the process instance to display tasks for. */\n    @Input()\n    processInstanceDetails: ProcessInstance;\n\n    /** Toggles whether to show a refresh button next to the list of tasks to allow\n     * it to be updated from the server.\n     */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    activeTasks: TaskDetailsModel[] = [];\n    completedTasks: TaskDetailsModel[] = [];\n\n    private taskObserver: Observer<TaskDetailsModel>;\n    private completedTaskObserver: Observer<TaskDetailsModel>;\n    private onDestroy$ = new Subject<boolean>();\n\n    task$: Observable<TaskDetailsModel>;\n    completedTask$: Observable<TaskDetailsModel>;\n    message: string;\n    processId: string;\n\n    @ViewChild('startDialog')\n    startDialog: any;\n\n    @ViewChild('taskDetails')\n    taskDetails: any;\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService,\n                private dialog: MatDialog) {\n        this.task$ = new Observable<TaskDetailsModel>((observer) => this.taskObserver = observer)\n            .pipe(share());\n        this.completedTask$ = new Observable<TaskDetailsModel>((observer) => this.completedTaskObserver = observer)\n            .pipe(share());\n    }\n\n    ngOnInit() {\n        this.task$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(task => this.activeTasks.push(task));\n\n        this.completedTask$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(task => this.completedTasks.push(task));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceDetails = changes['processInstanceDetails'];\n        if (processInstanceDetails && processInstanceDetails.currentValue) {\n            this.load(processInstanceDetails.currentValue.id);\n        }\n    }\n\n    load(processInstanceId: string) {\n        this.loadActive(processInstanceId);\n        this.loadCompleted(processInstanceId);\n    }\n\n    loadActive(processInstanceId: string) {\n        this.activeTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, null).subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.taskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.activeTasks = [];\n        }\n    }\n\n    loadCompleted(processInstanceId: string) {\n        this.completedTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, 'completed').subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.completedTaskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.completedTasks = [];\n        }\n    }\n\n    hasStartFormDefined(): boolean {\n        return this.processInstanceDetails && this.processInstanceDetails.startFormDefined === true;\n    }\n\n    getUserFullName(user: any): string {\n        if (user) {\n            return (user.firstName && user.firstName !== 'null'\n                    ? user.firstName + ' ' : '') +\n                user.lastName;\n        }\n        return 'Nobody';\n    }\n\n    getFormatDate(value: any, format: string): any {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceTask: error parsing date ${value} to format ${format}`);\n            return value;\n        }\n    }\n\n    clickTask(task: TaskDetailsModel) {\n        const args = new TaskDetailsEvent(task);\n        this.taskClick.emit(args);\n    }\n\n    clickStartTask() {\n        this.processId = this.processInstanceDetails.id;\n        this.showStartDialog();\n    }\n\n    showStartDialog() {\n        this.dialog.open(this.startDialog, { height: '500px', width: '700px' });\n    }\n\n    closeStartDialog() {\n        this.dialog.closeAll();\n    }\n\n    onRefreshClicked() {\n        this.load(this.processInstanceDetails.id);\n    }\n\n    onFormContentClick() {\n        this.closeStartDialog();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { TaskDetailsEvent } from '../../task-list';\n\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { ProcessInstanceHeaderComponent } from './process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './process-instance-tasks.component';\n\n@Component({\n    selector: 'adf-process-instance-details',\n    templateUrl: './process-instance-details.component.html',\n    styleUrls: ['./process-instance-details.component.css']\n})\nexport class ProcessInstanceDetailsComponent implements OnChanges {\n\n    /** (required) The numeric ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    @ViewChild('processInstanceHeader')\n    processInstanceHeader: ProcessInstanceHeaderComponent;\n\n    @ViewChild('processInstanceTasks')\n    tasksList: ProcessInstanceTasksComponent;\n\n    /** Toggles whether to show or hide the title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggles whether to show or hide the refresh button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when the current process is cancelled by the user from within the component. */\n    @Output()\n    processCancelled = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick = new EventEmitter<TaskDetailsEvent>();\n\n    processInstanceDetails: ProcessInstance;\n\n    /** Emitted when the \"show diagram\" button is clicked. */\n    @Output()\n    showProcessDiagram = new EventEmitter<any>();\n\n    /**\n     * Constructor\n     * @param translate Translation service\n     * @param activitiProcess   Process service\n     */\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId && !processInstanceId.currentValue) {\n            this.reset();\n            return;\n        }\n        if (processInstanceId && processInstanceId.currentValue) {\n            this.load(processInstanceId.currentValue);\n            return;\n        }\n    }\n\n    /**\n     * Reset the task detail\n     */\n    reset() {\n        this.processInstanceDetails = null;\n    }\n\n    load(processId: string) {\n        if (processId) {\n            this.activitiProcess.getProcess(processId).subscribe(\n                (res: ProcessInstance) => {\n                    this.processInstanceDetails = res;\n                }\n            );\n        }\n    }\n\n    isRunning(): boolean {\n        return this.processInstanceDetails && !this.processInstanceDetails.ended;\n    }\n\n    cancelProcess() {\n        this.activitiProcess.cancelProcess(this.processInstanceId).subscribe(\n            (data) => {\n                this.processCancelled.emit(data);\n            }, (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    // bubbles (taskClick) event\n    onTaskClicked(event: TaskDetailsEvent) {\n        this.taskClick.emit(event);\n    }\n\n    getProcessNameOrDescription(dateFormat: string): string {\n        let name = '';\n        if (this.processInstanceDetails) {\n            name = this.processInstanceDetails.name ||\n                this.processInstanceDetails.processDefinitionName + ' - ' + this.getFormatDate(this.processInstanceDetails.started, dateFormat);\n        }\n        return name;\n    }\n\n    getFormatDate(value: any, format: string): any {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceHeader: error parsing date ${value} to format ${format}`);\n        }\n    }\n\n    onShowProcessDiagram() {\n        this.showProcessDiagram.emit({value: this.processInstanceId});\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { DownloadService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { ProcessService } from './../services/process.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: 'button[adf-process-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class ProcessAuditDirective implements OnChanges {\n\n    /** ID of the process. */\n    @Input('process-id')\n    processId: string;\n\n    /** Name of the file to download (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format for the audit information (can be \"pdf\" or \"json\"). */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit file on clicking. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @param downloadService\n     * @param processListService\n     */\n    constructor(private downloadService: DownloadService,\n                private processListService: ProcessService) {\n    }\n\n    ngOnChanges(): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType() {\n        return this.format && (this.isJsonFormat() || this.isPdfFormat());\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.processListService.fetchProcessAuditPdfById(this.processId).subscribe(\n                (blob: Blob) => {\n                    if (this.download) {\n                        this.downloadService.downloadBlob(blob, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: blob, fileName: this.fileName });\n                },\n                (err) => this.error.emit(err));\n        } else {\n            this.processListService.fetchProcessAuditJsonById(this.processId).subscribe(\n                (res) => this.clicked.emit({ format: this.format, value: res, fileName: this.fileName }),\n                (err) => this.error.emit(err));\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let processPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataTableSchema,\n    DataRowEvent,\n    DataTableAdapter,\n    CustomEmptyContentTemplateDirective,\n    CustomLoadingContentTemplateDirective,\n    DataRow,\n    DataColumn,\n    AppConfigService,\n    PaginatedComponent,\n    PaginationComponent,\n    PaginationModel,\n    UserPreferencesService,\n    DataCellEvent\n} from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { processPresetsDefaultModel } from '../models/process-preset.model';\nimport { ProcessService } from '../services/process.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { ProcessListModel } from '../models/process-list.model';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-list',\n    styleUrls: ['./process-list.component.css'],\n    templateUrl: './process-list.component.html'\n})\nexport class ProcessInstanceListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent {\n\n    static PRESET_KEY = 'adf-process-list.presets';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** The id of the process instance. */\n    @Input()\n    processInstanceId: number | string;\n\n    /** Defines the state of the processes. Possible values are `running`, `completed` and `all` */\n    @Input()\n    state: string;\n\n    /** Defines the sort ordering of the list. Possible values are `created-desc`, `created-asc`,\n     * `ended-desc`, `ended-asc`.\n     */\n    @Input()\n    sort: string;\n\n    /** The page number of the processes to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of processes to fetch in each page. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Data source to define the datatable. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    showContextMenu: boolean = false;\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /**\n     * Resolver function is used to show dynamic complex column objects\n     * see the docs to learn how to configure a resolverFn.\n     */\n    @Input()\n    resolverFn: (row: DataRow, col: DataColumn) => any = null;\n\n    /** Emitted when a row in the process list is clicked. */\n    @Output()\n    rowClick = new EventEmitter<string>();\n\n    /** Emitted when the list of process instances has been loaded successfully from the server. */\n    @Output()\n    success = new EventEmitter<ProcessListModel>();\n\n    /** Emitted when an error occurs while loading the list of process instances from the server. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    requestNode: ProcessFilterParamRepresentationModel;\n    currentInstanceId: string;\n    isLoading: boolean = true;\n    rows: any[] = [];\n    sorting: any[] = ['created', 'desc'];\n    pagination: BehaviorSubject<PaginationModel>;\n\n    constructor(private processService: ProcessService,\n                private userPreferences: UserPreferencesService,\n                appConfig: AppConfigService) {\n        super(appConfig, ProcessInstanceListComponent.PRESET_KEY, processPresetsDefaultModel);\n        this.size = this.userPreferences.paginationSize;\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId != null) {\n            this.reload();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n\n        const presetColumnChanges = changes['presetColumn'];\n        if (presetColumnChanges && !presetColumnChanges.firstChange) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = false;\n\n        const appId = changes['appId'];\n        const processDefinitionId = changes['processDefinitionId'];\n        const processInstanceId = changes['processInstanceId'];\n        const state = changes['state'];\n        const sort = changes['sort'];\n        const page = changes['page'];\n        const size = changes['size'];\n\n        if (appId && appId.currentValue) {\n            changed = true;\n        } else if (processDefinitionId) {\n            changed = true;\n        } else if (processInstanceId) {\n            changed = true;\n        } else if (state && state.currentValue) {\n            changed = true;\n        } else if (sort && sort.currentValue) {\n            changed = true;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n        return changed;\n    }\n\n    public reload() {\n        this.requestNode = this.createRequestNode();\n        this.load(this.requestNode);\n    }\n\n    private load(requestNode: ProcessFilterParamRepresentationModel) {\n        this.isLoading = true;\n        this.processService.getProcesses(requestNode)\n            .pipe(finalize(() => this.isLoading = false))\n            .subscribe(\n                response => {\n                    this.rows = response.data;\n                    this.selectFirst();\n                    this.success.emit(response);\n                    this.pagination.next({\n                        count: response.data.length,\n                        maxItems: this.size,\n                        skipCount: this.page * this.size,\n                        totalItems: response.total\n                    });\n                },\n                error => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    /**\n     * Select the first instance of a list if present\n     */\n    selectFirst() {\n        if (this.selectFirstRow) {\n            if (!this.isListEmpty()) {\n                const dataRow = this.rows[0];\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            } else {\n                this.currentInstanceId = null;\n            }\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when the row is clicked\n     * @param event\n     */\n    onRowClick(event: DataRowEvent) {\n        const item = event;\n\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when pressed the Enter key on the selected row\n     * @param event\n     */\n    onRowKeyUp(event: CustomEvent<any>) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        this.showRowContextMenu.emit(event);\n    }\n\n    private createRequestNode(): ProcessFilterParamRepresentationModel {\n        return new ProcessFilterParamRepresentationModel({\n            appDefinitionId: this.appId,\n            processDefinitionId: this.processDefinitionId,\n            processInstanceId: this.processInstanceId,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: 0\n        });\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { FormRenderingService } from '@alfresco/adf-core';\nimport { AttachFileWidgetComponent } from '../content-widget/attach-file-widget.component';\nimport { AttachFolderWidgetComponent } from '../content-widget/attach-folder-widget.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessFormRenderingService extends FormRenderingService {\n    constructor() {\n        super();\n\n        this.register({\n            'upload': () => AttachFileWidgetComponent,\n            'select-folder': () => AttachFolderWidgetComponent\n        }, true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './form.component';\nexport * from './start-form.component';\nexport * from './process-form-rendering.service';\nexport * from './form-custom-outcomes.component';\nexport * from './form.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { LocalizedDatePipe } from '@alfresco/adf-core';\nimport { ProcessInstance } from '../process-list';\n\n@Pipe({ name: 'processName' })\nexport class ProcessNamePipe implements PipeTransform {\n    static DATE_TIME_IDENTIFIER_REG_EXP = new RegExp('%{datetime}', 'i');\n    static PROCESS_DEFINITION_IDENTIFIER_REG_EXP = new RegExp('%{processdefinition}', 'i');\n\n    constructor(private localizedDatePipe: LocalizedDatePipe) {\n    }\n\n    transform(processNameFormat: string, processInstance?: ProcessInstance): string {\n        let processName = processNameFormat;\n        if (processName.match(ProcessNamePipe.DATE_TIME_IDENTIFIER_REG_EXP)) {\n            const presentDateTime = moment.now();\n            processName = processName.replace(\n                ProcessNamePipe.DATE_TIME_IDENTIFIER_REG_EXP,\n                this.localizedDatePipe.transform(presentDateTime, 'medium')\n            );\n        }\n\n        if (processName.match(ProcessNamePipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP)) {\n            const selectedProcessDefinitionName = processInstance ? processInstance.processDefinitionName : '';\n            processName = processName.replace(\n                ProcessNamePipe.PROCESS_DEFINITION_IDENTIFIER_REG_EXP,\n                selectedProcessDefinitionName\n            );\n        }\n        return processName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, OnChanges, OnInit,\n    Output, SimpleChanges, ViewChild, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport {\n    ActivitiContentService,\n    AppConfigService,\n    AppConfigValues,\n    AppsProcessService,\n    FormValues\n} from '@alfresco/adf-core';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessDefinitionRepresentation } from './../models/process-definition.model';\nimport { ProcessInstance } from './../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Observable, Subject, forkJoin } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatSelectChange } from '@angular/material/select';\nimport { StartFormComponent } from '../../form';\nimport { MinimalNode, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { AppDefinitionRepresentationModel } from '../../task-list';\nimport { ProcessNamePipe } from '../../pipes/process-name.pipe';\n\n@Component({\n    selector: 'adf-start-process',\n    templateUrl: './start-process.component.html',\n    styleUrls: ['./start-process.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartProcessInstanceComponent implements OnChanges, OnInit, OnDestroy {\n\n    MAX_LENGTH: number = 255;\n\n    /** (optional) Limit the list of processes that can be started to those\n     * contained in the specified app.\n     */\n    @Input()\n    appId: number;\n\n    /** (optional) Define the header of the component. */\n    @Input()\n    title: string;\n\n    /** (optional) Definition name of the process to start. */\n    @Input()\n    processDefinitionName: string;\n\n    /** Variables in the input to the process\n     * [RestVariable](https://github.com/Alfresco/alfresco-js-api/tree/master/src/alfresco-activiti-rest-api/docs/RestVariable.md).\n     */\n    @Input()\n    variables: ProcessInstanceVariable[];\n\n    /** Parameter to pass form field values in the start form if one is associated. */\n    @Input()\n    values: FormValues;\n\n    /** (optional) Name to assign to the current process. */\n    @Input()\n    name: string = '';\n\n    /** Hide or show the process selection dropdown. */\n    @Input()\n    showSelectProcessDropdown: boolean = true;\n\n    /** (optional) Hide or show application selection dropdown. */\n    @Input()\n    showSelectApplicationDropdown: boolean = false;\n\n    /** (optional) Parameter to enable selection of process when filtering. */\n    @Input()\n    processFilterSelector: boolean = true;\n\n    /** Emitted when the process starts. */\n    @Output()\n    start: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    /** Emitted when the process is canceled. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when process definition selection changes. */\n    @Output()\n    processDefinitionSelection: EventEmitter<ProcessDefinitionRepresentation> = new EventEmitter<ProcessDefinitionRepresentation>();\n\n    /** Emitted when application selection changes. */\n    @Output()\n    applicationSelection: EventEmitter<AppDefinitionRepresentationModel> = new EventEmitter<AppDefinitionRepresentationModel>();\n\n    @ViewChild('startForm')\n    startForm: StartFormComponent;\n\n    @ViewChild(MatAutocompleteTrigger)\n    inputAutocomplete: MatAutocompleteTrigger;\n\n    processDefinitions: ProcessDefinitionRepresentation[] = [];\n    selectedProcessDef: ProcessDefinitionRepresentation;\n    processNameInput: FormControl;\n    processDefinitionInput: FormControl;\n    filteredProcessesDefinitions$: Observable<ProcessDefinitionRepresentation[]>;\n    maxProcessNameLength: number = this.MAX_LENGTH;\n    alfrescoRepositoryName: string;\n    applications: AppDefinitionRepresentationModel[] = [];\n    selectedApplication: AppDefinitionRepresentationModel;\n\n    isProcessDefinitionsLoading = true;\n    isAppsLoading = true;\n    movedNodeToPS: FormValues;\n\n    private onDestroy$ = new Subject<boolean>();\n    constructor(private activitiProcess: ProcessService,\n                private activitiContentService: ActivitiContentService,\n                private appsProcessService: AppsProcessService,\n                private appConfig: AppConfigService,\n                private processNamePipe: ProcessNamePipe) {\n        }\n\n    ngOnInit() {\n        this.processNameInput = new FormControl('', [Validators.required, Validators.maxLength(this.maxProcessNameLength), Validators.pattern('^[^\\\\s]+(\\\\s+[^\\\\s]+)*$')]);\n        this.processDefinitionInput = new FormControl();\n\n        this.load();\n\n        this.filteredProcessesDefinitions$ = this.processDefinitionInput.valueChanges\n            .pipe(\n                map((value) => this._filter(value)),\n                takeUntil(this.onDestroy$)\n            );\n\n        this.activitiContentService.getAlfrescoRepositories().subscribe((repoList) => {\n            if (repoList && repoList[0]) {\n                const alfrescoRepository = repoList[0];\n                this.alfrescoRepositoryName = `alfresco-${alfrescoRepository.id}-${alfrescoRepository.name}`;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['values'] && changes['values'].currentValue) {\n            this.moveNodeFromCStoPS();\n        }\n\n        if (this.isAppIdChanged(changes)) {\n            this.appId = changes['appId'].currentValue;\n            this.load();\n        }\n\n        if (this.isProcessDefinitionChanged(changes)) {\n            this.processDefinitionName = changes['processDefinitionName'].currentValue;\n            this.filterProcessDefinitionByName();\n        }\n    }\n\n    private isAppIdChanged(changes: SimpleChanges) {\n        return changes['appId'] && changes['appId'].currentValue && changes['appId'].currentValue !== changes['appId'].previousValue;\n    }\n\n    private isProcessDefinitionChanged(changes: SimpleChanges) {\n        return changes['processDefinitionName'] && changes['processDefinitionName'].currentValue &&\n        changes['processDefinitionName'].currentValue !== changes['processDefinitionName'].previousValue;\n    }\n\n    private _filter(value: string): ProcessDefinitionRepresentation[] {\n        if (value !== null && value !== undefined) {\n            const filterValue = value.toLowerCase();\n            const filteredProcess = this.processDefinitions.filter((option) => option.name.toLowerCase().includes(filterValue));\n\n            if (this.processFilterSelector) {\n                this.selectedProcessDef = this.getSelectedProcess(filterValue);\n            }\n            return filteredProcess;\n        }\n\n        return [];\n    }\n\n    getSelectedProcess(selectedProcess: string): ProcessDefinitionRepresentation {\n        let processSelected = this.processDefinitions.find((process) => process.name.toLowerCase() === selectedProcess);\n\n        if (!processSelected) {\n            processSelected = new ProcessDefinitionRepresentation();\n        }\n        return processSelected;\n    }\n\n    load() {\n        if (this.showSelectApplicationDropdown) {\n            this.loadApps();\n        } else {\n            this.loadProcessDefinitions(this.appId);\n        }\n    }\n\n    loadProcessDefinitions(appId: any): void {\n        this.isProcessDefinitionsLoading = true;\n        this.resetSelectedProcessDefinition();\n\n        this.activitiProcess.getProcessDefinitions(appId).pipe(\n            map((processDefinitionRepresentations: ProcessDefinitionRepresentation[]) => {\n                let currentProcessDef: ProcessDefinitionRepresentation;\n\n                if (processDefinitionRepresentations.length === 1) {\n                    currentProcessDef = processDefinitionRepresentations[0];\n                }\n\n                if (this.processDefinitionName) {\n                    const filteredProcessDefinition = processDefinitionRepresentations.find((processDefinition) => {\n                        return processDefinition.name === this.processDefinitionName;\n                    });\n                    if (filteredProcessDefinition) {\n                        currentProcessDef = filteredProcessDefinition;\n                    }\n                }\n\n                return { currentProcessDef, processDefinitionRepresentations };\n            })\n        ).subscribe(\n            (filteredProcessDefinitions) => {\n                this.processDefinitions = filteredProcessDefinitions.processDefinitionRepresentations;\n                this.processDefinitionSelectionChanged(filteredProcessDefinitions.currentProcessDef);\n                this.processDefinitionInput.setValue(this.selectedProcessDef ? this.selectedProcessDef.name : '');\n                this.isProcessDefinitionsLoading = false;\n            },\n            (error) => {\n                this.isProcessDefinitionsLoading = false;\n                this.error.emit(error);\n            });\n    }\n\n    filterProcessDefinitionByName() {\n        if (this.processDefinitionName) {\n            const filteredProcessDef = this.processDefinitions.find((processDefinition) => {\n                return processDefinition.name === this.processDefinitionName;\n            });\n\n            if (filteredProcessDef) {\n                this.processDefinitionSelectionChanged(filteredProcessDef);\n                this.processDefinitionInput.setValue(this.selectedProcessDef ? this.selectedProcessDef.name : '');\n            }\n        }\n    }\n\n    loadApps() {\n        this.isAppsLoading = true;\n        this.appsProcessService\n            .getDeployedApplications()\n            .pipe(map((response: AppDefinitionRepresentationModel[]) => {\n                    const applications = this.removeDefaultApps(response);\n                    let currentApplication: AppDefinitionRepresentationModel;\n\n                    if (applications && applications.length === 1) {\n                        currentApplication = applications[0];\n                    }\n\n                    const filteredApp = applications.find( app => app.id === +this.appId );\n\n                    if (filteredApp) {\n                        currentApplication = filteredApp;\n                    }\n\n                    return { currentApplication, applications };\n                })\n            )\n            .subscribe((filteredApps) => {\n                    this.applications = filteredApps.applications;\n                    this.selectedApplication = filteredApps.currentApplication;\n                    this.applicationSelection.emit(this.selectedApplication);\n                    this.toggleProcessNameAndDefinitionsDropdown();\n                    this.isAppsLoading = false;\n                    this.loadProcessDefinitionsBasedOnSelectedApp();\n                },\n                (err) => {\n                    this.isAppsLoading = false;\n                    this.error.emit(err);\n                }\n            );\n\n    }\n\n    loadProcessDefinitionsBasedOnSelectedApp() {\n        if (this.selectedApplication && this.selectedApplication.id) {\n            this.loadProcessDefinitions(this.selectedApplication ? this.selectedApplication.id : null);\n        } else {\n            this.isProcessDefinitionsLoading = false;\n            this.resetProcessDefinitions();\n        }\n    }\n\n    onAppSelectionChange(selectedApplication: MatSelectChange) {\n        this.resetProcessDefinitions();\n        this.selectedApplication = selectedApplication.value;\n        this.applicationSelection.emit(this.selectedApplication);\n        this.toggleProcessNameAndDefinitionsDropdown();\n        this.loadProcessDefinitionsBasedOnSelectedApp();\n    }\n\n    private isAppSelected(): boolean {\n        return !!(this.selectedApplication && this.selectedApplication.id);\n    }\n\n    private removeDefaultApps(apps: AppDefinitionRepresentationModel []): AppDefinitionRepresentationModel[] {\n        return apps.filter((app) => app.id);\n    }\n\n    hasApplications(): boolean {\n        return this.applications && this.applications.length > 0;\n    }\n\n    hasProcessDefinitions(): boolean {\n        return this.processDefinitions && this.processDefinitions.length > 0;\n    }\n\n    isProcessDefinitionSelected(): boolean {\n        return !!(this.selectedProcessDef && this.selectedProcessDef.id);\n    }\n\n    isProcessDefinitionsEmpty(): boolean {\n        return this.processDefinitions.length === 0;\n    }\n\n    disableDropdownButton(): boolean {\n        return this.showSelectApplicationDropdown && !this.isAppSelected();\n    }\n\n    getAlfrescoRepositoryName(): string {\n        let alfrescoRepositoryName = this.appConfig.get<string>(AppConfigValues.ALFRESCO_REPOSITORY_NAME);\n        if (!alfrescoRepositoryName) {\n            alfrescoRepositoryName = this.alfrescoRepositoryName;\n        }\n        return alfrescoRepositoryName + 'Alfresco';\n    }\n\n    moveNodeFromCStoPS(): void {\n        const accountIdentifier = this.getAlfrescoRepositoryName();\n\n        for (const key in this.values) {\n            if (this.values.hasOwnProperty(key)) {\n                const currentValue = Array.isArray(this.values[key]) ? this.values[key] : [this.values[key]];\n                const contents = currentValue.filter((value: any) => value && value.isFile)\n                                             .map((content: MinimalNode) => this.activitiContentService.applyAlfrescoNode(content, null, accountIdentifier));\n                forkJoin(contents).subscribe((res: RelatedContentRepresentation[]) => {\n                    this.movedNodeToPS = { [key]: [...res]};\n                });\n            }\n        }\n    }\n\n    startProcess(outcome?: string) {\n        if (this.selectedProcessDef && this.selectedProcessDef.id && this.nameController.value) {\n            const formValues = this.startForm ? this.startForm.form.values : undefined;\n            this.activitiProcess.startProcess(this.selectedProcessDef.id, this.nameController.value, outcome, formValues, this.variables).subscribe(\n                (res) => {\n                    this.name = '';\n                    this.start.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    cancelStartProcess(): void {\n        this.cancel.emit();\n    }\n\n    hasStartForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.hasStartForm;\n    }\n\n    isStartFormMissingOrValid(): boolean {\n        if (this.startForm) {\n            return this.startForm.form && this.startForm.form.isValid;\n        } else {\n            return true;\n        }\n    }\n\n    validateForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.id && this.processNameInput.valid && this.isStartFormMissingOrValid();\n    }\n\n    private resetSelectedProcessDefinition() {\n        this.selectedProcessDef = undefined;\n        if (this.processDefinitionInput) {\n            this.processDefinitionInput.setValue('');\n        }\n    }\n\n    private resetProcessDefinitions() {\n        this.processDefinitions = [];\n        this.resetSelectedProcessDefinition();\n    }\n\n    public onOutcomeClick(outcome: string) {\n        this.startProcess(outcome);\n    }\n\n    reset(): void {\n        this.resetSelectedProcessDefinition();\n        this.name = '';\n        if (this.startForm) {\n            this.startForm.data = {};\n        }\n    }\n\n    displayFn(process: any): string {\n        if (process) {\n            let processName = process;\n            if (typeof process !== 'string') {\n                processName = process.name;\n            }\n            return processName;\n        }\n        return undefined;\n    }\n\n    displayDropdown(event) {\n        event.stopPropagation();\n        if (!this.inputAutocomplete.panelOpen) {\n            this.processDefinitionInput.setValue('');\n            this.inputAutocomplete.openPanel();\n        } else {\n            this.inputAutocomplete.closePanel();\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.processNameInput;\n    }\n\n    get processDefinitionController(): AbstractControl {\n        return this.processDefinitionInput;\n    }\n\n    private toggleProcessNameAndDefinitionsDropdown() {\n        if (!this.isAppSelected()) {\n            this.processDefinitionController.disable();\n            this.nameController.disable();\n        } else {\n            this.processDefinitionController.enable();\n            this.nameController.enable();\n        }\n    }\n\n    processDefinitionSelectionChanged(processDefinition: ProcessDefinitionRepresentation) {\n        if (processDefinition) {\n            const processInstanceDetails = new ProcessInstance({ processDefinitionName: processDefinition.name });\n            const processName = this.processNamePipe.transform(this.name, processInstanceDetails);\n            this.processNameInput.setValue(processName);\n            this.processNameInput.markAsDirty();\n            this.processNameInput.markAsTouched();\n            this.selectedProcessDef = processDefinition;\n            this.processDefinitionSelection.emit(this.selectedProcessDef);\n        } else {\n            this.nameController.reset();\n        }\n    }\n\n    isLoading(): boolean {\n        return this.showSelectApplicationDropdown ? this.isAppsLoading : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessFilterRequestRepresentation {\n    processDefinitionId: string;\n    appDefinitionId: string;\n    state: string;\n    sort: string;\n    page: number;\n    size: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj && obj.processDefinitionId || null;\n        this.appDefinitionId = obj && obj.appDefinitionId || null;\n        this.state = obj && obj.state || null;\n        this.sort = obj && obj.sort || null;\n        this.page = obj && obj.page || 0;\n        this.size = obj && obj.size || 25;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { TaskListModule } from '../task-list/task-list.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\nimport { ProcessAuditDirective } from './components/process-audit.directive';\nimport { ProcessFiltersComponent } from './components/process-filters.component';\nimport { ProcessInstanceDetailsComponent } from './components/process-instance-details.component';\nimport { ProcessInstanceHeaderComponent } from './components/process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './components/process-instance-tasks.component';\nimport { ProcessInstanceListComponent } from './components/process-list.component';\nimport { StartProcessInstanceComponent } from './components/start-process.component';\nimport { FormModule } from '../form/form.module';\nimport { ProcessNamePipe } from '../pipes/process-name.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule,\n        TaskListModule,\n        PeopleModule,\n        ContentWidgetModule,\n        ProcessCommentsModule,\n        FormModule\n    ],\n    declarations: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ],\n    exports: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ],\n    providers: [\n        ProcessNamePipe\n    ]\n})\nexport class ProcessListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// component\nexport * from './components/process-filters.component';\nexport * from './components/process-instance-details.component';\nexport * from './components/process-audit.directive';\nexport * from './components/process-instance-header.component';\nexport * from './components/process-instance-tasks.component';\nexport * from './components/process-list.component';\nexport * from './components/start-process.component';\n\n// services\nexport * from './services/process.service';\nexport * from './services/process-filter.service';\n\n// models\nexport * from './models/filter-process.model';\nexport * from './models/process-definition.model';\nexport * from './models/process-instance.model';\nexport * from './models/process-instance-filter.model';\nexport * from './models/process-instance-variable.model';\n\nexport * from './process-list.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService, TranslationService, CustomEmptyContentTemplateDirective } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, EventEmitter, Input, OnInit, Output, ContentChild, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Observable, Observer, of, Subject } from 'rxjs';\nimport { AppDefinitionRepresentationModel } from '../task-list';\nimport { IconModel } from './icon.model';\nimport { share, takeUntil, finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-apps',\n    templateUrl: './apps-list.component.html',\n    styleUrls: ['./apps-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-apps' }\n})\nexport class AppsListComponent implements OnInit, AfterContentInit, OnDestroy {\n\n    public static LAYOUT_LIST: string = 'LIST';\n    public static LAYOUT_GRID: string = 'GRID';\n    public static DEFAULT_TASKS_APP: string = 'tasks';\n    public static DEFAULT_TASKS_APP_NAME: string = 'ADF_TASK_LIST.APPS.TASK_APP_NAME';\n    public static DEFAULT_TASKS_APP_THEME: string = 'theme-2';\n    public static DEFAULT_TASKS_APP_ICON: string = 'glyphicon-asterisk';\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n\n    /** (**required**) Defines the layout of the apps. There are two possible\n     * values, \"GRID\" and \"LIST\".\n     */\n    @Input()\n    layoutType: string = AppsListComponent.LAYOUT_GRID;\n\n    /** Provides a way to filter the apps to show. */\n    @Input()\n    filtersAppId: any[];\n\n    /** Emitted when an app entry is clicked. */\n    @Output()\n    appClick: EventEmitter<AppDefinitionRepresentationModel> = new EventEmitter<AppDefinitionRepresentationModel>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    private appsObserver: Observer<AppDefinitionRepresentationModel>;\n    apps$: Observable<AppDefinitionRepresentationModel>;\n    currentApp: AppDefinitionRepresentationModel;\n    appList: AppDefinitionRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    loading: boolean = false;\n    hasEmptyCustomContentTemplate: boolean = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private appsProcessService: AppsProcessService,\n        private translationService: TranslationService) {\n            this.apps$ = new Observable<AppDefinitionRepresentationModel>((observer) => this.appsObserver = observer)\n                .pipe(share());\n    }\n\n    ngOnInit() {\n        if (!this.isValidType()) {\n            this.setDefaultLayoutType();\n        }\n\n        this.apps$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((app: any) => this.appList.push(app));\n\n        this.iconsMDL = new IconModel();\n        this.load();\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyCustomContent) {\n            this.hasEmptyCustomContentTemplate = true;\n        }\n    }\n\n    private load() {\n        this.loading = true;\n        this.appsProcessService\n            .getDeployedApplications()\n            .pipe(finalize(() => this.loading = false))\n            .subscribe(\n                (res: AppDefinitionRepresentationModel[]) => {\n                    this.filterApps(res).forEach((app) => {\n                        if (this.isDefaultApp(app)) {\n                            app.theme = AppsListComponent.DEFAULT_TASKS_APP_THEME;\n                            app.icon = AppsListComponent.DEFAULT_TASKS_APP_ICON;\n                            this.appsObserver.next(app);\n                        } else if (app.deploymentId) {\n                            this.appsObserver.next(app);\n                        }\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n    }\n\n    isDefaultApp(app) {\n        return app.defaultAppId === AppsListComponent.DEFAULT_TASKS_APP;\n    }\n\n    getAppName(app) {\n        return this.isDefaultApp(app)\n            ? this.translationService.get(AppsListComponent.DEFAULT_TASKS_APP_NAME)\n            : of(app.name);\n    }\n\n    /**\n     * Pass the selected app as next\n     * @param app\n     */\n    public selectApp(app: AppDefinitionRepresentationModel) {\n        this.currentApp = app;\n        this.appClick.emit(app);\n    }\n\n    /**\n     * Return true if the appId is the current app\n     * @param appId\n     */\n    isSelected(appId: number): boolean {\n        return (this.currentApp !== undefined && appId === this.currentApp.id);\n    }\n\n    private filterApps(apps: AppDefinitionRepresentationModel []): AppDefinitionRepresentationModel[] {\n        const filteredApps: AppDefinitionRepresentationModel[] = [];\n        if (this.filtersAppId) {\n            apps.filter((app: AppDefinitionRepresentationModel) => {\n                this.filtersAppId.forEach((filter) => {\n                    if (app.defaultAppId === filter.defaultAppId ||\n                        app.deploymentId === filter.deploymentId ||\n                        app.name === filter.name ||\n                        app.id === filter.id ||\n                        app.modelId === filter.modelId ||\n                        app.tenantId === filter.tenantId) {\n                        filteredApps.push(app);\n                    }\n                });\n            });\n        } else {\n            return apps;\n        }\n        return filteredApps;\n    }\n\n    /**\n     * Check if the value of the layoutType property is an allowed value\n     */\n    isValidType(): boolean {\n        return this.layoutType && (this.layoutType === AppsListComponent.LAYOUT_LIST || this.layoutType === AppsListComponent.LAYOUT_GRID);\n    }\n\n    /**\n     * Assign the default value to LayoutType\n     */\n    setDefaultLayoutType(): void {\n        this.layoutType = AppsListComponent.LAYOUT_GRID;\n    }\n\n    /**\n     * Return true if the layout type is LIST\n     */\n    isList(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_LIST;\n    }\n\n    /**\n     * Return true if the layout type is GRID\n     */\n    isGrid(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_GRID;\n    }\n\n    isEmpty(): boolean {\n        return this.appList.length === 0;\n    }\n\n    isLoading(): boolean {\n        return this.loading;\n    }\n\n    getTheme(app: AppDefinitionRepresentationModel): string {\n        return app.theme ? app.theme : '';\n    }\n\n    getBackgroundIcon(app: AppDefinitionRepresentationModel): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(app.icon);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'adf-select-apps-dialog',\n    templateUrl: './select-apps-dialog.component.html'\n})\nexport class SelectAppsDialogComponent {\n\n    processApps: any;\n\n    selectedProcess: any;\n\n    constructor(private appsProcessService: AppsProcessService,\n                public dialogRef: MatDialogRef<SelectAppsDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        this.appsProcessService.getDeployedApplications().subscribe(\n            (apps: any[]) => {\n                this.processApps = apps.filter((currentApp) => {\n                    return currentApp.id;\n                });\n            }\n        );\n    }\n\n    onStart(): void {\n        this.dialogRef.close(this.selectedProcess);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { AppsListComponent } from './apps-list.component';\nimport { SelectAppsDialogComponent } from './select-apps-dialog.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule\n    ],\n    declarations: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ],\n    exports: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ]\n})\nexport class AppsListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './apps-list.component';\nexport * from './select-apps-dialog.component';\n\nexport * from './apps-list.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, ThumbnailService, EmptyListComponent, ProcessContentService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-task-attachment-list',\n    styleUrls: ['./task-attachment-list.component.scss'],\n    templateUrl: './task-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Disable/Enable read only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or a view\n     * option is selected from the context menu by the user from within the component.\n     * Returns a Blob representing the clicked object.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs while fetching the attachments. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.loadAttachmentsByTaskId(changes['taskId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset(): void {\n        this.attachments = [];\n    }\n\n    hasCustomEmptyTemplate() {\n        return !!this.emptyTemplate;\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByTaskId(this.taskId);\n        });\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByTaskId(taskId: string) {\n        if (taskId) {\n            this.isLoading = true;\n            this.reset();\n            const isRelatedContent = 'true';\n            this.activitiContentService.getTaskRelatedContent(taskId, { isRelatedContent }).subscribe(\n                (res: any) => {\n                    const attachList = [];\n                    res.data.forEach((content) => {\n                        attachList.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.attachments = attachList;\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                () => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getContentPreview(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, EmptyListComponent, ThumbnailService, ProcessContentService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-process-attachment-list',\n    styleUrls: ['./process-attachment-list.component.scss'],\n    templateUrl: './process-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Disable/Enable read-only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or the\n     * view option is selected from the context menu by the user from\n     * within the component. Returns a Blob representing the object\n     * that was clicked.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when the attachment list is not able to fetch the attachments\n     * (eg, following a network error).\n     */\n    @Output()\n    error = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.loadAttachmentsByProcessInstanceId(changes['processInstanceId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset() {\n        this.attachments = [];\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByProcessInstanceId(this.processInstanceId);\n        });\n    }\n\n    hasCustomEmptyTemplate(): boolean {\n        return !!this.emptyTemplate;\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByProcessInstanceId(processInstanceId: string) {\n        if (processInstanceId) {\n            this.reset();\n            this.isLoading = true;\n            const isRelatedContent = 'true';\n            this.activitiContentService.getProcessRelatedContent(processInstanceId, { isRelatedContent }).subscribe(\n                (res: any) => {\n                    res.data.forEach((content) => {\n                        this.attachments.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    private deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                () => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getContentPreview(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-process-attachment',\n    styleUrls: ['./create-process-attachment.component.css'],\n    templateUrl: './create-process-attachment.component.html'\n})\nexport class CreateProcessAttachmentComponent implements OnChanges {\n\n    /** (required) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Emitted when an error occurs while creating or uploading an attachment\n     * from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is successfully created or uploaded\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.processInstanceId = changes['processInstanceId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createProcessRelatedContent(this.processInstanceId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-task-attachment',\n    styleUrls: ['./create-task-attachment.component.scss'],\n    templateUrl: './create-task-attachment.component.html'\n})\nexport class AttachmentComponent implements OnChanges {\n\n    /** (required) The numeric ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when an error occurs while creating or uploading an\n     *  attachment from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is created or uploaded successfully\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.taskId = changes['taskId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createTaskRelatedContent(this.taskId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { TaskAttachmentListComponent } from './task-attachment-list.component';\nimport { ProcessAttachmentListComponent } from './process-attachment-list.component';\nimport { CreateProcessAttachmentComponent } from './create-process-attachment.component';\nimport { AttachmentComponent } from './create-task-attachment.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    declarations: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ],\n    exports: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ]\n})\nexport class AttachmentModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './task-attachment-list.component';\nexport * from './process-attachment-list.component';\nexport * from './create-process-attachment.component';\nexport * from './create-task-attachment.component';\n\nexport * from './attachment.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './process-comments.component';\n\nexport * from './process-comments.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\nimport { UserProcessModel } from '@alfresco/adf-core';\n\nexport type PerformSearchCallback = (searchWord: string) => Observable<UserProcessModel[]>;\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/people/people.component';\nexport * from './components/people-list/people-list.component';\nexport * from './components/people-search/people-search.component';\nexport * from './components/people-search-field/people-search-field.component';\nexport * from './components/people-selector/people-selector.component';\n\nexport * from './interfaces/perform-search-callback.interface';\n\nexport * from './directives/people-search-action-label.directive';\nexport * from './directives/people-search-title.directive';\n\nexport * from './people.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Subject } from 'rxjs';\nimport { Node } from '@alfresco/js-api';\n\nexport interface AttachFileWidgetDialogComponentData {\n    title: string;\n    actionName?: string;\n    selected: Subject<Node[]>;\n    currentFolderId: string;\n    ecmHost: string;\n    context?: string;\n    isSelectionValid?: (entry: Node) => boolean;\n    showFilesInResult?: boolean;\n    loginOnly?: boolean;\n    accountIdentifier?: string;\n    registerExternalHost?: Function;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './attach-file-widget.component';\nexport * from './attach-folder-widget.component';\nexport * from './attach-file-widget-dialog-component.interface';\nexport * from './attach-file-widget-dialog.component';\nexport * from './attach-file-widget-dialog.service';\n\nexport * from './content-widget.module';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { ProcessNamePipe } from './process-name.pipe';\n\n@NgModule({\n    declarations: [\n        ProcessNamePipe\n    ],\n    exports: [\n        ProcessNamePipe\n    ]\n})\nexport class ProcessServicesPipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER, FormRenderingService } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { ProcessListModule } from './process-list/process-list.module';\nimport { TaskListModule } from './task-list/task-list.module';\nimport { AppsListModule } from './app-list/apps-list.module';\nimport { ProcessCommentsModule } from './process-comments/process-comments.module';\nimport { AttachmentModule } from './attachment/attachment.module';\nimport { PeopleModule } from './people/people.module';\nimport { FormModule } from './form/form.module';\nimport { ProcessFormRenderingService } from './form/process-form-rendering.service';\nimport { ProcessServicesPipeModule } from './pipes/process-services-pipe.module';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule,\n        ProcessServicesPipeModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-process-services',\n                source: 'assets/adf-process-services'\n            }\n        }\n    ],\n    exports: [\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule,\n        ProcessServicesPipeModule\n    ]\n})\nexport class ProcessModule {\n    static forRoot(): ModuleWithProviders<ProcessModule> {\n        return {\n            ngModule: ProcessModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-process-services',\n                        source: 'assets/adf-process-services'\n                    }\n                },\n                FormRenderingService,\n                { provide: FormRenderingService, useClass: ProcessFormRenderingService }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders<ProcessModule> {\n        return {\n            ngModule: ProcessModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './lib/process-list/index';\nexport * from './lib/task-list/index';\nexport * from './lib/app-list/index';\nexport * from './lib/attachment/index';\nexport * from './lib/process-comments/index';\nexport * from './lib/people/index';\nexport * from './lib/content-widget/index';\nexport * from './lib/form/index';\nexport * from './lib/pipes/process-name.pipe';\nexport * from './lib/pipes/process-services-pipe.module';\n\nexport * from './lib/pipes/process-name.pipe';\nexport * from './lib/pipes/process-services-pipe.module';\nexport * from './lib/material.module';\nexport * from './lib/process.module';\n"]}