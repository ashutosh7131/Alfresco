/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../people-search-field/people-search-field.component';
import * as ɵngcc2 from '@angular/material/button';
import * as ɵngcc3 from '@ngx-translate/core';

const _c0 = [[["", "adf-people-search-title", ""], ["", "people-search-title", ""]], [["", "adf-people-search-action-label", ""], ["", "people-search-action-label", ""]]];
const _c1 = ["[adf-people-search-title], [people-search-title]", "[adf-people-search-action-label], [people-search-action-label]"];
export class PeopleSearchComponent {
    constructor() {
        this.searchPeople = new EventEmitter();
        this.success = new EventEmitter();
        this.closeSearch = new EventEmitter();
        this.selectedUser = {};
    }
    ngOnInit() {
        this.filteredResults$ = this.results
            .pipe(map((users) => {
            return users.filter((user) => user.id !== this.selectedUser.id);
        }));
        this.performSearch = this.performSearchCallback.bind(this);
    }
    performSearchCallback(event) {
        this.searchPeople.emit(event);
        return this.filteredResults$;
    }
    onRowClick(user) {
        this.selectedUser = user;
    }
    closeSearchList() {
        this.closeSearch.emit();
    }
    involveUserAndClose() {
        this.involveUser();
        this.closeSearchList();
    }
    involveUser() {
        if (this.selectedUser === undefined) {
            return;
        }
        this.success.emit(this.selectedUser);
    }
}
PeopleSearchComponent.ɵfac = function PeopleSearchComponent_Factory(t) { return new (t || PeopleSearchComponent)(); };
PeopleSearchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PeopleSearchComponent, selectors: [["adf-people-search"]], hostAttrs: [1, "adf-people-search"], inputs: { results: "results" }, outputs: { searchPeople: "searchPeople", success: "success", closeSearch: "closeSearch" }, ngContentSelectors: _c1, decls: 9, vars: 4, consts: [[1, "adf-search-text-header"], [3, "performSearch", "rowClick"], [1, "search-list-action-container"], ["mat-button", "", "type", "button", "id", "close-people-search", 3, "click"], ["mat-button", "", "type", "button", "id", "add-people", 3, "click"]], template: function PeopleSearchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "adf-people-search-field", 1);
        ɵngcc0.ɵɵlistener("rowClick", function PeopleSearchComponent_Template_adf_people_search_field_rowClick_2_listener($event) { return ctx.onRowClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "button", 3);
        ɵngcc0.ɵɵlistener("click", function PeopleSearchComponent_Template_button_click_4_listener() { return ctx.closeSearchList(); });
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "button", 4);
        ɵngcc0.ɵɵlistener("click", function PeopleSearchComponent_Template_button_click_7_listener() { return ctx.involveUserAndClose(); });
        ɵngcc0.ɵɵprojection(8, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("performSearch", ctx.performSearch);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 2, "ADF_TASK_LIST.PEOPLE.DIALOG_CLOSE"), " ");
    } }, directives: [ɵngcc1.PeopleSearchFieldComponent, ɵngcc2.MatButton], pipes: [ɵngcc3.TranslatePipe], styles: [".adf-people-search{width:100%}.adf-people-search .adf-activiti-label{font-weight:bolder}.adf-people-search .adf-fix-element-user-list{padding:0}.adf-people-search .adf-search-text-header{font-weight:700;opacity:.54}.adf-people-search .adf-search-list-action-container{border-top:1px solid #eee;margin-top:5px;padding:5px 0;text-align:right}.adf-people-search .adf-search-list-action-container>button{font-weight:bolder;opacity:.54}.adf-people-search .adf-search-list-action-container>button:hover{color:var(--theme-primary-color)}"], encapsulation: 2 });
PeopleSearchComponent.ctorParameters = () => [];
PeopleSearchComponent.propDecorators = {
    results: [{ type: Input }],
    searchPeople: [{ type: Output }],
    success: [{ type: Output }],
    closeSearch: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PeopleSearchComponent, [{
        type: Component,
        args: [{
                selector: 'adf-people-search',
                template: "<div class=\"adf-search-text-header\">\n    <ng-content select=\"[adf-people-search-title], [people-search-title]\"></ng-content>\n</div>\n\n<adf-people-search-field [performSearch]=\"performSearch\" (rowClick)=\"onRowClick($event)\"></adf-people-search-field>\n\n<div class=\"search-list-action-container\">\n    <button mat-button type=\"button\" id=\"close-people-search\" (click)=\"closeSearchList()\">\n        {{'ADF_TASK_LIST.PEOPLE.DIALOG_CLOSE' | translate }}\n    </button>\n    <button mat-button type=\"button\" id=\"add-people\" (click)=\"involveUserAndClose()\">\n        <ng-content select=\"[adf-people-search-action-label], [people-search-action-label]\"></ng-content>\n    </button>\n</div>\n",
                host: {
                    'class': 'adf-people-search'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-people-search{width:100%}.adf-people-search .adf-activiti-label{font-weight:bolder}.adf-people-search .adf-fix-element-user-list{padding:0}.adf-people-search .adf-search-text-header{font-weight:700;opacity:.54}.adf-people-search .adf-search-list-action-container{border-top:1px solid #eee;margin-top:5px;padding:5px 0;text-align:right}.adf-people-search .adf-search-list-action-container>button{font-weight:bolder;opacity:.54}.adf-people-search .adf-search-list-action-container>button:hover{color:var(--theme-primary-color)}"]
            }]
    }], function () { return []; }, { searchPeople: [{
            type: Output
        }], success: [{
            type: Output
        }], closeSearch: [{
            type: Output
        }], results: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVvcGxlLXNlYXJjaC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9wcm9jZXNzLXNlcnZpY2VzL3NyYy9saWIvcGVvcGxlL2NvbXBvbmVudHMvcGVvcGxlLXNlYXJjaC9wZW9wbGUtc2VhcmNoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBR0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRWxDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7Ozs7QUFZckMsTUFBTSxPQUFPLHFCQUFxQjtBQUFHLElBc0JqQztBQUFnQixRQWRoQixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7QUFDM0MsUUFHSSxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQW9CLENBQUM7QUFDbkQsUUFHSSxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7QUFDckMsUUFFSSxpQkFBWSxHQUFxQixFQUFFLENBQUM7QUFDeEMsSUFFbUIsQ0FBQztBQUNwQixJQUNJLFFBQVE7QUFDWixRQUFRLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsT0FBTztBQUM1QyxhQUFhLElBQUksQ0FDRCxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtBQUM5QixZQUFvQixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNwRixRQUFnQixDQUFDLENBQUMsQ0FDTCxDQUFDO0FBQ2QsUUFBUSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbkUsSUFBSSxDQUFDO0FBQ0wsSUFDWSxxQkFBcUIsQ0FBQyxLQUFVO0FBQUksUUFDeEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdEMsUUFBUSxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztBQUNyQyxJQUFJLENBQUM7QUFDTCxJQUNJLFVBQVUsQ0FBQyxJQUFzQjtBQUNyQyxRQUFRLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0FBQ2pDLElBQUksQ0FBQztBQUNMLElBQ0ksZUFBZTtBQUNuQixRQUFRLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDaEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxtQkFBbUI7QUFDdkIsUUFBUSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDM0IsUUFBUSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7QUFDL0IsSUFBSSxDQUFDO0FBQ0wsSUFDSSxXQUFXO0FBQ2YsUUFBUSxJQUFJLElBQUksQ0FBQyxZQUFZLEtBQUssU0FBUyxFQUFFO0FBQzdDLFlBQVksT0FBTztBQUNuQixTQUFTO0FBQ1QsUUFBUSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDN0MsSUFBSSxDQUFDO0FBQ0w7aURBcEVDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsbUJBQW1CO2FBQzdCOztxQ0FBNkM7V0FFN0MsSUFBSSxFQUFFO09BQ0YsT0FBTyxFQUFFO0lBQW1CLGtCQUMvQixrQkFDRCxhQUFhLEVBQUU7UUFBaUIsQ0FBQyxJQUFJOzs7Ozs7Ozs7a0JBQ3hDOzs7Ozs7Ozs7K3BCQUVHO0FBQUM7QUFBaUQ7QUFFZixzQkFDbEMsS0FBSztBQUNSLDJCQUdHLE1BQU07QUFDVCxzQkFHRyxNQUFNO0FBQ1QsMEJBR0csTUFBTTtBQUNWOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgVXNlclByb2Nlc3NNb2RlbCB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUGVyZm9ybVNlYXJjaENhbGxiYWNrIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9wZXJmb3JtLXNlYXJjaC1jYWxsYmFjay5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1wZW9wbGUtc2VhcmNoJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcGVvcGxlLXNlYXJjaC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcGVvcGxlLXNlYXJjaC5jb21wb25lbnQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ2NsYXNzJzogJ2FkZi1wZW9wbGUtc2VhcmNoJ1xuICAgIH0sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcblxuZXhwb3J0IGNsYXNzIFBlb3BsZVNlYXJjaENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICAvKiogUGFyYW1ldGVycyBmb3IgZGlzcGxheWluZyB0aGUgbGlzdC4gKi9cbiAgICBASW5wdXQoKVxuICAgIHJlc3VsdHM6IE9ic2VydmFibGU8VXNlclByb2Nlc3NNb2RlbFtdPjtcblxuICAgIC8qKiBFbWl0dGVkIHdoZW4gYSBzZWFyY2ggaXMgcGVyZm9ybWVkIHdpdGggYSBuZXcga2V5d29yZC4gKi9cbiAgICBAT3V0cHV0KClcbiAgICBzZWFyY2hQZW9wbGUgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAgIC8qKiBFbWl0dGVkIHdoZW4gYSB1c2VyIGlzIHNlbGVjdGVkIGFuZCB0aGUgYWN0aW9uIGJ1dHRvbiBpcyBjbGlja2VkLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIHN1Y2Nlc3MgPSBuZXcgRXZlbnRFbWl0dGVyPFVzZXJQcm9jZXNzTW9kZWw+KCk7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBcImNsb3NlXCIgYnV0dG9uIGlzIGNsaWNrZWQuICovXG4gICAgQE91dHB1dCgpXG4gICAgY2xvc2VTZWFyY2ggPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBmaWx0ZXJlZFJlc3VsdHMkOiBPYnNlcnZhYmxlPFVzZXJQcm9jZXNzTW9kZWxbXT47XG4gICAgc2VsZWN0ZWRVc2VyOiBVc2VyUHJvY2Vzc01vZGVsID0ge307XG4gICAgcGVyZm9ybVNlYXJjaDogUGVyZm9ybVNlYXJjaENhbGxiYWNrO1xuXG4gICAgY29uc3RydWN0b3IoKSB7fVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuZmlsdGVyZWRSZXN1bHRzJCA9IHRoaXMucmVzdWx0c1xuICAgICAgICAgICAgLnBpcGUoXG4gICAgICAgICAgICAgICAgbWFwKCh1c2VycykgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdXNlcnMuZmlsdGVyKCh1c2VyKSA9PiB1c2VyLmlkICE9PSB0aGlzLnNlbGVjdGVkVXNlci5pZCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIHRoaXMucGVyZm9ybVNlYXJjaCA9IHRoaXMucGVyZm9ybVNlYXJjaENhbGxiYWNrLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwZXJmb3JtU2VhcmNoQ2FsbGJhY2soZXZlbnQ6IGFueSk6IE9ic2VydmFibGU8VXNlclByb2Nlc3NNb2RlbFtdPiB7XG4gICAgICAgIHRoaXMuc2VhcmNoUGVvcGxlLmVtaXQoZXZlbnQpO1xuICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXJlZFJlc3VsdHMkO1xuICAgIH1cblxuICAgIG9uUm93Q2xpY2sodXNlcjogVXNlclByb2Nlc3NNb2RlbCkge1xuICAgICAgICB0aGlzLnNlbGVjdGVkVXNlciA9IHVzZXI7XG4gICAgfVxuXG4gICAgY2xvc2VTZWFyY2hMaXN0KCkge1xuICAgICAgICB0aGlzLmNsb3NlU2VhcmNoLmVtaXQoKTtcbiAgICB9XG5cbiAgICBpbnZvbHZlVXNlckFuZENsb3NlKCkge1xuICAgICAgICB0aGlzLmludm9sdmVVc2VyKCk7XG4gICAgICAgIHRoaXMuY2xvc2VTZWFyY2hMaXN0KCk7XG4gICAgfVxuXG4gICAgaW52b2x2ZVVzZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnNlbGVjdGVkVXNlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdWNjZXNzLmVtaXQodGhpcy5zZWxlY3RlZFVzZXIpO1xuICAgIH1cbn1cbiJdfQ==