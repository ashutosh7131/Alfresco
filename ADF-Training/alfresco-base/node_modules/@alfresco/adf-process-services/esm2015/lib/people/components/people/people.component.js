/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { LogService, PeopleProcessService } from '@alfresco/adf-core';
import { Component, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { Observable } from 'rxjs';
import { PeopleSearchComponent } from '../people-search/people-search.component';
import { share } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/material/card';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/icon';
import * as ɵngcc5 from '../people-search/people-search.component';
import * as ɵngcc6 from '../../directives/people-search-title.directive';
import * as ɵngcc7 from '../people-list/people-list.component';
import * as ɵngcc8 from '@ngx-translate/core';

const _c0 = ["peopleSearch"];
function PeopleComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "ADF_TASK_LIST.DETAILS.LABELS.PEOPLE"), " ", " (" + ctx_r0.people.length + ")", " ");
} }
function PeopleComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "ADF_TASK_LIST.DETAILS.PEOPLE.NONE"), " ");
} }
function PeopleComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵlistener("click", function PeopleComponent_div_5_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onAddAssignment(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 11);
    ɵngcc0.ɵɵtext(2, "person_add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function PeopleComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "adf-people-search", 13, 14);
    ɵngcc0.ɵɵlistener("searchPeople", function PeopleComponent_div_6_Template_adf_people_search_searchPeople_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.searchUser($event); })("success", function PeopleComponent_div_6_Template_adf_people_search_success_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.involveUser($event); })("closeSearch", function PeopleComponent_div_6_Template_adf_people_search_closeSearch_1_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onCloseSearch(); });
    ɵngcc0.ɵɵelementContainerStart(3, 15);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerStart(6, 16);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("results", ctx_r3.peopleSearch$);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, "ADF_TASK_LIST.DETAILS.LABELS.ADD_PEOPLE"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 5, "ADF_TASK_LIST.PEOPLE.ADD_USER"));
} }
function PeopleComponent_div_7_ng_template_4_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const entry_r14 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r15.getInitialUserName(entry_r14.row.obj.firstName, entry_r14.row.obj.lastName), "");
} }
function PeopleComponent_div_7_ng_template_4_img_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 24);
} if (rf & 2) {
    const entry_r14 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("alt", ctx_r16.getDisplayUser(entry_r14.row.obj.firstName, entry_r14.row.obj.lastName, " "))("src", ctx_r16.peopleProcessService.getUserImage(entry_r14.row.obj), ɵngcc0.ɵɵsanitizeUrl);
} }
function PeopleComponent_div_7_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, PeopleComponent_div_7_ng_template_4_div_0_Template, 2, 1, "div", 21);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵtemplate(2, PeopleComponent_div_7_ng_template_4_img_2_Template, 1, 2, "img", 22);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const entry_r14 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", !entry_r14.row.obj.pictureId);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", entry_r14.row.obj.pictureId);
} }
function PeopleComponent_div_7_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 25);
    ɵngcc0.ɵɵelementStart(1, "div", 26);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 27);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const entry_r19 = ctx.$implicit;
    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("data-automation-id", "adf-people-full-name-" + ctx_r13.getDisplayUser(entry_r19.row.obj.firstName, entry_r19.row.obj.lastName, "-"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r13.getDisplayUser(entry_r19.row.obj.firstName, entry_r19.row.obj.lastName, " "));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("data-automation-id", "adf-people-email-" + ctx_r13.getDisplayUser(entry_r19.row.obj.firstName, entry_r19.row.obj.lastName, "-"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(entry_r19.row.obj.email);
} }
function PeopleComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵelementStart(1, "adf-people-list", 18);
    ɵngcc0.ɵɵlistener("clickAction", function PeopleComponent_div_7_Template_adf_people_list_clickAction_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.onClickAction($event); });
    ɵngcc0.ɵɵelementStart(2, "data-columns");
    ɵngcc0.ɵɵelementStart(3, "data-column", 19);
    ɵngcc0.ɵɵtemplate(4, PeopleComponent_div_7_ng_template_4_Template, 3, 2, "ng-template");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "data-column", 20);
    ɵngcc0.ɵɵtemplate(6, PeopleComponent_div_7_ng_template_6_Template, 5, 4, "ng-template");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("users", ctx_r4.people)("actions", ctx_r4.isEditMode());
} }
export class PeopleComponent {
    constructor(logService, peopleProcessService) {
        this.logService = logService;
        this.peopleProcessService = peopleProcessService;
        this.people = [];
        this.taskId = '';
        this.readOnly = false;
        this.showAssignment = false;
        this.peopleSearch$ = new Observable((observer) => this.peopleSearchObserver = observer)
            .pipe(share());
    }
    involveUserAndCloseSearch() {
        if (this.peopleSearch) {
            this.peopleSearch.involveUserAndClose();
        }
    }
    involveUserWithoutCloseSearch() {
        if (this.peopleSearch) {
            this.peopleSearch.involveUser();
        }
    }
    searchUser(searchedWord) {
        this.peopleProcessService.getWorkflowUsers(this.taskId, searchedWord)
            .subscribe((users) => {
            this.peopleSearchObserver.next(users);
        }, (error) => this.logService.error(error));
    }
    involveUser(user) {
        if (user && user.id) {
            this.peopleProcessService
                .involveUserWithTask(this.taskId, user.id.toString())
                .subscribe(() => this.people = [...this.people, user], () => this.logService.error('Impossible to involve user with task'));
        }
    }
    removeInvolvedUser(user) {
        this.peopleProcessService
            .removeInvolvedUser(this.taskId, user.id.toString())
            .subscribe(() => {
            this.people = this.people.filter(involvedUser => involvedUser.id !== user.id);
        }, () => this.logService.error('Impossible to remove involved user from task'));
    }
    getDisplayUser(firstName, lastName, delimiter = '-') {
        firstName = (firstName !== null ? firstName : '');
        lastName = (lastName !== null ? lastName : '');
        return firstName + delimiter + lastName;
    }
    getInitialUserName(firstName, lastName) {
        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');
        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');
        return this.getDisplayUser(firstName, lastName, '');
    }
    onAddAssignment() {
        this.showAssignment = true;
    }
    onClickAction(event) {
        if (event && event.value && event.type === 'remove') {
            this.removeInvolvedUser(event.value);
        }
    }
    hasPeople() {
        return this.people && this.people.length > 0;
    }
    isEditMode() {
        return !this.readOnly;
    }
    onCloseSearch() {
        this.showAssignment = false;
    }
}
PeopleComponent.ɵfac = function PeopleComponent_Factory(t) { return new (t || PeopleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LogService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PeopleProcessService)); };
PeopleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PeopleComponent, selectors: [["adf-people"]], viewQuery: function PeopleComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.peopleSearch = _t.first);
    } }, inputs: { people: "people", taskId: "taskId", readOnly: "readOnly" }, decls: 8, vars: 5, consts: [[1, "adf-assignment-top-container"], ["mat-card-content", "", 1, "adf-assignment-top-container-content"], [1, "assignment-header"], ["class", "adf-assignment-count", "id", "people-title", 4, "ngIf"], ["class", "adf-assignment-count", "id", "no-people-label", 4, "ngIf"], ["class", "adf-add-people", 3, "click", 4, "ngIf"], ["class", "adf-assignment-container", 4, "ngIf"], ["class", "adf-assignment-list-container", "id", "assignment-people-list", 4, "ngIf"], ["id", "people-title", 1, "adf-assignment-count"], ["id", "no-people-label", 1, "adf-assignment-count"], [1, "adf-add-people", 3, "click"], [1, "adf-add-person-icon"], [1, "adf-assignment-container"], [3, "results", "searchPeople", "success", "closeSearch"], ["peopleSearch", ""], ["adf-people-search-title", ""], ["adf-people-search-action-label", ""], ["id", "assignment-people-list", 1, "adf-assignment-list-container"], [3, "users", "actions", "clickAction"], ["key", "firstName"], ["key", "email", 1, "adf-full-width"], ["class", "adf-people-search-people-pic", 4, "ngIf"], ["class", "adf-people-img", 3, "alt", "src", 4, "ngIf"], [1, "adf-people-search-people-pic"], [1, "adf-people-img", 3, "alt", "src"], [1, "adf-people-user-info"], [1, "adf-people-full-name"], [1, "adf-people-email"]], template: function PeopleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, PeopleComponent_div_3_Template, 3, 4, "div", 3);
        ɵngcc0.ɵɵtemplate(4, PeopleComponent_div_4_Template, 3, 3, "div", 4);
        ɵngcc0.ɵɵtemplate(5, PeopleComponent_div_5_Template, 3, 0, "div", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, PeopleComponent_div_6_Template, 9, 7, "div", 6);
        ɵngcc0.ɵɵtemplate(7, PeopleComponent_div_7_Template, 7, 2, "div", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasPeople());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasPeople());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isEditMode());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showAssignment);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasPeople());
    } }, directives: [ɵngcc2.MatCard, ɵngcc2.MatCardContent, ɵngcc3.NgIf, ɵngcc4.MatIcon, ɵngcc5.PeopleSearchComponent, ɵngcc6.PeopleSearchTitleDirective, ɵngcc7.PeopleListComponent, ɵngcc1.DataColumnListComponent, ɵngcc1.DataColumnComponent], pipes: [ɵngcc8.TranslatePipe], styles: [".adf-assignment-header{border-bottom:1px solid var(--theme-fg-divider);padding:6px 20px}.adf-assignment-count{float:left;font-weight:bolder;margin:13px;opacity:.54;padding:10px 0}.adf-add-people{cursor:pointer;float:right;height:26px;margin:13px;opacity:.54;padding:8px}.adf-add-people:hover{color:var(--theme-primary-color)}.adf-assignment-top-container.mat-card{align-items:stretch;border-top:1px solid var(--theme-fg-divider);display:flex;flex-flow:row wrap;margin:0;padding:0}.adf-assignment-top-container-content{align-items:stretch;display:flex;flex:1 0 auto;flex-flow:column;max-width:100%}.adf-assignment-container{border-bottom:1px solid var(--theme-fg-divider);max-width:100%;padding:10px 20px}.adf-assignment-list-container{padding:0}adf-people-list adf-datatable thead{display:none}adf-people-list adf-datatable .adf-datatable-cell{margin:13px}adf-people-list adf-datatable .adf-datatable .adf-datatable-cell .adf-cell-container{align-items:left;flex-direction:column}adf-people-list adf-datatable .adf-people-email{opacity:.54}.adf-people-img{border-radius:90%;height:40px;vertical-align:middle;width:40px}.adf-people-search-people-pic{background:var(--theme-primary-color);border-radius:100px;color:#fff;font-size:18px;font-weight:bolder;padding:10px 5px;text-align:center;text-transform:uppercase;vertical-align:text-bottom;width:30px}.adf-people-user-info{flex-direction:column;text-align:center}"], encapsulation: 2 });
PeopleComponent.ctorParameters = () => [
    { type: LogService },
    { type: PeopleProcessService }
];
PeopleComponent.propDecorators = {
    people: [{ type: Input }],
    taskId: [{ type: Input }],
    readOnly: [{ type: Input }],
    peopleSearch: [{ type: ViewChild, args: ['peopleSearch',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PeopleComponent, [{
        type: Component,
        args: [{
                selector: 'adf-people',
                template: "<mat-card class=\"adf-assignment-top-container\">\n    <div mat-card-content class=\"adf-assignment-top-container-content\">\n        <div class=\"assignment-header\">\n                <div *ngIf=\"hasPeople()\" class=\"adf-assignment-count\" id=\"people-title\">\n                    {{ 'ADF_TASK_LIST.DETAILS.LABELS.PEOPLE' | translate }} {{ ' (' + people.length + ')' }}\n                </div>\n                <div *ngIf=\"!hasPeople()\" class=\"adf-assignment-count\" id=\"no-people-label\">\n                    {{ 'ADF_TASK_LIST.DETAILS.PEOPLE.NONE' | translate }}\n                </div>\n                <div *ngIf=\"isEditMode()\" class=\"adf-add-people\" (click)=\"onAddAssignment()\">\n                    <mat-icon class=\"adf-add-person-icon\">person_add</mat-icon>\n                </div>\n            </div>\n            <div class=\"adf-assignment-container\" *ngIf=\"showAssignment\">\n                <adf-people-search\n                    #peopleSearch\n                    (searchPeople)=\"searchUser($event)\"\n                    (success)=\"involveUser($event)\"\n                    (closeSearch)=\"onCloseSearch()\"\n                    [results]=\"peopleSearch$\">\n                    <ng-container adf-people-search-title>{{ 'ADF_TASK_LIST.DETAILS.LABELS.ADD_PEOPLE' | translate }}</ng-container>\n                    <ng-container adf-people-search-action-label>{{ 'ADF_TASK_LIST.PEOPLE.ADD_USER' | translate }}</ng-container>\n                </adf-people-search>\n            </div>\n            <div class=\"adf-assignment-list-container\" id=\"assignment-people-list\" *ngIf=\"hasPeople()\">\n                <adf-people-list\n                [users]=\"people\"\n                [actions]=\"isEditMode()\"\n                (clickAction)=\"onClickAction($event)\">\n                    <data-columns>\n                        <data-column key=\"firstName\">\n                            <ng-template let-entry=\"$implicit\">\n                                <div *ngIf=\"!entry.row.obj.pictureId\" class=\"adf-people-search-people-pic\">\n                                    {{getInitialUserName(entry.row.obj.firstName, entry.row.obj.lastName)}}</div>\n                                <div>\n                                    <img [alt]=\"getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ')\" *ngIf=\"entry.row.obj.pictureId\" class=\"adf-people-img\"\n                                        [src]=\"peopleProcessService.getUserImage(entry.row.obj)\"/>\n                                </div>\n                            </ng-template>\n                        </data-column>\n                        <data-column key=\"email\" class=\"adf-full-width\">\n                            <ng-template let-entry=\"$implicit\">\n                                <div class=\"adf-people-user-info\">\n                                    <div [attr.data-automation-id]=\"'adf-people-full-name-'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, '-')\" class=\"adf-people-full-name\">{{ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ') }}</div>\n                                    <div [attr.data-automation-id]=\"'adf-people-email-'+ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, '-')\"  class=\"adf-people-email\">{{ entry.row.obj.email }}</div>\n                                </div>\n                            </ng-template>\n                        </data-column>\n                    </data-columns>\n                </adf-people-list>\n            </div>\n    </div>\n</mat-card>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-assignment-header{border-bottom:1px solid var(--theme-fg-divider);padding:6px 20px}.adf-assignment-count{float:left;font-weight:bolder;margin:13px;opacity:.54;padding:10px 0}.adf-add-people{cursor:pointer;float:right;height:26px;margin:13px;opacity:.54;padding:8px}.adf-add-people:hover{color:var(--theme-primary-color)}.adf-assignment-top-container.mat-card{align-items:stretch;border-top:1px solid var(--theme-fg-divider);display:flex;flex-flow:row wrap;margin:0;padding:0}.adf-assignment-top-container-content{align-items:stretch;display:flex;flex:1 0 auto;flex-flow:column;max-width:100%}.adf-assignment-container{border-bottom:1px solid var(--theme-fg-divider);max-width:100%;padding:10px 20px}.adf-assignment-list-container{padding:0}adf-people-list adf-datatable thead{display:none}adf-people-list adf-datatable .adf-datatable-cell{margin:13px}adf-people-list adf-datatable .adf-datatable .adf-datatable-cell .adf-cell-container{align-items:left;flex-direction:column}adf-people-list adf-datatable .adf-people-email{opacity:.54}.adf-people-img{border-radius:90%;height:40px;vertical-align:middle;width:40px}.adf-people-search-people-pic{background:var(--theme-primary-color);border-radius:100px;color:#fff;font-size:18px;font-weight:bolder;padding:10px 5px;text-align:center;text-transform:uppercase;vertical-align:text-bottom;width:30px}.adf-people-user-info{flex-direction:column;text-align:center}"]
            }]
    }], function () { return [{ type: ɵngcc1.LogService }, { type: ɵngcc1.PeopleProcessService }]; }, { people: [{
            type: Input
        }], taskId: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], peopleSearch: [{
            type: ViewChild,
            args: ['peopleSearch']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,