/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DataTableComponent, DataColumnListComponent, ShowHeaderMode } from '@alfresco/adf-core';
import { Component, ContentChild, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';

const _c0 = ["dataTable"];
export class PeopleListComponent {
    constructor() {
        this.actions = false;
        this.clickRow = new EventEmitter();
        this.clickAction = new EventEmitter();
        this.showHeader = ShowHeaderMode.Never;
    }
    ngAfterContentInit() {
        this.peopleDataTable.columnList = this.columnList;
    }
    selectUser(event) {
        this.user = event.value.obj;
        this.clickRow.emit(this.user);
    }
    hasActions() {
        return this.actions;
    }
    onShowRowActionsMenu(event) {
        const removeAction = {
            title: 'Remove',
            name: 'remove'
        };
        event.value.actions = [
            removeAction
        ];
    }
    onExecuteRowAction(event) {
        const args = event.value;
        const action = args.action;
        this.clickAction.emit({ type: action.name, value: args.row.obj });
    }
}
PeopleListComponent.ɵfac = function PeopleListComponent_Factory(t) { return new (t || PeopleListComponent)(); };
PeopleListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PeopleListComponent, selectors: [["adf-people-list"]], contentQueries: function PeopleListComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DataColumnListComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnList = _t.first);
    } }, viewQuery: function PeopleListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.peopleDataTable = _t.first);
    } }, inputs: { actions: "actions", users: "users" }, outputs: { clickRow: "clickRow", clickAction: "clickAction" }, decls: 2, vars: 3, consts: [[1, "adf-task-people-list", 3, "rows", "actions", "showHeader", "rowClick", "rowDblClick", "showRowActionsMenu", "executeRowAction"], ["dataTable", ""]], template: function PeopleListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "adf-datatable", 0, 1);
        ɵngcc0.ɵɵlistener("rowClick", function PeopleListComponent_Template_adf_datatable_rowClick_0_listener($event) { return ctx.selectUser($event); })("rowDblClick", function PeopleListComponent_Template_adf_datatable_rowDblClick_0_listener($event) { return ctx.selectUser($event); })("showRowActionsMenu", function PeopleListComponent_Template_adf_datatable_showRowActionsMenu_0_listener($event) { return ctx.onShowRowActionsMenu($event); })("executeRowAction", function PeopleListComponent_Template_adf_datatable_executeRowAction_0_listener($event) { return ctx.onExecuteRowAction($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("rows", ctx.users)("actions", ctx.hasActions())("showHeader", ctx.showHeader);
    } }, directives: [ɵngcc1.DataTableComponent], styles: [".adf-task-people-list[_ngcontent-%COMP%]   .adf-datatable-list[_ngcontent-%COMP%]{width:100%}"] });
PeopleListComponent.propDecorators = {
    columnList: [{ type: ContentChild, args: [DataColumnListComponent,] }],
    peopleDataTable: [{ type: ViewChild, args: ['dataTable', { static: true },] }],
    users: [{ type: Input }],
    actions: [{ type: Input }],
    clickRow: [{ type: Output }],
    clickAction: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PeopleListComponent, [{
        type: Component,
        args: [{
                selector: 'adf-people-list',
                template: "<adf-datatable\n    #dataTable\n    class=\"adf-task-people-list\"\n    [rows]=\"users\"\n    [actions]=\"hasActions()\"\n    [showHeader]=\"showHeader\"\n    (rowClick)=\"selectUser($event)\"\n    (rowDblClick)=\"selectUser($event)\"\n    (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n    (executeRowAction)=\"onExecuteRowAction($event)\">\n</adf-datatable>\n",
                styles: [".adf-task-people-list .adf-datatable-list{width:100%}"]
            }]
    }], function () { return []; }, { actions: [{
            type: Input
        }], clickRow: [{
            type: Output
        }], clickAction: [{
            type: Output
        }], columnList: [{
            type: ContentChild,
            args: [DataColumnListComponent]
        }], peopleDataTable: [{
            type: ViewChild,
            args: ['dataTable', { static: true }]
        }], users: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVvcGxlLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvcHJvY2Vzcy1zZXJ2aWNlcy9zcmMvbGliL3Blb3BsZS9jb21wb25lbnRzL3Blb3BsZS1saXN0L3Blb3BsZS1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLGtCQUFrQixFQUFpQix1QkFBdUIsRUFBb0IsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbEksT0FBTyxFQUFvQixTQUFTLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFTbEgsTUFBTSxPQUFPLG1CQUFtQjtBQUFHLElBTm5DO0FBQ0csUUFtQkMsWUFBTyxHQUFZLEtBQUssQ0FBQztBQUM3QixRQUdJLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBb0IsQ0FBQztBQUNwRCxRQUdJLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQWtCLENBQUM7QUFDckQsUUFFSSxlQUFVLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQztBQUN0QyxJQStCQSxDQUFDO0FBQ0QsSUEvQkksa0JBQWtCO0FBQ3RCLFFBQVEsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztBQUMxRCxJQUFJLENBQUM7QUFDTCxJQUNJLFVBQVUsQ0FBQyxLQUFVO0FBQ3pCLFFBQVEsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztBQUNwQyxRQUFRLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN0QyxJQUFJLENBQUM7QUFDTCxJQUNJLFVBQVU7QUFBSyxRQUNYLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztBQUM1QixJQUFJLENBQUM7QUFDTCxJQUNJLG9CQUFvQixDQUFDLEtBQW9CO0FBQzdDLFFBQ1EsTUFBTSxZQUFZLEdBQUc7QUFDN0IsWUFBWSxLQUFLLEVBQUUsUUFBUTtBQUMzQixZQUFZLElBQUksRUFBRSxRQUFRO0FBQzFCLFNBQVMsQ0FBQztBQUNWLFFBQ1EsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUc7QUFDOUIsWUFBWSxZQUFZO0FBQ3hCLFNBQVMsQ0FBQztBQUNWLElBQUksQ0FBQztBQUNMLElBQ0ksa0JBQWtCLENBQUMsS0FBVTtBQUNqQyxRQUFRLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7QUFDakMsUUFBUSxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQ25DLFFBQVEsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUMsQ0FBQyxDQUFDO0FBQ3hFLElBQUksQ0FBQztBQUNMOytDQS9EQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGlCQUFpQjtlQUMzQjs7Ozs4RUFBMkM7O01BRTlDOzs7Ozs7Ozs7OytKQUVHO0FBQUM7QUFBdUMseUJBRXZDLFlBQVksU0FBQyx1QkFBdUI7QUFDcEMsOEJBRUEsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFDdkMsb0JBR0EsS0FBSztBQUNSLHNCQUdHLEtBQUs7QUFDUix1QkFHRyxNQUFNO0FBQ1QsMEJBR0csTUFBTTtBQUNWOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBEYXRhVGFibGVDb21wb25lbnQsIERhdGFDZWxsRXZlbnQsIERhdGFDb2x1bW5MaXN0Q29tcG9uZW50LCBVc2VyUHJvY2Vzc01vZGVsLCBTaG93SGVhZGVyTW9kZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVzZXJFdmVudE1vZGVsIH0gZnJvbSAnLi4vLi4vLi4vdGFzay1saXN0L21vZGVscy91c2VyLWV2ZW50Lm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtcGVvcGxlLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wZW9wbGUtbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcGVvcGxlLWxpc3QuY29tcG9uZW50LnNjc3MnXVxufSlcblxuZXhwb3J0IGNsYXNzIFBlb3BsZUxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcblxuICAgIEBDb250ZW50Q2hpbGQoRGF0YUNvbHVtbkxpc3RDb21wb25lbnQpXG4gICAgY29sdW1uTGlzdDogRGF0YUNvbHVtbkxpc3RDb21wb25lbnQ7XG5cbiAgICBAVmlld0NoaWxkKCdkYXRhVGFibGUnLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICAgIHBlb3BsZURhdGFUYWJsZTogRGF0YVRhYmxlQ29tcG9uZW50O1xuXG4gICAgLyoqIFRoZSBhcnJheSBvZiB1c2VyIGRhdGEgdXNlZCB0byBwb3B1bGF0ZSB0aGUgcGVvcGxlIGxpc3QuICovXG4gICAgQElucHV0KClcbiAgICB1c2VyczogVXNlclByb2Nlc3NNb2RlbFtdO1xuXG4gICAgLyoqIFRvZ2dsZXMgd2hldGhlciBvciBub3QgYWN0aW9ucyBzaG91bGQgYmUgdmlzaWJsZSwgaS5lLiB0aGUgJ1RocmVlLURvdHMnIG1lbnUuICovXG4gICAgQElucHV0KClcbiAgICBhY3Rpb25zOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBhIHJvdyBpbiB0aGUgcGVvcGxlIGxpc3QuICovXG4gICAgQE91dHB1dCgpXG4gICAgY2xpY2tSb3cgPSBuZXcgRXZlbnRFbWl0dGVyPFVzZXJQcm9jZXNzTW9kZWw+KCk7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBpbiB0aGUgJ1RocmVlIERvdHMnIGRyb3AgZG93biBtZW51IGZvciBhIHJvdy4gKi9cbiAgICBAT3V0cHV0KClcbiAgICBjbGlja0FjdGlvbiA9IG5ldyBFdmVudEVtaXR0ZXI8VXNlckV2ZW50TW9kZWw+KCk7XG5cbiAgICB1c2VyOiBVc2VyUHJvY2Vzc01vZGVsO1xuICAgIHNob3dIZWFkZXIgPSBTaG93SGVhZGVyTW9kZS5OZXZlcjtcblxuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAgICAgdGhpcy5wZW9wbGVEYXRhVGFibGUuY29sdW1uTGlzdCA9IHRoaXMuY29sdW1uTGlzdDtcbiAgICB9XG5cbiAgICBzZWxlY3RVc2VyKGV2ZW50OiBhbnkpIHtcbiAgICAgICAgdGhpcy51c2VyID0gZXZlbnQudmFsdWUub2JqO1xuICAgICAgICB0aGlzLmNsaWNrUm93LmVtaXQodGhpcy51c2VyKTtcbiAgICB9XG5cbiAgICBoYXNBY3Rpb25zKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hY3Rpb25zO1xuICAgIH1cblxuICAgIG9uU2hvd1Jvd0FjdGlvbnNNZW51KGV2ZW50OiBEYXRhQ2VsbEV2ZW50KSB7XG5cbiAgICAgICAgY29uc3QgcmVtb3ZlQWN0aW9uID0ge1xuICAgICAgICAgICAgdGl0bGU6ICdSZW1vdmUnLFxuICAgICAgICAgICAgbmFtZTogJ3JlbW92ZSdcbiAgICAgICAgfTtcblxuICAgICAgICBldmVudC52YWx1ZS5hY3Rpb25zID0gW1xuICAgICAgICAgICAgcmVtb3ZlQWN0aW9uXG4gICAgICAgIF07XG4gICAgfVxuXG4gICAgb25FeGVjdXRlUm93QWN0aW9uKGV2ZW50OiBhbnkpIHtcbiAgICAgICAgY29uc3QgYXJncyA9IGV2ZW50LnZhbHVlO1xuICAgICAgICBjb25zdCBhY3Rpb24gPSBhcmdzLmFjdGlvbjtcbiAgICAgICAgdGhpcy5jbGlja0FjdGlvbi5lbWl0KHt0eXBlOiBhY3Rpb24ubmFtZSwgdmFsdWU6IGFyZ3Mucm93Lm9ian0pO1xuICAgIH1cbn1cbiJdfQ==