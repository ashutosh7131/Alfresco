/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CoreModule } from '@alfresco/adf-core';
import { MaterialModule } from '../material.module';
import { ProcessCommentsModule } from '../process-comments/process-comments.module';
import { TaskListModule } from '../task-list/task-list.module';
import { PeopleModule } from '../people/people.module';
import { ContentWidgetModule } from '../content-widget/content-widget.module';
import { ProcessAuditDirective } from './components/process-audit.directive';
import { ProcessFiltersComponent } from './components/process-filters.component';
import { ProcessInstanceDetailsComponent } from './components/process-instance-details.component';
import { ProcessInstanceHeaderComponent } from './components/process-instance-header.component';
import { ProcessInstanceTasksComponent } from './components/process-instance-tasks.component';
import { ProcessInstanceListComponent } from './components/process-list.component';
import { StartProcessInstanceComponent } from './components/start-process.component';
import { FormModule } from '../form/form.module';
import { ProcessNamePipe } from '../pipes/process-name.pipe';
export class ProcessListModule {
}
ProcessListModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    MaterialModule,
                    FlexLayoutModule,
                    FormsModule,
                    ReactiveFormsModule,
                    CoreModule,
                    TaskListModule,
                    PeopleModule,
                    ContentWidgetModule,
                    ProcessCommentsModule,
                    FormModule
                ],
                declarations: [
                    ProcessInstanceListComponent,
                    ProcessFiltersComponent,
                    ProcessInstanceDetailsComponent,
                    ProcessAuditDirective,
                    ProcessInstanceHeaderComponent,
                    ProcessInstanceTasksComponent,
                    StartProcessInstanceComponent
                ],
                exports: [
                    ProcessInstanceListComponent,
                    ProcessFiltersComponent,
                    ProcessInstanceDetailsComponent,
                    ProcessAuditDirective,
                    ProcessInstanceHeaderComponent,
                    ProcessInstanceTasksComponent,
                    StartProcessInstanceComponent
                ],
                providers: [
                    ProcessNamePipe
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1saXN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMvc3JjLyIsInNvdXJjZXMiOlsibGliL3Byb2Nlc3MtbGlzdC9wcm9jZXNzLWxpc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDOUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDakYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDbEcsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFDaEcsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDOUYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDbkYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDckYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQXNDN0QsTUFBTSxPQUFPLGlCQUFpQjs7O1lBcEM3QixRQUFRLFNBQUM7Z0JBQ04sT0FBTyxFQUFFO29CQUNMLFlBQVk7b0JBQ1osY0FBYztvQkFDZCxnQkFBZ0I7b0JBQ2hCLFdBQVc7b0JBQ1gsbUJBQW1CO29CQUNuQixVQUFVO29CQUNWLGNBQWM7b0JBQ2QsWUFBWTtvQkFDWixtQkFBbUI7b0JBQ25CLHFCQUFxQjtvQkFDckIsVUFBVTtpQkFDYjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1YsNEJBQTRCO29CQUM1Qix1QkFBdUI7b0JBQ3ZCLCtCQUErQjtvQkFDL0IscUJBQXFCO29CQUNyQiw4QkFBOEI7b0JBQzlCLDZCQUE2QjtvQkFDN0IsNkJBQTZCO2lCQUNoQztnQkFDRCxPQUFPLEVBQUU7b0JBQ0wsNEJBQTRCO29CQUM1Qix1QkFBdUI7b0JBQ3ZCLCtCQUErQjtvQkFDL0IscUJBQXFCO29CQUNyQiw4QkFBOEI7b0JBQzlCLDZCQUE2QjtvQkFDN0IsNkJBQTZCO2lCQUNoQztnQkFDRCxTQUFTLEVBQUU7b0JBQ1AsZUFBZTtpQkFDbEI7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmxleExheW91dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0JztcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBNYXRlcmlhbE1vZHVsZSB9IGZyb20gJy4uL21hdGVyaWFsLm1vZHVsZSc7XG5pbXBvcnQgeyBQcm9jZXNzQ29tbWVudHNNb2R1bGUgfSBmcm9tICcuLi9wcm9jZXNzLWNvbW1lbnRzL3Byb2Nlc3MtY29tbWVudHMubW9kdWxlJztcbmltcG9ydCB7IFRhc2tMaXN0TW9kdWxlIH0gZnJvbSAnLi4vdGFzay1saXN0L3Rhc2stbGlzdC5tb2R1bGUnO1xuaW1wb3J0IHsgUGVvcGxlTW9kdWxlIH0gZnJvbSAnLi4vcGVvcGxlL3Blb3BsZS5tb2R1bGUnO1xuaW1wb3J0IHsgQ29udGVudFdpZGdldE1vZHVsZSB9IGZyb20gJy4uL2NvbnRlbnQtd2lkZ2V0L2NvbnRlbnQtd2lkZ2V0Lm1vZHVsZSc7XG5pbXBvcnQgeyBQcm9jZXNzQXVkaXREaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMvcHJvY2Vzcy1hdWRpdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUHJvY2Vzc0ZpbHRlcnNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvcHJvY2Vzcy1maWx0ZXJzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcm9jZXNzSW5zdGFuY2VEZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Byb2Nlc3MtaW5zdGFuY2UtZGV0YWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvY2Vzc0luc3RhbmNlSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Byb2Nlc3MtaW5zdGFuY2UtaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcm9jZXNzSW5zdGFuY2VUYXNrc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wcm9jZXNzLWluc3RhbmNlLXRhc2tzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcm9jZXNzSW5zdGFuY2VMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Byb2Nlc3MtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3RhcnRQcm9jZXNzSW5zdGFuY2VDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc3RhcnQtcHJvY2Vzcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9ybU1vZHVsZSB9IGZyb20gJy4uL2Zvcm0vZm9ybS5tb2R1bGUnO1xuaW1wb3J0IHsgUHJvY2Vzc05hbWVQaXBlIH0gZnJvbSAnLi4vcGlwZXMvcHJvY2Vzcy1uYW1lLnBpcGUnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBNYXRlcmlhbE1vZHVsZSxcbiAgICAgICAgRmxleExheW91dE1vZHVsZSxcbiAgICAgICAgRm9ybXNNb2R1bGUsXG4gICAgICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgICAgIENvcmVNb2R1bGUsXG4gICAgICAgIFRhc2tMaXN0TW9kdWxlLFxuICAgICAgICBQZW9wbGVNb2R1bGUsXG4gICAgICAgIENvbnRlbnRXaWRnZXRNb2R1bGUsXG4gICAgICAgIFByb2Nlc3NDb21tZW50c01vZHVsZSxcbiAgICAgICAgRm9ybU1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUxpc3RDb21wb25lbnQsXG4gICAgICAgIFByb2Nlc3NGaWx0ZXJzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzSW5zdGFuY2VEZXRhaWxzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzQXVkaXREaXJlY3RpdmUsXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUhlYWRlckNvbXBvbmVudCxcbiAgICAgICAgUHJvY2Vzc0luc3RhbmNlVGFza3NDb21wb25lbnQsXG4gICAgICAgIFN0YXJ0UHJvY2Vzc0luc3RhbmNlQ29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUxpc3RDb21wb25lbnQsXG4gICAgICAgIFByb2Nlc3NGaWx0ZXJzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzSW5zdGFuY2VEZXRhaWxzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzQXVkaXREaXJlY3RpdmUsXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUhlYWRlckNvbXBvbmVudCxcbiAgICAgICAgUHJvY2Vzc0luc3RhbmNlVGFza3NDb21wb25lbnQsXG4gICAgICAgIFN0YXJ0UHJvY2Vzc0luc3RhbmNlQ29tcG9uZW50XG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgUHJvY2Vzc05hbWVQaXBlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBQcm9jZXNzTGlzdE1vZHVsZSB7XG59XG4iXX0=