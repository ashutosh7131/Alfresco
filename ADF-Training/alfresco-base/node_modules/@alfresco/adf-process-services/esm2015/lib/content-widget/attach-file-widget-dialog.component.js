/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { ExternalAlfrescoApiService, AlfrescoApiService, LoginDialogPanelComponent, SearchService, TranslationService, AuthenticationService, SitesService } from '@alfresco/adf-core';
import { DocumentListService } from '@alfresco/adf-content-services';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/material/dialog';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/button';
import * as ɵngcc5 from '@alfresco/adf-content-services';
import * as ɵngcc6 from '@ngx-translate/core';

const _c0 = ["adfLoginPanel"];
function AttachFileWidgetDialogComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);
} }
function AttachFileWidgetDialogComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.data.title);
} }
function AttachFileWidgetDialogComponent_adf_login_dialog_panel_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-login-dialog-panel", 10, 11);
} }
function AttachFileWidgetDialogComponent_adf_content_node_selector_panel_6_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-content-node-selector-panel", 12);
    ɵngcc0.ɵɵlistener("select", function AttachFileWidgetDialogComponent_adf_content_node_selector_panel_6_Template_adf_content_node_selector_panel_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onSelect($event); })("siteChange", function AttachFileWidgetDialogComponent_adf_content_node_selector_panel_6_Template_adf_content_node_selector_panel_siteChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onSiteChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("currentFolderId", ctx_r4.data == null ? null : ctx_r4.data.currentFolderId)("isSelectionValid", ctx_r4.data == null ? null : ctx_r4.data.isSelectionValid)("showFilesInResult", ctx_r4.data == null ? null : ctx_r4.data.showFilesInResult);
} }
function AttachFileWidgetDialogComponent_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 13);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetDialogComponent_button_11_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.performLogin(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(2, 1, "ATTACH-FILE.ACTIONS.LOGIN"), " ");
} }
function AttachFileWidgetDialogComponent_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 14);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetDialogComponent_button_12_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onClick(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", !ctx_r6.hasNodeSelected());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r6.buttonActionName), " ");
} }
export class AttachFileWidgetDialogComponent {
    constructor(translation, data, externalApiService, authenticationService, matDialogRef) {
        this.translation = translation;
        this.data = data;
        this.externalApiService = externalApiService;
        this.authenticationService = authenticationService;
        this.matDialogRef = matDialogRef;
        externalApiService.init(data.ecmHost, data.context);
        this.action = data.actionName ? data.actionName.toUpperCase() : 'CHOOSE';
        this.buttonActionName = `ATTACH-FILE.ACTIONS.${this.action}`;
        this.updateTitle('DROPDOWN.MY_FILES_OPTION');
        this.updateExternalHost();
    }
    updateExternalHost() {
        this.authenticationService.onLogin.subscribe(() => this.registerAndClose());
        if (this.externalApiService.getInstance().isLoggedIn()) {
            this.registerAndClose();
        }
    }
    registerAndClose() {
        this.data.registerExternalHost(this.data.accountIdentifier, this.externalApiService);
        if (this.data.loginOnly) {
            this.data.selected.complete();
            this.matDialogRef.close();
        }
    }
    isLoggedIn() {
        return this.externalApiService.getInstance().isLoggedIn();
    }
    performLogin() {
        this.loginPanel.submitForm();
    }
    close() {
        this.data.selected.complete();
    }
    onSelect(nodeList) {
        this.chosenNode = nodeList;
    }
    onSiteChange(siteTitle) {
        this.updateTitle(siteTitle);
    }
    onClick() {
        this.data.selected.next(this.chosenNode);
        this.data.selected.complete();
    }
    updateTitle(siteTitle) {
        if (this.action === 'CHOOSE' && siteTitle) {
            this.title = this.getTitleTranslation(this.action, siteTitle);
        }
    }
    getTitleTranslation(action, name) {
        return this.translation.instant(`ATTACH-FILE.ACTIONS.${action}_ITEM`, { name: this.translation.instant(name) });
    }
    hasNodeSelected() {
        var _a;
        return ((_a = this.chosenNode) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }
}
AttachFileWidgetDialogComponent.ɵfac = function AttachFileWidgetDialogComponent_Factory(t) { return new (t || AttachFileWidgetDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslationService), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlfrescoApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AuthenticationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialogRef)); };
AttachFileWidgetDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AttachFileWidgetDialogComponent, selectors: [["adf-attach-file-widget-dialog"]], viewQuery: function AttachFileWidgetDialogComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loginPanel = _t.first);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            AuthenticationService,
            DocumentListService,
            SitesService,
            SearchService,
            { provide: AlfrescoApiService, useClass: ExternalAlfrescoApiService }
        ])], decls: 13, vars: 9, consts: [["mat-dialog-title", "", "data-automation-id", "content-node-selector-title"], [4, "ngIf", "ngIfElse"], ["loginTitle", ""], [1, "adf-login-dialog-content"], ["id", "attach-file-login-panel", 4, "ngIf"], ["id", "attach-file-content-node", 3, "currentFolderId", "isSelectionValid", "showFilesInResult", "select", "siteChange", 4, "ngIf"], ["align", "end"], ["mat-button", "", "data-automation-id", "attach-file-dialog-actions-cancel", 3, "click"], ["mat-button", "", "data-automation-id", "attach-file-dialog-actions-login", 3, "click", 4, "ngIf"], ["mat-button", "", "class", "adf-choose-action", "data-automation-id", "attach-file-dialog-actions-choose", 3, "disabled", "click", 4, "ngIf"], ["id", "attach-file-login-panel"], ["adfLoginPanel", ""], ["id", "attach-file-content-node", 3, "currentFolderId", "isSelectionValid", "showFilesInResult", "select", "siteChange"], ["mat-button", "", "data-automation-id", "attach-file-dialog-actions-login", 3, "click"], ["mat-button", "", "data-automation-id", "attach-file-dialog-actions-choose", 1, "adf-choose-action", 3, "disabled", "click"]], template: function AttachFileWidgetDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "header", 0);
        ɵngcc0.ɵɵtemplate(1, AttachFileWidgetDialogComponent_span_1_Template, 2, 1, "span", 1);
        ɵngcc0.ɵɵtemplate(2, AttachFileWidgetDialogComponent_ng_template_2_Template, 1, 1, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "mat-dialog-content", 3);
        ɵngcc0.ɵɵtemplate(5, AttachFileWidgetDialogComponent_adf_login_dialog_panel_5_Template, 2, 0, "adf-login-dialog-panel", 4);
        ɵngcc0.ɵɵtemplate(6, AttachFileWidgetDialogComponent_adf_content_node_selector_panel_6_Template, 1, 3, "adf-content-node-selector-panel", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "mat-dialog-actions", 6);
        ɵngcc0.ɵɵelementStart(8, "button", 7);
        ɵngcc0.ɵɵlistener("click", function AttachFileWidgetDialogComponent_Template_button_click_8_listener() { return ctx.close(); });
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, AttachFileWidgetDialogComponent_button_11_Template, 3, 3, "button", 8);
        ɵngcc0.ɵɵtemplate(12, AttachFileWidgetDialogComponent_button_12_Template, 3, 4, "button", 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoggedIn())("ngIfElse", _r1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoggedIn());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoggedIn());
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(10, 7, "ATTACH-FILE.ACTIONS.CANCEL"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoggedIn());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoggedIn());
    } }, directives: [ɵngcc2.MatDialogTitle, ɵngcc3.NgIf, ɵngcc2.MatDialogContent, ɵngcc2.MatDialogActions, ɵngcc4.MatButton, ɵngcc1.LoginDialogPanelComponent, ɵngcc5.ContentNodeSelectorPanelComponent], pipes: [ɵngcc6.TranslatePipe], styles: [".adf-attach-file-widget-dialog .mat-dialog-actions{background-color:var(--theme-background-color);color:var(--theme-foreground-text-color);display:flex;justify-content:flex-end}.adf-attach-file-widget-dialog .mat-dialog-actions button{font-weight:400;text-transform:uppercase}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action[disabled]{color:var(--theme-secondary-text-color)}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action:enabled{color:var(--theme-primary-color)}"], encapsulation: 2 });
AttachFileWidgetDialogComponent.ctorParameters = () => [
    { type: TranslationService },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },
    { type: AlfrescoApiService },
    { type: AuthenticationService },
    { type: MatDialogRef }
];
AttachFileWidgetDialogComponent.propDecorators = {
    loginPanel: [{ type: ViewChild, args: ['adfLoginPanel',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttachFileWidgetDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-attach-file-widget-dialog',
                template: "<header\n    mat-dialog-title\n    data-automation-id=\"content-node-selector-title\">\n    <span *ngIf=\"isLoggedIn(); else loginTitle\">{{title}}</span>\n    <ng-template #loginTitle>{{data.title}}</ng-template>\n</header>\n\n<mat-dialog-content class=\"adf-login-dialog-content\">\n    <adf-login-dialog-panel id=\"attach-file-login-panel\" #adfLoginPanel *ngIf=\"!isLoggedIn()\">\n    </adf-login-dialog-panel>\n    <adf-content-node-selector-panel *ngIf=\"isLoggedIn()\"\n                                     id=\"attach-file-content-node\"\n                                     [currentFolderId]=\"data?.currentFolderId\"\n                                     [isSelectionValid]=\"data?.isSelectionValid\"\n                                     [showFilesInResult]=\"data?.showFilesInResult\"\n                                     (select)=\"onSelect($event)\"\n                                     (siteChange)=\"onSiteChange($event)\">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"attach-file-dialog-actions-cancel\">{{ 'ATTACH-FILE.ACTIONS.CANCEL' | translate }}\n    </button>\n\n    <button *ngIf=\"!isLoggedIn()\"\n        mat-button\n        (click)=\"performLogin()\"\n        data-automation-id=\"attach-file-dialog-actions-login\">{{ 'ATTACH-FILE.ACTIONS.LOGIN' | translate }}\n    </button>\n\n    <button *ngIf=\"isLoggedIn()\"\n        mat-button\n        [disabled]=\"!hasNodeSelected()\"\n        class=\"adf-choose-action\"\n        (click)=\"onClick()\"\n        data-automation-id=\"attach-file-dialog-actions-choose\">{{ buttonActionName | translate }}\n    </button>\n\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None,
                providers: [
                    AuthenticationService,
                    DocumentListService,
                    SitesService,
                    SearchService,
                    { provide: AlfrescoApiService, useClass: ExternalAlfrescoApiService }
                ],
                styles: [".adf-attach-file-widget-dialog .mat-dialog-actions{background-color:var(--theme-background-color);color:var(--theme-foreground-text-color);display:flex;justify-content:flex-end}.adf-attach-file-widget-dialog .mat-dialog-actions button{font-weight:400;text-transform:uppercase}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action[disabled]{color:var(--theme-secondary-text-color)}.adf-attach-file-widget-dialog .mat-dialog-actions .adf-choose-action:enabled{color:var(--theme-primary-color)}"]
            }]
    }], function () { return [{ type: ɵngcc1.TranslationService }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }, { type: ɵngcc1.AlfrescoApiService }, { type: ɵngcc1.AuthenticationService }, { type: ɵngcc2.MatDialogRef }]; }, { loginPanel: [{
            type: ViewChild,
            args: ['adfLoginPanel']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,