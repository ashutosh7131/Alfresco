/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { ActivitiContentService, AppConfigService, AppConfigValues, ContentService, DownloadService, FormService, LogService, ProcessContentService, ThumbnailService, UploadWidgetComponent } from '@alfresco/adf-core';
import { ContentNodeDialogService } from '@alfresco/adf-content-services';
import { from, of, Subject, zip } from 'rxjs';
import { mergeMap, takeUntil } from 'rxjs/operators';
import { AttachFileWidgetDialogService } from './attach-file-widget-dialog.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@alfresco/adf-content-services';
import * as ɵngcc3 from './attach-file-widget-dialog.service';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/material/button';
import * as ɵngcc6 from '@angular/material/icon';
import * as ɵngcc7 from '@angular/material/menu';
import * as ɵngcc8 from '@angular/material/list';
import * as ɵngcc9 from '@angular/material/core';
import * as ɵngcc10 from '@ngx-translate/core';

function AttachFileWidgetComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function AttachFileWidgetComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelementStart(1, "a", 9);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "mat-icon");
    ɵngcc0.ɵɵtext(5, "file_upload");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "input", 10, 11);
    ɵngcc0.ɵɵlistener("change", function AttachFileWidgetComponent_div_6_Template_input_change_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onAttachFileChanged($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 3, "FORM.FIELD.UPLOAD"), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("multiple", ctx_r1.multipleOption)("id", ctx_r1.field.id);
} }
function AttachFileWidgetComponent_div_7_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_div_7_button_8_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const _r12 = ɵngcc0.ɵɵreference(6); return _r12.click(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "file_upload");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "input", 19, 20);
    ɵngcc0.ɵɵlistener("change", function AttachFileWidgetComponent_div_7_button_8_Template_input_change_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.onAttachFileChanged($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, "FORM.FIELD.LOCALSTORAGE"), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("multiple", ctx_r9.multipleOption)("id", ctx_r9.field.id);
} }
function AttachFileWidgetComponent_div_7_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_div_7_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.openSelectDialogFromFileSource(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵelement(3, "img", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "attach-", ctx_r10.field.params == null ? null : ctx_r10.field.params.fileSource == null ? null : ctx_r10.field.params.fileSource.name, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r10.field.params == null ? null : ctx_r10.field.params.fileSource == null ? null : ctx_r10.field.params.fileSource.name, " ");
} }
function AttachFileWidgetComponent_div_7_div_10_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_div_7_div_10_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const repo_r19 = ctx.$implicit; const ctx_r20 = ɵngcc0.ɵɵnextContext(3); return ctx_r20.openSelectDialog(repo_r19); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵelement(3, "img", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const repo_r19 = ctx.$implicit;
    ɵngcc0.ɵɵpropertyInterpolate1("id", "attach-", repo_r19 == null ? null : repo_r19.name, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", repo_r19.name, " ");
} }
function AttachFileWidgetComponent_div_7_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, AttachFileWidgetComponent_div_7_div_10_button_1_Template, 4, 2, "button", 23);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r11.repositoryList);
} }
function AttachFileWidgetComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "button", 13);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "mat-icon");
    ɵngcc0.ɵɵtext(5, "attach_file");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "mat-menu", 14, 15);
    ɵngcc0.ɵɵtemplate(8, AttachFileWidgetComponent_div_7_button_8_Template, 7, 5, "button", 16);
    ɵngcc0.ɵɵtemplate(9, AttachFileWidgetComponent_div_7_button_9_Template, 4, 2, "button", 17);
    ɵngcc0.ɵɵtemplate(10, AttachFileWidgetComponent_div_7_div_10_Template, 2, 1, "div", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r8 = ɵngcc0.ɵɵreference(7);
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r8)("id", ctx_r2.field.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 6, "FORM.FIELD.UPLOAD"), " ");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.isAllFileSourceSelected());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.isDefinedSourceFolder());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.isDefinedSourceFolder());
} }
function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_button_21_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 33);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_button_21_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); const file_r23 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r26 = ɵngcc0.ɵɵnextContext(2); return ctx_r26.onRemoveAttachFile(file_r23); })("keyup.enter", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_button_21_Template_button_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); const file_r23 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.onRemoveAttachFile(file_r23); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 34);
    ɵngcc0.ɵɵtext(2, "highlight_off");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r23 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("id", "file-" + file_r23.id + "-remove-file");
    ɵngcc0.ɵɵproperty("id", "file-" + file_r23.id + "-remove");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, "FORM.FIELD.REMOVE_FILE"));
} }
function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template(rf, ctx) { if (rf & 1) {
    const _r33 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 25);
    ɵngcc0.ɵɵelementStart(1, "img", 26);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template_img_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r33); const file_r23 = ctx.$implicit; const ctx_r32 = ɵngcc0.ɵɵnextContext(2); return ctx_r32.onAttachFileClicked(file_r23); })("keyup.enter", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template_img_keyup_enter_1_listener() { ɵngcc0.ɵɵrestoreView(_r33); const file_r23 = ctx.$implicit; const ctx_r34 = ɵngcc0.ɵɵnextContext(2); return ctx_r34.onAttachFileClicked(file_r23); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "span", 27);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template_span_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r33); const file_r23 = ctx.$implicit; const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.onAttachFileClicked(file_r23); })("keyup.enter", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template_span_keyup_enter_2_listener() { ɵngcc0.ɵɵrestoreView(_r33); const file_r23 = ctx.$implicit; const ctx_r36 = ɵngcc0.ɵɵnextContext(2); return ctx_r36.onAttachFileClicked(file_r23); });
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "button", 28);
    ɵngcc0.ɵɵelementStart(5, "mat-icon");
    ɵngcc0.ɵɵtext(6, "more_vert");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "mat-menu", 29, 30);
    ɵngcc0.ɵɵelementStart(9, "button", 31);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r33); const file_r23 = ctx.$implicit; const ctx_r37 = ɵngcc0.ɵɵnextContext(2); return ctx_r37.onAttachFileClicked(file_r23); });
    ɵngcc0.ɵɵelementStart(10, "mat-icon");
    ɵngcc0.ɵɵtext(11, "visibility");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "span");
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "button", 31);
    ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template_button_click_15_listener() { ɵngcc0.ɵɵrestoreView(_r33); const file_r23 = ctx.$implicit; const ctx_r38 = ɵngcc0.ɵɵnextContext(2); return ctx_r38.downloadContent(file_r23); });
    ɵngcc0.ɵɵelementStart(16, "mat-icon");
    ɵngcc0.ɵɵtext(17, "file_download");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(18, "span");
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(21, AttachFileWidgetComponent_mat_list_9_mat_list_item_1_button_21_Template, 6, 5, "button", 32);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r23 = ctx.$implicit;
    const _r24 = ɵngcc0.ɵɵreference(8);
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", "file-" + file_r23.id + "-icon")("src", file_r23.content ? ctx_r22.getIcon(file_r23.content.mimeType) : ctx_r22.getIcon(file_r23.mimeType), ɵngcc0.ɵɵsanitizeUrl)("alt", ctx_r22.mimeTypeIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("id", "file-" + file_r23.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(file_r23.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("id", "file-" + file_r23.id + "-option-menu");
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r24);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵpropertyInterpolate("id", "file-" + file_r23.id + "-show-file");
    ɵngcc0.ɵɵproperty("disabled", file_r23.isExternal || !file_r23.contentAvailable || !file_r23.mimeType);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 14, "FORM.FIELD.VIEW_FILE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("id", "file-" + file_r23.id + "-download-file");
    ɵngcc0.ɵɵproperty("disabled", file_r23.isExternal || !file_r23.mimeType);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(20, 16, "FORM.FIELD.DOWNLOAD_FILE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r22.field.readOnly);
} }
function AttachFileWidgetComponent_mat_list_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list");
    ɵngcc0.ɵɵtemplate(1, AttachFileWidgetComponent_mat_list_9_mat_list_item_1_Template, 22, 18, "mat-list-item", 24);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.field.value);
} }
function AttachFileWidgetComponent_error_widget_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 35);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
export class AttachFileWidgetComponent extends UploadWidgetComponent {
    constructor(formService, logger, thumbnails, processContentService, activitiContentService, contentService, contentDialog, appConfigService, downloadService, attachDialogService) {
        super(formService, logger, thumbnails, processContentService);
        this.formService = formService;
        this.logger = logger;
        this.thumbnails = thumbnails;
        this.processContentService = processContentService;
        this.activitiContentService = activitiContentService;
        this.contentService = contentService;
        this.contentDialog = contentDialog;
        this.appConfigService = appConfigService;
        this.downloadService = downloadService;
        this.attachDialogService = attachDialogService;
        this.typeId = 'AttachFileWidgetComponent';
        this.repositoryList = [];
        this.tempFilesList = [];
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        super.ngOnInit();
        this.activitiContentService.getAlfrescoRepositories().subscribe((repoList) => {
            this.repositoryList = repoList;
        });
        this.formService.taskSaved
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(formSaved => {
            if (formSaved.form.id === this.field.form.id) {
                this.tempFilesList = [];
            }
        });
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    isFileSourceConfigured() {
        return !!this.field.params && !!this.field.params.fileSource;
    }
    isMultipleSourceUpload() {
        return !this.field.readOnly && this.isFileSourceConfigured() && !this.isOnlyLocalSourceSelected();
    }
    isAllFileSourceSelected() {
        return this.field.params &&
            this.field.params.fileSource &&
            this.field.params.fileSource.serviceId === 'all-file-sources' &&
            !this.field.params.link;
    }
    isOnlyLocalSourceSelected() {
        return this.field.params &&
            this.field.params.fileSource &&
            this.field.params.fileSource.serviceId === 'local-file';
    }
    isSimpleUploadButton() {
        return this.isUploadButtonVisible() &&
            !this.isFileSourceConfigured() ||
            this.isOnlyLocalSourceSelected();
    }
    isUploadButtonVisible() {
        return (!this.hasFile || this.multipleOption) && !this.field.readOnly;
    }
    isDefinedSourceFolder() {
        var _a, _b;
        return !!((_b = (_a = this.field.params) === null || _a === void 0 ? void 0 : _a.fileSource) === null || _b === void 0 ? void 0 : _b.selectedFolder);
    }
    isTemporaryFile(file) {
        return this.tempFilesList.findIndex((elem) => elem.name === file.name) >= 0;
    }
    getNodeFromTempFile(file) {
        return this.tempFilesList.find((elem) => elem.name === file.name);
    }
    openSelectDialogFromFileSource() {
        var _a, _b;
        const params = this.field.params;
        const repository = this.repositoryList.find((repo) => { var _a; return repo.name === ((_a = params === null || params === void 0 ? void 0 : params.fileSource) === null || _a === void 0 ? void 0 : _a.name); });
        if (repository && this.isExternalHost(repository)) {
            this.uploadFileFromExternalCS(repository, (_b = (_a = params === null || params === void 0 ? void 0 : params.fileSource) === null || _a === void 0 ? void 0 : _a.selectedFolder) === null || _b === void 0 ? void 0 : _b.pathId);
        }
        else {
            this.contentDialog.openFileBrowseDialogByFolderId(params.fileSource.selectedFolder.pathId).subscribe((selections) => {
                this.tempFilesList.push(...selections);
                this.uploadFileFromCS(selections, this.field.params.fileSource.selectedFolder.accountId, this.field.params.fileSource.selectedFolder.siteId);
            });
        }
    }
    onAttachFileChanged(event) {
        this.tempFilesList.push(...Array.from(event.target.files));
        this.onFileChanged(event);
    }
    onRemoveAttachFile(file) {
        if (this.isTemporaryFile(file)) {
            this.tempFilesList.splice(this.tempFilesList.indexOf(file.contentBlob), 1);
        }
        this.removeFile(file);
    }
    onAttachFileClicked(file) {
        if (file.isExternal || !file.contentAvailable) {
            this.logger.info(`The file ${file.name} comes from an external source and cannot be showed at this moment`);
            return;
        }
        if (this.isTemporaryFile(file)) {
            this.formService.formContentClicked.next(file);
        }
        else {
            this.fileClicked(file);
        }
    }
    downloadContent(file) {
        if (this.isTemporaryFile(file)) {
            const fileBlob = file.contentBlob;
            if (fileBlob) {
                this.downloadService.downloadBlob(fileBlob, file.name);
            }
            else {
                const nodeUploaded = this.getNodeFromTempFile(file);
                const nodeUrl = this.contentService.getContentUrl(nodeUploaded.id);
                this.downloadService.downloadUrl(nodeUrl, file.name);
            }
        }
        if (file.sourceId) {
            const sourceHost = this.findSource(file.source);
            if (sourceHost && this.isExternalHost(sourceHost)) {
                this.attachDialogService.downloadURL(sourceHost, file.sourceId).subscribe((nodeUrl) => {
                    this.downloadService.downloadUrl(nodeUrl, file.name);
                });
            }
            else {
                const nodeUrl = this.contentService.getContentUrl(file.sourceId);
                this.downloadService.downloadUrl(nodeUrl, file.name);
            }
        }
        else {
            this.processContentService.getFileRawContent(file.id).subscribe((blob) => {
                this.downloadService.downloadBlob(blob, file.name);
            }, () => {
                this.logger.error('Impossible retrieve content for download');
            });
        }
    }
    openSelectDialog(repository) {
        if (this.isExternalHost(repository)) {
            this.uploadFileFromExternalCS(repository);
        }
        else {
            this.contentDialog.openFileBrowseDialogByDefaultLocation().subscribe((selections) => {
                this.tempFilesList.push(...selections);
                this.uploadFileFromCS(selections, `alfresco-${repository.id}-${repository.name}`);
            });
        }
    }
    isExternalHost(repository) {
        const currentECMHost = this.getDomainHost(this.appConfigService.get(AppConfigValues.ECMHOST));
        const chosenRepositoryHost = this.getDomainHost(repository.repositoryUrl);
        return chosenRepositoryHost !== currentECMHost;
    }
    findSource(sourceIdentifier) {
        return this.repositoryList.find(repository => sourceIdentifier === `alfresco-${repository.id}-${repository.name}`);
    }
    uploadFileFromExternalCS(repository, currentFolderId) {
        const accountIdentifier = `alfresco-${repository.id}-${repository.name}`;
        this.attachDialogService.openLogin(repository, currentFolderId, accountIdentifier).subscribe((selections) => {
            selections.forEach((node) => node.isExternal = true);
            this.tempFilesList.push(...selections);
            this.uploadFileFromCS(selections, accountIdentifier);
        });
    }
    uploadFileFromCS(fileNodeList, accountId, siteId) {
        const filesSaved = [];
        fileNodeList.forEach(node => {
            node.isLink = this.field.params.link;
        });
        from(fileNodeList).pipe(mergeMap((node) => {
            var _a;
            return zip(of((_a = node === null || node === void 0 ? void 0 : node.content) === null || _a === void 0 ? void 0 : _a.mimeType), this.activitiContentService.applyAlfrescoNode(node, siteId, accountId), of(node.isExternal));
        }))
            .subscribe(([mimeType, res, isExternal]) => {
            res.mimeType = mimeType;
            res.isExternal = isExternal;
            filesSaved.push(res);
        }, (error) => {
            this.logger.error(error);
        }, () => {
            const previousFiles = this.field.value ? this.field.value : [];
            this.field.value = [...previousFiles, ...filesSaved];
            this.field.json.value = [...previousFiles, ...filesSaved];
            this.hasFile = true;
        });
    }
    getDomainHost(urlToCheck) {
        const result = urlToCheck.match('^(?:https?:\/\/)?(?:[^@\/\n]+@)?(?:www\.)?([^:\/?\n]+)');
        return result[1];
    }
}
AttachFileWidgetComponent.ɵfac = function AttachFileWidgetComponent_Factory(t) { return new (t || AttachFileWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LogService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThumbnailService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ProcessContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivitiContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentNodeDialogService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DownloadService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AttachFileWidgetDialogService)); };
AttachFileWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AttachFileWidgetComponent, selectors: [["attach-widget"]], hostBindings: function AttachFileWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function AttachFileWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function AttachFileWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function AttachFileWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function AttachFileWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function AttachFileWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function AttachFileWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function AttachFileWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function AttachFileWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function AttachFileWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 12, vars: 17, consts: [[1, "adf-label"], [4, "ngIf"], [1, "adf-attach-widget-container"], ["id", "adf-attach-widget-simple-upload", 4, "ngIf"], ["class", "adf-attach-widget__menu-upload", 4, "ngIf"], ["id", "adf-attach-widget-readonly-list"], [3, "error"], [3, "required", 4, "ngIf"], ["id", "adf-attach-widget-simple-upload"], ["mat-raised-button", "", "color", "primary"], ["type", "file", 3, "multiple", "id", "change"], ["uploadFiles", ""], [1, "adf-attach-widget__menu-upload"], ["mat-raised-button", "", "color", "primary", 3, "matMenuTriggerFor", "id"], [1, "adf-attach-widget__menu-content"], ["menu", "matMenu"], ["mat-menu-item", "", "id", "attach-local-file", 3, "click", 4, "ngIf"], ["mat-menu-item", "", 3, "id", "click", 4, "ngIf"], ["mat-menu-item", "", "id", "attach-local-file", 3, "click"], ["type", "file", 1, "adf-attach-widget__input-type", 3, "multiple", "id", "change"], ["uploadFile", ""], ["mat-menu-item", "", 3, "id", "click"], ["alt", "alfresco", "src", "../assets/images/alfresco-flower.svg", 1, "adf-attach-widget__image-logo"], ["mat-menu-item", "", 3, "id", "click", 4, "ngFor", "ngForOf"], ["class", "adf-attach-files-row", 4, "ngFor", "ngForOf"], [1, "adf-attach-files-row"], ["mat-list-icon", "", "role", "button", "tabindex", "0", 1, "adf-attach-widget__icon", 3, "id", "src", "alt", "click", "keyup.enter"], ["matLine", "", "role", "button", "tabindex", "0", 1, "adf-file", 3, "id", "click", "keyup.enter"], ["mat-icon-button", "", 3, "id", "matMenuTriggerFor"], ["xPosition", "before"], ["fileActionMenu", "matMenu"], ["mat-menu-item", "", 3, "id", "disabled", "click"], ["mat-menu-item", "", 3, "id", "click", "keyup.enter", 4, "ngIf"], ["mat-menu-item", "", 3, "id", "click", "keyup.enter"], [1, "mat-24"], [3, "required"]], template: function AttachFileWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "label", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, AttachFileWidgetComponent_span_4_Template, 2, 0, "span", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵtemplate(6, AttachFileWidgetComponent_div_6_Template, 8, 5, "div", 3);
        ɵngcc0.ɵɵtemplate(7, AttachFileWidgetComponent_div_7_Template, 11, 8, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵtemplate(9, AttachFileWidgetComponent_mat_list_9_Template, 2, 1, "mat-list", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(10, "error-widget", 6);
        ɵngcc0.ɵɵtemplate(11, AttachFileWidgetComponent_error_widget_11_Template, 2, 3, "error-widget", 7);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adf-attach-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(3, 15, ctx.field.name), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSimpleUploadButton() && ctx.isUploadButtonVisible());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isUploadButtonVisible() && ctx.isMultipleSourceUpload());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasFile);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc4.NgIf, ɵngcc1.ErrorWidgetComponent, ɵngcc5.MatAnchor, ɵngcc6.MatIcon, ɵngcc5.MatButton, ɵngcc7.MatMenuTrigger, ɵngcc7._MatMenu, ɵngcc7.MatMenuItem, ɵngcc4.NgForOf, ɵngcc8.MatList, ɵngcc8.MatListItem, ɵngcc8.MatListIconCssMatStyler, ɵngcc9.MatLine], pipes: [ɵngcc10.TranslatePipe], styles: [".adf-attach-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-widget__menu-upload{align-items:center;display:flex}.adf-attach-widget__input-type{height:.1px;opacity:0;overflow:hidden;position:absolute;width:.1px;z-index:-1}.adf-attach-widget__image-logo{padding-left:5px}.adf-attach-widget-repo-button{padding-left:10px}.adf-attach-widget-repo-button .mat-button-wrapper{display:inline}.adf-attach-widget-repo-button .mat-mini-fab.mat-accent{background-color:inherit}.adf-attach-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-widget__icon{cursor:pointer;float:left;padding:6px}.adf-attach-widget__reset{margin-top:-2px}.adf-attach-files-row .mat-line{margin-bottom:0}"], encapsulation: 2 });
AttachFileWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: LogService },
    { type: ThumbnailService },
    { type: ProcessContentService },
    { type: ActivitiContentService },
    { type: ContentService },
    { type: ContentNodeDialogService },
    { type: AppConfigService },
    { type: DownloadService },
    { type: AttachFileWidgetDialogService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttachFileWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'attach-widget',
                template: "<div class=\"adf-attach-widget {{field.className}}\"\n    [class.adf-invalid]=\"!field.isValid\"\n    [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate}}\n        <span *ngIf=\"isRequired()\">*</span>\n    </label>\n    <div class=\"adf-attach-widget-container\">\n        <div id=\"adf-attach-widget-simple-upload\" *ngIf=\"isSimpleUploadButton() && isUploadButtonVisible()\">\n            <a mat-raised-button color=\"primary\">\n                {{ 'FORM.FIELD.UPLOAD' | translate }}\n                <mat-icon>file_upload</mat-icon>\n                <input #uploadFiles\n                        [multiple]=\"multipleOption\"\n                        type=\"file\"\n                        [id]=\"field.id\"\n                        (change)=\"onAttachFileChanged($event)\" />\n            </a>\n        </div>\n        <div class=\"adf-attach-widget__menu-upload\" *ngIf=\"isUploadButtonVisible() && isMultipleSourceUpload()\">\n            <button mat-raised-button color=\"primary\" [matMenuTriggerFor]=\"menu\" [id]=\"field.id\">\n                    {{ 'FORM.FIELD.UPLOAD' | translate }}\n                    <mat-icon>attach_file</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"adf-attach-widget__menu-content\">\n                <button mat-menu-item (click)=\"uploadFile.click()\"\n                        id=\"attach-local-file\"\n                        *ngIf=\"isAllFileSourceSelected()\">\n                    {{ 'FORM.FIELD.LOCALSTORAGE' | translate }}\n                    <mat-icon>file_upload</mat-icon>\n                    <input #uploadFile\n                            class=\"adf-attach-widget__input-type\"\n                            [multiple]=\"multipleOption\"\n                            type=\"file\"\n                            [id]=\"field.id\"\n                            (change)=\"onAttachFileChanged($event)\" />\n                </button>\n                <button mat-menu-item\n                        *ngIf=\"isDefinedSourceFolder()\"\n                        id=\"attach-{{field.params?.fileSource?.name}}\"\n                        (click)=\"openSelectDialogFromFileSource()\">\n                        {{field.params?.fileSource?.name}}\n                        <mat-icon>\n                            <img alt=\"alfresco\" class=\"adf-attach-widget__image-logo\" src=\"../assets/images/alfresco-flower.svg\">\n                        </mat-icon>\n                </button>\n                <div *ngIf=\"!isDefinedSourceFolder()\">\n                    <button mat-menu-item *ngFor=\"let repo of repositoryList\"\n                            id=\"attach-{{repo?.name}}\"\n                           (click)=\"openSelectDialog(repo)\">\n                            {{repo.name}}\n                            <mat-icon>\n                                <img alt=\"alfresco\" class=\"adf-attach-widget__image-logo\" src=\"../assets/images/alfresco-flower.svg\">\n                            </mat-icon>\n                    </button>\n                </div>\n            </mat-menu>\n        </div>\n    </div>\n</div>\n\n<div id=\"adf-attach-widget-readonly-list\">\n    <mat-list *ngIf=\"hasFile\">\n        <mat-list-item class=\"adf-attach-files-row\" *ngFor=\"let file of field.value\">\n            <img mat-list-icon class=\"adf-attach-widget__icon\"\n                 [id]=\"'file-'+file.id+'-icon'\"\n                 [src]=\"file.content ? getIcon(file.content.mimeType) : getIcon(file.mimeType)\"\n                 [alt]=\"mimeTypeIcon\"\n                 (click)=\"onAttachFileClicked(file)\"\n                 (keyup.enter)=\"onAttachFileClicked(file)\"\n                 role=\"button\"\n                 tabindex=\"0\"/>\n            <span matLine id=\"{{'file-'+file.id}}\" (click)=\"onAttachFileClicked(file)\" (keyup.enter)=\"onAttachFileClicked(file)\"\n                  role=\"button\" tabindex=\"0\" class=\"adf-file\">{{file.name}}</span>\n            <button id=\"{{'file-'+file.id+'-option-menu'}}\" mat-icon-button [matMenuTriggerFor]=\"fileActionMenu\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #fileActionMenu=\"matMenu\" xPosition=\"before\">\n                <button id=\"{{'file-'+file.id+'-show-file'}}\"\n                    [disabled]=\"file.isExternal || !file.contentAvailable || !file.mimeType\"\n                    mat-menu-item (click)=\"onAttachFileClicked(file)\">\n                    <mat-icon>visibility</mat-icon>\n                    <span>{{ 'FORM.FIELD.VIEW_FILE' | translate }}</span>\n                </button>\n                <button id=\"{{'file-'+file.id+'-download-file'}}\"\n                    [disabled]=\"file.isExternal || !file.mimeType\"\n                    mat-menu-item (click)=\"downloadContent(file)\">\n                    <mat-icon>file_download</mat-icon>\n                    <span>{{ 'FORM.FIELD.DOWNLOAD_FILE' | translate }}</span>\n                </button>\n                <button *ngIf=\"!field.readOnly\" id=\"{{'file-'+file.id+'-remove-file'}}\"\n                        mat-menu-item [id]=\"'file-'+file.id+'-remove'\"\n                        (click)=\"onRemoveAttachFile(file);\" (keyup.enter)=\"onRemoveAttachFile(file);\">\n                    <mat-icon class=\"mat-24\">highlight_off</mat-icon>\n                    <span>{{ 'FORM.FIELD.REMOVE_FILE' | translate }}</span>\n                </button>\n            </mat-menu>\n        </mat-list-item>\n    </mat-list>\n</div>\n\n<error-widget [error]=\"field.validationSummary\"></error-widget>\n<error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-attach-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-widget__menu-upload{align-items:center;display:flex}.adf-attach-widget__input-type{height:.1px;opacity:0;overflow:hidden;position:absolute;width:.1px;z-index:-1}.adf-attach-widget__image-logo{padding-left:5px}.adf-attach-widget-repo-button{padding-left:10px}.adf-attach-widget-repo-button .mat-button-wrapper{display:inline}.adf-attach-widget-repo-button .mat-mini-fab.mat-accent{background-color:inherit}.adf-attach-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-widget__icon{cursor:pointer;float:left;padding:6px}.adf-attach-widget__reset{margin-top:-2px}.adf-attach-files-row .mat-line{margin-bottom:0}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc1.LogService }, { type: ɵngcc1.ThumbnailService }, { type: ɵngcc1.ProcessContentService }, { type: ɵngcc1.ActivitiContentService }, { type: ɵngcc1.ContentService }, { type: ɵngcc2.ContentNodeDialogService }, { type: ɵngcc1.AppConfigService }, { type: ɵngcc1.DownloadService }, { type: ɵngcc3.AttachFileWidgetDialogService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,