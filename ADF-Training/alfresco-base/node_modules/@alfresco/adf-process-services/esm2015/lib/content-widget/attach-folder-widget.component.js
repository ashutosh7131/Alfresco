/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { WidgetComponent, FormService, NodesApiService } from '@alfresco/adf-core';
import { ContentNodeDialogService } from '@alfresco/adf-content-services';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-content-services';
import * as ɵngcc2 from '@alfresco/adf-core';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/icon';
import * as ɵngcc5 from '@angular/material/core';
import * as ɵngcc6 from '@angular/material/button';
import * as ɵngcc7 from '@ngx-translate/core';

function AttachFolderWidgetComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function AttachFolderWidgetComponent_div_6_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function AttachFolderWidgetComponent_div_6_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.removeFolder(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 11);
    ɵngcc0.ɵɵtext(2, "highlight_off");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("id", "folder-" + (ctx_r4.field == null ? null : ctx_r4.field.id) + "-remove");
} }
function AttachFolderWidgetComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "folder");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 7);
    ɵngcc0.ɵɵelementStart(4, "span", 8);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, AttachFolderWidgetComponent_div_6_button_6_Template, 3, 1, "button", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("id", "folder-" + (ctx_r1.field == null ? null : ctx_r1.field.id));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.selectedFolderName);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.field.readOnly);
} }
function AttachFolderWidgetComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "button", 12);
    ɵngcc0.ɵɵlistener("click", function AttachFolderWidgetComponent_div_7_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.openSelectDialogFromFileSource(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "mat-icon");
    ɵngcc0.ɵɵtext(5, "cloud_upload");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", "folder-" + (ctx_r2.field == null ? null : ctx_r2.field.id) + "-button");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 2, "FORM.FIELD.UPLOAD"), " ");
} }
function AttachFolderWidgetComponent_error_widget_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 13);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
export class AttachFolderWidgetComponent extends WidgetComponent {
    constructor(contentDialog, formService, nodeService) {
        super();
        this.contentDialog = contentDialog;
        this.formService = formService;
        this.nodeService = nodeService;
        this.typeId = 'AttachFolderWidgetComponent';
        this.hasFolder = false;
        this.selectedFolderName = '';
    }
    ngOnInit() {
        if (this.field &&
            this.field.value) {
            this.hasFolder = true;
            this.nodeService.getNode(this.field.value).subscribe((node) => {
                this.selectedFolderName = node.name;
            });
        }
    }
    isDefinedSourceFolder() {
        return !!this.field.params &&
            !!this.field.params.folderSource &&
            !!this.field.params.folderSource.selectedFolder;
    }
    openSelectDialogFromFileSource() {
        const params = this.field.params;
        if (this.isDefinedSourceFolder()) {
            this.contentDialog.openFolderBrowseDialogByFolderId(params.folderSource.selectedFolder.pathId).subscribe((selections) => {
                this.selectedFolderName = selections[0].name;
                this.field.value = selections[0].id;
                this.hasFolder = true;
            });
        }
        else {
            this.contentDialog.openFolderBrowseDialogBySite().subscribe((selections) => {
                this.selectedFolderName = selections[0].name;
                this.field.value = selections[0].id;
                this.hasFolder = true;
            });
        }
    }
    removeFolder() {
        this.field.value = null;
        this.selectedFolderName = '';
        this.hasFolder = false;
    }
}
AttachFolderWidgetComponent.ɵfac = function AttachFolderWidgetComponent_Factory(t) { return new (t || AttachFolderWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ContentNodeDialogService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NodesApiService)); };
AttachFolderWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AttachFolderWidgetComponent, selectors: [["attach-folder-widget"]], hostBindings: function AttachFolderWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function AttachFolderWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function AttachFolderWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function AttachFolderWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function AttachFolderWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function AttachFolderWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function AttachFolderWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function AttachFolderWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function AttachFolderWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function AttachFolderWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 16, consts: [[1, "adf-label"], [4, "ngIf"], [1, "adf-attach-folder-widget-container"], ["class", "adf-attach-folder-result", 4, "ngIf"], [3, "error"], [3, "required", 4, "ngIf"], [1, "adf-attach-folder-result"], [1, "adf-attach-folder-files-row"], ["matLine", "", "role", "button", "tabindex", "0", 1, "adf-folder", 3, "id"], ["mat-icon-button", "", 3, "id", "click", 4, "ngIf"], ["mat-icon-button", "", 3, "id", "click"], [1, "mat-24"], ["mat-raised-button", "", "color", "primary", 3, "id", "click"], [3, "required"]], template: function AttachFolderWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "label", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, AttachFolderWidgetComponent_span_4_Template, 2, 0, "span", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵtemplate(6, AttachFolderWidgetComponent_div_6_Template, 7, 3, "div", 3);
        ɵngcc0.ɵɵtemplate(7, AttachFolderWidgetComponent_div_7_Template, 6, 4, "div", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(8, "error-widget", 4);
        ɵngcc0.ɵɵtemplate(9, AttachFolderWidgetComponent_error_widget_9_Template, 2, 3, "error-widget", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adf-attach-folder-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 14, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasFolder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasFolder && !ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc3.NgIf, ɵngcc2.ErrorWidgetComponent, ɵngcc4.MatIcon, ɵngcc5.MatLine, ɵngcc6.MatButton], pipes: [ɵngcc7.TranslatePipe], styles: [".adf-attach-folder-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-folder-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-folder-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-folder-files-row{padding-left:8px}.adf-attach-folder-files-row .mat-line{margin-bottom:0}.adf-attach-folder-result{align-items:center;display:flex}"], encapsulation: 2 });
AttachFolderWidgetComponent.ctorParameters = () => [
    { type: ContentNodeDialogService },
    { type: FormService },
    { type: NodesApiService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttachFolderWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'attach-folder-widget',
                template: "<div class=\"adf-attach-folder-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\"\n     [class.adf-readonly]=\"field.readOnly\">\n    <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate}}<span *ngIf=\"isRequired()\">*</span></label>\n    <div class=\"adf-attach-folder-widget-container\">\n        <div *ngIf=\"hasFolder\" class=\"adf-attach-folder-result\">\n            <mat-icon>folder</mat-icon>\n            <div class=\"adf-attach-folder-files-row\">\n                <span matLine id=\"{{'folder-'+field?.id}}\"\n                        role=\"button\" tabindex=\"0\" class=\"adf-folder\">{{selectedFolderName}}</span>\n                <button *ngIf=\"!field.readOnly\" mat-icon-button [id]=\"'folder-'+field?.id+'-remove'\"\n                        (click)=\"removeFolder();\">\n                    <mat-icon class=\"mat-24\">highlight_off</mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div *ngIf=\"!hasFolder && !field.readOnly\">\n            <button mat-raised-button\n                color=\"primary\"\n                (click)=\"openSelectDialogFromFileSource()\"\n                [id]=\"'folder-'+field?.id+'-button'\">\n                    {{ 'FORM.FIELD.UPLOAD' | translate }}\n                <mat-icon>cloud_upload</mat-icon>\n            </button>\n        </div>\n    </div>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-attach-folder-widget-container{align-items:center;display:flex;margin-bottom:15px}.adf-attach-folder-widget-container input{cursor:pointer;height:100%;opacity:0;position:absolute;right:0;top:0;width:300px;z-index:4}.adf-attach-folder-widget{border-top:.84375em solid transparent;padding:.4375em 0;width:100%;word-break:break-all}.adf-attach-folder-files-row{padding-left:8px}.adf-attach-folder-files-row .mat-line{margin-bottom:0}.adf-attach-folder-result{align-items:center;display:flex}"]
            }]
    }], function () { return [{ type: ɵngcc1.ContentNodeDialogService }, { type: ɵngcc2.FormService }, { type: ɵngcc2.NodesApiService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,