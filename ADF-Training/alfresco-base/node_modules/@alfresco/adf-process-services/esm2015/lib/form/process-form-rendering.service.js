import { Injectable } from '@angular/core';
import { FormRenderingService } from '@alfresco/adf-core';
import { AttachFileWidgetComponent } from '../content-widget/attach-file-widget.component';
import { AttachFolderWidgetComponent } from '../content-widget/attach-folder-widget.component';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class ProcessFormRenderingService extends FormRenderingService {
    constructor() {
        super();
        this.register({
            'upload': () => AttachFileWidgetComponent,
            'select-folder': () => AttachFolderWidgetComponent
        }, true);
    }
}
ProcessFormRenderingService.ɵfac = function ProcessFormRenderingService_Factory(t) { return new (t || ProcessFormRenderingService)(); };
ProcessFormRenderingService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ProcessFormRenderingService_Factory() { return new ProcessFormRenderingService(); }, token: ProcessFormRenderingService, providedIn: "root" });
ProcessFormRenderingService.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProcessFormRenderingService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1mb3JtLXJlbmRlcmluZy5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvcHJvY2Vzcy1zZXJ2aWNlcy9zcmMvbGliL2Zvcm0vcHJvY2Vzcy1mb3JtLXJlbmRlcmluZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlCQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQy9GOztBQUlBLE1BQU0sT0FBTywyQkFBNEIsU0FBUSxvQkFBb0I7QUFDckUsSUFBSTtBQUNKLFFBQVEsS0FBSyxFQUFFLENBQUM7QUFDaEIsUUFDUSxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQ3RCLFlBQVksUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLHlCQUF5QjtBQUNyRCxZQUFZLGVBQWUsRUFBRSxHQUFHLEVBQUUsQ0FBQywyQkFBMkI7QUFDOUQsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2pCLElBQUksQ0FBQztBQUNMO3dJQUFDO0FBQ0QsNk5BVks7QUFBQztBQUhMLFVBQVUsU0FBQyxrQkFDUixVQUFVLEVBQUUsTUFBTSxjQUNyQjs7Ozs7Z0RBQzJEO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtUmVuZGVyaW5nU2VydmljZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBBdHRhY2hGaWxlV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi4vY29udGVudC13aWRnZXQvYXR0YWNoLWZpbGUtd2lkZ2V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdHRhY2hGb2xkZXJXaWRnZXRDb21wb25lbnQgfSBmcm9tICcuLi9jb250ZW50LXdpZGdldC9hdHRhY2gtZm9sZGVyLXdpZGdldC5jb21wb25lbnQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFByb2Nlc3NGb3JtUmVuZGVyaW5nU2VydmljZSBleHRlbmRzIEZvcm1SZW5kZXJpbmdTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcblxuICAgICAgICB0aGlzLnJlZ2lzdGVyKHtcbiAgICAgICAgICAgICd1cGxvYWQnOiAoKSA9PiBBdHRhY2hGaWxlV2lkZ2V0Q29tcG9uZW50LFxuICAgICAgICAgICAgJ3NlbGVjdC1mb2xkZXInOiAoKSA9PiBBdHRhY2hGb2xkZXJXaWRnZXRDb21wb25lbnRcbiAgICAgICAgfSwgdHJ1ZSk7XG4gICAgfVxufVxuIl19