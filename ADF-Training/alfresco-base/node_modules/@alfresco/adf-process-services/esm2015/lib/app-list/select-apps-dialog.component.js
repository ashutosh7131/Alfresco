/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AppsProcessService } from '@alfresco/adf-core';
import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/material/dialog';
import * as ɵngcc3 from '@angular/material/select';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/flex-layout/flex';
import * as ɵngcc6 from '@angular/material/button';
import * as ɵngcc7 from '@angular/material/core';
import * as ɵngcc8 from '@ngx-translate/core';

function SelectAppsDialogComponent_mat_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const currentProcessApp_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", currentProcessApp_r1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", currentProcessApp_r1.name, " ");
} }
export class SelectAppsDialogComponent {
    constructor(appsProcessService, dialogRef, data) {
        this.appsProcessService = appsProcessService;
        this.dialogRef = dialogRef;
        this.data = data;
        this.appsProcessService.getDeployedApplications().subscribe((apps) => {
            this.processApps = apps.filter((currentApp) => {
                return currentApp.id;
            });
        });
    }
    onStart() {
        this.dialogRef.close(this.selectedProcess);
    }
}
SelectAppsDialogComponent.ɵfac = function SelectAppsDialogComponent_Factory(t) { return new (t || SelectAppsDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppsProcessService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };
SelectAppsDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SelectAppsDialogComponent, selectors: [["adf-select-apps-dialog"]], decls: 11, vars: 11, consts: [["mat-dialog-title", "", "id", "adf-select-app-dialog-title"], ["mat-dialog-content", ""], ["id", "adf-select-app-dialog-dropdown", 3, "placeholder", "value", "valueChange"], [3, "value", 4, "ngFor", "ngForOf"], ["mat-dialog-actions", "", "fxLayout", "row", "fxLayoutAlign", "end center"], ["mat-button", "", 3, "click"], [3, "value"]], template: function SelectAppsDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "header", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "section", 1);
        ɵngcc0.ɵɵelementStart(4, "mat-select", 2);
        ɵngcc0.ɵɵlistener("valueChange", function SelectAppsDialogComponent_Template_mat_select_valueChange_4_listener($event) { return ctx.selectedProcess = $event; });
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵtemplate(6, SelectAppsDialogComponent_mat_option_6_Template, 2, 2, "mat-option", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "footer", 4);
        ɵngcc0.ɵɵelementStart(8, "button", 5);
        ɵngcc0.ɵɵlistener("click", function SelectAppsDialogComponent_Template_button_click_8_listener() { return ctx.onStart(); });
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 5, "APP.DIALOG.TITLE"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(5, 7, "APP.DIALOG.LIST"));
        ɵngcc0.ɵɵproperty("value", ctx.selectedProcess);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.processApps);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 9, "APP.DIALOG.START"));
    } }, directives: [ɵngcc2.MatDialogTitle, ɵngcc2.MatDialogContent, ɵngcc3.MatSelect, ɵngcc4.NgForOf, ɵngcc2.MatDialogActions, ɵngcc5.DefaultLayoutDirective, ɵngcc5.DefaultLayoutAlignDirective, ɵngcc6.MatButton, ɵngcc7.MatOption], pipes: [ɵngcc8.TranslatePipe], encapsulation: 2 });
SelectAppsDialogComponent.ctorParameters = () => [
    { type: AppsProcessService },
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectAppsDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-select-apps-dialog',
                template: "<header mat-dialog-title id=\"adf-select-app-dialog-title\">{{'APP.DIALOG.TITLE' | translate}}</header>\n<section mat-dialog-content>\n\n    <mat-select id=\"adf-select-app-dialog-dropdown\" placeholder=\"{{'APP.DIALOG.LIST' | translate}}\" [(value)]=\"selectedProcess\" >\n        <mat-option *ngFor=\"let currentProcessApp of processApps\" [value]=\"currentProcessApp\">\n            {{ currentProcessApp.name }}\n        </mat-option>\n    </mat-select>\n\n</section>\n<footer mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button mat-button (click)=\"onStart()\">{{'APP.DIALOG.START' | translate}}</button>\n</footer>\n"
            }]
    }], function () { return [{ type: ɵngcc1.AppsProcessService }, { type: ɵngcc2.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWFwcHMtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMvc3JjL2xpYi9hcHAtbGlzdC9zZWxlY3QtYXBwcy1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNekUsTUFBTSxPQUFPLHlCQUF5QjtBQUN0QyxJQUtJLFlBQW9CLGtCQUFzQyxFQUN2QyxTQUFrRCxFQUN6QixJQUFTO0FBQ3pELFFBSHdCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7QUFBQyxRQUN4QyxjQUFTLEdBQVQsU0FBUyxDQUF5QztBQUFDLFFBQzFCLFNBQUksR0FBSixJQUFJLENBQUs7QUFBQyxRQUVsRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxTQUFTLENBQ3ZELENBQUMsSUFBVyxFQUFFLEVBQUU7QUFDNUIsWUFBZ0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUU7QUFDOUQsZ0JBQW9CLE9BQU8sVUFBVSxDQUFDLEVBQUUsQ0FBQztBQUN6QyxZQUFnQixDQUFDLENBQUMsQ0FBQztBQUNuQixRQUFZLENBQUMsQ0FDSixDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0wsSUFDSSxPQUFPO0FBQUssUUFDUixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDbkQsSUFBSSxDQUFDO0FBQ0w7cURBMUJDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsd0JBQXdCLGtCQUNsQztpaEJBQWtELGNBQ3JEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0UkFDSTtBQUFDO0FBRVMsWUFWTixrQkFBa0I7QUFBSSxZQUVMLFlBQVk7QUFBSSw0Q0FjekIsTUFBTSxTQUFDLGVBQWU7QUFBUTs7Ozs7Ozs7OztrQ0FBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQXBwc1Byb2Nlc3NTZXJ2aWNlIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEsIE1hdERpYWxvZ1JlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXNlbGVjdC1hcHBzLWRpYWxvZycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NlbGVjdC1hcHBzLWRpYWxvZy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2VsZWN0QXBwc0RpYWxvZ0NvbXBvbmVudCB7XG5cbiAgICBwcm9jZXNzQXBwczogYW55O1xuXG4gICAgc2VsZWN0ZWRQcm9jZXNzOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcHNQcm9jZXNzU2VydmljZTogQXBwc1Byb2Nlc3NTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxTZWxlY3RBcHBzRGlhbG9nQ29tcG9uZW50PixcbiAgICAgICAgICAgICAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IGFueSkge1xuXG4gICAgICAgIHRoaXMuYXBwc1Byb2Nlc3NTZXJ2aWNlLmdldERlcGxveWVkQXBwbGljYXRpb25zKCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgKGFwcHM6IGFueVtdKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzQXBwcyA9IGFwcHMuZmlsdGVyKChjdXJyZW50QXBwKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50QXBwLmlkO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH1cblxuICAgIG9uU3RhcnQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKHRoaXMuc2VsZWN0ZWRQcm9jZXNzKTtcbiAgICB9XG59XG4iXX0=