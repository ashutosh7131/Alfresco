/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { NgModule } from '@angular/core';
import { MaterialModule } from '../material.module';
import { TaskAttachmentListComponent } from './task-attachment-list.component';
import { ProcessAttachmentListComponent } from './process-attachment-list.component';
import { CreateProcessAttachmentComponent } from './create-process-attachment.component';
import { AttachmentComponent } from './create-task-attachment.component';
import { CoreModule } from '@alfresco/adf-core';
import * as ɵngcc0 from '@angular/core';
export class AttachmentModule {
}
AttachmentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AttachmentModule });
AttachmentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AttachmentModule_Factory(t) { return new (t || AttachmentModule)(); }, imports: [[
            CoreModule,
            MaterialModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AttachmentModule, { declarations: function () { return [TaskAttachmentListComponent,
        ProcessAttachmentListComponent,
        CreateProcessAttachmentComponent,
        CreateProcessAttachmentComponent,
        AttachmentComponent]; }, imports: function () { return [CoreModule,
        MaterialModule]; }, exports: function () { return [TaskAttachmentListComponent,
        ProcessAttachmentListComponent,
        CreateProcessAttachmentComponent,
        CreateProcessAttachmentComponent,
        AttachmentComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttachmentModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CoreModule,
                    MaterialModule
                ],
                declarations: [
                    TaskAttachmentListComponent,
                    ProcessAttachmentListComponent,
                    CreateProcessAttachmentComponent,
                    CreateProcessAttachmentComponent,
                    AttachmentComponent
                ],
                exports: [
                    TaskAttachmentListComponent,
                    ProcessAttachmentListComponent,
                    CreateProcessAttachmentComponent,
                    CreateProcessAttachmentComponent,
                    AttachmentComponent
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0YWNobWVudC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9wcm9jZXNzLXNlcnZpY2VzL3NyYy9saWIvYXR0YWNobWVudC9hdHRhY2htZW50Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFcEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDL0UsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDckYsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDekYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDekUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDOztBQXNCaEQsTUFBTSxPQUFPLGdCQUFnQjtBQUFHOzRDQXBCL0IsUUFBUSxTQUFDO0VBQ04sT0FBTyxFQUFFLHNCQUNMLFVBQVUsc0JBQ1YsY0FBYyxrQkFDakIsa0JBQ0QsWUFBWSxFQUFFO0FBQ1Y7R0FBMkIsc0JBQzNCOzthQUE4QixzQkFDOUIsZ0NBQWdDLHNCQUNoQyxnQ0FBZ0Msc0JBQ2hDLG1CQUFtQjtHQUN0QixrQkFDRCxPQUFPLEVBQUU7WUFDTCwyQkFBMkI7bUJBQzNCO09BQThCLHNCQUM5QixnQ0FBZ0M7T0FDaEMsZ0NBQWdDLHNCQUNoQyxtQkFBbUI7VUFDdEIsY0FDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRlcmlhbE1vZHVsZSB9IGZyb20gJy4uL21hdGVyaWFsLm1vZHVsZSc7XG5cbmltcG9ydCB7IFRhc2tBdHRhY2htZW50TGlzdENvbXBvbmVudCB9IGZyb20gJy4vdGFzay1hdHRhY2htZW50LWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFByb2Nlc3NBdHRhY2htZW50TGlzdENvbXBvbmVudCB9IGZyb20gJy4vcHJvY2Vzcy1hdHRhY2htZW50LWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IENyZWF0ZVByb2Nlc3NBdHRhY2htZW50Q29tcG9uZW50IH0gZnJvbSAnLi9jcmVhdGUtcHJvY2Vzcy1hdHRhY2htZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdHRhY2htZW50Q29tcG9uZW50IH0gZnJvbSAnLi9jcmVhdGUtdGFzay1hdHRhY2htZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvcmVNb2R1bGUsXG4gICAgICAgIE1hdGVyaWFsTW9kdWxlXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgVGFza0F0dGFjaG1lbnRMaXN0Q29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzQXR0YWNobWVudExpc3RDb21wb25lbnQsXG4gICAgICAgIENyZWF0ZVByb2Nlc3NBdHRhY2htZW50Q29tcG9uZW50LFxuICAgICAgICBDcmVhdGVQcm9jZXNzQXR0YWNobWVudENvbXBvbmVudCxcbiAgICAgICAgQXR0YWNobWVudENvbXBvbmVudFxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBUYXNrQXR0YWNobWVudExpc3RDb21wb25lbnQsXG4gICAgICAgIFByb2Nlc3NBdHRhY2htZW50TGlzdENvbXBvbmVudCxcbiAgICAgICAgQ3JlYXRlUHJvY2Vzc0F0dGFjaG1lbnRDb21wb25lbnQsXG4gICAgICAgIENyZWF0ZVByb2Nlc3NBdHRhY2htZW50Q29tcG9uZW50LFxuICAgICAgICBBdHRhY2htZW50Q29tcG9uZW50XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBBdHRhY2htZW50TW9kdWxlIHt9XG4iXX0=