/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { NgModule } from '@angular/core';
import { MaterialModule } from '../material.module';
import { TaskAttachmentListComponent } from './task-attachment-list.component';
import { ProcessAttachmentListComponent } from './process-attachment-list.component';
import { CreateProcessAttachmentComponent } from './create-process-attachment.component';
import { AttachmentComponent } from './create-task-attachment.component';
import { CoreModule } from '@alfresco/adf-core';
export class AttachmentModule {
}
AttachmentModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CoreModule,
                    MaterialModule
                ],
                declarations: [
                    TaskAttachmentListComponent,
                    ProcessAttachmentListComponent,
                    CreateProcessAttachmentComponent,
                    CreateProcessAttachmentComponent,
                    AttachmentComponent
                ],
                exports: [
                    TaskAttachmentListComponent,
                    ProcessAttachmentListComponent,
                    CreateProcessAttachmentComponent,
                    CreateProcessAttachmentComponent,
                    AttachmentComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0YWNobWVudC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9wcm9jZXNzLXNlcnZpY2VzL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9hdHRhY2htZW50L2F0dGFjaG1lbnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXBELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQXNCaEQsTUFBTSxPQUFPLGdCQUFnQjs7O1lBcEI1QixRQUFRLFNBQUM7Z0JBQ04sT0FBTyxFQUFFO29CQUNMLFVBQVU7b0JBQ1YsY0FBYztpQkFDakI7Z0JBQ0QsWUFBWSxFQUFFO29CQUNWLDJCQUEyQjtvQkFDM0IsOEJBQThCO29CQUM5QixnQ0FBZ0M7b0JBQ2hDLGdDQUFnQztvQkFDaEMsbUJBQW1CO2lCQUN0QjtnQkFDRCxPQUFPLEVBQUU7b0JBQ0wsMkJBQTJCO29CQUMzQiw4QkFBOEI7b0JBQzlCLGdDQUFnQztvQkFDaEMsZ0NBQWdDO29CQUNoQyxtQkFBbUI7aUJBQ3RCO2FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0ZXJpYWxNb2R1bGUgfSBmcm9tICcuLi9tYXRlcmlhbC5tb2R1bGUnO1xuXG5pbXBvcnQgeyBUYXNrQXR0YWNobWVudExpc3RDb21wb25lbnQgfSBmcm9tICcuL3Rhc2stYXR0YWNobWVudC1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcm9jZXNzQXR0YWNobWVudExpc3RDb21wb25lbnQgfSBmcm9tICcuL3Byb2Nlc3MtYXR0YWNobWVudC1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDcmVhdGVQcm9jZXNzQXR0YWNobWVudENvbXBvbmVudCB9IGZyb20gJy4vY3JlYXRlLXByb2Nlc3MtYXR0YWNobWVudC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXR0YWNobWVudENvbXBvbmVudCB9IGZyb20gJy4vY3JlYXRlLXRhc2stYXR0YWNobWVudC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb3JlTW9kdWxlLFxuICAgICAgICBNYXRlcmlhbE1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFRhc2tBdHRhY2htZW50TGlzdENvbXBvbmVudCxcbiAgICAgICAgUHJvY2Vzc0F0dGFjaG1lbnRMaXN0Q29tcG9uZW50LFxuICAgICAgICBDcmVhdGVQcm9jZXNzQXR0YWNobWVudENvbXBvbmVudCxcbiAgICAgICAgQ3JlYXRlUHJvY2Vzc0F0dGFjaG1lbnRDb21wb25lbnQsXG4gICAgICAgIEF0dGFjaG1lbnRDb21wb25lbnRcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgVGFza0F0dGFjaG1lbnRMaXN0Q29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzQXR0YWNobWVudExpc3RDb21wb25lbnQsXG4gICAgICAgIENyZWF0ZVByb2Nlc3NBdHRhY2htZW50Q29tcG9uZW50LFxuICAgICAgICBDcmVhdGVQcm9jZXNzQXR0YWNobWVudENvbXBvbmVudCxcbiAgICAgICAgQXR0YWNobWVudENvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgQXR0YWNobWVudE1vZHVsZSB7fVxuIl19