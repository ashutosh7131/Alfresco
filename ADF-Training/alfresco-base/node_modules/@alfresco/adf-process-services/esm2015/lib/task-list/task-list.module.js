/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { CoreModule } from '@alfresco/adf-core';
import { ProcessCommentsModule } from '../process-comments/process-comments.module';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MaterialModule } from '../material.module';
import { PeopleModule } from '../people/people.module';
import { ContentWidgetModule } from '../content-widget/content-widget.module';
import { ChecklistComponent } from './components/checklist.component';
import { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';
import { StartTaskComponent } from './components/start-task.component';
import { TaskAuditDirective } from './components/task-audit.directive';
import { TaskDetailsComponent } from './components/task-details.component';
import { TaskFormComponent } from './components/task-form/task-form.component';
import { TaskFiltersComponent } from './components/task-filters.component';
import { TaskHeaderComponent } from './components/task-header.component';
import { TaskListComponent } from './components/task-list.component';
import { TaskStandaloneComponent } from './components/task-standalone.component';
import { AttachFormComponent } from './components/attach-form.component';
import { FormModule } from '../form/form.module';
import { ClaimTaskDirective } from './components/task-form/claim-task.directive';
import { UnclaimTaskDirective } from './components/task-form/unclaim-task.directive';
import * as ɵngcc0 from '@angular/core';
export class TaskListModule {
}
TaskListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TaskListModule });
TaskListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TaskListModule_Factory(t) { return new (t || TaskListModule)(); }, imports: [[
            CommonModule,
            FlexLayoutModule,
            MaterialModule,
            FormsModule,
            FormModule,
            ReactiveFormsModule,
            CoreModule,
            PeopleModule,
            ProcessCommentsModule,
            ContentWidgetModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TaskListModule, { declarations: function () { return [NoTaskDetailsTemplateDirective,
        TaskFiltersComponent,
        TaskListComponent,
        TaskDetailsComponent,
        TaskFormComponent,
        TaskAuditDirective,
        ChecklistComponent,
        TaskHeaderComponent,
        StartTaskComponent,
        TaskStandaloneComponent,
        AttachFormComponent,
        ClaimTaskDirective,
        UnclaimTaskDirective]; }, imports: function () { return [CommonModule,
        FlexLayoutModule,
        MaterialModule,
        FormsModule,
        FormModule,
        ReactiveFormsModule,
        CoreModule,
        PeopleModule,
        ProcessCommentsModule,
        ContentWidgetModule]; }, exports: function () { return [NoTaskDetailsTemplateDirective,
        TaskFiltersComponent,
        TaskListComponent,
        TaskDetailsComponent,
        TaskFormComponent,
        TaskAuditDirective,
        ChecklistComponent,
        TaskHeaderComponent,
        StartTaskComponent,
        TaskStandaloneComponent,
        AttachFormComponent,
        ClaimTaskDirective,
        UnclaimTaskDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TaskListModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    FlexLayoutModule,
                    MaterialModule,
                    FormsModule,
                    FormModule,
                    ReactiveFormsModule,
                    CoreModule,
                    PeopleModule,
                    ProcessCommentsModule,
                    ContentWidgetModule
                ],
                declarations: [
                    NoTaskDetailsTemplateDirective,
                    TaskFiltersComponent,
                    TaskListComponent,
                    TaskDetailsComponent,
                    TaskFormComponent,
                    TaskAuditDirective,
                    ChecklistComponent,
                    TaskHeaderComponent,
                    StartTaskComponent,
                    TaskStandaloneComponent,
                    AttachFormComponent,
                    ClaimTaskDirective,
                    UnclaimTaskDirective
                ],
                exports: [
                    NoTaskDetailsTemplateDirective,
                    TaskFiltersComponent,
                    TaskListComponent,
                    TaskDetailsComponent,
                    TaskFormComponent,
                    TaskAuditDirective,
                    ChecklistComponent,
                    TaskHeaderComponent,
                    StartTaskComponent,
                    TaskStandaloneComponent,
                    AttachFormComponent,
                    ClaimTaskDirective,
                    UnclaimTaskDirective
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1saXN0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMvc3JjL2xpYi90YXNrLWxpc3QvdGFzay1saXN0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBRTlFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNqRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQzs7QUE4Q3JGLE1BQU0sT0FBTyxjQUFjO0FBQzNCOzBDQTdDQyxRQUFRLFNBQUM7SUFDTixPQUFPLEVBQUUsc0JBQ0wsWUFBWSxzQkFDWixnQkFBZ0Isc0JBQ2hCLGNBQWMsc0JBQ2Q7U0FBVztLQUNYLFVBQVU7T0FDVixtQkFBbUI7b0JBQ25CO0tBQVU7R0FDVixZQUFZO0lBQ1o7Q0FBcUIsc0JBQ3JCO2dCQUFtQixrQkFDdEI7aUJBQ0QsWUFBWSxFQUFFOztNQUNWLDhCQUE4QixzQkFDOUIsb0JBQW9CLHNCQUNwQixpQkFBaUIsc0JBQ2pCLG9CQUFvQjtHQUNwQixpQkFBaUI7WUFDakI7R0FBa0Isc0JBQ2xCO2FBQWtCO1FBQ2xCLG1CQUFtQjtxQkFDbkI7V0FBa0I7SUFDbEIsdUJBQXVCO3FCQUN2QjtPQUFtQjtBQUNuQixrQkFBa0I7WUFDbEIsb0JBQW9CLGtCQUN2QixrQkFDRCxPQUFPLEVBQUU7b0JBQ0w7O0FBQThCO0NBQzlCO0NBQW9CLHNCQUNwQjtXQUFpQjthQUNqQjtXQUFvQjtFQUNwQixpQkFBaUIsc0JBQ2pCLGtCQUFrQixzQkFDbEI7R0FBa0Isc0JBQ2xCO2NBQW1CO1NBQ25CLGtCQUFrQjttQkFDbEI7ZUFBdUI7U0FDdkI7QUFBbUIsc0JBQ25CO1dBQWtCO0tBQ2xCLG9CQUFvQjtVQUN2QixjQUNKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IFByb2Nlc3NDb21tZW50c01vZHVsZSB9IGZyb20gJy4uL3Byb2Nlc3MtY29tbWVudHMvcHJvY2Vzcy1jb21tZW50cy5tb2R1bGUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IE1hdGVyaWFsTW9kdWxlIH0gZnJvbSAnLi4vbWF0ZXJpYWwubW9kdWxlJztcbmltcG9ydCB7IFBlb3BsZU1vZHVsZSB9IGZyb20gJy4uL3Blb3BsZS9wZW9wbGUubW9kdWxlJztcbmltcG9ydCB7IENvbnRlbnRXaWRnZXRNb2R1bGUgfSBmcm9tICcuLi9jb250ZW50LXdpZGdldC9jb250ZW50LXdpZGdldC5tb2R1bGUnO1xuXG5pbXBvcnQgeyBDaGVja2xpc3RDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvY2hlY2tsaXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOb1Rhc2tEZXRhaWxzVGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMvbm8tdGFzay1kZXRhaWwtdGVtcGxhdGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IFN0YXJ0VGFza0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zdGFydC10YXNrLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYXNrQXVkaXREaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1hdWRpdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGFza0RldGFpbHNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1kZXRhaWxzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYXNrRm9ybUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWZvcm0vdGFzay1mb3JtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYXNrRmlsdGVyc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWZpbHRlcnMuY29tcG9uZW50JztcbmltcG9ydCB7IFRhc2tIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1oZWFkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFRhc2tMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza1N0YW5kYWxvbmVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1zdGFuZGFsb25lLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdHRhY2hGb3JtQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2F0dGFjaC1mb3JtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtTW9kdWxlIH0gZnJvbSAnLi4vZm9ybS9mb3JtLm1vZHVsZSc7XG5pbXBvcnQgeyBDbGFpbVRhc2tEaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1mb3JtL2NsYWltLXRhc2suZGlyZWN0aXZlJztcbmltcG9ydCB7IFVuY2xhaW1UYXNrRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stZm9ybS91bmNsYWltLXRhc2suZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgRmxleExheW91dE1vZHVsZSxcbiAgICAgICAgTWF0ZXJpYWxNb2R1bGUsXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBGb3JtTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgICBDb3JlTW9kdWxlLFxuICAgICAgICBQZW9wbGVNb2R1bGUsXG4gICAgICAgIFByb2Nlc3NDb21tZW50c01vZHVsZSxcbiAgICAgICAgQ29udGVudFdpZGdldE1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIE5vVGFza0RldGFpbHNUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgVGFza0ZpbHRlcnNDb21wb25lbnQsXG4gICAgICAgIFRhc2tMaXN0Q29tcG9uZW50LFxuICAgICAgICBUYXNrRGV0YWlsc0NvbXBvbmVudCxcbiAgICAgICAgVGFza0Zvcm1Db21wb25lbnQsXG4gICAgICAgIFRhc2tBdWRpdERpcmVjdGl2ZSxcbiAgICAgICAgQ2hlY2tsaXN0Q29tcG9uZW50LFxuICAgICAgICBUYXNrSGVhZGVyQ29tcG9uZW50LFxuICAgICAgICBTdGFydFRhc2tDb21wb25lbnQsXG4gICAgICAgIFRhc2tTdGFuZGFsb25lQ29tcG9uZW50LFxuICAgICAgICBBdHRhY2hGb3JtQ29tcG9uZW50LFxuICAgICAgICBDbGFpbVRhc2tEaXJlY3RpdmUsXG4gICAgICAgIFVuY2xhaW1UYXNrRGlyZWN0aXZlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIE5vVGFza0RldGFpbHNUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgVGFza0ZpbHRlcnNDb21wb25lbnQsXG4gICAgICAgIFRhc2tMaXN0Q29tcG9uZW50LFxuICAgICAgICBUYXNrRGV0YWlsc0NvbXBvbmVudCxcbiAgICAgICAgVGFza0Zvcm1Db21wb25lbnQsXG4gICAgICAgIFRhc2tBdWRpdERpcmVjdGl2ZSxcbiAgICAgICAgQ2hlY2tsaXN0Q29tcG9uZW50LFxuICAgICAgICBUYXNrSGVhZGVyQ29tcG9uZW50LFxuICAgICAgICBTdGFydFRhc2tDb21wb25lbnQsXG4gICAgICAgIFRhc2tTdGFuZGFsb25lQ29tcG9uZW50LFxuICAgICAgICBBdHRhY2hGb3JtQ29tcG9uZW50LFxuICAgICAgICBDbGFpbVRhc2tEaXJlY3RpdmUsXG4gICAgICAgIFVuY2xhaW1UYXNrRGlyZWN0aXZlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUYXNrTGlzdE1vZHVsZSB7XG59XG4iXX0=