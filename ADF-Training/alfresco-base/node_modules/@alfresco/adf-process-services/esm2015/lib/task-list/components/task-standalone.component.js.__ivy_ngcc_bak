/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
export class TaskStandaloneComponent {
    constructor() {
        this.isCompleted = false;
        this.hasCompletePermission = true;
        this.hideCancelButton = true;
        this.cancel = new EventEmitter();
        this.complete = new EventEmitter();
        this.showAttachForm = new EventEmitter();
    }
    onCancelButtonClick() {
        this.cancel.emit();
    }
    onCompleteButtonClick() {
        this.complete.emit();
    }
    hasCompleteButton() {
        return this.hasCompletePermission && !this.isCompleted;
    }
    hasCancelButton() {
        return !this.hideCancelButton && !this.isCompleted;
    }
    hasAttachFormButton() {
        return !this.isCompleted;
    }
    onShowAttachForm() {
        this.showAttachForm.emit();
    }
}
TaskStandaloneComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-task-standalone',
                template: "<mat-card class=\"adf-message-card\">\n    <mat-card-content>\n        <div class=\"adf-no-form-message-container\">\n            <div class=\"adf-no-form-message-list\">\n                <div *ngIf=\"!isCompleted; else completedMessage\" class=\"adf-no-form-message\">\n                    <span id=\"adf-no-form-message\">{{'ADF_TASK_LIST.STANDALONE_TASK.NO_FORM_MESSAGE' | translate}}</span>\n                </div>\n                <ng-template #completedMessage>\n                    <div id=\"adf-completed-form-message\" class=\"adf-no-form-message\">\n                        <p>{{'ADF_TASK_LIST.STANDALONE_TASK.COMPLETE_TASK_MESSAGE' | translate : {taskName : taskName} }}</p>\n                    </div>\n                    <div class=\"adf-no-form-submessage\">\n                        {{'ADF_TASK_LIST.STANDALONE_TASK.COMPLETE_TASK_SUB_MESSAGE' | translate}}\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </mat-card-content>\n\n    <mat-card-actions class=\"adf-no-form-mat-card-actions\">\n        <button mat-button *ngIf=\"hasAttachFormButton()\" id=\"adf-no-form-attach-form-button\" (click)=\"onShowAttachForm()\">{{ 'ADF_TASK_LIST.START_TASK.FORM.LABEL.ATTACHFORM' | translate }}</button>\n        <div>\n            <button mat-button *ngIf=\"hasCancelButton()\" id=\"adf-no-form-cancel-button\" (click)=\"onCancelButtonClick()\">{{ 'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL' | translate }}</button>\n            <button mat-button *ngIf=\"hasCompleteButton()\" id=\"adf-no-form-complete-button\" color=\"primary\" (click)=\"onCompleteButtonClick()\">{{ 'ADF_TASK_LIST.DETAILS.BUTTON.COMPLETE' | translate }}</button>\n        </div>\n    </mat-card-actions>\n</mat-card>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-message-card{box-sizing:border-box;margin:16px auto;width:60%}.adf-message-card .mat-card-actions{border-top:1px solid var(--theme-status-bar-bg-color)}.adf-no-form-message-container{display:table;height:256px;width:100%}.adf-no-form-message-list{display:table-cell;text-align:center!important;vertical-align:middle}.adf-no-form-message{font-size:var(--theme-display-1-font-size);letter-spacing:-1.3px;line-height:36px;padding-bottom:10px}.adf-no-form-message,.adf-no-form-submessage{margin:auto;opacity:.54;width:-webkit-fit-content!important;width:-moz-fit-content!important;width:fit-content!important}.adf-no-form-submessage{font-size:var(--theme-subheading-2-font-size)}.adf-no-form-mat-card-actions.mat-card-actions{display:flex;justify-content:space-between}.adf-no-form-mat-card-actions.mat-card-actions .mat-button{border-radius:5px;text-transform:uppercase}.adf-no-form-mat-card-actions.mat-card-actions .mat-button-wrapper{font-size:var(--theme-button-font-size);font-weight:700;opacity:.54}"]
            },] }
];
TaskStandaloneComponent.ctorParameters = () => [];
TaskStandaloneComponent.propDecorators = {
    taskName: [{ type: Input }],
    taskId: [{ type: Input }],
    isCompleted: [{ type: Input }],
    hasCompletePermission: [{ type: Input }],
    hideCancelButton: [{ type: Input }],
    cancel: [{ type: Output }],
    complete: [{ type: Output }],
    showAttachForm: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1zdGFuZGFsb25lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMvc3JjLyIsInNvdXJjZXMiOlsibGliL3Rhc2stbGlzdC9jb21wb25lbnRzL3Rhc2stc3RhbmRhbG9uZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVMxRixNQUFNLE9BQU8sdUJBQXVCO0lBbUNoQztRQXZCQSxnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUk3QiwwQkFBcUIsR0FBWSxJQUFJLENBQUM7UUFLdEMscUJBQWdCLEdBQVksSUFBSSxDQUFDO1FBSWpDLFdBQU0sR0FBdUIsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUl0RCxhQUFRLEdBQXVCLElBQUksWUFBWSxFQUFRLENBQUM7UUFJeEQsbUJBQWMsR0FBdUIsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQUU5QyxDQUFDO0lBRWpCLG1CQUFtQjtRQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELHFCQUFxQjtRQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxpQkFBaUI7UUFDYixPQUFPLElBQUksQ0FBQyxxQkFBcUIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDM0QsQ0FBQztJQUVELGVBQWU7UUFDWCxPQUFPLENBQUMsSUFBSSxDQUFDLGdCQUFnQixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUN2RCxDQUFDO0lBRUQsbUJBQW1CO1FBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDN0IsQ0FBQztJQUVELGdCQUFnQjtRQUNaLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDL0IsQ0FBQzs7O1lBbEVKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixvdURBQStDO2dCQUUvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDeEM7Ozs7dUJBS0ksS0FBSztxQkFJTCxLQUFLOzBCQUlMLEtBQUs7b0NBSUwsS0FBSzsrQkFLTCxLQUFLO3FCQUlMLE1BQU07dUJBSU4sTUFBTTs2QkFJTixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXRhc2stc3RhbmRhbG9uZScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Rhc2stc3RhbmRhbG9uZS5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vdGFzay1zdGFuZGFsb25lLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcblxuZXhwb3J0IGNsYXNzIFRhc2tTdGFuZGFsb25lQ29tcG9uZW50IHtcblxuICAgIC8qKiBOYW1lIG9mIHRoZSB0YXNrLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdGFza05hbWU7XG5cbiAgICAvKiogSWQgb2YgdGhlIHRhc2suICovXG4gICAgQElucHV0KClcbiAgICB0YXNrSWQ7XG5cbiAgICAvKiogSWYgdHJ1ZSB0aGVuIFRhc2sgY29tcGxldGVkIG1lc3NhZ2UgaXMgc2hvd24gYW5kIGBDb21wbGV0ZWAgYW5kIGBDYW5jZWxgIGJ1dHRvbnMgYXJlIGhpZGRlbi4gKi9cbiAgICBASW5wdXQoKVxuICAgIGlzQ29tcGxldGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogVG9nZ2xlcyByZW5kZXJpbmcgb2YgdGhlIGBDb21wbGV0ZWAgYnV0dG9uLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgaGFzQ29tcGxldGVQZXJtaXNzaW9uOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8vIFRPRE86IHJlbmFtZSBhbGwgd2l0aCBzaG93IHByZWZpeFxuICAgIC8qKiBUb2dnbGVzIHJlbmRlcmluZyBvZiB0aGUgYENhbmNlbGAgYnV0dG9uLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgaGlkZUNhbmNlbEJ1dHRvbjogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBcIkNhbmNlbFwiIGJ1dHRvbiBpcyBjbGlja2VkLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGNhbmNlbDogRXZlbnRFbWl0dGVyPHZvaWQ+ID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gICAgLyoqIEVtaXR0ZWQgd2hlbiB0aGUgZm9ybSBhc3NvY2lhdGVkIHdpdGggdGhlIHRhc2sgaXMgY29tcGxldGVkLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGNvbXBsZXRlOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBmb3JtIGFzc29jaWF0ZWQgd2l0aCB0aGUgZm9ybSB0YXNrIGlzIGF0dGFjaGVkLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIHNob3dBdHRhY2hGb3JtOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gICAgb25DYW5jZWxCdXR0b25DbGljaygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jYW5jZWwuZW1pdCgpO1xuICAgIH1cblxuICAgIG9uQ29tcGxldGVCdXR0b25DbGljaygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jb21wbGV0ZS5lbWl0KCk7XG4gICAgfVxuXG4gICAgaGFzQ29tcGxldGVCdXR0b24oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhc0NvbXBsZXRlUGVybWlzc2lvbiAmJiAhdGhpcy5pc0NvbXBsZXRlZDtcbiAgICB9XG5cbiAgICBoYXNDYW5jZWxCdXR0b24oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhdGhpcy5oaWRlQ2FuY2VsQnV0dG9uICYmICF0aGlzLmlzQ29tcGxldGVkO1xuICAgIH1cblxuICAgIGhhc0F0dGFjaEZvcm1CdXR0b24oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhdGhpcy5pc0NvbXBsZXRlZDtcbiAgICB9XG5cbiAgICBvblNob3dBdHRhY2hGb3JtKCkge1xuICAgICAgICB0aGlzLnNob3dBdHRhY2hGb3JtLmVtaXQoKTtcbiAgICB9XG59XG4iXX0=