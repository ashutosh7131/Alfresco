/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { CoreModule } from '@alfresco/adf-core';
import { ProcessCommentsModule } from '../process-comments/process-comments.module';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MaterialModule } from '../material.module';
import { PeopleModule } from '../people/people.module';
import { ContentWidgetModule } from '../content-widget/content-widget.module';
import { ChecklistComponent } from './components/checklist.component';
import { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';
import { StartTaskComponent } from './components/start-task.component';
import { TaskAuditDirective } from './components/task-audit.directive';
import { TaskDetailsComponent } from './components/task-details.component';
import { TaskFormComponent } from './components/task-form/task-form.component';
import { TaskFiltersComponent } from './components/task-filters.component';
import { TaskHeaderComponent } from './components/task-header.component';
import { TaskListComponent } from './components/task-list.component';
import { TaskStandaloneComponent } from './components/task-standalone.component';
import { AttachFormComponent } from './components/attach-form.component';
import { FormModule } from '../form/form.module';
import { ClaimTaskDirective } from './components/task-form/claim-task.directive';
import { UnclaimTaskDirective } from './components/task-form/unclaim-task.directive';
export class TaskListModule {
}
TaskListModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FlexLayoutModule,
                    MaterialModule,
                    FormsModule,
                    FormModule,
                    ReactiveFormsModule,
                    CoreModule,
                    PeopleModule,
                    ProcessCommentsModule,
                    ContentWidgetModule
                ],
                declarations: [
                    NoTaskDetailsTemplateDirective,
                    TaskFiltersComponent,
                    TaskListComponent,
                    TaskDetailsComponent,
                    TaskFormComponent,
                    TaskAuditDirective,
                    ChecklistComponent,
                    TaskHeaderComponent,
                    StartTaskComponent,
                    TaskStandaloneComponent,
                    AttachFormComponent,
                    ClaimTaskDirective,
                    UnclaimTaskDirective
                ],
                exports: [
                    NoTaskDetailsTemplateDirective,
                    TaskFiltersComponent,
                    TaskListComponent,
                    TaskDetailsComponent,
                    TaskFormComponent,
                    TaskAuditDirective,
                    ChecklistComponent,
                    TaskHeaderComponent,
                    StartTaskComponent,
                    TaskStandaloneComponent,
                    AttachFormComponent,
                    ClaimTaskDirective,
                    UnclaimTaskDirective
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1saXN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL3Byb2Nlc3Mtc2VydmljZXMvc3JjLyIsInNvdXJjZXMiOlsibGliL3Rhc2stbGlzdC90YXNrLWxpc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNwRixPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUU5RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNqRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDakYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUE4Q3JGLE1BQU0sT0FBTyxjQUFjOzs7WUE1QzFCLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixnQkFBZ0I7b0JBQ2hCLGNBQWM7b0JBQ2QsV0FBVztvQkFDWCxVQUFVO29CQUNWLG1CQUFtQjtvQkFDbkIsVUFBVTtvQkFDVixZQUFZO29CQUNaLHFCQUFxQjtvQkFDckIsbUJBQW1CO2lCQUN0QjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1YsOEJBQThCO29CQUM5QixvQkFBb0I7b0JBQ3BCLGlCQUFpQjtvQkFDakIsb0JBQW9CO29CQUNwQixpQkFBaUI7b0JBQ2pCLGtCQUFrQjtvQkFDbEIsa0JBQWtCO29CQUNsQixtQkFBbUI7b0JBQ25CLGtCQUFrQjtvQkFDbEIsdUJBQXVCO29CQUN2QixtQkFBbUI7b0JBQ25CLGtCQUFrQjtvQkFDbEIsb0JBQW9CO2lCQUN2QjtnQkFDRCxPQUFPLEVBQUU7b0JBQ0wsOEJBQThCO29CQUM5QixvQkFBb0I7b0JBQ3BCLGlCQUFpQjtvQkFDakIsb0JBQW9CO29CQUNwQixpQkFBaUI7b0JBQ2pCLGtCQUFrQjtvQkFDbEIsa0JBQWtCO29CQUNsQixtQkFBbUI7b0JBQ25CLGtCQUFrQjtvQkFDbEIsdUJBQXVCO29CQUN2QixtQkFBbUI7b0JBQ25CLGtCQUFrQjtvQkFDbEIsb0JBQW9CO2lCQUN2QjthQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBQcm9jZXNzQ29tbWVudHNNb2R1bGUgfSBmcm9tICcuLi9wcm9jZXNzLWNvbW1lbnRzL3Byb2Nlc3MtY29tbWVudHMubW9kdWxlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBNYXRlcmlhbE1vZHVsZSB9IGZyb20gJy4uL21hdGVyaWFsLm1vZHVsZSc7XG5pbXBvcnQgeyBQZW9wbGVNb2R1bGUgfSBmcm9tICcuLi9wZW9wbGUvcGVvcGxlLm1vZHVsZSc7XG5pbXBvcnQgeyBDb250ZW50V2lkZ2V0TW9kdWxlIH0gZnJvbSAnLi4vY29udGVudC13aWRnZXQvY29udGVudC13aWRnZXQubW9kdWxlJztcblxuaW1wb3J0IHsgQ2hlY2tsaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2NoZWNrbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTm9UYXNrRGV0YWlsc1RlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL25vLXRhc2stZGV0YWlsLXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTdGFydFRhc2tDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc3RhcnQtdGFzay5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza0F1ZGl0RGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stYXVkaXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRhc2tEZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stZGV0YWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza0Zvcm1Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1mb3JtL3Rhc2stZm9ybS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza0ZpbHRlcnNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1maWx0ZXJzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYXNrSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2staGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYXNrTGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFRhc2tTdGFuZGFsb25lQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stc3RhbmRhbG9uZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXR0YWNoRm9ybUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hdHRhY2gtZm9ybS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9ybU1vZHVsZSB9IGZyb20gJy4uL2Zvcm0vZm9ybS5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xhaW1UYXNrRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stZm9ybS9jbGFpbS10YXNrLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBVbmNsYWltVGFza0RpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWZvcm0vdW5jbGFpbS10YXNrLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIEZsZXhMYXlvdXRNb2R1bGUsXG4gICAgICAgIE1hdGVyaWFsTW9kdWxlLFxuICAgICAgICBGb3Jtc01vZHVsZSxcbiAgICAgICAgRm9ybU1vZHVsZSxcbiAgICAgICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICAgICAgQ29yZU1vZHVsZSxcbiAgICAgICAgUGVvcGxlTW9kdWxlLFxuICAgICAgICBQcm9jZXNzQ29tbWVudHNNb2R1bGUsXG4gICAgICAgIENvbnRlbnRXaWRnZXRNb2R1bGVcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBOb1Rhc2tEZXRhaWxzVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIFRhc2tGaWx0ZXJzQ29tcG9uZW50LFxuICAgICAgICBUYXNrTGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFza0RldGFpbHNDb21wb25lbnQsXG4gICAgICAgIFRhc2tGb3JtQ29tcG9uZW50LFxuICAgICAgICBUYXNrQXVkaXREaXJlY3RpdmUsXG4gICAgICAgIENoZWNrbGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFza0hlYWRlckNvbXBvbmVudCxcbiAgICAgICAgU3RhcnRUYXNrQ29tcG9uZW50LFxuICAgICAgICBUYXNrU3RhbmRhbG9uZUNvbXBvbmVudCxcbiAgICAgICAgQXR0YWNoRm9ybUNvbXBvbmVudCxcbiAgICAgICAgQ2xhaW1UYXNrRGlyZWN0aXZlLFxuICAgICAgICBVbmNsYWltVGFza0RpcmVjdGl2ZVxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBOb1Rhc2tEZXRhaWxzVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIFRhc2tGaWx0ZXJzQ29tcG9uZW50LFxuICAgICAgICBUYXNrTGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFza0RldGFpbHNDb21wb25lbnQsXG4gICAgICAgIFRhc2tGb3JtQ29tcG9uZW50LFxuICAgICAgICBUYXNrQXVkaXREaXJlY3RpdmUsXG4gICAgICAgIENoZWNrbGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFza0hlYWRlckNvbXBvbmVudCxcbiAgICAgICAgU3RhcnRUYXNrQ29tcG9uZW50LFxuICAgICAgICBUYXNrU3RhbmRhbG9uZUNvbXBvbmVudCxcbiAgICAgICAgQXR0YWNoRm9ybUNvbXBvbmVudCxcbiAgICAgICAgQ2xhaW1UYXNrRGlyZWN0aXZlLFxuICAgICAgICBVbmNsYWltVGFza0RpcmVjdGl2ZVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgVGFza0xpc3RNb2R1bGUge1xufVxuIl19