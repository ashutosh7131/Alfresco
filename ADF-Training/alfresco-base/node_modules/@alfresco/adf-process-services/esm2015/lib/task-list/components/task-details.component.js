/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { PeopleProcessService, UserProcessModel, CardViewUpdateService, LogService, CommentsComponent } from '@alfresco/adf-core';
import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { Observable, of, Subject } from 'rxjs';
import { TaskQueryRequestRepresentationModel } from '../models/filter.model';
import { TaskDetailsModel } from '../models/task-details.model';
import { TaskListService } from './../services/tasklist.service';
import { catchError, share, takeUntil } from 'rxjs/operators';
import { TaskFormComponent } from './task-form/task-form.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../services/tasklist.service';
import * as ɵngcc2 from '@alfresco/adf-core';
import * as ɵngcc3 from '@angular/material/dialog';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/flex-layout/flex';
import * as ɵngcc6 from './task-form/task-form.component';
import * as ɵngcc7 from './attach-form.component';
import * as ɵngcc8 from './task-header.component';
import * as ɵngcc9 from '../../people/components/people-search/people-search.component';
import * as ɵngcc10 from '../../people/directives/people-search-title.directive';
import * as ɵngcc11 from '../../people/components/people/people.component';
import * as ɵngcc12 from '@angular/material/card';
import * as ɵngcc13 from './checklist.component';
import * as ɵngcc14 from '@angular/material/button';
import * as ɵngcc15 from '@ngx-translate/core';

const _c0 = ["activitiComments"];
const _c1 = ["activitiChecklist"];
const _c2 = ["errorDialog"];
const _c3 = ["activitiTaskForm"];
function TaskDetailsComponent_div_0_1_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(1, 1, "ADF_TASK_LIST.DETAILS.MESSAGES.NONE"), " ");
} }
const _c4 = function (a0) { return [a0]; };
function TaskDetailsComponent_div_0_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TaskDetailsComponent_div_0_1_ng_template_0_Template, 2, 3, "ng-template", 4);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r2.data))("ngForTemplate", ctx_r2.noTaskDetailsTemplateComponent);
} }
function TaskDetailsComponent_div_0_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "ADF_TASK_LIST.DETAILS.MESSAGES.NONE"), " ");
} }
function TaskDetailsComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, TaskDetailsComponent_div_0_1_Template, 1, 4, undefined, 3);
    ɵngcc0.ɵɵtemplate(2, TaskDetailsComponent_div_0_div_2_Template, 3, 3, "div", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.noTaskDetailsTemplateComponent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.noTaskDetailsTemplateComponent);
} }
function TaskDetailsComponent_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "h2", 15);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.taskDetails.name || "No name");
} }
function TaskDetailsComponent_div_1_div_4_adf_attach_form_3_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-attach-form", 19);
    ɵngcc0.ɵɵlistener("cancelAttachForm", function TaskDetailsComponent_div_1_div_4_adf_attach_form_3_Template_adf_attach_form_cancelAttachForm_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(3); return ctx_r14.onCancelAttachForm(); })("success", function TaskDetailsComponent_div_1_div_4_adf_attach_form_3_Template_adf_attach_form_success_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r16 = ɵngcc0.ɵɵnextContext(3); return ctx_r16.onCompleteAttachForm(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("taskId", ctx_r13.taskDetails.id)("formKey", ctx_r13.taskDetails.formKey);
} }
function TaskDetailsComponent_div_1_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "adf-task-form", 16, 17);
    ɵngcc0.ɵɵlistener("formSaved", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_formSaved_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.onFormSaved($event); })("formCompleted", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_formCompleted_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.onFormCompleted($event); })("formContentClicked", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_formContentClicked_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.onFormContentClick($event); })("formLoaded", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_formLoaded_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.onFormLoaded($event); })("completed", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_completed_1_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.onComplete(); })("showAttachForm", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_showAttachForm_1_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.onShowAttachForm(); })("executeOutcome", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_executeOutcome_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.onFormExecuteOutcome($event); })("taskClaimed", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_taskClaimed_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.onClaimAction($event); })("taskUnclaimed", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_taskUnclaimed_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r26 = ɵngcc0.ɵɵnextContext(2); return ctx_r26.onUnclaimAction($event); })("error", function TaskDetailsComponent_div_1_div_4_Template_adf_task_form_error_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r27 = ɵngcc0.ɵɵnextContext(2); return ctx_r27.onFormError($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, TaskDetailsComponent_div_1_div_4_adf_attach_form_3_Template, 1, 2, "adf-attach-form", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("taskId", ctx_r6.taskDetails.id)("showFormTitle", ctx_r6.showFormTitle)("showFormRefreshButton", ctx_r6.showFormRefreshButton)("showCancelButton", true)("fieldValidators", ctx_r6.fieldValidators);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.isShowAttachForm());
} }
function TaskDetailsComponent_div_1_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "ADF_TASK_LIST.DETAILS.MESSAGES.CLAIM"), " ");
} }
function TaskDetailsComponent_div_1_adf_info_drawer_7_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r32 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 27);
    ɵngcc0.ɵɵelementStart(1, "adf-people-search", 28);
    ɵngcc0.ɵɵlistener("searchPeople", function TaskDetailsComponent_div_1_adf_info_drawer_7_div_2_Template_adf_people_search_searchPeople_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r31 = ɵngcc0.ɵɵnextContext(3); return ctx_r31.searchUser($event); })("success", function TaskDetailsComponent_div_1_adf_info_drawer_7_div_2_Template_adf_people_search_success_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r33 = ɵngcc0.ɵɵnextContext(3); return ctx_r33.assignTaskToUser($event); })("closeSearch", function TaskDetailsComponent_div_1_adf_info_drawer_7_div_2_Template_adf_people_search_closeSearch_1_listener() { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r34 = ɵngcc0.ɵɵnextContext(3); return ctx_r34.onCloseSearch(); });
    ɵngcc0.ɵɵelementContainerStart(2, 29);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerStart(5, 30);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r28 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("results", ctx_r28.peopleSearch);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(4, 3, "ADF_TASK_LIST.DETAILS.LABELS.ADD_ASSIGNEE"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(7, 5, "ADF_TASK_LIST.PEOPLE.ADD_ASSIGNEE"), " ");
} }
function TaskDetailsComponent_div_1_adf_info_drawer_7_adf_people_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-people", 31, 32);
} if (rf & 2) {
    const ctx_r29 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("people", ctx_r29.taskPeople)("readOnly", ctx_r29.internalReadOnlyForm)("taskId", ctx_r29.taskDetails.id);
} }
function TaskDetailsComponent_div_1_adf_info_drawer_7_mat_card_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card");
    ɵngcc0.ɵɵelementStart(1, "mat-card-content");
    ɵngcc0.ɵɵelement(2, "adf-comments", 33, 34);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r30 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("readOnly", ctx_r30.isReadOnlyComment())("taskId", ctx_r30.taskDetails.id);
} }
function TaskDetailsComponent_div_1_adf_info_drawer_7_Template(rf, ctx) { if (rf & 1) {
    const _r38 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-info-drawer", 21);
    ɵngcc0.ɵɵelementStart(1, "adf-info-drawer-tab", 22);
    ɵngcc0.ɵɵtemplate(2, TaskDetailsComponent_div_1_adf_info_drawer_7_div_2_Template, 8, 7, "div", 23);
    ɵngcc0.ɵɵelementStart(3, "adf-task-header", 24);
    ɵngcc0.ɵɵlistener("claim", function TaskDetailsComponent_div_1_adf_info_drawer_7_Template_adf_task_header_claim_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const ctx_r37 = ɵngcc0.ɵɵnextContext(2); return ctx_r37.onClaimAction($event); })("unclaim", function TaskDetailsComponent_div_1_adf_info_drawer_7_Template_adf_task_header_unclaim_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const ctx_r39 = ɵngcc0.ɵɵnextContext(2); return ctx_r39.onUnclaimAction($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, TaskDetailsComponent_div_1_adf_info_drawer_7_adf_people_4_Template, 2, 3, "adf-people", 25);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "adf-info-drawer-tab", 26);
    ɵngcc0.ɵɵtemplate(6, TaskDetailsComponent_div_1_adf_info_drawer_7_mat_card_6_Template, 4, 2, "mat-card", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.showAssignee);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r8.getTaskHeaderViewClass());
    ɵngcc0.ɵɵproperty("taskDetails", ctx_r8.taskDetails)("formName", ctx_r8.taskFormName);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.showInvolvePeople);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.showComments);
} }
function TaskDetailsComponent_div_1_div_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r43 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "adf-checklist", 36, 37);
    ɵngcc0.ɵɵlistener("checklistTaskCreated", function TaskDetailsComponent_div_1_div_8_div_1_Template_adf_checklist_checklistTaskCreated_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r42 = ɵngcc0.ɵɵnextContext(3); return ctx_r42.onChecklistTaskCreated($event); })("checklistTaskDeleted", function TaskDetailsComponent_div_1_div_8_div_1_Template_adf_checklist_checklistTaskDeleted_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r44 = ɵngcc0.ɵɵnextContext(3); return ctx_r44.onChecklistTaskDeleted($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r40 = ɵngcc0.ɵɵnextContext(3);
    var tmp_2_0 = null;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("readOnly", ctx_r40.internalReadOnlyForm)("taskId", ctx_r40.taskDetails.id)("assignee", (tmp_2_0 = ctx_r40.taskDetails) == null ? null : tmp_2_0.assignee == null ? null : tmp_2_0.assignee.id);
} }
function TaskDetailsComponent_div_1_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 35);
    ɵngcc0.ɵɵtemplate(1, TaskDetailsComponent_div_1_div_8_div_1_Template, 3, 3, "div", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.showChecklist);
} }
function TaskDetailsComponent_div_1_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    const _r46 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "h3", 38);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "mat-dialog-content");
    ɵngcc0.ɵɵelementStart(4, "p");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "mat-dialog-actions");
    ɵngcc0.ɵɵelementStart(8, "button", 39);
    ɵngcc0.ɵɵlistener("click", function TaskDetailsComponent_div_1_ng_template_9_Template_button_click_8_listener() { ɵngcc0.ɵɵrestoreView(_r46); const ctx_r45 = ɵngcc0.ɵɵnextContext(2); return ctx_r45.closeErrorDialog(); });
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 3, "ADF_TASK_LIST.DETAILS.ERROR.TITLE"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 5, "ADF_TASK_LIST.DETAILS.ERROR.DESCRIPTION"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(10, 7, "ADF_TASK_LIST.DETAILS.ERROR.CLOSE"), " ");
} }
function TaskDetailsComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtemplate(1, TaskDetailsComponent_div_1_div_1_Template, 4, 1, "div", 6);
    ɵngcc0.ɵɵelementStart(2, "div", 7);
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵtemplate(4, TaskDetailsComponent_div_1_div_4_Template, 4, 6, "div", 3);
    ɵngcc0.ɵɵtemplate(5, TaskDetailsComponent_div_1_div_5_Template, 3, 3, "div", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 10);
    ɵngcc0.ɵɵtemplate(7, TaskDetailsComponent_div_1_adf_info_drawer_7_Template, 7, 7, "adf-info-drawer", 11);
    ɵngcc0.ɵɵtemplate(8, TaskDetailsComponent_div_1_div_8_Template, 2, 1, "div", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, TaskDetailsComponent_div_1_ng_template_9_Template, 11, 9, "ng-template", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showHeader);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.isAssigned());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.isAssigned());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showHeaderContent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showHeaderContent);
} }
export class TaskDetailsComponent {
    constructor(taskListService, peopleProcessService, logService, cardViewUpdateService, dialog) {
        this.taskListService = taskListService;
        this.peopleProcessService = peopleProcessService;
        this.logService = logService;
        this.cardViewUpdateService = cardViewUpdateService;
        this.dialog = dialog;
        this.debugMode = false;
        this.showNextTask = true;
        this.showHeader = true;
        this.showHeaderContent = true;
        this.showInvolvePeople = true;
        this.showComments = true;
        this.showChecklist = true;
        this.showFormTitle = false;
        this.showFormCompleteButton = true;
        this.showFormSaveButton = true;
        this.readOnlyForm = false;
        this.showFormRefreshButton = true;
        this.fieldValidators = [];
        this.formSaved = new EventEmitter();
        this.formCompleted = new EventEmitter();
        this.formContentClicked = new EventEmitter();
        this.formLoaded = new EventEmitter();
        this.taskCreated = new EventEmitter();
        this.taskDeleted = new EventEmitter();
        this.error = new EventEmitter();
        this.executeOutcome = new EventEmitter();
        this.assignTask = new EventEmitter();
        this.claimedTask = new EventEmitter();
        this.unClaimedTask = new EventEmitter();
        this.taskFormName = null;
        this.taskPeople = [];
        this.showAssignee = false;
        this.showAttachForm = false;
        this.internalReadOnlyForm = false;
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        this.peopleSearch = new Observable((observer) => this.peopleSearchObserver = observer).pipe(share());
        if (this.taskId) {
            this.loadDetails(this.taskId);
        }
        this.cardViewUpdateService.itemUpdated$
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(this.updateTaskDetails.bind(this));
        this.cardViewUpdateService.itemClicked$
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(this.clickTaskDetails.bind(this));
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    ngOnChanges(changes) {
        const taskId = changes.taskId;
        this.showAssignee = false;
        if (taskId && !taskId.currentValue) {
            this.reset();
        }
        else if (taskId && taskId.currentValue) {
            this.loadDetails(taskId.currentValue);
        }
    }
    isShowAttachForm() {
        return this.showAttachForm;
    }
    reset() {
        this.taskDetails = null;
    }
    isTaskActive() {
        return this.taskDetails && this.taskDetails.duration === null;
    }
    updateTaskDetails(updateNotification) {
        this.taskListService
            .updateTask(this.taskId, updateNotification.changed)
            .pipe(catchError(() => {
            this.cardViewUpdateService.updateElement(updateNotification.target);
            return of(null);
        }))
            .subscribe(() => this.loadDetails(this.taskId));
    }
    clickTaskDetails(clickNotification) {
        if (clickNotification.target.key === 'assignee') {
            this.showAssignee = true;
        }
        if (clickNotification.target.key === 'formName') {
            this.showAttachForm = true;
        }
    }
    loadDetails(taskId) {
        this.taskPeople = [];
        if (taskId) {
            this.taskListService.getTaskDetails(taskId).subscribe((res) => {
                this.showAttachForm = false;
                this.taskDetails = res;
                if (this.taskDetails.name === 'null') {
                    this.taskDetails.name = 'No name';
                }
                const endDate = res.endDate;
                if (endDate && !isNaN(endDate.getTime())) {
                    this.internalReadOnlyForm = true;
                }
                else {
                    this.internalReadOnlyForm = this.readOnlyForm;
                }
                if (this.taskDetails && this.taskDetails.involvedPeople) {
                    this.taskDetails.involvedPeople.forEach((user) => {
                        this.taskPeople.push(new UserProcessModel(user));
                    });
                }
            });
        }
    }
    isAssigned() {
        return !!this.taskDetails.assignee;
    }
    loadNextTask(processInstanceId, processDefinitionId) {
        const requestNode = new TaskQueryRequestRepresentationModel({
            processInstanceId: processInstanceId,
            processDefinitionId: processDefinitionId
        });
        this.taskListService.getTasks(requestNode).subscribe((response) => {
            if (response && response.length > 0) {
                this.taskDetails = new TaskDetailsModel(response[0]);
            }
            else {
                this.reset();
            }
        }, (error) => {
            this.error.emit(error);
        });
    }
    onComplete() {
        this.onFormCompleted(null);
    }
    onShowAttachForm() {
        this.showAttachForm = true;
    }
    onCancelAttachForm() {
        this.showAttachForm = false;
    }
    onCompleteAttachForm() {
        this.taskFormName = null;
        this.showAttachForm = false;
        this.taskFormComponent.loadTask(this.taskId);
        this.loadDetails(this.taskId);
    }
    onFormContentClick(content) {
        this.formContentClicked.emit(content);
    }
    onFormSaved(form) {
        this.formSaved.emit(form);
    }
    onFormCompleted(form) {
        this.formCompleted.emit(form);
        if (this.showNextTask && (this.taskDetails.processInstanceId || this.taskDetails.processDefinitionId)) {
            this.loadNextTask(this.taskDetails.processInstanceId, this.taskDetails.processDefinitionId);
        }
    }
    onFormLoaded(form) {
        this.taskFormName = (form && form.name ? form.name : null);
        this.formLoaded.emit(form);
    }
    onChecklistTaskCreated(task) {
        this.taskCreated.emit(task);
    }
    onChecklistTaskDeleted(taskId) {
        this.taskDeleted.emit(taskId);
    }
    onFormError(error) {
        this.errorDialogRef = this.dialog.open(this.errorDialog, { width: '500px' });
        this.error.emit(error);
    }
    onFormExecuteOutcome(event) {
        this.executeOutcome.emit(event);
    }
    closeErrorDialog() {
        this.dialog.closeAll();
    }
    onClaimAction(taskId) {
        this.claimedTask.emit(taskId);
        this.loadDetails(taskId);
    }
    onUnclaimAction(taskId) {
        this.unClaimedTask.emit(taskId);
        this.loadDetails(taskId);
    }
    searchUser(searchedWord) {
        this.peopleProcessService.getWorkflowUsers(null, searchedWord)
            .subscribe(users => {
            users = users.filter((user) => user.id !== this.taskDetails.assignee.id);
            this.peopleSearchObserver.next(users);
        }, () => this.logService.error('Could not load users'));
    }
    onCloseSearch() {
        this.showAssignee = false;
    }
    assignTaskToUser(selectedUser) {
        this.taskListService
            .assignTask(this.taskDetails.id, selectedUser)
            .subscribe(() => {
            this.logService.info('Task Assigned to ' + selectedUser.email);
            this.assignTask.emit();
        });
        this.showAssignee = false;
    }
    getTaskHeaderViewClass() {
        if (this.showAssignee) {
            return 'assign-edit-view';
        }
        else {
            return 'default-view';
        }
    }
    isReadOnlyComment() {
        return (this.taskDetails && this.taskDetails.isCompleted()) && (this.taskPeople && this.taskPeople.length === 0);
    }
}
TaskDetailsComponent.ɵfac = function TaskDetailsComponent_Factory(t) { return new (t || TaskDetailsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TaskListService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.PeopleProcessService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LogService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.CardViewUpdateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.MatDialog)); };
TaskDetailsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TaskDetailsComponent, selectors: [["adf-task-details"]], viewQuery: function TaskDetailsComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
        ɵngcc0.ɵɵviewQuery(_c2, true);
        ɵngcc0.ɵɵviewQuery(_c3, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.activitiComments = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.activitiChecklist = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.errorDialog = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.taskFormComponent = _t.first);
    } }, inputs: { debugMode: "debugMode", showNextTask: "showNextTask", showHeader: "showHeader", showHeaderContent: "showHeaderContent", showInvolvePeople: "showInvolvePeople", showComments: "showComments", showChecklist: "showChecklist", showFormTitle: "showFormTitle", showFormCompleteButton: "showFormCompleteButton", showFormSaveButton: "showFormSaveButton", readOnlyForm: "readOnlyForm", showFormRefreshButton: "showFormRefreshButton", fieldValidators: "fieldValidators", taskId: "taskId" }, outputs: { formSaved: "formSaved", formCompleted: "formCompleted", formContentClicked: "formContentClicked", formLoaded: "formLoaded", taskCreated: "taskCreated", taskDeleted: "taskDeleted", error: "error", executeOutcome: "executeOutcome", assignTask: "assignTask", claimedTask: "claimedTask", unClaimedTask: "unClaimedTask" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [["data-automation-id", "adf-tasks-details--empty", 4, "ngIf"], ["class", "adf-task-details", 4, "ngIf"], ["data-automation-id", "adf-tasks-details--empty"], [4, "ngIf"], ["ngFor", "", 3, "ngForOf", "ngForTemplate"], [1, "adf-task-details"], ["class", "adf-task-details-header", 4, "ngIf"], ["fxLayout", "column", "fxLayoutGap", "8px", "fxLayout.lt-lg", "column", 1, "adf-task-details-core"], [1, "adf-task-details-core-form"], ["id", "claim-message-id", 4, "ngIf"], [1, "adf-task-details-core-sidebar"], ["title", "ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TITLE", "id", "adf-task-details-core-sidebar-drawer", "class", "adf-task-details-core-sidebar-drawer", 4, "ngIf"], ["class", "adf-task-details-core-sidebar-checklist", 4, "ngIf"], ["errorDialog", ""], [1, "adf-task-details-header"], [1, "adf-activiti-task-details__header"], [3, "taskId", "showFormTitle", "showFormRefreshButton", "showCancelButton", "fieldValidators", "formSaved", "formCompleted", "formContentClicked", "formLoaded", "completed", "showAttachForm", "executeOutcome", "taskClaimed", "taskUnclaimed", "error"], ["activitiTaskForm", ""], [3, "taskId", "formKey", "cancelAttachForm", "success", 4, "ngIf"], [3, "taskId", "formKey", "cancelAttachForm", "success"], ["id", "claim-message-id"], ["title", "ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TITLE", "id", "adf-task-details-core-sidebar-drawer", 1, "adf-task-details-core-sidebar-drawer"], ["label", "ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_DETAILS_TITLE"], ["class", "adf-assignment-container", 4, "ngIf"], [3, "taskDetails", "formName", "claim", "unclaim"], [3, "people", "readOnly", "taskId", 4, "ngIf"], ["label", "ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_ACTIVITY_TITLE"], [1, "adf-assignment-container"], [3, "results", "searchPeople", "success", "closeSearch"], ["adf-people-search-title", ""], ["adf-people-search-action-label", ""], [3, "people", "readOnly", "taskId"], ["people", ""], [3, "readOnly", "taskId"], ["activitiComments", ""], [1, "adf-task-details-core-sidebar-checklist"], [3, "readOnly", "taskId", "assignee", "checklistTaskCreated", "checklistTaskDeleted"], ["activitiChecklist", ""], ["matDialogTitle", ""], ["mat-button", "", "type", "button", 3, "click"]], template: function TaskDetailsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TaskDetailsComponent_div_0_Template, 3, 2, "div", 0);
        ɵngcc0.ɵɵtemplate(1, TaskDetailsComponent_div_1_Template, 11, 5, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.taskDetails);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.taskDetails);
    } }, directives: [ɵngcc4.NgIf, ɵngcc4.NgForOf, ɵngcc5.DefaultLayoutDirective, ɵngcc5.DefaultLayoutGapDirective, ɵngcc6.TaskFormComponent, ɵngcc7.AttachFormComponent, ɵngcc2.InfoDrawerComponent, ɵngcc2.InfoDrawerTabComponent, ɵngcc8.TaskHeaderComponent, ɵngcc9.PeopleSearchComponent, ɵngcc10.PeopleSearchTitleDirective, ɵngcc11.PeopleComponent, ɵngcc12.MatCard, ɵngcc12.MatCardContent, ɵngcc2.CommentsComponent, ɵngcc13.ChecklistComponent, ɵngcc3.MatDialogTitle, ɵngcc3.MatDialogContent, ɵngcc3.MatDialogActions, ɵngcc14.MatButton], pipes: [ɵngcc15.TranslatePipe], styles: ["[_nghost-%COMP%]{width:100%}.adf-error-dialog[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:16px 0}.adf-activiti-task-details__header[_ngcontent-%COMP%]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;align-self:flex-end;cursor:pointer;display:flex;font-size:24px;font-weight:300;line-height:normal;margin:8px 0 16px;overflow:hidden;user-select:none}.adf-activiti-task-details__action-button[_ngcontent-%COMP%]{text-transform:uppercase}.adf-assignment-container[_ngcontent-%COMP%]{padding:10px 20px;width:auto}adf-task-header.adf-assign-edit-view[_ngcontent-%COMP%]     adf-card-view   .adf-property[data-automation-id=header-assignee]{display:none}.adf-task-details-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.adf-task-details-header-toggle[_ngcontent-%COMP%]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;height:23px;margin-right:2px;position:relative;top:10px;user-select:none}.adf-task-details-toggle[_ngcontent-%COMP%]{position:relative}.adf-task-details-core[_ngcontent-%COMP%]{display:flex;justify-content:space-between}@media screen and (max-width:1279px){.adf-task-details-core-sidebar-drawer[_ngcontent-%COMP%]{margin-left:0}}.adf-task-details-core-sidebar-checklist[_ngcontent-%COMP%]{margin-top:30px;padding-left:20px;padding-right:20px}.adf-task-details-core-form[_ngcontent-%COMP%]{flex-grow:1}.adf-task-details-core-form[_ngcontent-%COMP%]     .adf-form-debug-container{display:flex;flex-direction:column;padding:20px 0}.adf-task-details-core-form[_ngcontent-%COMP%]     .adf-form-debug-container .mat-slide-toggle{margin-left:auto}.adf-task-details-core-form[_ngcontent-%COMP%]     .adf-form-debug-container .mat-slide-toggle+div{background-color:#000;clear:both;color:#fff;margin-top:30px;padding:20px}.adf-task-details-core-form[_ngcontent-%COMP%]     .mat-tab-label{flex-grow:1}"] });
TaskDetailsComponent.ctorParameters = () => [
    { type: TaskListService },
    { type: PeopleProcessService },
    { type: LogService },
    { type: CardViewUpdateService },
    { type: MatDialog }
];
TaskDetailsComponent.propDecorators = {
    activitiComments: [{ type: ViewChild, args: ['activitiComments',] }],
    activitiChecklist: [{ type: ViewChild, args: ['activitiChecklist',] }],
    errorDialog: [{ type: ViewChild, args: ['errorDialog',] }],
    taskFormComponent: [{ type: ViewChild, args: ['activitiTaskForm',] }],
    debugMode: [{ type: Input }],
    taskId: [{ type: Input }],
    showNextTask: [{ type: Input }],
    showHeader: [{ type: Input }],
    showHeaderContent: [{ type: Input }],
    showInvolvePeople: [{ type: Input }],
    showComments: [{ type: Input }],
    showChecklist: [{ type: Input }],
    showFormTitle: [{ type: Input }],
    showFormCompleteButton: [{ type: Input }],
    showFormSaveButton: [{ type: Input }],
    readOnlyForm: [{ type: Input }],
    showFormRefreshButton: [{ type: Input }],
    fieldValidators: [{ type: Input }],
    formSaved: [{ type: Output }],
    formCompleted: [{ type: Output }],
    formContentClicked: [{ type: Output }],
    formLoaded: [{ type: Output }],
    taskCreated: [{ type: Output }],
    taskDeleted: [{ type: Output }],
    error: [{ type: Output }],
    executeOutcome: [{ type: Output }],
    assignTask: [{ type: Output }],
    claimedTask: [{ type: Output }],
    unClaimedTask: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TaskDetailsComponent, [{
        type: Component,
        args: [{
                selector: 'adf-task-details',
                template: "<div *ngIf=\"!taskDetails\" data-automation-id=\"adf-tasks-details--empty\">\n    <ng-template *ngIf=\"noTaskDetailsTemplateComponent\" ngFor [ngForOf]=\"[data]\"\n                 [ngForTemplate]=\"noTaskDetailsTemplateComponent\">\n        {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.NONE' | translate }}\n    </ng-template>\n    <div *ngIf=\"!noTaskDetailsTemplateComponent\">\n        {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.NONE' | translate }}\n    </div>\n</div>\n<div *ngIf=\"taskDetails\" class=\"adf-task-details\">\n\n    <div *ngIf=\"showHeader\" class=\"adf-task-details-header\">\n        <h2 class=\"adf-activiti-task-details__header\">\n            <span>{{taskDetails.name || 'No name'}}</span>\n        </h2>\n    </div>\n\n    <div class=\"adf-task-details-core\"\n        fxLayout=\"column\"\n        fxLayoutGap=\"8px\"\n        fxLayout.lt-lg=\"column\">\n\n        <div class=\"adf-task-details-core-form\">\n            <div *ngIf=\"isAssigned()\">\n                <adf-task-form\n                          [taskId]=\"taskDetails.id\"\n                          [showFormTitle]=\"showFormTitle\"\n                          [showFormRefreshButton]=\"showFormRefreshButton\"\n                          [showCancelButton]=\"true\"\n                          [fieldValidators]=\"fieldValidators\"\n                          (formSaved)='onFormSaved($event)'\n                          (formCompleted)='onFormCompleted($event)'\n                          (formContentClicked)='onFormContentClick($event)'\n                          (formLoaded)='onFormLoaded($event)'\n                          (completed)=\"onComplete()\"\n                          (showAttachForm)=\"onShowAttachForm()\"\n                          (executeOutcome)='onFormExecuteOutcome($event)'\n                          (taskClaimed)=\"onClaimAction($event)\"\n                          (taskUnclaimed)=\"onUnclaimAction($event)\"\n                          (error)=\"onFormError($event)\" #activitiTaskForm>\n                </adf-task-form>\n                <adf-attach-form *ngIf=\"isShowAttachForm()\"\n                                 [taskId]=\"taskDetails.id\"\n                                 [formKey]=\"taskDetails.formKey\"\n                                 (cancelAttachForm)=\"onCancelAttachForm()\"\n                                 (success)=\"onCompleteAttachForm()\">\n                </adf-attach-form>\n            </div>\n            <div *ngIf=\"!isAssigned()\" id=\"claim-message-id\">\n                {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.CLAIM' | translate }}\n            </div>\n        </div>\n        <div class=\"adf-task-details-core-sidebar\">\n            <adf-info-drawer *ngIf=\"showHeaderContent\" title=\"ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TITLE\" id=\"adf-task-details-core-sidebar-drawer\" class=\"adf-task-details-core-sidebar-drawer\">\n                <adf-info-drawer-tab label=\"ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_DETAILS_TITLE\">\n                    <div class=\"adf-assignment-container\" *ngIf=\"showAssignee\">\n                        <adf-people-search\n                            (searchPeople)=\"searchUser($event)\"\n                            (success)=\"assignTaskToUser($event)\"\n                            (closeSearch)=\"onCloseSearch()\"\n                            [results]=\"peopleSearch\">\n                            <ng-container adf-people-search-title>{{ 'ADF_TASK_LIST.DETAILS.LABELS.ADD_ASSIGNEE' | translate }}\n                            </ng-container>\n                            <ng-container adf-people-search-action-label>{{ 'ADF_TASK_LIST.PEOPLE.ADD_ASSIGNEE' | translate }}\n                            </ng-container>\n                        </adf-people-search>\n                    </div>\n                    <adf-task-header\n                        [class]=\"getTaskHeaderViewClass()\"\n                        [taskDetails]=\"taskDetails\"\n                        [formName]=\"taskFormName\"\n                        (claim)=\"onClaimAction($event)\"\n                        (unclaim)=\"onUnclaimAction($event)\">\n                    </adf-task-header>\n                    <adf-people *ngIf=\"showInvolvePeople\" #people\n                                [people]=\"taskPeople\"\n                                [readOnly]=\"internalReadOnlyForm\"\n                                [taskId]=\"taskDetails.id\">\n                    </adf-people>\n                </adf-info-drawer-tab>\n\n                <adf-info-drawer-tab label=\"ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_ACTIVITY_TITLE\">\n                    <mat-card *ngIf=\"showComments\">\n                        <mat-card-content>\n                            <adf-comments #activitiComments\n                                          [readOnly]=\"isReadOnlyComment()\"\n                                          [taskId]=\"taskDetails.id\">\n                            </adf-comments>\n                        </mat-card-content>\n                    </mat-card>\n                </adf-info-drawer-tab>\n\n            </adf-info-drawer>\n\n            <div *ngIf=\"showHeaderContent\" class=\"adf-task-details-core-sidebar-checklist\">\n                <div *ngIf=\"showChecklist\">\n                    <adf-checklist #activitiChecklist\n                                   [readOnly]=\"internalReadOnlyForm\"\n                                   [taskId]=\"taskDetails.id\"\n                                   [assignee]=\"$any(taskDetails)?.assignee?.id\"\n                                   (checklistTaskCreated)=\"onChecklistTaskCreated($event)\"\n                                   (checklistTaskDeleted)=\"onChecklistTaskDeleted($event)\">\n                    </adf-checklist>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <ng-template #errorDialog>\n        <h3 matDialogTitle>{{'ADF_TASK_LIST.DETAILS.ERROR.TITLE'|translate}}</h3>\n        <mat-dialog-content>\n            <p>{{'ADF_TASK_LIST.DETAILS.ERROR.DESCRIPTION'|translate}}</p>\n        </mat-dialog-content>\n        <mat-dialog-actions>\n            <button mat-button type=\"button\" (click)=\"closeErrorDialog()\">{{'ADF_TASK_LIST.DETAILS.ERROR.CLOSE'|translate}}\n            </button>\n        </mat-dialog-actions>\n    </ng-template>\n\n</div>\n",
                styles: [":host{width:100%}.adf-error-dialog h3{margin:16px 0}.adf-activiti-task-details__header{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;align-self:flex-end;cursor:pointer;display:flex;font-size:24px;font-weight:300;line-height:normal;margin:8px 0 16px;overflow:hidden;user-select:none}.adf-activiti-task-details__action-button{text-transform:uppercase}.adf-assignment-container{padding:10px 20px;width:auto}adf-task-header.adf-assign-edit-view ::ng-deep adf-card-view ::ng-deep .adf-property[data-automation-id=header-assignee]{display:none}.adf-task-details-header{display:flex;justify-content:space-between}.adf-task-details-header-toggle{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;height:23px;margin-right:2px;position:relative;top:10px;user-select:none}.adf-task-details-toggle{position:relative}.adf-task-details-core{display:flex;justify-content:space-between}@media screen and (max-width:1279px){.adf-task-details-core-sidebar-drawer{margin-left:0}}.adf-task-details-core-sidebar-checklist{margin-top:30px;padding-left:20px;padding-right:20px}.adf-task-details-core-form{flex-grow:1}.adf-task-details-core-form ::ng-deep .adf-form-debug-container{display:flex;flex-direction:column;padding:20px 0}.adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle{margin-left:auto}.adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle+div{background-color:#000;clear:both;color:#fff;margin-top:30px;padding:20px}.adf-task-details-core-form ::ng-deep .mat-tab-label{flex-grow:1}"]
            }]
    }], function () { return [{ type: ɵngcc1.TaskListService }, { type: ɵngcc2.PeopleProcessService }, { type: ɵngcc2.LogService }, { type: ɵngcc2.CardViewUpdateService }, { type: ɵngcc3.MatDialog }]; }, { debugMode: [{
            type: Input
        }], showNextTask: [{
            type: Input
        }], showHeader: [{
            type: Input
        }], showHeaderContent: [{
            type: Input
        }], showInvolvePeople: [{
            type: Input
        }], showComments: [{
            type: Input
        }], showChecklist: [{
            type: Input
        }], showFormTitle: [{
            type: Input
        }], showFormCompleteButton: [{
            type: Input
        }], showFormSaveButton: [{
            type: Input
        }], readOnlyForm: [{
            type: Input
        }], showFormRefreshButton: [{
            type: Input
        }], fieldValidators: [{
            type: Input
        }], formSaved: [{
            type: Output
        }], formCompleted: [{
            type: Output
        }], formContentClicked: [{
            type: Output
        }], formLoaded: [{
            type: Output
        }], taskCreated: [{
            type: Output
        }], taskDeleted: [{
            type: Output
        }], error: [{
            type: Output
        }], executeOutcome: [{
            type: Output
        }], assignTask: [{
            type: Output
        }], claimedTask: [{
            type: Output
        }], unClaimedTask: [{
            type: Output
        }], activitiComments: [{
            type: ViewChild,
            args: ['activitiComments']
        }], activitiChecklist: [{
            type: ViewChild,
            args: ['activitiChecklist']
        }], errorDialog: [{
            type: ViewChild,
            args: ['errorDialog']
        }], taskFormComponent: [{
            type: ViewChild,
            args: ['activitiTaskForm']
        }], taskId: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,