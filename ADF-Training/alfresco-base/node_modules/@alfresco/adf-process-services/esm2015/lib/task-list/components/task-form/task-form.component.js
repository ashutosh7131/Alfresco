/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { AuthenticationService, TranslationService } from '@alfresco/adf-core';
import { TaskListService } from '../../services/tasklist.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/tasklist.service';
import * as ɵngcc2 from '@alfresco/adf-core';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../../../form/form.component';
import * as ɵngcc5 from '../../../form/form-custom-outcomes.component';
import * as ɵngcc6 from '../task-standalone.component';
import * as ɵngcc7 from '@angular/material/card';
import * as ɵngcc8 from '@angular/material/button';
import * as ɵngcc9 from './claim-task.directive';
import * as ɵngcc10 from './unclaim-task.directive';
import * as ɵngcc11 from '@angular/flex-layout/flex';
import * as ɵngcc12 from '@angular/material/progress-spinner';
import * as ɵngcc13 from '@ngx-translate/core';

function TaskFormComponent_ng_container_0_adf_form_1_ng_template_2_Template(rf, ctx) { }
function TaskFormComponent_ng_container_0_adf_form_1_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-form", 5);
    ɵngcc0.ɵɵlistener("formSaved", function TaskFormComponent_ng_container_0_adf_form_1_Template_adf_form_formSaved_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.onFormSaved($event); })("formCompleted", function TaskFormComponent_ng_container_0_adf_form_1_Template_adf_form_formCompleted_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onFormCompleted($event); })("formContentClicked", function TaskFormComponent_ng_container_0_adf_form_1_Template_adf_form_formContentClicked_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.onFormContentClick($event); })("formLoaded", function TaskFormComponent_ng_container_0_adf_form_1_Template_adf_form_formLoaded_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.onFormLoaded($event); })("formError", function TaskFormComponent_ng_container_0_adf_form_1_Template_adf_form_formError_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.onFormError($event); })("error", function TaskFormComponent_ng_container_0_adf_form_1_Template_adf_form_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.onError($event); })("executeOutcome", function TaskFormComponent_ng_container_0_adf_form_1_Template_adf_form_executeOutcome_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.onFormExecuteOutcome($event); });
    ɵngcc0.ɵɵelementStart(1, "adf-form-custom-outcomes");
    ɵngcc0.ɵɵtemplate(2, TaskFormComponent_ng_container_0_adf_form_1_ng_template_2_Template, 0, 0, "ng-template", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(5);
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("taskId", ctx_r3.taskDetails == null ? null : ctx_r3.taskDetails.id)("showTitle", ctx_r3.showFormTitle)("showValidationIcon", ctx_r3.showFormValidationIcon)("showRefreshButton", ctx_r3.showFormRefreshButton)("showCompleteButton", ctx_r3.showFormCompleteButton)("showSaveButton", ctx_r3.isSaveButtonVisible())("disableCompleteButton", !ctx_r3.isCompleteButtonEnabled())("readOnly", ctx_r3.isReadOnlyForm())("fieldValidators", ctx_r3.fieldValidators);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function TaskFormComponent_ng_container_0_ng_template_2_adf_task_standalone_0_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-task-standalone", 9);
    ɵngcc0.ɵɵlistener("complete", function TaskFormComponent_ng_container_0_ng_template_2_adf_task_standalone_0_Template_adf_task_standalone_complete_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(3); return ctx_r20.onCompleteTask(); })("showAttachForm", function TaskFormComponent_ng_container_0_ng_template_2_adf_task_standalone_0_Template_adf_task_standalone_showAttachForm_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r22 = ɵngcc0.ɵɵnextContext(3); return ctx_r22.onShowAttachForm(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("taskName", ctx_r17.taskDetails.name)("taskId", ctx_r17.taskDetails.id)("isCompleted", ctx_r17.isCompletedTask())("hasCompletePermission", ctx_r17.isCompleteButtonVisible())("hideCancelButton", ctx_r17.showCancelButton);
} }
function TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "FORM.FORM_RENDERER.NAMELESS_TASK"), " ");
} }
function TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_adf_empty_content_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-empty-content", 17);
    ɵngcc0.ɵɵpipe(1, "async");
} if (rf & 2) {
    const ctx_r24 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("icon", "description")("title", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r24.getCompletedTaskTranslatedMessage()))("subtitle", "ADF_TASK_FORM.COMPLETED_TASK.SUBTITLE");
} }
function TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-empty-content", 17);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "description")("title", "ADF_TASK_LIST.STANDALONE_TASK.NO_FORM_MESSAGE")("subtitle", "ADF_TASK_FORM.EMPTY_FORM.SUBTITLE");
} }
function TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_ng_template_12_Template(rf, ctx) { }
function TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_button_13_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵlistener("click", function TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(4); return ctx_r29.onCompleteTask(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r28 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("disabled", ctx_r28.canCompleteNoFormTask());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "ADF_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE"), " ");
} }
function TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 10);
    ɵngcc0.ɵɵelementStart(1, "mat-card-header");
    ɵngcc0.ɵɵelementStart(2, "mat-card-title");
    ɵngcc0.ɵɵelementStart(3, "h4");
    ɵngcc0.ɵɵelementStart(4, "span", 11);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵtemplate(6, TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_ng_container_6_Template, 3, 3, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "mat-card-content");
    ɵngcc0.ɵɵtemplate(8, TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_adf_empty_content_8_Template, 2, 5, "adf-empty-content", 13);
    ɵngcc0.ɵɵtemplate(9, TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_ng_template_9_Template, 1, 3, "ng-template", null, 14, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "mat-card-actions", 15);
    ɵngcc0.ɵɵtemplate(12, TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_ng_template_12_Template, 0, 0, "ng-template", 6);
    ɵngcc0.ɵɵtemplate(13, TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_button_13_Template, 3, 4, "button", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r25 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵnextContext(2);
    const _r6 = ɵngcc0.ɵɵreference(5);
    const ctx_r19 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r19.taskDetails.name, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r19.taskDetails.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r19.isCompletedTask())("ngIfElse", _r25);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r19.isCompletedTask());
} }
function TaskFormComponent_ng_container_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TaskFormComponent_ng_container_0_ng_template_2_adf_task_standalone_0_Template, 1, 5, "adf-task-standalone", 7);
    ɵngcc0.ɵɵtemplate(1, TaskFormComponent_ng_container_0_ng_template_2_ng_template_1_Template, 14, 6, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
} if (rf & 2) {
    const _r18 = ɵngcc0.ɵɵreference(2);
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.isStandaloneTask())("ngIfElse", _r18);
} }
function TaskFormComponent_ng_container_0_ng_template_4_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r35 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 22);
    ɵngcc0.ɵɵlistener("click", function TaskFormComponent_ng_container_0_ng_template_4_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r35); const ctx_r34 = ɵngcc0.ɵɵnextContext(3); return ctx_r34.onCancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL"), " ");
} }
function TaskFormComponent_ng_container_0_ng_template_4_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r37 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 23);
    ɵngcc0.ɵɵlistener("success", function TaskFormComponent_ng_container_0_ng_template_4_button_1_Template_button_success_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r36 = ɵngcc0.ɵɵnextContext(3); return ctx_r36.onClaimTask($event); })("error", function TaskFormComponent_ng_container_0_ng_template_4_button_1_Template_button_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r38 = ɵngcc0.ɵɵnextContext(3); return ctx_r38.onClaimTaskError($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("taskId", ctx_r32.taskId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM"), " ");
} }
function TaskFormComponent_ng_container_0_ng_template_4_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r40 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 24);
    ɵngcc0.ɵɵlistener("success", function TaskFormComponent_ng_container_0_ng_template_4_button_2_Template_button_success_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r40); const ctx_r39 = ɵngcc0.ɵɵnextContext(3); return ctx_r39.onUnclaimTask($event); })("error", function TaskFormComponent_ng_container_0_ng_template_4_button_2_Template_button_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r40); const ctx_r41 = ɵngcc0.ɵɵnextContext(3); return ctx_r41.onUnclaimTaskError($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r33 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("taskId", ctx_r33.taskId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "ADF_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM"), " ");
} }
function TaskFormComponent_ng_container_0_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TaskFormComponent_ng_container_0_ng_template_4_button_0_Template, 3, 3, "button", 19);
    ɵngcc0.ɵɵtemplate(1, TaskFormComponent_ng_container_0_ng_template_4_button_1_Template, 3, 4, "button", 20);
    ɵngcc0.ɵɵtemplate(2, TaskFormComponent_ng_container_0_ng_template_4_button_2_Template, 3, 4, "button", 21);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.showCancelButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.isTaskClaimable());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.isTaskClaimedByCandidateMember());
} }
function TaskFormComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, TaskFormComponent_ng_container_0_adf_form_1_Template, 3, 10, "adf-form", 2);
    ɵngcc0.ɵɵtemplate(2, TaskFormComponent_ng_container_0_ng_template_2_Template, 3, 2, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, TaskFormComponent_ng_container_0_ng_template_4_Template, 3, 3, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r4 = ɵngcc0.ɵɵreference(3);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hasFormKey())("ngIfElse", _r4);
} }
function TaskFormComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 25);
    ɵngcc0.ɵɵelement(1, "mat-spinner");
    ɵngcc0.ɵɵelementEnd();
} }
export class TaskFormComponent {
    constructor(taskListService, authService, translationService) {
        this.taskListService = taskListService;
        this.authService = authService;
        this.translationService = translationService;
        this.showFormTitle = false;
        this.showFormCompleteButton = true;
        this.showFormSaveButton = true;
        this.showCancelButton = true;
        this.readOnlyForm = false;
        this.showFormRefreshButton = true;
        this.showFormValidationIcon = true;
        this.fieldValidators = [];
        this.formSaved = new EventEmitter();
        this.formCompleted = new EventEmitter();
        this.formContentClicked = new EventEmitter();
        this.formLoaded = new EventEmitter();
        this.showAttachForm = new EventEmitter();
        this.executeOutcome = new EventEmitter();
        this.completed = new EventEmitter();
        this.formError = new EventEmitter();
        this.error = new EventEmitter();
        this.cancel = new EventEmitter();
        this.taskClaimed = new EventEmitter();
        this.taskUnclaimed = new EventEmitter();
        this.loading = false;
        this.internalReadOnlyForm = false;
    }
    ngOnInit() {
        this.authService.getBpmLoggedUser().subscribe(user => {
            this.currentLoggedUser = user;
        });
        this.loadTask(this.taskId);
    }
    ngOnChanges(changes) {
        const taskId = changes['taskId'];
        if (taskId && taskId.currentValue) {
            this.loadTask(this.taskId);
            return;
        }
    }
    loadTask(taskId) {
        this.loading = true;
        if (taskId) {
            this.taskListService.getTaskDetails(taskId).subscribe((res) => {
                this.taskDetails = res;
                if (!this.taskDetails.name) {
                    this.taskDetails.name = 'No name';
                }
                const endDate = res.endDate;
                if (endDate && !isNaN(endDate.getTime())) {
                    this.internalReadOnlyForm = true;
                }
                else {
                    this.internalReadOnlyForm = this.readOnlyForm;
                }
                this.loading = false;
            });
        }
    }
    onFormSaved(savedForm) {
        this.formSaved.emit(savedForm);
    }
    onFormCompleted(form) {
        this.formCompleted.emit(form);
    }
    onFormLoaded(form) {
        this.formLoaded.emit(form);
    }
    onFormContentClick(content) {
        this.formContentClicked.emit(content);
    }
    onFormExecuteOutcome(outcome) {
        this.executeOutcome.emit(outcome);
    }
    onFormError(error) {
        this.formError.emit(error);
    }
    onError(error) {
        this.error.emit(error);
    }
    onCompleteTask() {
        this.taskListService.completeTask(this.taskDetails.id).subscribe(() => this.completed.emit(), (error) => this.error.emit(error));
    }
    onCancel() {
        this.cancel.emit();
    }
    onShowAttachForm() {
        this.showAttachForm.emit();
    }
    hasFormKey() {
        return (this.taskDetails && (!!this.taskDetails.formKey));
    }
    isStandaloneTask() {
        return !(this.taskDetails && (!!this.taskDetails.processDefinitionId));
    }
    isTaskLoaded() {
        return !!this.taskDetails;
    }
    isCompletedTask() {
        return this.taskDetails && this.taskDetails.endDate !== undefined && this.taskDetails.endDate !== null;
    }
    isCompleteButtonVisible() {
        return !this.hasFormKey() && this.isTaskActive() && this.isCompleteButtonEnabled();
    }
    isTaskActive() {
        return this.taskDetails && this.taskDetails.duration === null;
    }
    isAssigned() {
        return !!this.taskDetails.assignee;
    }
    hasEmailAddress() {
        return this.taskDetails.assignee.email ? true : false;
    }
    isAssignedToMe() {
        return this.isAssigned() && this.hasEmailAddress() ?
            this.isEmailEqual() :
            this.isExternalIdEqual();
    }
    isEmailEqual() {
        return (this.taskDetails.assignee && this.currentLoggedUser) && (this.taskDetails.assignee.email.toLocaleLowerCase() === this.currentLoggedUser.email.toLocaleLowerCase());
    }
    isExternalIdEqual() {
        return (this.taskDetails.assignee && this.currentLoggedUser) && (this.taskDetails.assignee.externalId === this.currentLoggedUser.externalId);
    }
    isCompleteButtonEnabled() {
        return this.isAssignedToMe() || this.canInitiatorComplete();
    }
    canInitiatorComplete() {
        return this.taskDetails.initiatorCanCompleteTask;
    }
    isReadOnlyForm() {
        let readOnlyForm;
        if (this.isCandidateMember()) {
            readOnlyForm = this.internalReadOnlyForm || !this.isAssignedToMe();
        }
        else {
            readOnlyForm = this.internalReadOnlyForm || !(this.isAssignedToMe() || this.canCurrentUserAsInitiatorComplete() || this.isCurrentUserInvolved());
        }
        return readOnlyForm;
    }
    isCurrentUserInvolved() {
        var _a, _b;
        let isInvolved = false;
        if (this.taskDetails.involvedPeople && this.currentLoggedUser) {
            const userInvolved = this.taskDetails.involvedPeople.find((involvedUser) => involvedUser.email.toLocaleLowerCase() === this.currentLoggedUser.email.toLocaleLowerCase() ||
                involvedUser.id + '' === this.currentLoggedUser.externalId);
            isInvolved = !!userInvolved;
        }
        if (((_a = this.taskDetails.involvedGroups) === null || _a === void 0 ? void 0 : _a.length) && ((_b = this.currentLoggedUser.groups) === null || _b === void 0 ? void 0 : _b.length) && !isInvolved) {
            const userGroup = this.taskDetails.involvedGroups.find((involvedGroup) => this.currentLoggedUser.groups.find(group => group.name === involvedGroup.name.toLocaleLowerCase() || group.id === involvedGroup.id));
            isInvolved = !!userGroup;
        }
        return isInvolved;
    }
    canCurrentUserAsInitiatorComplete() {
        return this.canInitiatorComplete() && this.isProcessInitiator();
    }
    isProcessInitiator() {
        return this.currentLoggedUser && (this.currentLoggedUser.id === +this.taskDetails.processInstanceStartUserId);
    }
    isSaveButtonVisible() {
        return this.showFormSaveButton && (!this.canInitiatorComplete() || this.isAssignedToMe() || this.isCurrentUserInvolved());
    }
    canCompleteNoFormTask() {
        return this.isReadOnlyForm();
    }
    getCompletedTaskTranslatedMessage() {
        return this.translationService.get('ADF_TASK_FORM.COMPLETED_TASK.TITLE', { taskName: this.taskDetails.name });
    }
    isCandidateMember() {
        return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;
    }
    isTaskClaimable() {
        return this.isCandidateMember() && !this.isAssigned();
    }
    isTaskClaimedByCandidateMember() {
        return this.isCandidateMember() && this.isAssignedToMe() && !this.isCompletedTask();
    }
    reloadTask() {
        this.loadTask(this.taskId);
    }
    onClaimTask(taskId) {
        this.taskClaimed.emit(taskId);
    }
    onClaimTaskError(error) {
        this.error.emit(error);
    }
    onUnclaimTask(taskId) {
        this.taskUnclaimed.emit(taskId);
    }
    onUnclaimTaskError(error) {
        this.error.emit(error);
    }
}
TaskFormComponent.ɵfac = function TaskFormComponent_Factory(t) { return new (t || TaskFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TaskListService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AuthenticationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslationService)); };
TaskFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TaskFormComponent, selectors: [["adf-task-form"]], inputs: { showFormTitle: "showFormTitle", showFormCompleteButton: "showFormCompleteButton", showFormSaveButton: "showFormSaveButton", showCancelButton: "showCancelButton", readOnlyForm: "readOnlyForm", showFormRefreshButton: "showFormRefreshButton", showFormValidationIcon: "showFormValidationIcon", fieldValidators: "fieldValidators", taskId: "taskId" }, outputs: { formSaved: "formSaved", formCompleted: "formCompleted", formContentClicked: "formContentClicked", formLoaded: "formLoaded", showAttachForm: "showAttachForm", executeOutcome: "executeOutcome", completed: "completed", formError: "formError", error: "error", cancel: "cancel", taskClaimed: "taskClaimed", taskUnclaimed: "taskUnclaimed" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 2, consts: [[4, "ngIf", "ngIfElse"], ["loadingTemplate", ""], [3, "taskId", "showTitle", "showValidationIcon", "showRefreshButton", "showCompleteButton", "showSaveButton", "disableCompleteButton", "readOnly", "fieldValidators", "formSaved", "formCompleted", "formContentClicked", "formLoaded", "formError", "error", "executeOutcome", 4, "ngIf", "ngIfElse"], ["withoutForm", ""], ["taskFormButtons", ""], [3, "taskId", "showTitle", "showValidationIcon", "showRefreshButton", "showCompleteButton", "showSaveButton", "disableCompleteButton", "readOnly", "fieldValidators", "formSaved", "formCompleted", "formContentClicked", "formLoaded", "formError", "error", "executeOutcome"], [3, "ngTemplateOutlet"], [3, "taskName", "taskId", "isCompleted", "hasCompletePermission", "hideCancelButton", "complete", "showAttachForm", 4, "ngIf", "ngIfElse"], ["emptyFormMessage", ""], [3, "taskName", "taskId", "isCompleted", "hasCompletePermission", "hideCancelButton", "complete", "showAttachForm"], [1, "adf-task-form-container"], [1, "adf-form-title"], [4, "ngIf"], [3, "icon", "title", "subtitle", 4, "ngIf", "ngIfElse"], ["emptyFormTemplate", ""], [1, "adf-task-form-actions"], ["mat-button", "", "id", "adf-no-form-complete-button", "color", "primary", 3, "disabled", "click", 4, "ngIf"], [3, "icon", "title", "subtitle"], ["mat-button", "", "id", "adf-no-form-complete-button", "color", "primary", 3, "disabled", "click"], ["mat-button", "", "id", "adf-no-form-cancel-button", 3, "click", 4, "ngIf"], ["mat-button", "", "data-automation-id", "adf-task-form-claim-button", "adf-claim-task", "", 3, "taskId", "success", "error", 4, "ngIf"], ["mat-button", "", "data-automation-id", "adf-task-form-unclaim-button", "adf-unclaim-task", "", 3, "taskId", "success", "error", 4, "ngIf"], ["mat-button", "", "id", "adf-no-form-cancel-button", 3, "click"], ["mat-button", "", "data-automation-id", "adf-task-form-claim-button", "adf-claim-task", "", 3, "taskId", "success", "error"], ["mat-button", "", "data-automation-id", "adf-task-form-unclaim-button", "adf-unclaim-task", "", 3, "taskId", "success", "error"], ["fxLayout", "row", "fxLayoutAlign", "center stretch"]], template: function TaskFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TaskFormComponent_ng_container_0_Template, 6, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, TaskFormComponent_ng_template_1_Template, 2, 0, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loading)("ngIfElse", _r1);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.FormComponent, ɵngcc5.FormCustomOutcomesComponent, ɵngcc3.NgTemplateOutlet, ɵngcc6.TaskStandaloneComponent, ɵngcc7.MatCard, ɵngcc7.MatCardHeader, ɵngcc7.MatCardTitle, ɵngcc7.MatCardContent, ɵngcc7.MatCardActions, ɵngcc2.EmptyContentComponent, ɵngcc8.MatButton, ɵngcc9.ClaimTaskDirective, ɵngcc10.UnclaimTaskDirective, ɵngcc11.DefaultLayoutDirective, ɵngcc11.DefaultLayoutAlignDirective, ɵngcc12.MatSpinner], pipes: [ɵngcc13.TranslatePipe, ɵngcc3.AsyncPipe], styles: [".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"], encapsulation: 2 });
TaskFormComponent.ctorParameters = () => [
    { type: TaskListService },
    { type: AuthenticationService },
    { type: TranslationService }
];
TaskFormComponent.propDecorators = {
    taskId: [{ type: Input }],
    showFormTitle: [{ type: Input }],
    showFormCompleteButton: [{ type: Input }],
    showFormSaveButton: [{ type: Input }],
    showCancelButton: [{ type: Input }],
    readOnlyForm: [{ type: Input }],
    showFormRefreshButton: [{ type: Input }],
    showFormValidationIcon: [{ type: Input }],
    fieldValidators: [{ type: Input }],
    formSaved: [{ type: Output }],
    formCompleted: [{ type: Output }],
    formContentClicked: [{ type: Output }],
    formLoaded: [{ type: Output }],
    showAttachForm: [{ type: Output }],
    executeOutcome: [{ type: Output }],
    completed: [{ type: Output }],
    formError: [{ type: Output }],
    error: [{ type: Output }],
    cancel: [{ type: Output }],
    taskClaimed: [{ type: Output }],
    taskUnclaimed: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TaskFormComponent, [{
        type: Component,
        args: [{
                selector: 'adf-task-form',
                template: "<ng-container *ngIf=\"!loading; else loadingTemplate\">\n  <adf-form *ngIf=\"hasFormKey(); else withoutForm\"\n    [taskId]=\"taskDetails?.id\"\n    [showTitle]=\"showFormTitle\"\n    [showValidationIcon]=\"showFormValidationIcon\"\n    [showRefreshButton]=\"showFormRefreshButton\"\n    [showCompleteButton]=\"showFormCompleteButton\"\n    [showSaveButton]=\"isSaveButtonVisible()\"\n    [disableCompleteButton]=\"!isCompleteButtonEnabled()\"\n    [readOnly]=\"isReadOnlyForm()\"\n    [fieldValidators]=\"fieldValidators\"\n    (formSaved)='onFormSaved($event)'\n    (formCompleted)='onFormCompleted($event)'\n    (formContentClicked)='onFormContentClick($event)'\n    (formLoaded)='onFormLoaded($event)'\n    (formError)='onFormError($event)'\n    (error)='onError($event)'\n    (executeOutcome)='onFormExecuteOutcome($event)'>\n    <adf-form-custom-outcomes>\n        <ng-template [ngTemplateOutlet]=\"taskFormButtons\">\n        </ng-template>\n    </adf-form-custom-outcomes>\n  </adf-form>\n  <ng-template #withoutForm>\n    <adf-task-standalone *ngIf=\"isStandaloneTask(); else emptyFormMessage\"\n        [taskName]=\"taskDetails.name\"\n        [taskId]=\"taskDetails.id\"\n        [isCompleted]=\"isCompletedTask()\"\n        [hasCompletePermission]=\"isCompleteButtonVisible()\"\n        [hideCancelButton]=\"showCancelButton\"\n        (complete)=\"onCompleteTask()\"\n        (showAttachForm)=\"onShowAttachForm()\">\n    </adf-task-standalone>\n      <ng-template #emptyFormMessage>\n        <mat-card class=\"adf-task-form-container\">\n            <mat-card-header>\n                <mat-card-title>\n                    <h4>\n                        <span class=\"adf-form-title\">\n                            {{taskDetails.name}}\n                            <ng-container *ngIf=\"!taskDetails.name\">\n                                {{'FORM.FORM_RENDERER.NAMELESS_TASK' | translate}}\n                            </ng-container>\n                        </span>\n                    </h4>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-empty-content *ngIf=\"isCompletedTask(); else emptyFormTemplate\"\n                    [icon]=\"'description'\"\n                    [title]=\"getCompletedTaskTranslatedMessage() | async\"\n                    [subtitle]=\"'ADF_TASK_FORM.COMPLETED_TASK.SUBTITLE'\">\n                </adf-empty-content>\n                <ng-template #emptyFormTemplate>\n                    <adf-empty-content\n                        [icon]=\"'description'\"\n                        [title]=\"'ADF_TASK_LIST.STANDALONE_TASK.NO_FORM_MESSAGE'\"\n                        [subtitle]=\"'ADF_TASK_FORM.EMPTY_FORM.SUBTITLE'\">\n                    </adf-empty-content>\n                </ng-template>\n            </mat-card-content>\n            <mat-card-actions class=\"adf-task-form-actions\">\n                <ng-template [ngTemplateOutlet]=\"taskFormButtons\"></ng-template>\n                <button mat-button\n                    *ngIf=\"!isCompletedTask()\" id=\"adf-no-form-complete-button\"\n                    color=\"primary\"\n                    [disabled]=\"canCompleteNoFormTask()\"\n                    (click)=\"onCompleteTask()\">\n                    {{'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.COMPLETE' | translate}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n      </ng-template>\n  </ng-template>\n\n  <ng-template #taskFormButtons>\n        <button mat-button id=\"adf-no-form-cancel-button\"\n            *ngIf=\"showCancelButton\"\n            (click)=\"onCancel()\">\n            {{'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CANCEL' | translate}}\n        </button>\n        <button mat-button data-automation-id=\"adf-task-form-claim-button\"\n            *ngIf=\"isTaskClaimable()\"\n            adf-claim-task\n            [taskId]=\"taskId\"\n            (success)=\"onClaimTask($event)\"\n            (error)=\"onClaimTaskError($event)\">\n            {{ 'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.CLAIM' | translate }}\n        </button>\n        <button mat-button data-automation-id=\"adf-task-form-unclaim-button\"\n            *ngIf=\"isTaskClaimedByCandidateMember()\"\n            adf-unclaim-task\n            [taskId]=\"taskId\"\n            (success)=\"onUnclaimTask($event)\"\n            (error)=\"onUnclaimTaskError($event)\">\n            {{ 'ADF_TASK_FORM.EMPTY_FORM.BUTTONS.UNCLAIM' | translate }}\n        </button>\n  </ng-template>\n</ng-container>\n<ng-template #loadingTemplate>\n  <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n      <mat-spinner></mat-spinner>\n  </div>\n</ng-template>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-task-form-container{overflow:hidden}.adf-task-form-actions{float:right;padding-bottom:25px!important;padding-right:25px!important}.adf-task-form-actions .mat-button{border-radius:5px;height:36px}.adf-task-form-actions .mat-button-wrapper{font-size:var(--theme-body-2-font-size);font-weight:700;height:20px;opacity:.54;width:58px}"]
            }]
    }], function () { return [{ type: ɵngcc1.TaskListService }, { type: ɵngcc2.AuthenticationService }, { type: ɵngcc2.TranslationService }]; }, { showFormTitle: [{
            type: Input
        }], showFormCompleteButton: [{
            type: Input
        }], showFormSaveButton: [{
            type: Input
        }], showCancelButton: [{
            type: Input
        }], readOnlyForm: [{
            type: Input
        }], showFormRefreshButton: [{
            type: Input
        }], showFormValidationIcon: [{
            type: Input
        }], fieldValidators: [{
            type: Input
        }], formSaved: [{
            type: Output
        }], formCompleted: [{
            type: Output
        }], formContentClicked: [{
            type: Output
        }], formLoaded: [{
            type: Output
        }], showAttachForm: [{
            type: Output
        }], executeOutcome: [{
            type: Output
        }], completed: [{
            type: Output
        }], formError: [{
            type: Output
        }], error: [{
            type: Output
        }], cancel: [{
            type: Output
        }], taskClaimed: [{
            type: Output
        }], taskUnclaimed: [{
            type: Output
        }], taskId: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,