/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { TaskDetailsModel } from '../models/task-details.model';
import { TaskListService } from './../services/tasklist.service';
import * as ɵngcc0 from '@angular/core';
export declare class ChecklistComponent implements OnChanges {
    private activitiTaskList;
    private dialog;
    taskId: string;
    readOnly: boolean;
    assignee: string;
    checklistTaskCreated: EventEmitter<TaskDetailsModel>;
    checklistTaskDeleted: EventEmitter<string>;
    error: EventEmitter<any>;
    addNewDialog: any;
    taskName: string;
    checklist: TaskDetailsModel[];
    constructor(activitiTaskList: TaskListService, dialog: MatDialog);
    ngOnChanges(changes: SimpleChanges): void;
    getTaskChecklist(): void;
    showDialog(): void;
    add(): void;
    delete(taskId: string): void;
    cancel(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChecklistComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChecklistComponent, "adf-checklist", never, { "readOnly": "readOnly"; "taskId": "taskId"; "assignee": "assignee"; }, { "checklistTaskCreated": "checklistTaskCreated"; "checklistTaskDeleted": "checklistTaskDeleted"; "error": "error"; }, never, never>;
}

//# sourceMappingURL=checklist.component.d.ts.map