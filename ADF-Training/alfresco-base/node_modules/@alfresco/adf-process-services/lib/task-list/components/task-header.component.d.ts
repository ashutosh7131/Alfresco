/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { BpmUserService, TranslationService, AppConfigService } from '@alfresco/adf-core';
import { TaskDetailsModel } from '../models/task-details.model';
import * as ɵngcc0 from '@angular/core';
export declare class TaskHeaderComponent implements OnChanges, OnInit {
    private bpmUserService;
    private translationService;
    private appConfig;
    formName: string;
    taskDetails: TaskDetailsModel;
    showClaimRelease: boolean;
    claim: EventEmitter<any>;
    unclaim: EventEmitter<any>;
    private currentUserId;
    properties: any[];
    inEdit: boolean;
    displayDateClearAction: boolean;
    dateFormat: string;
    dateLocale: string;
    constructor(bpmUserService: BpmUserService, translationService: TranslationService, appConfig: AppConfigService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private initDefaultProperties;
    initData(): void;
    refreshData(): void;
    private isValidSelection;
    private loadCurrentBpmUserId;
    getParentInfo(): Map<string, string>;
    hasAssignee(): boolean;
    isAssignedTo(userId: number): boolean;
    isAssignedToCurrentUser(): boolean;
    isCandidateMember(): boolean;
    isTaskClaimable(): boolean;
    isTaskClaimedByCandidateMember(): boolean;
    getTaskStatus(): string;
    onClaimTask(taskId: string): void;
    onUnclaimTask(taskId: string): void;
    isCompleted(): boolean;
    isFormClickable(): boolean;
    getTaskDuration(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TaskHeaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TaskHeaderComponent, "adf-task-header", never, { "formName": "formName"; "showClaimRelease": "showClaimRelease"; "taskDetails": "taskDetails"; }, { "claim": "claim"; "unclaim": "unclaim"; }, never, never>;
}

//# sourceMappingURL=task-header.component.d.ts.map