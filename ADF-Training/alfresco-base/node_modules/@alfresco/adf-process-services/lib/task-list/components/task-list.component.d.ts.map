{"version":3,"file":"task-list.component.d.ts","sources":["task-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DataRowEvent, DataTableAdapter, DataTableSchema, CustomEmptyContentTemplateDirective, CustomLoadingContentTemplateDirective, AppConfigService, PaginatedComponent, UserPreferencesService, PaginationModel, DataCellEvent } from '@alfresco/adf-core';\nimport { AfterContentInit, EventEmitter, OnChanges, SimpleChanges, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskListService } from './../services/tasklist.service';\nexport declare class TaskListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent, OnDestroy, OnInit {\n    private taskListService;\n    private userPreferences;\n    static PRESET_KEY: string;\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n    requestNode: TaskQueryRequestRepresentationModel;\n    appId: number;\n    processInstanceId: string;\n    processDefinitionId: string;\n    state: string;\n    assignment: string;\n    sort: string;\n    name: string;\n    landingTaskId: string;\n    data: DataTableAdapter;\n    selectionMode: string;\n    multiselect: boolean;\n    selectFirstRow: boolean;\n    taskId: string;\n    includeProcessInstance: boolean;\n    start: number;\n    showContextMenu: boolean;\n    stickyHeader: boolean;\n    showRowContextMenu: EventEmitter<DataCellEvent>;\n    rowClick: EventEmitter<string>;\n    rowsSelected: EventEmitter<any[]>;\n    success: EventEmitter<any>;\n    error: EventEmitter<any>;\n    currentInstanceId: string;\n    selectedInstances: any[];\n    pagination: BehaviorSubject<PaginationModel>;\n    page: number;\n    size: number;\n    dueAfter: string;\n    dueBefore: string;\n    rows: any[];\n    isLoading: boolean;\n    sorting: any[];\n    hasCustomDataSource: boolean;\n    private onDestroy$;\n    constructor(taskListService: TaskListService, appConfigService: AppConfigService, userPreferences: UserPreferencesService);\n    ngAfterContentInit(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    setCustomDataSource(rows: any[]): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    private isSortChanged;\n    private isPropertyChanged;\n    reload(): void;\n    private load;\n    private loadTasksByState;\n    selectTask(taskIdSelected: string): void;\n    getCurrentId(): string;\n    isEqualToCurrentId(taskId: string): boolean;\n    isListEmpty(): boolean;\n    onRowClick(item: DataRowEvent): void;\n    onRowSelect(event: CustomEvent): void;\n    onRowUnselect(event: CustomEvent): void;\n    onRowKeyUp(event: CustomEvent): void;\n    onShowRowContextMenu(event: DataCellEvent): void;\n    private optimizeTaskDetails;\n    private createRequestNode;\n    updatePagination(params: PaginationModel): void;\n    currentPage(skipCount: number, maxItems: number): number;\n}\n"]}