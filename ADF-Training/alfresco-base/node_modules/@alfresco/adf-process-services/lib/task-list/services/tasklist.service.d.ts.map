{"version":3,"file":"tasklist.service.d.ts","sources":["tasklist.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Observable } from 'rxjs';\nimport { FilterRepresentationModel, TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport { TaskUpdateRepresentation, ModelsApi, TaskActionsApi, TasksApi, ChecklistsApi } from '@alfresco/js-api';\nexport declare class TaskListService {\n    private apiService;\n    private logService;\n    private _modelsApi;\n    get modelsApi(): ModelsApi;\n    private _tasksApi;\n    get tasksApi(): TasksApi;\n    private _taskActionsApi;\n    get taskActionsApi(): TaskActionsApi;\n    private _checklistsApi;\n    get checklistsApi(): ChecklistsApi;\n    constructor(apiService: AlfrescoApiService, logService: LogService);\n    getFilterForTaskById(taskId: string, filterList: FilterRepresentationModel[]): Observable<FilterRepresentationModel>;\n    private generateTaskRequestNodeFromFilter;\n    isTaskRelatedToFilter(taskId: string, filterModel: FilterRepresentationModel): Observable<FilterRepresentationModel>;\n    getTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel>;\n    findTasksByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel>;\n    findAllTaskByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel>;\n    findAllTasksWithoutState(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel>;\n    getTaskDetails(taskId: string): Observable<TaskDetailsModel>;\n    getTaskChecklist(id: string): Observable<TaskDetailsModel[]>;\n    getFormList(): Observable<Form[]>;\n    attachFormToATask(taskId: string, formId: number): Observable<any>;\n    addTask(task: TaskDetailsModel): Observable<TaskDetailsModel>;\n    deleteTask(taskId: string): Observable<TaskDetailsModel>;\n    deleteForm(taskId: string): Observable<TaskDetailsModel>;\n    completeTask(taskId: string): Observable<any>;\n    getTotalTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<any>;\n    createNewTask(task: TaskDetailsModel): Observable<TaskDetailsModel>;\n    assignTask(taskId: string, requestNode: any): Observable<TaskDetailsModel>;\n    assignTaskByUserId(taskId: string, userId: string): Observable<TaskDetailsModel>;\n    claimTask(taskId: string): Observable<TaskDetailsModel>;\n    unclaimTask(taskId: string): Observable<TaskDetailsModel>;\n    updateTask(taskId: string, updated: TaskUpdateRepresentation): Observable<TaskDetailsModel>;\n    fetchTaskAuditPdfById(taskId: string): Observable<Blob>;\n    fetchTaskAuditJsonById(taskId: string): Observable<any>;\n    private callApiTasksFiltered;\n    private callApiTaskDetails;\n    private callApiAddTask;\n    private callApiDeleteTask;\n    private callApiDeleteForm;\n    private callApiTaskChecklist;\n    private callApiCreateTask;\n    private callApiAssignTask;\n    private handleError;\n}\n"]}