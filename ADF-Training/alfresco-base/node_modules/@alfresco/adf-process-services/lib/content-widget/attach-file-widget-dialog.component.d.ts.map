{"version":3,"file":"attach-file-widget-dialog.component.d.ts","sources":["attach-file-widget-dialog.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AlfrescoApiService, LoginDialogPanelComponent, TranslationService, AuthenticationService } from '@alfresco/adf-core';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { Node } from '@alfresco/js-api';\nexport declare class AttachFileWidgetDialogComponent {\n    private translation;\n    data: AttachFileWidgetDialogComponentData;\n    private externalApiService;\n    private authenticationService;\n    private matDialogRef;\n    loginPanel: LoginDialogPanelComponent;\n    title: string;\n    action: string;\n    buttonActionName: string;\n    chosenNode: Node[];\n    constructor(translation: TranslationService, data: AttachFileWidgetDialogComponentData, externalApiService: AlfrescoApiService, authenticationService: AuthenticationService, matDialogRef: MatDialogRef<AttachFileWidgetDialogComponent>);\n    updateExternalHost(): void;\n    private registerAndClose;\n    isLoggedIn(): boolean;\n    performLogin(): void;\n    close(): void;\n    onSelect(nodeList: Node[]): void;\n    onSiteChange(siteTitle: string): void;\n    onClick(): void;\n    updateTitle(siteTitle: string): void;\n    getTitleTranslation(action: string, name?: string): string;\n    hasNodeSelected(): boolean;\n}\n"]}