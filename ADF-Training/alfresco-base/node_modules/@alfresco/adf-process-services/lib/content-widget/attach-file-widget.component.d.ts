/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnDestroy, OnInit } from '@angular/core';
import { ActivitiContentService, AppConfigService, ContentService, DownloadService, FormService, LogService, ProcessContentService, ThumbnailService, UploadWidgetComponent } from '@alfresco/adf-core';
import { ContentNodeDialogService } from '@alfresco/adf-content-services';
import { AlfrescoEndpointRepresentation, NodeChildAssociation, RelatedContentRepresentation } from '@alfresco/js-api';
import { AttachFileWidgetDialogService } from './attach-file-widget-dialog.service';
import * as ɵngcc0 from '@angular/core';
export declare class AttachFileWidgetComponent extends UploadWidgetComponent implements OnInit, OnDestroy {
    formService: FormService;
    private logger;
    thumbnails: ThumbnailService;
    processContentService: ProcessContentService;
    private activitiContentService;
    private contentService;
    private contentDialog;
    private appConfigService;
    private downloadService;
    private attachDialogService;
    typeId: string;
    repositoryList: AlfrescoEndpointRepresentation[];
    private tempFilesList;
    private onDestroy$;
    constructor(formService: FormService, logger: LogService, thumbnails: ThumbnailService, processContentService: ProcessContentService, activitiContentService: ActivitiContentService, contentService: ContentService, contentDialog: ContentNodeDialogService, appConfigService: AppConfigService, downloadService: DownloadService, attachDialogService: AttachFileWidgetDialogService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    isFileSourceConfigured(): boolean;
    isMultipleSourceUpload(): boolean;
    isAllFileSourceSelected(): boolean;
    isOnlyLocalSourceSelected(): boolean;
    isSimpleUploadButton(): boolean;
    isUploadButtonVisible(): boolean;
    isDefinedSourceFolder(): boolean;
    isTemporaryFile(file: any): boolean;
    getNodeFromTempFile(file: any): NodeChildAssociation;
    openSelectDialogFromFileSource(): void;
    onAttachFileChanged(event: any): void;
    onRemoveAttachFile(file: File | RelatedContentRepresentation): void;
    onAttachFileClicked(file: any): void;
    downloadContent(file: any | RelatedContentRepresentation): void;
    openSelectDialog(repository: AlfrescoEndpointRepresentation): void;
    private isExternalHost;
    private findSource;
    private uploadFileFromExternalCS;
    private uploadFileFromCS;
    private getDomainHost;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AttachFileWidgetComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AttachFileWidgetComponent, "attach-widget", never, {}, {}, never, never>;
}

//# sourceMappingURL=attach-file-widget.component.d.ts.map