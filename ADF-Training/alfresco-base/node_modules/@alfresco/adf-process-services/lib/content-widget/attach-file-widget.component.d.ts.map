{"version":3,"file":"attach-file-widget.component.d.ts","sources":["attach-file-widget.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnDestroy, OnInit } from '@angular/core';\nimport { ActivitiContentService, AppConfigService, ContentService, DownloadService, FormService, LogService, ProcessContentService, ThumbnailService, UploadWidgetComponent } from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport { AlfrescoEndpointRepresentation, NodeChildAssociation, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { AttachFileWidgetDialogService } from './attach-file-widget-dialog.service';\nexport declare class AttachFileWidgetComponent extends UploadWidgetComponent implements OnInit, OnDestroy {\n    formService: FormService;\n    private logger;\n    thumbnails: ThumbnailService;\n    processContentService: ProcessContentService;\n    private activitiContentService;\n    private contentService;\n    private contentDialog;\n    private appConfigService;\n    private downloadService;\n    private attachDialogService;\n    typeId: string;\n    repositoryList: AlfrescoEndpointRepresentation[];\n    private tempFilesList;\n    private onDestroy$;\n    constructor(formService: FormService, logger: LogService, thumbnails: ThumbnailService, processContentService: ProcessContentService, activitiContentService: ActivitiContentService, contentService: ContentService, contentDialog: ContentNodeDialogService, appConfigService: AppConfigService, downloadService: DownloadService, attachDialogService: AttachFileWidgetDialogService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    isFileSourceConfigured(): boolean;\n    isMultipleSourceUpload(): boolean;\n    isAllFileSourceSelected(): boolean;\n    isOnlyLocalSourceSelected(): boolean;\n    isSimpleUploadButton(): boolean;\n    isUploadButtonVisible(): boolean;\n    isDefinedSourceFolder(): boolean;\n    isTemporaryFile(file: any): boolean;\n    getNodeFromTempFile(file: any): NodeChildAssociation;\n    openSelectDialogFromFileSource(): void;\n    onAttachFileChanged(event: any): void;\n    onRemoveAttachFile(file: File | RelatedContentRepresentation): void;\n    onAttachFileClicked(file: any): void;\n    downloadContent(file: any | RelatedContentRepresentation): void;\n    openSelectDialog(repository: AlfrescoEndpointRepresentation): void;\n    private isExternalHost;\n    private findSource;\n    private uploadFileFromExternalCS;\n    private uploadFileFromCS;\n    private getDomainHost;\n}\n"]}