{"version":3,"file":"process-list.component.d.ts","sources":["process-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DataTableSchema, DataRowEvent, DataTableAdapter, CustomEmptyContentTemplateDirective, CustomLoadingContentTemplateDirective, DataRow, DataColumn, AppConfigService, PaginatedComponent, PaginationModel, UserPreferencesService, DataCellEvent } from '@alfresco/adf-core';\nimport { AfterContentInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { ProcessService } from '../services/process.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { ProcessListModel } from '../models/process-list.model';\nexport declare class ProcessInstanceListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent {\n    private processService;\n    private userPreferences;\n    static PRESET_KEY: string;\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n    appId: number;\n    processDefinitionId: string;\n    processInstanceId: number | string;\n    state: string;\n    sort: string;\n    page: number;\n    size: number;\n    data: DataTableAdapter;\n    multiselect: boolean;\n    selectionMode: string;\n    selectFirstRow: boolean;\n    stickyHeader: boolean;\n    showContextMenu: boolean;\n    showRowContextMenu: EventEmitter<DataCellEvent>;\n    resolverFn: (row: DataRow, col: DataColumn) => any;\n    rowClick: EventEmitter<string>;\n    success: EventEmitter<ProcessListModel>;\n    error: EventEmitter<any>;\n    requestNode: ProcessFilterParamRepresentationModel;\n    currentInstanceId: string;\n    isLoading: boolean;\n    rows: any[];\n    sorting: any[];\n    pagination: BehaviorSubject<PaginationModel>;\n    constructor(processService: ProcessService, userPreferences: UserPreferencesService, appConfig: AppConfigService);\n    ngAfterContentInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    private isSortChanged;\n    private isPropertyChanged;\n    reload(): void;\n    private load;\n    selectFirst(): void;\n    getCurrentId(): string;\n    isListEmpty(): boolean;\n    onRowClick(event: DataRowEvent): void;\n    onRowKeyUp(event: CustomEvent<any>): void;\n    onShowRowContextMenu(event: DataCellEvent): void;\n    private createRequestNode;\n    updatePagination(params: PaginationModel): void;\n    currentPage(skipCount: number, maxItems: number): number;\n}\n"]}