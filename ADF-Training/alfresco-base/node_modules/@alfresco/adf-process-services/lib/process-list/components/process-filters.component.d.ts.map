{"version":3,"file":"process-filters.component.d.ts","sources":["process-filters.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ProcessInstanceFilterRepresentation, UserProcessInstanceFilterRepresentation } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { ProcessFilterService } from './../services/process-filter.service';\nexport declare class ProcessFiltersComponent implements OnInit, OnChanges {\n    private processFilterService;\n    private appsProcessService;\n    filterParam: FilterProcessRepresentationModel;\n    filterClicked: EventEmitter<UserProcessInstanceFilterRepresentation>;\n    success: EventEmitter<ProcessInstanceFilterRepresentation[]>;\n    error: EventEmitter<any>;\n    appId: number;\n    appName: string;\n    showIcon: boolean;\n    filterSelected: EventEmitter<UserProcessInstanceFilterRepresentation>;\n    filter$: Observable<ProcessInstanceFilterRepresentation>;\n    currentFilter: ProcessInstanceFilterRepresentation;\n    filters: UserProcessInstanceFilterRepresentation[];\n    active: boolean;\n    private iconsMDL;\n    constructor(processFilterService: ProcessFilterService, appsProcessService: AppsProcessService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    getFiltersByAppId(appId?: number): void;\n    getFiltersByAppName(appName: string): void;\n    selectFilter(filter: ProcessInstanceFilterRepresentation): void;\n    selectProcessFilter(filterParam: FilterProcessRepresentationModel): void;\n    selectRunningFilter(): void;\n    selectDefaultTaskFilter(): void;\n    getCurrentFilter(): ProcessInstanceFilterRepresentation;\n    isFilterListEmpty(): boolean;\n    private resetFilter;\n    getFilterIcon(icon: string): string;\n}\n"]}