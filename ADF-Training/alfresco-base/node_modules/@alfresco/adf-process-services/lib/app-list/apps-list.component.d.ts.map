{"version":3,"file":"apps-list.component.d.ts","sources":["apps-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AppsProcessService, TranslationService, CustomEmptyContentTemplateDirective } from '@alfresco/adf-core';\nimport { AfterContentInit, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppDefinitionRepresentationModel } from '../task-list';\nexport declare class AppsListComponent implements OnInit, AfterContentInit, OnDestroy {\n    private appsProcessService;\n    private translationService;\n    static LAYOUT_LIST: string;\n    static LAYOUT_GRID: string;\n    static DEFAULT_TASKS_APP: string;\n    static DEFAULT_TASKS_APP_NAME: string;\n    static DEFAULT_TASKS_APP_THEME: string;\n    static DEFAULT_TASKS_APP_ICON: string;\n    static DEFAULT_TASKS_APP_MATERIAL_ICON: string;\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n    layoutType: string;\n    filtersAppId: any[];\n    appClick: EventEmitter<AppDefinitionRepresentationModel>;\n    error: EventEmitter<any>;\n    private appsObserver;\n    apps$: Observable<AppDefinitionRepresentationModel>;\n    currentApp: AppDefinitionRepresentationModel;\n    appList: AppDefinitionRepresentationModel[];\n    private iconsMDL;\n    loading: boolean;\n    hasEmptyCustomContentTemplate: boolean;\n    private onDestroy$;\n    constructor(appsProcessService: AppsProcessService, translationService: TranslationService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentInit(): void;\n    private load;\n    isDefaultApp(app: any): boolean;\n    getAppName(app: any): Observable<any>;\n    selectApp(app: AppDefinitionRepresentationModel): void;\n    isSelected(appId: number): boolean;\n    private filterApps;\n    isValidType(): boolean;\n    setDefaultLayoutType(): void;\n    isList(): boolean;\n    isGrid(): boolean;\n    isEmpty(): boolean;\n    isLoading(): boolean;\n    getTheme(app: AppDefinitionRepresentationModel): string;\n    getBackgroundIcon(app: AppDefinitionRepresentationModel): string;\n}\n"]}